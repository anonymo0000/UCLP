4, via crafted packets.
4, via shell metacharacters in the distloc parameter.
1, by modifying sensitive files.
2, via the rnfr command.
3, by creating a writable kmem device and setting the UID to 0.
4, via a UDP packet with a long hostname.
1,create or overwrite arbitrary files to
4, via a .forward or :include: file.
4, via a buffer overflow.
3, by breaking and generating session keys.
1, via encoded carriage return characters in the query string
4, via a .. (dot dot) attack.
5, by appending a . (dot) to the end of the URL.
5,"use a """"cd .."""" command to"
3, by specifying a false UID.
4, via a .. (dot dot) attack.
4, via a long query string.
3, by specifying a long password.
2, via the TERMCAP environmental variable.
0, via the receiver parameter ($VAR_receiver variable).
4, via shell metacharacters.
4, via a long (1) CWD or (2) LS (list) command.
4, via a malformed SMB logon request in which the actual data size does not match the specified size.
3, by using a %2e instead of a . (dot) in the URL.
4, via shell metacharacters in the query string.
0, via invalid UDP frames to port 137 (NETBIOS Name Service)
4, via a large number of connections to localhost.
4, via a long environmental variable.
4, via a .. (dot dot) attack.
1, by overwriting arbitrary files.
4," via a """"%01"""" character in an """"about:"""" Javascript URL"
4," via crafted """"oshare"""" packets"
0, by locking out modems
4, by filling a machine's process tables through multiple connections to network services.
2, via certain methods that are marked as Safe for Scripting.
5, by setting a user's Finger File to point to the target file
4, by using a nonstandard URL.
4, via a TCP connection to the router's TELNET port.
0, by changing their uid through a malicious mount_umap program.
2, by sending attachments with long file names.
0, by forcing the supervisor module to reload.
0, via expansions in the procmailrc configuration file.
4, via a direct request to the (1) advsearch.asp
4, via exprcalc.cfm
5,use .. to
4, via openfile.cfm
2, via an IMG SRC tag.
5, by creating a directory with the name of the command to execute.
2, via the SM_MON and SM_NOTIFY commands
3, via profiling and execve.
4, via a symlink attack.
4, via m_invite invite option.
4, via a symlink attack.
4, via a long user name.
2, via the Import/Export Favorites feature
0, by modifying the IFS or PATH environmental variables.
5,send a file to
4, via a long GECOS field.
4, via a malformed phonebook entry.
4, via a symlink attack.
4, via a symlink attack in temporary user directories.
4, via symlinks.
4, via a long HTTP GET request.
2, via the HTML STYLE tag
3, by specifying an alternate configuration file using the INNCONF environmental variable.
2, via the Start/Stop utility.
5, by appending a %20 to the script's URL.
2, via the periodic program.
4, via a text editor.
2, via the MAILTO environmental variable.
4, via a .. (dot dot) attack.
4, via a .. (dot dot) attack.
4, via a long display or query parameter.
0, by specifying an arbitrary PID in the .kss.pid file.
1, by setting the KDEDIR environmental variable to modify the search path that KDE uses to locate its executables.
2, via the HOME environmental variable.
5, by creating a hard link from a device special file to a file on an NFS file system.
2," via the """"pathrun"""" parameter in the inn.conf file."
2, via the LD_PROFILE environmental variable and a symlink attack.
1, by redirecting data to a Javascript applet.
4, via a large number of finger requests
3, by spoofing frames.
4, via a malformed Favorites icon.
4, via a symlink attack.
4, via a large number of requests.
3, via long options.
4, via a large number of queries.
0, uses when calling external programs to handle certain protocols
4, via a modified PATH variable for finding the xterm and seyon-emu commands.
5, by providing a malicious program in the -emulator argument.
4, via -f argument.
4, via a long pathname.
4, via a symlink attack.
2, via the SITE command.
0, by modifying the job after it has been scheduled.
4, via a long -f option.
4, via a long MIME Content-Type.
4, via a .. (dot dot) attack.
5, via a long username.
2, via the HTTP Basic Authentication procedure.
0, by reporting an encryption error when an account is locked or does not exist.
4, via a symlink attack.
4, via a malicious Web Proxy Auto-Discovery (WPAD) server.
0, via the -f parameter
2, via the VMSYS environmental variable and a symlink attack.
5, by reading a plaintext password file.
4, via a symlink attack on the ./core.pid file.
3, via shell metacharacters that are passed to it from INN.
5, by pasting a file name into the file upload control
4, via IE's cross frame security
4, via a long MAILTO environment variable in a crontab file.
4, via a malformed request for files with .HTR
4, via an ExecCommand method called on an IFRAME.
4, via MAPPING_CHDIR.
1, via macro variables in a message file.
4, via a .. (dot dot) attack.
1, via long file names.
0, by specifying the file name in an option to the search engine.
5, via a pipe character in a malformed URL.
2, via the Windows NT Service Control Manager.
4, via a .. (dot dot) attack.
2, by setting the ORACLE_HOME environmental variable
4, via a code parsing error.
4, via a server-side redirect.
4, via a symlink attack.
4, via a long username and password.
4, via a .. (dot dot) attack.
4, via a malformed spooler request.
3, via MD5 hash generation.
4, via a long username.
2, via the HOME environmental variable.
4, via a malformed packet with IP options
3, by opening a large number of files.
3, via shell metacharacters.
4, via a .. (dot dot) attack.
4, via a large number of telnet connections.
2, via the FOLD command.
4, via the sourcewindow.cfm file.
4, via a large number of MIME headers.
4, via a large number of MIME headers.
4, via a .. (dot dot) attack.
4, via a long URL.
4, via a large number of HTTP GET requests.
4, via a malformed argument.
4, via a .. (dot dot) attack.
4, via shell metacharacters.
0, by specifying them in a hidden variable in a CGI form.
4, via shell metacharacters.
2, via the automessage hidden form variable.
4, via shell metacharacters in Session Initiation Protocol (SIP) messages.
2, via malformed MIME messages.
3, via shell metacharacters.
1, by using the STATICMERGE environmental variable to find a script which it executes.
4, via a long GET request to the web configurator.
3, via AUTH or AUTHINFO commands.
2, via the SITE EXEC command.
4, via a symlink attack.
4, via a .. (dot dot) attack.
4, via a symlink attack.
4, via a command line option.
4, via a symlink attack during log file creation.
4, via a command line option.
4, via a symlink attack.
4, via a long PATH_LOCALE environment variable.
2, via the logging option.
4, via a long argv[0].
4, via a malformed URL which causes a large number of temporary files to be created.
4, via a long :include: option in a .forward file.
4, via a long domain name when snoop is running in verbose mode.
4, via GETQUOTA requests to the rpc.rquotad service.
5, by editing a table of contents metafile with a .CNT extension and modifying the topic action to include the commands to be executed when the .hlp file is accessed.
2, via the newaliases command
0, via filenames with shell metacharacters.
3, by using a debugger such as gdb to insert traps into _init before the privileged process is executed.
4, via a malformed argument in a resource enumeration request.
4, use a server-side redirect to access local files via that window
4, via shell metacharacters in the domain entry.
4, via shell metacharacters in the domain entry.
4, via shell metacharacters in the domain entry.
0, by sending large packets with the -R (record route) option.
4, via a symlink attack.
2, via the vnd.ms.radio protocol.
4, via a long login name.
2, via the Trusted Gateway Proxy (TGP).
1, via malformed arguments to the LsaLookupSids function which looks up the SID
4, via a long GET request.
4, via a malformed file name that is interpreted as an argument to the program that does the conversion
4, via a malformed TDS packet.
4, via a null username and password.
2, by flooding it with connections.
4, via a .. (dot dot) attack using the HELP parameter.
2, via the HELP parameter.
4, via a malformed .vdo file.
4, via a long argument.
3, by connecting to an HTTP server on the user's system.
2, via the -f parameter and a malformed zone file.
4, via a long -m argument.
5, via a long HELO command.
4, via a packet with a zero length header
4, via a symlink attack on the /tmp/.asppp.fifo file.
4, via a large amount of data to port 5631.
2, via an HTTP request that ends in %0A (newline)
4, via a long argument.
4, via a malformed GET request
4, via a symlink attack on temporary files in (1) res_diff
4, via a symlink attack on the /tmp/rex.$$ file.
4, via a symlink attack on various temporary files in Tiger's default working directory
5,create root-owned files leading to
4, via a modified IFS environmental variable.
4, via (1) a long TERM environmental variable and (2) a long entry in the .mscreenrc file.
3, by sending a short
4, via (1) a .. (dot dot) in the reply_message_attach attachment parameter
2, via the ANALYZE/PROCESS_DUMP dcl command.
3, by connecting to port 31457 from a host with a long DNS hostname.
4, via shell metacharacters in the fqdn parameter.
5, by executing WindowMaker with a long program name (argv[0]).
4, via a .. (dot dot) in the icatcommand parameter.
4, via a long query parameter.
0, by obtaining the encrypted password from the world-readable Architext.conf authentication file and replaying the encrypted password in an HTTP request to AT-generated.cgi or AT-admin.cgi.
2," by selecting the """"Log Out"""" option and selecting a """"Cancel"""" option in the dialog box for an application that attempts to verify that the user wants to log out"
2, via the programmer's switch or CMD-PWR keyboard sequence
3, by attaching to a setgid program.
4," via a """"......"""" (modified dot dot) attack."
4, via a .. (dot dot) attack.
4, via a long command line argument.
4, via a malicious web page.
4," via a long URL with the """"mk:"""" protocol"
4, via a long HOME environmental variable.
4, via a CTRL-C in the chat box when the box is empty.
4, via sniffing.
4, via a malformed UDP packet that generates an error string that inadvertently includes the realm name and the last user.
0, by specifying the file with the -file parameter.
4, via a long -c (account_name) command line argument.
4, via a long PATH environmental variable.
4, by sending a series of ETRN commands then disconnecting from the server
3, by using a non-linear attack which directly modifies a pointer to a return address instead of using a buffer overflow to reach the return address entry itself.
5," via a long string after the """"8BPS"""" image type in a Photo Shop image header."
0, via a long USER command to port 106.
0, by specifying the file in the -h command line parameter.
1, by modifying certain TCP/IP parameters.
0, via setuid root programs (1) makeinstall or (2) winstall.
0, by providing the target page to the mainframeset.cfm application
4, via a .isp file
0, by forging the VLAN identifier in the trunking tag.
4, via a long principal
0, via extra source routing data such as (1) a Routing Information Field (RIF) field with a hop count greater than 7
4, via (1) vuefile
4, via a symlink attack on the IOERROR.mytty file.
4, via a long GECOS field.
2, by entering debug mode through a sequence of CTRL-D characters.
4," via """"LD_*"""" environmental variables to certain dynamically linked setuid or setgid programs such as (1) login"
3, via setuid and setgid programs.
4, via a long string to the Agent port (1827)
2, via many passive (PASV) connections at the same time.
4, via a long string to the FTP port.
4, via shell metacharacters in the recipient email address.
4, via shell metacharacters in the recipient email address.
4, via shell metacharacters in the recipient email address.
4, via a malformed PORT command that contains a non-numeric character and a large number of carriage returns.
2, via an ICMP Subnet Mask Address Request packet
0, via programs that use these modules such as passwd
2, by forcing ppl to core dump.
1, by preventing users from being able to log into the system.
2, via the Service Support Processor (SSP) Teststation.
1, by sending multiple email messages with the same X-UIDL headers
0, by injecting malicious Javascript into an annotation.
4, via a series of large UDP packets.
2," by setting the """"flags"""" registry key to 1920."
2," by setting the """"flags"""" registry key to 1920."
5, by inserting a known disk with a known password
4, via a long line in the .authlie script.
4, via a .. (dot dot) in the pathname for an upload operation.
2, via an HTTP request for the dumpenv.pl script.
3, via shell metacharacters in an argument to (1) args.cmd or (2) args.bat.
3, by calling a setuid program with a long program name (argv[0]) and forcing ld.so/ld-linux.so to report an error.
3, by providing a trojan horse (1) runtask or (2) runexec descriptor file
4, via a long TERM environmental variable.
4, via a long terminal entry (TERM) in the .mscreenrc file.
4, via a symlink attack on a lockfile that is created when a user receives new mail.
4," via a long """"From"""" header in an e-mail message."
4, via a long command line argument.
4, via a long command line argument.
1, via malformed data to port 6000.
5, via a large number of MIME headers with the same name
4," via a malformed """"EXPN *@"""" command."
0, via a long USER command.
4, via a spoofed endpoint identifier.
4, via a long command line argument.
4, via a symlink attack on a core dump file
1," via certain IP source routed packets that should normally be denied using the """"no ip source-route"""" command."
4, via a symlink attack on the dxchpwd.log file.
3, by returning 0.0.0.0 as the IP address for a DNS host name lookup.
4, via a request to an ASP page in which the URL contains a large number of / (forward slash) characters.
4, via a symlink attack on the packet capture file.
4, via a spoofed UDP packet with a source address of 127.0.0.1
4, via a modified PATH environment variable that points to a malicious cp program.
4, via a NULL policy handle in a call to (1) SamrOpenDomain
4, via a long log message.
4, via a symlink attack on the saved output file.
5, via an e-mail message containing a uuencoded attachment that specifies the full pathname for the file to be modified
2," via malformed commands whose arguments begin with a """"("""" (parenthesis) character"
2, by accessing certain devices.
4, via a symlink attack on the .kss.pid file.
0, by encoding the URL with hexadecimal escape sequences.
2, by accessing the configbreeze CGI program.
4, via a URL that contains an extra / in the http:// tag.
3, by connecting to the NukeNabber port (1080) without sending any data
5, by reading a large buffer from a random device (e.g. /dev/urandom)
4, via a symlink attack on a temporary file.
2, via the forms interface.
4, via a long URL.
1, via malformed FTP commands
5, via a long line in a kerberos configuration file
2, via the L2/AGAIN key.
4, via a large value in the debug (-d) command line option.
4, via a sequence of commands.
0, by modifying the symbolic link table in the \?? object folder using a different case letter (upper or lower) to point to a different device.
4, via packet spoofing.
4, via a long DNS hostname that is not properly handled during TGT ticket passing.
4, via a long LANG environmental variable.
4, via a symlink attack.
4, via a symlink attack on a temporary file.
3, via shell metacharacters in the names of files that are to be downloaded.
4, via (1) long From: headers
4, via a flood of IAC packets to the telnet port.
4, via a long -m command line argument.
1, via malformed packets to the server's UDP port.
4, via a long URL that contains a large number of . characters.
2, by starting kde
1, via certain packets
4, via a .. (dot dot) in a DCC GET request.
5, via a user mode application that closes a handle that was opened in kernel mode
4, via a flood of malformed packets
2, by calling certain WIN32K functions with incorrect parameters.
5, by running a program that creates a large number of locks on a file
0, via an illegal kernel mode address to the functions (1) GetThreadContext or (2) SetThreadContext.
4, via a long string in the terminal name argument.
4, via a TCP SYN scan with TCP/IP OS fingerprinting
0, by specifying the name in the file parameter.
5, via a .. (dot dot) in the f parameter.
4, via a UDP DNS query with a spoofed source address
4, via a Trojan horse .exitops program
4, via a long HOME environment variable.
4, via a symlink attack and the -F command line argument.
3, by specifying a malicious program on the command line.
4, via a combination of the npd program and weak directory permissions.
2, by booting it with an emergency startup disk and using a disk editor to modify the on/off toggle or password in the aaaaaaaAPWD file
2, via the bck.log log file
1, by setting the HOSTNAME environmental variable to contain the commands to be executed.
1, by running Internet Explorer while the screen is still locked.
1, via malformed data to the localtracker client port (5011)
4, via a symlink attack on the dhcplog file.
3, by using a socket to connect to a port on the localhost
0, by submitting the file to at with the -f argument
4, via a symlink attack on the printers temporary file.
4, via a flood of HTTP GET requests to CGI programs
2, by starting programs from the process manager
2, via an HTTP POST request with a large content-length.
1, via encoded % characters in an HTTP request
0," by comparing server responses when a file exists (""""404 Forbidden"""") versus when a file does not exist (""""404 not found"""")."
0, by guessing the target filenames
4, via a ping request to a multicast address through the loopback interface
2, via the save option in the Database Manager
1, by starting Explorer from Office 97 applications (such as Word)
4, via a symlink attack on the /tmp/jetadmin.log file.
2, via long environmental variables.
3," via shell metacharacters in the """"user"""" parameter."
5, by specifying a full pathname of the target file as an argument to bar.phtml.
2, via certain command line arguments.
4, via a symlink attack on temporary .i
4, via a particular sequence of instructions
1, via HTML code that contains a long CLASSID parameter in an OBJECT tag.
4, via an e-mail message with certain dates
0, by reading from the /dev/tcx0 TCX device.
5, by pasting (CTRL-V) the contents into the username prompt.
2, via the Internet WebBrowser ActiveX object.
0, by pressing the ESC (Escape) key.
4, via a GET request with more than one leading / (slash) character in the filename.
4, via a long date string
4, via a long command line argument.
4, via a symlink attack on a temporary file.
0, by specifying the target file as the second argument to the snmpmagt program.
0, by sending improperly fragmented IP packets without the first fragment
2, via an HTTP request with (1) a long URL
3, by specifying a long shell or GECOS field.
0, via a small IFRAME that uses Dynamic HTML (DHTML) to send the data to the attacker
4, via a long --espeaker argument in programs such as nethack.
4, via a URL that includes the [ character.
3, via shell metacharacters.
4, via a symlink attack.
4, via a privilege leak of the iopl(3) privileges to child processes.
4, via a long HOME environment variable.
2, via the methods (1) vAddNewsServer or (2) bIsNewsServerConfigured.
3, by creating and/or modifing any file on the system.
4, via a long -nopr argument.
4, via a long HOME environmental variable.
1, via insecure system calls
4, via a symlink attack on the pic000.pnm file.
5, by attempting to execute the target filename as a program
4, via a symlink attack on the reply file.
4, via a symlink attack on (1) named_dump.db when root kills the process with a SIGINT
4, via (1) LIST
4, via long (1) precache paths
5, via a TCP packet with a null header and data field.
4, via a long HELO command.
4, via a long initial connect packet.
1, via insecure permissions on files and directories such as crash.
4, via a .. (dot dot) in a URL.
4, via (1) a long PASS command in the POP3 service
2, via an infected mail message with shell metacharacters in the reply-to field.
0, via messages with incorrect sender and recipient addresses
1, by offering more than 128 bytes in a MAIL FROM string.
4, via a long (1) user name or (2) password.
2, via the GetNextText command on a Shockwave movie.
5, via a long IMG_SRC HTML tag.
5, via a long password argument to the login.htm file in its HTTP service.
4, via a long HOME environmental variable.
4," via an e-mail message with shell metacharacters in the """"MAIL FROM"""" command."
4, via a long NLST (ls) command.
5, by replacing a character in the URL with its HTTP-encoded (hex) equivalent.
0," by specifying the target file in the """"file"""" parameter."
4, via a long URL.
4, via a long subject line.
4, via (1) a long user name or (2) a long password.
4, via a CTRL-D (control d) character
1, via ICMP redirect storm.
4, via a symlink attack on a temporary file.
3, by connecting to default port 6004 and sending repeated extended characters.
4, via (1) TestTrackWeb.exe and (2) ttcgi.exe by connecting to port 99 and disconnecting without sending any data.
4, via a long PORT command.
4, via a flood of spoofed UDP connection packets
4, via a long -o parameter.
4, via a long -f parameter
4," via """"long input strings."""""
2, via long arguments to the OpenHelp method.
3, by creating a large number of arbitrary files on the target machine.
4, via a large number of SNMP packets with Object Identifiers (OIDs) that cannot be decoded.
4, via a long hostname command line argument.
2, via unknown attack vectors.
4," via """".."""" sequences in the image parameter"
5, via a 1Ch registration that causes WINS to change the domain controller to point to a malicious server.  NOTE: this problem may be limited when Windows 95/98 clients are used
4, via a long ramgen request.
4, via a long GET request.
4, via a long environmental variable.
5, by inserting a . (dot) into the URL.
4, via a symlink attack.
1, via memory mapped file names.
4, via shell metacharacters in the TLD parameter.
4, via a long GET request.
2, by including shell metacharacters in a .wav file
4, via a symlink attack.
4, via a long username.
4, via a long parameter.
2, via the .wmmonrc configuration file.
4, via a large number of connections.
4, via a request to a non-existent script in /cgi-bin.
4, via a long URL.
4, via a long username/password authorization string.
4, via a symlink attack.
2, via the external.NavigateAndFind function.
4, via a symlink attack.
1, by adding files to the /var/dmi/db database.
4, via a symlink attack.
5, by adding a malformed file to the /var/dmi/db database.
3, via shell metacharacters.
0, by specifying an alternate configuration file.
4, via a .. (dot dot) in the query.cgi CGI program.
4, via metacharacters in the SITE ZIPCHK command.
4, via a long HELO command.
4, via a long GET request.
2, via the GRANT privilege.
4, via a malformed URL within an ICQ message.
4, via a long URL within a message.
5, by specifying an alternate PATH for the cp program.
4, via a long entry in a .pls file.
2, by specifying explicit URLs.
4, via a URL.
4, via PAM and a .. (dot dot) attack.
4, via a malformed IMAP request.
4, via a .. (dot dot) attack.
4, via a long -n option.
4, via a long user name.
0, by specifying the filename in a parameter to the script.
4, via a malformed URL that includes shell metacharacters.
5, via a long GET request.
4, via a malformed URL request.
4, via a symlink attack.
5, by requesting non-existent files with .ida or .idq extensions.
4, via a malformed control word.
4, via a password file with improper permissions.
1, via malformed entries in vi.recover.
1, by specifying an alternate PATH which aserver uses to find the ps and grep commands.
1, by specifying an alternate PATH which aserver uses to find the awk command.
4, via a request for a nonexistent URL.
4, via a symlink attack.
4, via HTML.
4, via a symlink attack.
4, via a long username or password.
4, via a symlink attack when the -j option is being used.
1, by modifying the /proc/pid/mem interface via a modified file descriptor for stderr.
4, via a long LIST command.
4, via a request to an Internet Data Query file that does not exist.
5, via a long prompt argument.
1, via hidden form fields.
2, via hidden form fields.
2, via hidden form fields.
1, via hidden form fields.
4, via a script that accesses a variable that references subsequent email messages that are read by the client.
1, via hidden form fields.
4, via a symlink attack.
2, via hidden form fields.
2, via hidden form fields.
0, via an RPC POST request to shtml.dll in the /_vti_bin/ virtual directory.
0, via invalid regular expressions in a Visual Basic script in an ASP page.
2, via the bAuthenticated parameter.
5, by creating a subdirectory with the victim's SID in the recycler directory
4, via a GET request to the htimage.exe CGI program.
2, via hidden form fields.
4, via a .. (dot dot) attack.
3, via shell metacharacters.
3, by performing a LIST command on a malformed .lnk file.
2, via long MKD and CWD commands.
2, via the getSystemResourceAsStream function.
2, via the STOR
1, via hidden form fields.
2, via hidden form fields.
1, via hidden form fields.
2, via hidden form fields.
4, via a malformed RETR command.
4, via a large number of connections.
4, via shell metacharacters in the topic hidden field.
3, via connections to port 407 and 1417.
2, uses the standard system password database for authentication
4, via a long URL to the servlet.
4, via a short check string.
4, via a null character (%00) at the end of a URL.
1, by forcing it to send malicious packets that Firewall-1 misinterprets as a valid 227 response to a client's PASV attempt.
4, via a .... (dot dot) attack.
4, via a symlink attack.
0, by modifying the PSL contents in the debugging process.
4, via a long MAIL FROM command to the SMTP daemon.
0, by stating that the software's manufacturer is Microsoft.
4, via a malicious Java applet that escapes the Java sandbox
4, via a configuration file.
4, via a long login name.
3, by creating a mail file with a long name and a .txt.eml extension in the pickup directory.
4, via a pathname that includes file device names
0, via a malformed URL that includes '?&'.
2, via the MANPAGER environmental variable.
4, via a .. (dot dot) attack.
4, via a long GET command.
3, by requesting a URL for a directory or file that does not exist.
4, via shell metacharacters.
4, via a large number of connections to port 5555.
4, via a .. (dot dot) attack.
4, via a large number of GET commands
2, via the DCC chat capability.
4, via a long command line argument.
4, via a .. (dot dot) attack or execute commands via shell metacharacters.
4, via a .. (dot dot) attack or execute commands via shell metacharacters.
2, via an HTTP request to the application.cfm or onrequestend.cfm files.
4, via a message with a malformed ASCII value.
4, via a .. (dot dot) attack.
2, via the -x or -f parameters.
0, via the -T parameter
1, via malformed MIME headers in an email message.
4, via a malformed CIL (clip art library) file
4, via a malformed Select statement in an SQL query.
1, via malformed data to port 12345.
2, by making 5 connections to port 12345
4, via shell metacharacters.
0, by enclosing the file name with backticks (`) in parameters to htsearch.
4, via a long URL in a malicious web page.
4, via a series of client handshake packets that are sent in an improper sequence
1, via malformed terminal client configuration information.
4, via a long relative pathname.
0, by booting single user and hitting ^C at the password prompt.
5, via a zero length UDP packet to the SNMP port.
4, via a long parameter.
4, via a symlink attack.
3, by requesting a large buffer in a POST or PUT command which consumes memory
3, by sending a malformed request that causes the manager to halt
2, via the imwheel-solo script and a long HOME environmental variable.
0, via web publishing tags such as ?wp-ver-info and ?wp-cs-dump.
4, via a GET request for the /publisher directory
4, via a long URL.
4, via a long mail_user parameter in the GET request.
4, via a /........../ in the URL
4, via shell metacharacters.
5, via a short GET request to cgi-bin.
2, via the configuration capability in the frcactrl program.
4, via a shell metacharacters in a form variable.
2, via hidden form fields.
4, via a URL that references either the env
4, via a scan for the FormMail CGI program.
4, via a long URL.
0, by sending many URLs with a large number of escaped characters
4, via a .. (dot dot) attack.
4, via a malformed request.
4, via a malformed request.
4, via its Add/Remove Programs applet.
4, via a malicious applet that interacts with the Java JSObject to modify the DOM properties to set the IFRAME to an arbitrary Javascript URL.
1, by sending the ENVIRON option to the Telnet daemon before it is ready to accept it
2, by sending malformed input to the server at port 7070.
0, by terminating the connection before PCAnywhere provides a login prompt.
3, by accessing a file or directory with a long name.
0, via malformed direct system calls using interrupt 37.
0, by accessing the URL for the slxweb.dll administration program
1, via malformed packets whose length field is less than the length of the headers.
4, via a long Location URL.
4, via a long message.
4, via a .. (dot dot) attack on the webplus CGI program.
2, via the pmcd daemon.
0, via LIST or other commands.
4, via a long -xkbmap parameter.
1, via malformed input to the server.
4, via shell metacharacters in the dbname parameter.
4, via a modified form variable.
0, by modifying the external source IP address and port number to match those of an established connection.
4, via a long GET request.
3, by embedding a long URL within a document.
4, via a ping flood to the Ethernet interface
2, via the screen_add command.
1, by embedding shell metacharacters into file names that are processed by fcheck.
2, via the rightAccessAllForums or rightModerateAllForums variables.
2, via an HTTP request with long headers such as Accept.
2, via the AUTH CRAM-MD5 command.
3, by appending a %20 to the filename in the CiWebHitsFile argument to the null.htw URL.
4, via a dot dot (..) attack.
4, via a malformed request to the inetinfo.exe program
4, via a long message.
5, by sending a large number of fragmented packets.
0, by modifying an unprotected attribute
5, via an argv[] that is not NULL terminated
1, by providing traceroute with a large waittime (-w) option
4, via a long -d option.
4, via a long -r option.
4, via a dot dot (..) attack.
4, via a long user name.
3, via shell metacharacters.
4, via a database query
4, via a TCP SYN scan
4, via a database query
2, via an applet containing an illegal cast operation
2, via an attachment and an embedded script in an HTML mail
4, via a long file name string
4, via a long environment variable
4, via a pathname string that includes a dot dot (..) and ends with a null byte.
4, via a symlink attack.
4, via a long -dev parameter.
2, via the DISPLAY environmental variable.
4, via a long login name.
4, via a long MAIL FROM mail header.
4, via a negative size value.
2, via the show command.
2, via an invalid range request to the web server.
4, via a NetBIOS session request packet with a NULL source name.
0, via an index.html file which executes lynx and obtains a uudecoded file from a malicious web server
5, via a long If-Modified-Since header.
4, via a maliciously formatted article.
2, via the /tmp directory.
4, via shell metacharacters in the -D option for the rmail command.
4, via a symlink attack.
4, via a long HTTP GET request.
4, via a malformed request
3, by requesting a URL that contains a %% string.
3, by referencing a non-existing database in the db parameter.
2, via the XML publishing or email capabilities.
4, via a long TERMCAP environmental variable.
0, by sending malformed IP packets that trigger NetProwler's Man-in-the-Middle signature.
4, via a long HTTP request.
4, via a long query_string parameter in the HTTP GET request.
4, via a long user name.
5, via a long query string.
3, by sending a large number of host announcement requests to the master browse tables
3, by sending a ResetBrowser frame to the Master Browser
4, via a malformed DNS response packet.
4, via a long -p option.
4, via a long
1, by making repeated requests to a CFCACHE tagged cache file that is not stored in memory.
2, via the env_report parameter.
1, via malformed input variables.
4, via a mail or news message that has a .jpg or .bmp attachment with a long file name.
0, by redirecting their requests to NTMail's web configuration server.
4, via a long username or password.
1, via oversized ICMP echo (ping) requests.
4, via shell metacharacters.
4, via a long utoken parameter.
2, via long parameters such as group
4, via shell metacharacters.
3, by referencing UltraBoard in the Session parameter
0, by resetting the PIN in the EEPROM.
4, via a long filename for a uuencoded attachment.
4, by appending /expdate to the URL request.
4, via shell metacharacters.
4, via a .. (dot dot) attack.
4, via a long mountpoint parameter.
1, by including that domain name and escaped characters in a URL
3, by sending a packet with an unaligned IP timestamp option.
5, via a formatting string in the From: header
4, via a .. (dot dot) attack.
4, via a malformed URL to port 8000.
4, via a long string.
4, via a long configuration parameter to the WebShield remote management service.
0, via oversized or fragmented ICMP packets.
4, via a long MAIL FROM command.
5, via a negative counter value in a malformed TCP packet that is sent to port 6000.
2, via the dev parameter.
4, via a long -mode option.
0, by requesting the file and appending a large number of encoded spaces (%20) and terminated with a .htr extension
4, via a long DISPLAY environmental variable.
3, via fragmented TCP packets.
4, via a buffer overflow in the ActiveX parameter parsing capability
3, via shell metacharacters.
4, via a long password in the screen locking function.
4, via a symlink attack.
4, via a .. (dot dot) attack.
4, via a malformed authentication request.
4, via a long pathname.
5, via a cancel request containing a long message ID.
4, via a long GET request for a program in the cgi-bin directory.
4, via a malformed request for a page in the viewsource directory.
4, via a .zip file that contains long file names.
4, via a long USER command.
4, via a long username.
2, via an attachment with a long file name.
5, by sending a large number of malformed fragmented IP packets.
2, via the Data Transformation Service (DTS) package Properties dialog
5, via a malformed packet with a long length field.
4, via a long RCPT TO mail command.
4, via a long ETRN request.
4, via a long string.
4, via a malformed request
5, by requesting a URL which provides the JSP extension in upper case.
5, by requesting a URL which provides the JSP extension in upper case.
5, by requesting a URL which provides the JSP extension in upper case.
5, by requesting a URL beginning with /file/
5, by entering a UIDL command and quickly exiting the server.
2, via the NavigateComplete2 event.
3, by specifying a large value which is not properly checked by the SKIP_STRING macro.
3, by requesting a URL containing a large number of / characters.
0, by setting the capabilities to prevent a setuid program from dropping privileges
4, via a long HELO command.
4, via a malformed request.
4, via a long hostname.
4, via a malformed IPP request.
4, via a CGI POST request.
3, by authenticating with a user name that does not exist or does not have a shadow password.
4, via a long tape name.
4, via a GET request that does not include the HTTP version number.
5, by flooding the server's authentication request port with UDP packets
4, via a long MKD command.
2, by sending email messages with blank fields such as BCC
4, via a .. (dot dot) attack.
3, via shell metacharacters.
4, via a long HTTP request.
1, by flooding the /dev/gpmctl device with STREAM sockets.
0, by specifying an alternate configuration file with the BRUEXECLOG environmental variable.
4, via a long login password.
0, via viewsource.jsp) or obtain configuration information.
2, via the CMD command.
5, via malformed DCE/RPC SMBwriteX requests that contain an invalid data length.
4, via a long -c (carbon copy) parameter.
2, via the lastrealm variable in the set_tgtkey function.
2, via the localrealm variable in the process_v4 function.
2, via the e_msg variable in the kerb_err_reply function.
2, via the translated_path hidden form field.
4, via a large number of POST requests.
3, by sending a large user name to the user dialog running on port 8002.
4, via a long GET request.
2, via the Alarm service (OVALARMSRV) on port 2345.
4, via a long HTTP GET request.
3, by uploading and specifying an alternate user configuration file via a .. (dot dot) attack.
4, via a symlink attack.
4, via a long Date field in an email header
5, by sending a malformed DNS UDP packet to its internal interface.
4, via a long GET request.
4, via a malformed URL.
4, via a .. (dot dot) attack.
5, by sending a continuous stream of binary zeros to various TCP and UDP ports
5, by sending a continuous stream of binary zeros
3, by sending a stream of invalid commands (such as binary zeros) to the SMTP Security Server proxy.
5, via an SR_INIT command with a long user name or group name.
3, via shell metacharacters.
2, via the SUMMON command.
0, by using the file name completion capability.
2, by listing the file in the rfcf parameter
0, by specifying the file name in the data_dir parameter.
2, by encoding characters in the requested URL.
2, via long USER
0, by sending an HTTP GET request without listing an HTTP version number.
0, by redirecting their connections through the telnet proxy.
4, via a long string to the iMesh port.
4, via a malformed URL.
4, via a malformed configuration file that is specified in the LOCATE_PATH environmental variable.
0, by referencing them via a temporary stored procedure
5, via a long -StartupMessage parameter.
2, via an input file containing long CHARSET_REGISTRY or CHARSET_ENCODING settings.
4, via a long POP parameter (pophost).
5, via a long username parameter.
2, use the server for mail relay via a username that contains a carriage return.
0, via TNEF encoded compressed attachments which specify absolute path names for the decompressed output.
4, via DBUTIL.PUB.SYS.
2, via long USER environmental variable.
2, via long DISPLAY environmental variable.
1, via malformed ICMP packets.
4, via a resource mask of 0
4," via a URL containing a long """"keywords"""" parameter."
4, via a long GET request or Referrer header.
4, via a long #EXTINF: extension in the M3U playlist.
4, via a long GET request.
2, by uploading Java code to the server via board.html
5, by appending a +.htr to the URL
5, via a long query string.
4, via a .. (dot dot) attack.
4, via shell metacharacters.
4, via a malformed FTP quote command.
3, by specifying a malicious .dll using the Register.ID function
4, via a .. (dot dot) attack on the HOSTSVC parameter.
4, via a .. (dot dot) attack
4, via a long GET request.
4, via a long URL.
5, by executing a STAT command while the LIST command is still executing.
1, by using the RESTART (REST) command and writing beyond the end of a file
3, by executing a STATUS (STAT) command while the file is being transferred.
0, by executing an MLST command before logging into the server.
2, by executing the RENAME TO (RNTO) command before a RENAME FROM (RNFR) command.
2, via an HTTP 1.0 request for a web page which is protected by basic authentication and has no realm defined.
3, by creating a persistent browser link to the Outlook Express windows
2, via the Data Transformation Service (DTS) package Registered Servers Dialog dialog
5, via a JPEG image containing a comment with an illegal field length of 1.
4, via a long USER command in the FTP protocol.
4, via a long HELO command in the SMTP protocol.
4, via a long USER command in the POP3 protocol.
5, via a long user ID in a SOCKS4 CONNECT request.
4, via a .. (dot dot) attack.
4, via a long string to the server port.
0, by redirecting the contents of an IFRAME using the DHTML Edit Control (DHTMLED).
4, via a modified .. (dot dot) attack that uses the %2E URL encoding for the dots.
4, via a long username.
1, by flooding port 40193 with random data.
4, via shell metacharacters.
4, via a .. (dot dot) attack.
4, via a long string.
3," by using a Java applet to open a connection to a URL using the """"file"""""
4, via a long PATH_INFO environmental variable.
4, via a long URL with a .JSP extension.
4, by inserting /ConsoleHelp/ into the URL
5, by inserting /*.shtml/ into the URL
4, via a .. (dot dot) attack in the fromfile parameter.
4, via a .. (dot dot) attack in the catdir parameter.
4, via shell metacharacters in the fromfile parameter.
4, via a symlink attack which creates a symlink in from /var/spool/fax/outgoing/.last_run to the target file.
4, via a flood of fragmented packets with the SYN flag set.
4, via a symlink attack.
2, via command line options.
4, via shell metacharacters.
4, via a symlink attack.
2, via format strings in the PASS command.
4, via a symlink attack that points from /tmp/stcp.conf to the targeted file.
4, via long JS_OPEN
4, via a .. (dot dot) attack.
4, via a long series of null characters to the rexec port.
3, by requesting a URL whose name includes a standard DOS device name.
0, by requesting an invalid URL whose name includes a standard DOS device name.
2, via the security=0 boot option.
4, via a symlink attack on a temporary file.
4, via a large number of RNTO commands.
1, by creating the /tmp/helix-install installation directory before root has begun installing packages.
4, via a symlink attack on various files in /tmp
0, by specifying the file in the $Attach$ hidden form variable.
4, via a symlink attack.
4, via a .. (dot dot) attack.
4, via a long URL.
4, via a large number of UDP connections.
4, via a long Content-type: MIME header when the user replies to a message.
4, via a long Content-type: MIME header when the user forwards a message.
5, by sending e-mail with a From: address that has a . (period) at the end
5, via a .. (dot dot) attack in an HTTPS request to the enrollment server.
5, via a long URL in the HTTPS port.
2, via format strings in a URL with a .XUDA extension.
3, by sending a ping packet with a source IP address that is a broadcast address
4, via a DES key generation request (GDESkey) that contains a long ticket value.
2, via long filenames in the linux shadow file system.
4, via a long file name.
2, via long command line arguments.
0, by modifying the value of the list_admin hidden form field.
4, via a long username.
4, via a malformed IP packet.
4, via a long embedded object tag
4, via a long HTTP GET request.
0, by corrupting the local security policy via malformed RPC traffic
4," via a URL that contains a """"...."""""
4, via a long HTTP GET request
4, via a long HTTP GET request.
2," via an HTTP GET request with a """"Translate: f"""" header"
1, via malformed connection requests.
4, via a .. (dot dot) attack.
4, via a .. (dot dot) attack.
5, by sending a malformed URL to the authentication service on port 4100.
2, via the importmotd command
2, by encoding shell metacharacters into a URL which XChat uses to launch a web browser.
1, by modifying the Folder.htt file and using the InvokeVerb method in the ShellDefView ActiveX control to specify a default execute option for the first file that is listed in the folder.
4, via a long HOME variable to programs such as (1) gmemusage and (2) gr_osview.
4, via a long -n option.
4, via a long command line option.
4, via a long -D option.
4, via a symlink attack on the .ilmpAAA temporary file.
4, via a long -t option.
1, via fragmented TCP connection requests or reopening closed TCP connection requests
4, via a brute force attack
4, via a .. (dot dot) attack on the username or bidfile form fields.
2, by uploading Java code to the module and invoke the com.sun.server.http.pagecompile.jsp92.JspServlet by requesting a URL that begins with a /servlet/ tag.
0, via invalid FTP commands that are processed improperly by FireWall-1
1, by creating files whose names contain shell metacharacters.
1, via malformed data
4, via a large number of connections in which a long Host: header is sent
4, via a long GET request.
4, via a long username.
4, via a long User-Agent parameter.
4, via a large
4, via a long username.
0, by specifying the full pathname in the hdr parameter.
4, via a long (1) USER or (2) HELO command.
2, by specifying the directory in the query parameter.
4, via a long Authorization header.
5, by sending a large number of null bytes.
4, via a long GET request.
5, via a large number of LPD options to the LPD port (515).
4, via a long USER command.
4, via a long APOP command.
4, via a .. (dot dot) attack.
4, via a login with a long user name.
0, by specifying the full file name in the initialization packet.
4, via a long username or password.
4, via a long X-Keywords header.
4, via a long Host:  request header.
4, via a malformed request
3," by appending """"$/FILENAME.ext"""" (where ext is .ccc"
4, via a long WM_USER message
4, via a .. (dot dot) attack.
3, by connecting to the server and disconnecting before sending a newline.
4, via a long GET request.
2, by sending it a series of malformed requests which cause INETINFO.EXE to fail
4, via a series of partial HTTP requests.
0, by setting hidden form fields whose names match the names of internal PHP script variables.
4, via shell metacharacters in the %(listname) macro expansion.
4, via a long terminal type argument.
4, via a query containing 0 bytes.
2, by replacing the /cgi-bin/ in the requested URL with /cgi-bin-sdb/.
4, via a long string.
5, by sending a string that does not contain a newline
4, via a .. (dot dot) attack.
5, by sending a long string of unprintable characters.
4," via a """"%C"""" command"
0, by specifying the file name in the XX-attach_file parameter
4, via shell metacharacters in the emailadd form field.
4, via a malformed ICMP packet
4, via a long Browser Name in a CIFS Browse Frame
4, via a malformed request for an executable file whose name is appended with operating system commands
5, by making a compressed zone transfer (ZXFR) request and performing a name service query on an authoritative record that is not cached
0, by sending an SRV record to the server
3, by attaching a malicious program in an email message that is automatically executed when the user opens the email.
4, via a long GET request.
4, via a flood of fragmented IP packets
3, by connecting to the server and sending out multiple GET
4," via a """"%2e%2e"""" string"
2, via format characters in the vbell_msg initialization variable.
4, via a .. (dot dot) attack.
4, via a .. (dot dot) attack.
2, via the embedded.html web page.
4, via a .. (dot dot) attack on the category or format parameters.
2, via long HELO and MAIL FROM commands.
2, via long Authorization or Referer MIME headers in the HTTP request.
4, via a long From: header.
3," via shell metacharacters in the """"from"""" address."
1, by modifying the attachment_name hidden form variable
0," by specifying the file name to the """"multi"""" parameter."
0, by flooding the server with ARP requests.
0, by specifying the target file name instead of a regular user name.
4, via a DISPLAY environmental variable that contains formatting characters.
4, via a .. (dot dot) attack.
4," via a modified .. (dot dot) attack in the GET HTTP request that uses a """"%2E"""" instead of a """"."""""
4, via a .. (dot dot) attack on the page parameter.
4, via a .. (dot dot) attack on the newpage parameter.
4, via shell metacharacters in the password parameter.
4," via a .. (dot dot) attack in the """"catigory"""" parameter."
2," by changing the """"Price"""" hidden form variable."
3, by running a report on the targeted shares.
0, via an embedded OCX control that is not closed properly
0, via an embedded URL that calls the mailto: protocol with a -F switch.
4, via a long email message containing binary data.
4, via a symlink attack.
4, via a symlink attack on the cgi.log file.
4," via a .. (dot dot) attack on the """"name"""" or """"display"""" parameter."
4," via shell metacharacters in the """"whois"""" parameter."
4, via a CiRestriction parameter in a .htw request
4, via a long USER command.
2, via format characters in the CAUTH command.
4, via a symlink attack.
2, via the -g option.
4, via a malformed display name.
5, via a Web Distributed Authoring and Versioning (WebDAV) search.
4, via shell metacharacters.
2, by opening then closing a connection.
5, by opening a javascript: URL in a named window.
4, via a long LIST command.
2, via long environmental information such as TERM or TERMINFO_DIRS.
4, via a long GET request.
4, via a long rcon command.
2, by injecting format strings into the changelevel command
4," via a long """"RCPT TO"""" or """"MAIL FROM"""" command."
2, via the -e option by creating a symlink to the target file during the crontab session
4, via a .. (dot dot) attack.
4, via a long DISPLAY environment variable or a -display command line parameter.
0," by specifying the target file name in the """"filename"""" parameter in a POST request"
2," via the """"&"""" shell metacharacter."
4, via a sequence of null bytes to the NetMeeting port
4," via a URL containing a """"?/"""" string."
4," via a long """"MAIL FROM"""" or """"RCPT TO"""" command."
4," via a long """"connect"""" command line parameter."
4, via a long username.
4," via an """"SMTP AUTH"""" command with an unknown username."
4, via a .. (dot dot) attack.
4, via a malformed password in commands such as chpass or passwd.
2, via the PWD environmental variable.
4, via a malformed shell.
2," via the """"kill"""" or """"renice"""" function."
3, by transferring a file whose name includes format characters.
2," via the """"price"""" hidden form variable."
3, by changing a file sharing service to return an unknown driver type
5, via a configuration file directory name that contains formatting characters.
4, via a .. (dot dot) attack on the page parameter.
5, via a user name that contains format characters.
2, via format characters in the queryText parameter.
5, by posting a request to import the file into the WebData database.
4, via a malformed URL.
4, via a long URL.
4, via a long URL.
0, by flooding the server with PASV requests
4, via a long -l command line argument.
4, via a long response to an AXFR query.
4, via a long -tn option.
5, via a long LogFileName parameter in HTML source code
4, via a long USER
4, via a .. (dot dot) attack on the Image parameter.
2, via an empty GET request.
3, by flooding a target host with TCP connection attempts and completing the TCP/IP handshake without maintaining the connection state on the attacker host
4," via long (1) """"RCPT TO"
4," via a long ENVID keyword in the """"MAIL FROM"""" command."
4, via a .. (dot dot) attack via an HTTP GET request that uses encoded characters in the URL.
4," via a URL that contains a long string of """"."""" characters."
4," via a URL request that contains an extra """"/"""" in the beginning of the request (aka the """"extra leading slash"""")."
2, via the SSIFilter servlet.
1, by inserting it via a cross-site scripting (CSS) attack and directly calling the com.livesoftware.jrun.plugins.JSP JSP servlet.
4, via a large packet.
4, via a large TACACS+ packet.
1, use ActiveX controls
4, via a malformed packet.
4, via shell metacharacters in the poll_options parameter.
0, by specifying the same value to the entered_password and admin_password parameters.
4, via a .. (dot dot) attack in the Agent
4, via a long filename with a .shtml extension.
5," by requesting a URL that contains a """"?"""" character."
4, via a malformed (empty) UDP packet.
4, via a malformed URL that uses the lead-byte of a double-byte character.
5," by inserting a """"/"""" in front of the target filename in the """"file"""" parameter."
4," via a long """"goim"""" command."
4," via a """"buddyicon"""" command with a long """"src"""" argument."
4, via shell metacharacters.
4, via a long username in the authentication page.
2, via an empty GET or POST request.
4," via a """"/../"""" string"
4," via """"mode +owgscfxeb"""" and """"oper"""" commands."
4, via a long request
5, by sending a nonexistent command to the program.
4, via a malformed Active Stream Redirector (.ASX) file
2," via an HTTP request that ends with characters such as """"."""""
4, via a long GET request.
5, via a long command.
2, by measuring delays in the execution of the getSystemResource method.
5," by prepending strings such as """"/+/"""" or """"/."""" to the HTTP GET request."
4," via a long """"x="""" argument."
4, via a long -M argument.
4, via a long argument.
2, via long environmental variables.
2, by renaming the original registrar.log log file and creating a symbolic link to the target file
4, via a malformed recipient field.
0, by including Extended ASCII characters in name of the attachment.
3, via shell metacharacters in the _MAILTO form variable.
4, by inserting a . (dot) into the URL for a protected directory.
4, via a symlink attack.
4, via a symlink attack.
1,use utilities such as crash or fsdb to
5, via a sequence of commands that navigate into and out of the /proc/self directory and executing various commands such as ls or pwd.
4," via a long string to the """"LANGUAGE"""" argument in a script tag."
4, via a long username
4, via a message that contains a long URL.
4, via a message that contains a long URL.
4, via a message that contains a long URL.
4, via a message that contains a long URL.
2, via long HTTP request.
2, via long HTTP request.
4, via a long SNMP community name.
0, by sniffing the initial UDP authentication packets and spoofing commands.
3, by sending a large number of login requests.
4, via a symlink attack.
4, via a malformed log message that does not have a closing > in the priority specifier.
4, via a long GET request.
4, via a long GET request.
4," via a .. (dot dot) attack in the """"thesection"""" parameter."
4, via a long HTML tag.
4, via a packet with a long username.
4, via a long command line argument.
4," via a .. (dot dot) attack in the """"catsearch"""" form field."
4, via a long command line argument.
0, by flooding the Firebox with a large number of FTP or SMTP requests
4, via a long connection request.
4, via a flood of connections that contain malformed requests.
3, by specifying a large number of arguments and including a long MIME header.
4, via a long password value in a form field.
4," via a .. (dot dot) attack in the """"page"""" parameter."
4, via a symlink attack from the .imwheelrc file.
2, via an extremely long string to the PMCD port.
0, by specifying the target file in the errPagePath parameter.
0, by obtaining the domain SID with the LsaQueryInformationPolicy policy function via a null session and using the SID to list the users.
4, via a flood of packets to port 264.
1, by forging an email message with the sender as bounce@[127.0.0.1] (localhost)
4, via (1) the printenv CGI (printenv.pl)
0, via an improper syslog call that uses format strings from the checkremote() call.
4, via a .. (dot dot) in the argument to source.jsp.
2, via the echo_error routine.
2, by causing sendmail to execute with arbitrary command line arguments
3, via shell metacharacters in the URL portion of an HTTP GET request.
2, via an HTTP request to a .jsp file with certain characters appended to the file name
1, by sending multiple SMB SMBnegprots requests but not reading the response that is sent back.
2, via an HTTP request for admin.php3 that sets step
4," via """".."""" (dot dot) sequences in the default .langfile name field in the Master Settings administrative function"
2," via an HTTP request with the PHP_AUTH_USER parameter set to """"boogieman""""."
2, via the query string.
2, via an unknown method.
2, via the sSQL parameter.
5," use Phorum as a """"spam proxy"""" by setting the Mod and ForumName parameters."
4, via HTTP requests for Database Access Descriptor (DAD) files.
2, via the query string of the URL.
5, via a URL with multiple / (forward slash) characters before the restricted pages.
2, via unknown attack vectors
4, via unknown vectors.
2, by sending an RNTO command after a failed RNFR command.
0, by extracting the authentication information from a cookie.
3," by appending """"%3F+.htr"""" to the requested URL"
4, via a long URL request to the web administration interface.
4, via a .. attack.
4," via a """"WM_COPYDATA"""" message to an invisible window that is running with the privileges of the WINLOGON process."
4, via a malformed data packet
3, via shell metacharacters in the alternate_template parameter.
4, via shell metacharacters in the guestbook parameter.
4, via shell metacharacters in the config parameter.
3, via shell metacharacters in the MyEmail parameter.
4, via shell metacharacters in the file parameter.
2, via the Clamp MSS option and a TCP packet with a zero-length TCP option.
4," via a large number of """" (quotation) characters."
4, via a long host or domain name that is obtained from a reverse DNS lookup.
0, by downloading the restricted executables from another source and renaming them.
3, by requesting a .JSP file name that does not exist.
1, via malicious format string specifiers in a URL.
0, by specifying an alternate directory using with the KRBCONFDIR environmental variable
4, via a long authentication request.
4, via a symlink attack on a ticket file.
4, via a URL containing .. (dot dot) specifiers.
0, by specifying the drive letter (e.g. C:) in the requested URL.
5, by sending a base64-encoded user password whose length is between 80 and 136 bytes.
4," via a modified .. (dot dot) attack containing """"%5c"""" (encoded backslash) sequences."
3, by specifying a malicious include file in the phpgw_info parameter of the phpgw.inc.php program.
2, via long arguments to the cat_network
0, by changing the value to point to a malicious DLL
4, via a large number of GET requests.
2, via an IP address that resolves to a long DNS hostname or domain name.
4, via a malformed query.
3," by appending a string such as """"/..%20."""" to a CD command"
4, via a slow stream of TCP SYN packets.
4, via a large ICMP echo (ping) packet.
5, via a URL that does not end in a space character.
4, via a symlink attack.
4, via a malformed ident username.
5, by calling mmap on the process' own mem file
4, via a long SITE CHOWN command.
5, via a malformed database file that specifies an offset value that accesses memory outside of the intended buffer.
2, via the ARCHIVE applet parameter.
4, via a symlink attack.
4, via a .. (dot dot) attack in the board parameter.
4, via a .. (dot dot) attack in the filename parameter.
0, via the SEND_MAIL parameter
4, via a symlink attack on the status file of a host running HA-NFS.
4, via a symlink attack on the tool_stat.txt log file.
3, via malformed
2, via the GTK_MODULES environmental variable
2, via the INPUT TYPE element in an HTML form
1, by modifying critical environmental variables that affect the behavior of telnetd.
5, via a symlink attack on the sman_PID temporary file.
4, via a malformed form
4, via a large POST request.
4," via a long URL that begins with a """"..""""  string."
4, via shell metacharacters in the email address.
3, via shell metacharacters in the email address.
0, by removing the Users & Groups Data File
0, by pressing the Cancel button at the password prompt
3, by establishing a connection without sending any data
5, via a malformed HTTP request on an unrestricted page that causes PHP to use those access controls on the next page that is requested.
4, via a symlink attack on the rctmp temporary file.
4, via a long DISPLAY environmental variable.
2, via the -rcfile command line argument.
2, via the mostbrowsers parameter
2, via the cgidir parameter.
4, via a long -f parameter.
4, via a symlink attack.
4, via a symlink attack.
4, via a symlink attack.
4, via a symlink attack.
4, via a symlink attack.
4, via a long string to port 12002.
4," via a series of malformed HTTP requests that generate a """"bad request"""" error."
4, via a .. (dot dot) attack on the file parameter.
4, via a long command line argument.
4, via a symlink attack on the exmhErrorMsg temporary file.
1, by redirecting the XSQL server to another source via the xml-stylesheet parameter in the xslt stylesheet.
4, via a long DefineSound tag.
4, via a long connect request.
4, via a long user name.
4, via a series of USER commands
0, by enclosing the applet in a skin file named skin.wmz
4, via a symlink attack.
4, via a symlink attack in some configurations.
4, via a symlink attack in some configurations.
4, via a symlink attack in some configurations.
4, via a symlink attack in some configurations.
4, via a symlink attack.
2, via an integer overflow.
5, via a malformed field that is improperly handled during the detailed view of event records.
2, via javascript URLs
2, via the GetObject Javascript function and the htmlfile ActiveX object.
4, via a series of malformed WebDAV requests.
1, by setting an unusual MIME type for the attachment
5, via a user name that contains format string specifiers.
4, via a malformed recipient field.
4," via a long """"arg0"""" (process name) argument."
1, via malformed tag length specifiers in a SWF file.
4, via a long rfbConnFailed packet with a long reason string.
4, via a long HTTP GET request when the DebugLevel registry key is greater than 0.
4, via a long directory name.
5, by requesting a large number of non-existent URLs.
4, via a buddy relationship between the IRC server and a server clone.
4," via shell metacharacters in the """"email"""" parameter."
5, by sending a large number of spoofed IP packets with various source addresses to the inside interface
0, by setting the ECE flag in a TCP packet
4, via a malformed packet
1, by using the router's telnet program to connect to the router's IP address
4, via a .. (dot dot) attack.
4, via a flood of connections to the server
4, via a .. (dot dot) attack in an HTTP GET request.
2, via the cfgfileget or domaindel functions.
4, via a malformed -l parameter.
4, via a long input line.
4, via a long HREF parameter in an EMBED tag.
4, via a .. (dot dot) attack in the HTTP GET request.
4, via a request to the /cgi/ directory
4, via a .. (dot dot) attack in an HTTP GET request.
1, by establishing multiple connections and sending malformed PPTP packets.
5," by inserting """"..."""" into the requested pathname"
5, by inserting a .. (dot dot) or ... into the requested pathname of an HTTP GET request.
4, via a long hostname
4, via a .. (dot dot) attack in the page parameter.
4, via a .. (dot dot) attack on the sp.nextform parameter.
4, via a .. (dot dot) in the menue parameter
0, by specifying the filename in the db parameter and terminating the filename with a null byte.
0, by specifying the file name in the form parameter and terminating the filename with a null byte.
4, via shell metacharacters in the documentName parameter.
4, via a .. (dot dot) in the documentName parameter.
4, via a symlink attack.
4, via a long QUERY_STRING (HTTP GET request).
2, via an invalid request in the DB parameter.
4, via shell metacharacters.
4, via a .. (dot dot) or ... attack in an HTTP GET request.
4, via a long HTTP GET request.
4, via a .. attack in an HTTP GET request.
4," via a .. in the """"t"""" parameter."
4, via shell metacharacters.
4, via a malformed user_username parameter.
0, by replacing the temporary file that is being edited while crontab is running.
4," via a long """"indication"""" event."
4, via WebDAV requests.
5, via a long web request with a specific type.
4, via a Rich Text Format (RTF) document that links to a template with the embedded macro.
4, via a long print request that is passed to the extension through IIS 5.0.
4, via (1) a long version tag in an .ASX file
4, via a long search parameter.
4, via a long pattern string containing a {} sequence
5, by creating a long pathname and calling the STAT command
5, by creating a long pathname and calling the LIST command
2, via the INDEX command.
2, via the REVLOG command.
4," via a long HTTP GET request that contains many """"/../"""" (dot dot) sequences."
4, via a .. (dot dot) attack in the show parameter.
2," via the """"pwd"""" command."
1," by using the """"ls"""" command and including the drive letter name (e.g. C:) in the requested pathname."
4, via a large number of connections that send null characters.
4," via a long """"RCPT TO"""" command."
4, via a long URL.
3," via the (1) SIZE and (2) MDTM commands when the """"show relative paths"""" option is not enabled."
1, by requesting information on a file that is in a network share
4, via a malformed ASCII armored file.
4, via a NULL password.
4, via a malformed packet with the SYN-FIN and More Fragments attributes set.
4, via a user name that contains shell metacharacters.
4, via a .. (dot dot) attack in the templ parameter.
4, via a long HTTP GET request.
4, via a long EXPN command.
4, via a long HTTP request.
4, via .. (dot dot) characters in various commands
4, via a malformed Authentication header (AH) IPv4 option.
4, via a long HTTP request.
4, via a .. (dot dot) in an HTTP GET request.
2, via the -L option to the lltstat command.
2, via an HTTP POST request that contains at least 10001 parameters.
0, by guessing the user id (UID) and calling user.php with the saveuser operator.
4, via a .. (dot dot) in the GET command.
4, via (1) a .. (dot dot) in a GET command
4," via a """"dir *./../.."""" command."
4, via a long CWD command.
4, via a .. (dot dot) in the URL.
2, by using the ALIAS command to construct large strings.
4, via a URL that requests a non-existent file.
4," via a """"\.."""" (dot dot) in a URL request."
4, via a .. (dot dot) in the StartID parameter.
4, via a .. (dot dot) in a URL.
2, via an HTTP request that contains a host header that references a host that is not in WebSphere's host aliases list
4, via a ping to the broadcast address of the public network on which the server is placed
1, by modifying the LockOptions registry key.
4, via a negative argument to the sysctl call.
5, by using ptrace to track and modify a running setuid process.
0, by shutting down the FTP server while using a malformed working directory (cwd).
1, by inserting them into the order_rn option of the report capability.
4, by inserting a null character and .. (dot dot) sequences into a malformed username argument.
0, by specifying the filename as an argument to the requesturl parameter.
5," by spoofing """"ICMP Fragmentation needed but Don't Fragment (DF) set"""" packets between two target hosts"
0, via a Java applet that opens a large number of UDP sockets
4, via a large number of arguments to the stat command.
3, via the .jsp and .sqljsp file extensions when the server is configured to use the <<ALL FILES>> FilePermission.
4, by injecting a flood of packets with a range of ISN values
4, via shell metacharacters in a username that is then processed by (1) the Bugzilla_login cookie in post_bug.cgi
3," by encoding .. (dot dot) and """"\"""" characters twice."
4, via a wildcard sequence that generates a long string when it is expanded.
0, by preceding the username with a special sequence of characters.
4, via a malformed request.
4, via a series of requests.
4, via a message attachment that contains HTML code
4, via a long registration request (URL) to fp30reg.dll.
4, by reusing a cached connection of the sa administrator account.
3, by starting a large number of sessions and terminating them.
4, via a long logon command that contains a backspace.
0, by reading it from a MIB when the value should be write-only
4," via a """"transfer job"""" routine."
4, via a flood of characters to the TCP ports which it is listening on.
2, via an implementation error in Groupwise system policies.
0, by modifying the recipient and message parameters.
4, via (1) a long map command
2, via the map command.
4, via a .. (dot dot) attack in the helpon parameter.
4, via a large number of simultaneous connections.
1, via HTTP URL requests containing a large number of % characters.
4, via a URL containing a series of . characters
4, via a long command line argument (non-existent printer name).
4, via a large number of authentication requests.
4, via a malformed POST request which includes a space followed by a large string.
4, via a cryptanalytic attack in which the attacker alters the encrypted private key file and captures a single message signed with the signature key.
4, via a symlink attack in the /tmp/ppd.trace file.
2, via an HTTP request to the /aux directory.
2, via an HTTP request to the /aux directory.
2, via the -q command line argument.
3, via malformed packets.
2, via an HTTP request to the /aux directory.
5, by sending a null character and a long string to the server port (2407)
4, via a series of connections to the server without providing a username/password combination
5, via a series of malformed HTTP requests to the /dyn directory.
0, via an attachment whose file name contains many spaces
5, by inserting a .jsp before the WEB-INF specifier in an HTTP request.
3," via shell metacharacters (""""`"""") in the email address."
4, via a long HOME environmental variable.
2, via the Logging File option in the GUI.
4, via a .. (dot dot) in an HTTP request to the WEB-INF directory.
5, via a PORT command that lists an arbitrary IP address and port number
4, via a symlink attack using (1) a printer queue query
3, by creating a database whose name starts with .. (dot dot).
4, via a symlink attack on the backup and swap files
2, via an ICMP port unreachable packet
4, via a long readvar argument.
4, via a symlink attack on new ticket files.
1, by inserting SQL characters into the id parameter.
4, via a .. (dot dot) in the article parameter.
4, via a long HOME environmental variable.
5, via a long TZ (timezone) environmental variable
4, via a malformed Agent: header in the HTTP request
5, via a flood of invalid login requests to (1) the SSL service
2, via an IP packet with an invalid IP option.
1," by setting the """"Cache passphrase while logged on"""" option and capturing the passphrases of other share holders as they authenticate."
3, by uploading a Perl program to the server and using a .. (dot dot) in the AZ parameter to reference the program.
0, by setting the az parameter to upload_file.
2, via the About Timbuktu menu.
3, via shell metacharacters in a URL.
4, via a long message header.
4, via a long APOP command.
5, by appending a / to the requested URL.
2, via an HTTP GET HTTP request to the aux directory
4, via a long file name that is processed by the /zipandemail command line option.
4, via DELETE
2, by setting the cookie_admin_authenticated cookie value to 1.
5," via a """"CD *"""" command followed by an ls command."
4, via a .. (dot dot) attack in the (1) syshelp
4, via a ... (modified dot dot) in the HTTP request.
4, via a long (1) -d option
4, via shell metacharacters in the argument to template.cgi.
4, via a .. (dot dot) in the URL.
4, via a .. (dot dot) in the p0 parameter.
4, via a long tzs (timezone) parameter.
4, via a .. (dot dot) in the file parameter.
4, via a \... (modified dot dot) in an HTTP URL request.
4, via a long user name.
5, by calling snmpd with a long program name.
2, via an extremely long HTTP request.
4, via a symlink attack on the /tmp/glxmemory file.
4, via (1) a long HTTP query string
4, via a .. (dot dot) in an argument to the sql.php script.
4, via a .. (dot dot) in an argument to the sql.php script.
4, via a ... (modified dot dot) in the (1) GET or (2) CD commands.
0, by modifying kernel variables such as MaxFiles
1,use the firewall as a proxy to
4, via a RST during the TCP connection.
4, via a long string in an AIP file.
3, via dot dot attacks
4, via a URL containing (1) con
4, via a URL that contains an MS-DOS device name such as aux.
4, via a long From: header.
4, via a .. (dot dot) attack.
4, via a malformed SQLNet connection request with a large offset in the header extension.
5, via a long argument to the commands (1) STATUS
4, via a long argument to Internet Data Administration (.ida) and Internet Data Query (.idq) files such as default.ida
0, by embedding the macros in a manner that escapes detection by the security scanner.
4, via a malformed string to the NetMeeting service port
3,use incorrect credentials to
4, via a large number of malformed requests to (1) the Telnet service
4, via a Server-Side Includes (SSI) directive for a long filename
4, via a long
4, via a malformed connection packet with a large offset_to_data value.
4, via a malformed connection packet that contains an incorrect requester_version value that does not match an expected offset to the data.
4, via a malformed connection packet with a maximum transport data size that is set to 0.
4, via a special arrangement of HTML tags which includes SCRIPT tags embedded within other SCRIPT tags.
0, by embedding the scripts within certain HTML tags including (1) onload in the BODY tag
2, via the UNICODE encoding of SCRIPT tags within the HTML document.
2, via format strings in the original filename that is stored in an encrypted file.
2, by escaping HTML characters within the request
2, via the OPENWINHOME environment variable.
1, by inserting pipe symbols (|) and newlines into the last name in the registration form
1, via specially encoded URLs which include '%' characters.
4, via a long LANG environmental variable.
4, via a malicious HTML e-mail message or web page.
4, via a large number of malformed Remote Desktop Protocol (RDP) requests to port 3389.
4, via a malformed Windows Media Station (.NSC) file.
4, via a large number of malformed posts.
2, via by installing content that produces a certain invalid MIME Content-Type header
4, via a malformed request that specifies a length that is different than the actual length.
4, via a large amount of malformed H.323 data.
2, via the MAIL environment variable.
4," via a """"~{"""" argument to commands such as CWD"
2, by copying text from the clipboard into the Help window.
4, via shell metacharacters in a certain SNMP trap message.
4, via a set of options including AYT (Are You There)
4, via a ..  (dot dot) attack through (1) the SITEWare Editor's Desktop or (2) the template parameter in SWEditServlet.
4, via a symlink attack on (1) backup files or (2) temporary files used when nedit prints a file or portions of a file.
4, via a '..' (dot dot) attack which is URL encoded (%2e%2e).
4, via a URL request which includes a MS-DOS device name (i.e. GET /aux HTTP/1.0).
4, via a long username (> 20 characters).
4, via a '..' (dot dot) attack in (1) a1disp2.cgi
4, via a specially crafted URL which includes shell metacharacters.
3, via large (> 160000 character) strings sent to port 23.
4, via a long '-F' command line option.
0, via an empty UDP packet sent to port 161 (SNMP) when SNMP  is disabled.
2, via the changing of ZClass permission mappings for objects and methods in the ZClass.
1, via numerous format string attacks.
4, via a .. (dot dot) in the requested URL.
4, via sniffing: (1) password lengths or ranges of lengths
2, by creating Trojan horse programs named (1) grep or (2) lslv in a certain directory that is under the user's control
4, via a '..' (dot dot) in the URL.
4, via a long first argument to lpshut.
4, via a buffer overflow attack in the '-u' command line parameter.
4, via a buffer overflow attack in the first command line argument.
4, via a long first argument to the lpforms command.
4, via a buffer overflow attack in the first argument to the command.
4, by connecting to port 6070
4, via a large number of connections to port 6387.
4, via a '..' (dot dot) attack
2, via the URL request of a MS-DOS device (such as GET /aux) to (1) the Worldclient service at port 3000
5, via long (1) SELECT or (2) EXAMINE commands.
4, via a long (>= 255 characters) URL request to port 8000 or port 9000.
4, via a combination of unprotected registry keys and weakly encrypted passwords.
4, via a buffer overflow in the first argument to the command.
1, via specific traffic patterns.
4, via a malformed URL request which does not end with an HTTP protocol specification (i.e. HTTP/1.0).
4, via a '..' (dot dot) attack.
4, via a large stream (>10
4, via a '..' (dot dot) attack in the template parameter.
4, via a buffer overflow in a command line argument.
2, via the KCMS_PROFILES environment variable
4, via a GIF image whose comment contains the Javascript.
4, via a brute force attack.  This attack is made feasible by STRIP's use of SysRandom
1, by sending large (> 45Kb) amounts of data to the Ghost Configuration Server on port 1347
1, by sending large (> 45Kb) amounts of data to port 2638.
2, via repeated URL requests with the same HTTP headers
1, via HTTP requests containing certain combinations of UNICODE characters.
3, via repeated (>400) URL requests for DOS devices.
0, via repeatedly sending large (> 10Kb) amounts of data to the DIIOP - CORBA service on TCP port 63148.
1, via URL requests (>8Kb) containing a large number of '/' characters.
4, via a malicious .dld (skins-data) file which contains long strings of random data.
2, via the HTTPS service.
2, via unsafe permissions on the asecure program
2, via the AIF - AIFCHANGELOGON program.
4, via a malformed ident reply that is passed to the syslog function.
4, via a symlink attack in the kfm cache directory in /tmp.
4, via a buffer overflow attack on long messages without newline characters.
4, via a large number of packets to port 5045.
4, via a long POST URL request.
4, via a specially constructed URL.
5, via a specially crafted URL which includes variations of a '..' (dot dot) attack such as '...' or '....'.
4, via a URL request which includes a MS-DOS device name (e.g.
0, by obtaining the cleartext administrator username and password from the configuration file
0, via GET or PUT commands.
4, via a symlink attack on /tmp/ftpdownload.log .
4," via a URL request containing a """":"""" character."
4, via a symlink attack.
4, via a buffer overflow attack in the '-restore_config' command line parameter.
4, via a '..' (dot dot) attack in the 'loc' variable.
4, via a '..' (dot dot) attack in the sample script 'codebrws.asp'.
0, via traffic containing long passwords
4, via a long -S option.
3, by appending .. (dot dot) sequences to filenames listed in the content.ini file.
5, by creating a directory name of a specific length.
4, via a dot dot (..) attack on the file module.
4, via a long HTTP request.
4, via a long (1) XFILESEARCHPATH or (2) XUSERFILESEARCHPATH environmental variable.
2, via malicious script in an invalid URL that is not properly quoted in an error message.
4, via a malformed IrDA packet.
4, via a malformed request.
4, via a sequence of invalid Remote Desktop Protocol (RDP) packets.
1, via malformed URLs that contain dotless IP addresses
4, via a malformed OWA request for a deeply nested folder within the user's mailbox.
2, via an incomplete print job followed by a request to display the printer queue.
4, via a hexadecimal encoded dot-dot attack (eg. http://www.server.com/%2e%2e/%2e%2e) in an HTTP URL request.
5, by sending an email to a user's account containing a carriage return <CR> that is not followed by a line feed <LF>.
5," via a """"dot dot"""" attack in the filename for an attachment."
2," via an email with the path of the target file in the """"Attachment Converted"""" MIME header"
4, by sending a long HELO command to the server.
4," via a """"dot dot"""" attack in a LIST (ls) command."
4, via a long (1) username or (2) password.
3, by running a trojan to initialize a ZoneAlarm mutex object which prevents ZoneAlarm from starting.
0, by sending seven or more characters to TCP port 5239.
4, via a symlink attack on the fcrontab temporary file.
4, via a long HOME environment variable.
4, via a certain CGI program.
4, via a base64 MIME encoded email attachment whose boundary name ends in two dashes.
4, via a filename followed by an encoded space (%20).
4, via a dot dot attack in the CD command.
2, by making repeated requests to cd to the floppy drive (A:\).
5, via a CD command to a directory with an MS-DOS device name such as con.
4, via an 'ls ..' command.
2, via the 'nlist ...' command.
4, via a long argument.
4, via a long base64 encoded MIME header.
4, via a long -o argument.
4, via a URL request with an MS-DOS device name in the template parameter.
4, via a URL with a template argument for a file that does not exist.
4," via a URL with """"dot dot"""" sequences in the template argument."
4, via a mkdir command that specifies a large number of sub-folders.
4, via a long string to port 514.
4, via a long string.
5, by sending a large number of IP fragments to the machine
2, via the undocumented Interim Local Management Interface (ILMI) SNMP community string.
0, via format string specifiers that are passed to the syslog function.
0, by modifying the data stream in the document.
4, via a malformed Advanced Streaming Format (ASF) file.
3, by causing a BinHex or MacBinary file type to be downloaded
1, via Javascript in an about: URL
3, via Javascript
1, via malformed URLs that contain dotless IP addresses
2, by modifying the Content-Disposition and Content-Type header fields in a way that causes Internet Explorer to believe that the file is safe to open without prompting the user
4, via a URL with a large number of / (slash) characters.
2, via an HTTP request with a / (slash) in the Host: header.
4," via a URL containing the """"M=D"""" query string."
1, by modifying the 'sinclude' file to point to another file that contains a #include directive that references a file that contains the code.
1, via modified Status Register contents
4, via a long line in the .nofinger file.
4, via a man-in-the-middle attack.
0, by causing null bytes to be placed in log messages.
1, by spoofing HSRP packets.
4, via a long HELO command.
4, via a message with an escaped ' character followed by JavaScript commands.
4, via a symlink attack on a temporary file.
4, via a request for a long URI with (1) GETPROPERTIES
4, via a webserver root directory set to system root.
2, via an ICMP ECHO REQUEST (ping) with the IP Record Route option set.
4, via a series of large ICMP ECHO REPLY (ping) packets
4, via a long SITE command.
2, via the template parameter.
4," via """"CWD ...""""  command."
5, via a file or directory with a long pathname
4, via a malformed request to launch.asp that does not provide the session field.
4, via a long value to a certain parameter.
4, via a long first argument.
4, via a long ident response
4, via a long hostname as a command line argument.
3, by uploading .bdl files
4, via a URL that contains some characters whose case is not matched by Apache's filters.
4, via a .. in (1) LS or (2) GET.
4, via a request containing a null character.
4, via a long SITE command.
4," via a single character in the """"loginpass"""" field."
4, via a series of SYN or TCP connect requests.
4, via a FACES format image containing a long (1) Firstname or (2) Lastname field.
4, via a long username to the POP3 service.
4, via a series of requests for PHP scripts.
4, via a GET request with the URL-encoded symbol for a space (%20).
4, via a .. (dot dot) in the SHOW parameter.
4, via a long argument to the commands (1) CWD or (2) LIST.
4, via a symlink attack on a user configuration file.
4, via a ..(dot dot) attack in the GET command.
4, via a modified .. (dot dot)  attack using encoded URL characters.
4, via a .. (dot dot) attack.
0, by viewing the Location header.
4, via a malformed mail message.
4, via a port scan
4, via a malformed nickname.
4, via a long USER command.
0, via URLs that contain MS-DOS conventions such as (1) upper case letters or (2) 8.3 file names.
4, via a large number of arguments through services such as telnet and rlogin.
4, via a long argument.
3, via shell metacharacters.
3, by specifying a Trojan Horse nettype shared library.
4," via a .. (dot dot) attack on the """"next"""" parameter."
4, via a .. (dot dot) in the pg parameter.
0, via insecure default permissions for the Desktop when it is created in some languages.
2, via certain characters in the help_file parameter.
2, via an HTTP request for a long filename that ends in a .pl extension.
4, via a certain print request.
0, by sending the command a large amount of data.
4, via a large 'To:' field in an email header.
2, via long arguments that are passed to (1) the Log function in util.c
3, via fragmented packets.
4, via a symlink attack on the NOTICES file in the PCP log directory (PCP_LOG_DIR).
0, by inserting the Javascript into (1) a request for a .JSP file
4, via a length argument of zero or less
2, via long arguments to (1) HELP
4," via a large number of """"PASV"""" requests."
4, via a long ORACLE_HOME environment variable
5,use the -c option to
4, via a long HTTP GET request.
0, via format string specifiers in the -soa command.
4, via (1) SNMP and (2) DMI.
4, via .. (dot dot) sequences in the amembernamecookie cookie.
4, via .. (dot dot) sequences in the amembernamecookie cookie.
4, via a mkdir-only FTP PUT request.
4, via shell metacharacters in the email parameter.
1, by requesting the ReplicaID of the Web Administrator template file (webadmin.ntf).
0, by accessing the default navigator $defaultNav via (1) URL encoding the request
4, via a semi-colon (;) in a form variable.
4, via a URL for a file being downloaded
4, via a long Host: header.
4, via a .. (dot dot) in the locale parameter to (1) helpwin.gas.bat or (2) AboutBox.gas.bat.
4, by calling case.filemanager.php with admin.php as an argument
4, via a long TERM environment variable.
0, by hijacking session cookies via the message parameter.
0, by flooding the router with traffic that generates a large number of ICMP Unreachable replies.
2, via an HTTP GET request to (1) stronghold-info or (2) stronghold-status.
2, via an HTTP request containing (1) a .. in versions 2.0 through 2.6.18
1, via HTML that passes information from a frame in the client's domain to a frame in the web site's domain
5, via a malicious link that is accessed by other web users.
4," via a glob pattern that ends in a brace """"{"""" character."
4, via a symlink attack on temporary files.
4," via a SNMP request with (1) a community string other than """"public"""" or (2) an unknown OID"
3, by using qsub to submit a batch job whose name contains formatting characters.
4, via a GET request with a trailing /.
4, via a series of ARP packets sent to the router's interface that contains a different MAC address for the router
4, via a port scan
4, via an [IMG] tag that references an about: URL with an onerror field.
0, via Javascript that uses setTimeout to (1) access data after a new window to the domain has been opened or (2) access data via about:cache.
4, via shell metacharacters in the $hostinput variable.
4, via a .. (dot dot) in the include parameter.
2, via an attachment with a .shtml extension
2, via an HTTP request that includes hex-encoded newline or form-feed characters.
4, via a symlink attack on temporary files that are produced when printing .dvi files using lpr.
4, via a long hcp: URL.
0, by spoofing the admin server name and IP address and connecting to Networker from an IP address whose hostname can not be determined by a DNS reverse lookup.
0, by starting the core vmlinux kernel
2, via format specifiers in the check argument of a shell definition.
5, via a long check argument of a shell definition.
5, by requesting a long URL with a .JSP extension.
5, via a process name containing a format string.
0, by printing the document into which the password has been typed
1, via corrupted data in the RPM file when the file is queried.
4, via a .. (dot dot) in the LO parameter.
2, via an HTTP request for a path that contains many / (slash) characters
2, via an argument that contains format specifiers that are passed into the (1) syslog_message and (2) syslog_io_message functions.
1, via long authentication data.
4, via a message containing shell metacharacters.
4, via a .. (dot dot) in (1) LS or (2) GET.
4, via a long command.
4, via a ls (LIST) command that includes the drive letter as an argument
2, via the pwd command
4, via shell metacharacters in the (1) recipient or (2) pgpuserid parameters.
4, via a SunRPC NULL command to port 443.
4, via a long user name.
4, via a long ORACLE_HOME environment variable.
4, via a DDE message that executes a command
4, via an e-mail message that contains a long line.
4, via a symlink attack on the LOW_POWER temporary file
0, by requesting an invalid extension
2, by including HTML or script in the certificate's description
2, via long arguments to the parameters (1) Mode
1, by flooding Internet Key Exchange (IKE) UDP port 500 with packets that contain a large number of dot characters.
4, via packets to UDP port 7755.
2, via the /a/ hidden directory
2, via long arguments to the CGI programs (1) register.dll
4, via a malformed file that is viewed with most.
4, via a ... (modified dot dot) in the CD (CWD) command.
4, via a long console command.
5, via a LIST command with an argument that contains a large number of * (asterisk) characters.
4, via a .. (dot dot) in the CD (CWD) command.
4, via a forum message that contains the script.
4, via a .. (dot dot) or drive letter (e.g.
3, by uploading and extracting a tar file with a symlink into the data-bag space.
3, via shell metacharacters that are processed when converting a man page to a web page.
3," via encoded .. (dot dot) sequences containing """"%2e"""" strings."
4," via shell metacharacters in the """"page"""" parameter."
0, by causing the Javascript to be inserted into error messages that are generated by CGIWrap.
4, via (1) long command line arguments
2, via an incorrect URL containing the malicious script
4," via shell metacharacters in the """"file"""" parameter."
4, via a msghdr structure with a large msg_controllen length.
0, by causing both telnet sessions to be locked via unusual input (e.g.
0, by modifying the ID number in an HTTP request to PHProjekt CGI programs.
3, via shell metacharacters in the TEMPLATE parameter.
4, via a completed TCP connection to HACMP ports (e.g.
1, by embedding SCRIPT tags in a message whose MIME content type is text/plain
3, by sharing a file whose name contains the script tags.
4, via a negative index number as part of a response to a LIST request.
4, via a .. (dot dot) attack on the page parameter.
2, by setting the PHPSESSID parameter and providing the appropriate administrator information in other parameters.
4, via shell metacharacters in the seite parameter.
5, via a GET request that contains a long sequence of / (slash) characters.
4, via a .. (dot dot) in the HTML_FILE parameter.
3, via shell metacharacters in the userfile_name parameter
2, via long arguments to (1) DELE
3, by requesting a URL that is not cached by Xcache
2," by modifying the """"prefix"""" variable when calling any scripts that do not already define the prefix variable (e.g."
4, via a long window title.
4, via (1) a .. (dot dot) in the ls/LIST command
4, via a port scan from a system that does not have a DNS PTR record
0, via format specifiers in the -h hostname argument for (1) faxrm or (2) faxalter.
2, via shell scripts that are inserted into a news post.
0, via an old formatted filename database (locatedb) that contains an entry with an out-of-range offset
4, via a series of connections to TCP port 8023.
3, by uploading a .lnk (link) file that points to the target file.
3, by uploading a .lnk (link) file that points to the target file.
4, via a .. (dot dot) in the request_id[DUMMY] parameter.
4, via a long username.
4, via a close
2, via an HTTP request that sets the includedir variable.
2, via an HTTP request that sets the includedir variable.
2, via an HTTP request that sets the includedir variable.
2, via an HTTP request that sets the includedir variable.
2, via an HTTP request that sets the includedir variable.
2, by injecting SQL code in the $password argument.
2, via an HTTP request that sets the includedir variable.
4, via a flood of malformed ARP request packets with random source IP and MAC addresses
0," by causing the target system to send a """"DCC SEND"""" request to a malicious server which listens on port 6667"
5, by connecting to port 16286 and not disconnecting
4, via a client request that includes the name of a host that is allowed to obtain the license.
1, by inserting them into (1) the strCopyTableOK argument in tbl_copy.php
4, via a long -S (scheme) command line argument.
2, via multiple connections to the router on the (1) HTTP or (2) telnet service
3, by connecting to port 10000 and entering a series of control characters.
4, via a flood of CDP neighbor announcements.
1, by inserting extra / (slash) characters into the requested path
4, via a malformed request that generates a server error message
3," by causing a """"POP login by user"""" string that includes the attacker's IP address to be injected into the maillog log file."
4, via a long (1) SOR or (2) CFIME environment variable.
4, via a long (1) -T or (2) -name argument.
1, via format specifiers in the SMTP commands (1) HELO
2, via format specifiers that are injected into log messages.
4, via a .. (dot dot) attack.
4, via a symlink attack on a temporary file.
1, by inserting SQL code into an HTTP request.
2, by inserting SQL code into an HTTP request.
2, via a symlink attack on the .mh_profile file.
4, via a long command line argument.
0, by logging into the student version
4, via a long -r parameter.
4, via a flood of UDP packets.
0, by sending an email with an attachment containing malicious content
4, via a symlink attack on temporary policy files that end in a .cpp extension
4, via a .. (dot dot) attack in the requested URL.
4, via a .. (dot dot) in the (1) LIST
1, by requesting information on a file that is in a network share
3, by uploading a .lnk file containing a large number of characters.
3, by creating a series of deeply nested directories with long names
4," via shell metacharacters in the """"current"""" parameter."
4, via a dot dot (..) in the content parameter.
5, by connecting to the router and viewing the HTML source for (1) index.htm and (2) Password.htm.
4, via a symlink attack.
2, by running the NT4ALL exploit program in 'SPECIAL' mode.
4, via (1) _proapsv
2, via long entries in files that are specified by the (1) PROMSGS or (2) PROTERMCAP environment variables.
3, by uploading a keylist.txt file that contains filenames with shell metacharacters
4, via a ... (modified dot dot) in the CD command.
4, via a particular sequence of instructions.
1, via malformed data
0, via malformed IP datagram fragments.
5, via a .. (dot dot) in the FILE parameter.
4, via a .. (dot dot) in the server request.
4, by appending a %00 (null byte) to the request.
3,use the output of small PRNG requests to
0, via a single byte to (1) db2ccs.exe on port 6790
4, via a .. (dot dot) in the HTTP request.
4, via a long TERM environment variable to (1) atcronsh
4, via a long command line argument.
4," via a """"../../*"""" argument to (1) STOR or (2) RETR."
4, via shell metacharacters in the category_file field.
4, via a URL that ends in Javascript
4, via a .. in a NETBIOS name
4, via a long CONNECT argument to port 6500.
2, via long command line arguments to (1) uucp
4, via a ..%2F (modified dot dot) in the chemin parameter.
3, by creating a symbolic link to that file.
4, via piped aliases.
4, via a long Message-ID header.
2, via format strings in the control connection.
4, via a symlink attack on temporary files.
4, via a long MANPATH environment variable.
1, by modifying the MANPATH to point to a man page whose filename contains shell metacharacters.
4, via a malformed packet.
4, via (1) in 2.20.00 and earlier
2, via an HTTP request with a content-length value that is larger than the size of the request
4, via metacharacters in the file parameter.
1, by modifying the sendto
4, via a URL that ends in %2e.
4, via a .ICA file
4, via a ... (modified dot dot) in the CWD command.
1, via malformed packets with (1) an IP length less than actual packet size
4, via a '..' (dot dot) in the argument.
4, via a symlink attack on the klprfax.filter temporary file.
0, by specifying the target file in the -L option.
2, via long lines in the object description file.
4, via a .. (dot dot) in the page parameter.
4, via '..' sequences in the $error_log variable.
4, via shell metacharacters in the $error_log variable.
2, via the control codes (1) ~#MC
0, via format string specifiers in a file containing a ~#RA control code.
4, via a .. (dot dot) in the file parameter.
2, via the (1) aliasadmin or (2) listadm1 CGI programs
2, via the desc parameter.
4, via a URL that contains shell metacharacters.
0, via format string specifiers in a .plan file.
4, via a long request for a help page.
4, via a double encoded URL with .. (dot dot) sequences.
2, via JavaScript that continually refreshes the window via self.location.
2, via an HTTP request containing the target's IP address and a valid account name for the domain.
4, via a SQL code injection attack.
3, by creating a very large array in a table
2, by accessing the methods through the fmt attribute of dtml-var tags.
1, by extracting usernames and passwords from sniffed network traffic
2," via an HTTP request with a lowercase """"get""""."
1, by including files from remote web sites via an HTTP request that modifies the includedir variable.
1, by including files from remote web sites
1, by including files from remote web sites
1, by including files from remote web sites
4, via a port scan.
4, via a .. (dot dot) in an HTML form.
4, via (1) creating an ASP program that uses Scripting.FileSystemObject to open a file with an MS-DOS device name
0, by setting the maximum segment size (MSS) to a very small number and requesting large amounts of data
3, by uploading a PHP script that uses the error_log function to access the files.
4, via a request for an ASP script that ends with a URL-encoded space character (%20).
4, via a URL that contains MS-DOS device names.
4, via a small number of long URL requests
0, via multiple long URL requests.
1, via URLs that directly access cgi-bin instead of keyserver/cgi-bin for the programs (1) console
1, by placing the prefs.lang file containing PHP code on the server.
0, by sending UDP packets to port 53 with no payload.
3, by spoofing a legitimate server's response to a TFTP broadcast and providing an alternate HoldMusic file.
4, via a large number of characters to port 23
4, via a .. (dot dot) attack.
4, via a .. (dot dot) attack using the dot hex code '%2E'.
4, via a tar file whose filenames contain a .. (dot dot).
4, via a .. (dot dot) in an extracted filename.
0, via filenames in the archive that begin with the '/' (slash) character.
4, via a .. (dot dot) attack on the archived files.
4, via a ..  (dot dot) attack on archived filenames.
4, via password cracking.
4, via a symlink attack on a temporary file.
4, via a man page whose name contains shell metacharacters.
2, by accessing the methods through the fmt attribute of dtml-var tags.
0, via AFS RPC packets with invalid lengths that trigger an integer signedness error
1," by modifying the olduser parameter in the """"Change User Information"""" web form."
5, via a mailbox name that contains a large number of . (dot) or other characters to programs such as (1) readmail.cgi or (2) printmail.cgi
5, via a .. (dot dot) in the mbx parameter.
4, via a long HTTP GET request.
3, by executing a command at the command prompt and pressing the F7 and enter keys several times while the command is executing
5, via a malformed connection packet that begins with several char-255 characters.
4, via a long password.
4, via a long HTTP request.
4, via a long username and password.
4, via a .. (dot dot) in the CD command.
2, via an HTTP request that sets the includedir variable.
4, via a URL in the includedir parameter.
2, via an HTTP request that sets the includedir variable.
2, via an HTTP request that sets the includedir variable.
4, via a .. in the CD (CWD) command.
3, by monitoring error messages
2, via several HTTP requests with a long (1) user-agent or (2) host HTTP header.
4, via a URL to a web page with a Content-Type of application/x-icq
0, via invalid BER length of length fields
1, via miscellaneous packets with semi-valid BER encodings
0, via malformed BER encodings
1, via exceptional BER encodings for the LDAP filter type field
0, via exceptional BER encodings (possibly buffer overflows)
1, via invalid encodings of BER OBJECT-IDENTIFIER values
4, via base-64 encoded data
4, via a long command line argument.
4, via a long command line argument.
2, via the command line options (1) -u or (2) -c
5, by creating a block and specifying the target file as the source URL.
4, via a GET with a filename that contains a ...%5c (modified dot dot).
4, via a long HTTP request.
2, via an HTTP request for a URI that contains a large number of / (slash) or other characters
4, via shell metacharacters in the kill parameter.
0, by providing the program with a filename that exists
4, via a symlink attack on the temporary files (1) asagent.tmp or (2) inetd.tmp.
3, by setting a hardware breakpoint that is handled using global debug registers
4, via a SQL injection attack on the id parameter.
2, via the lang parameter.
2, via the index file name that is displayed when displaying hit numbers.
2, via an error message that is returned when an invalid index file is specified in the idxname parameter.
2, via the file operator
1, by specifying an alternate library file in the L (localization) parameter.
2, by injecting SQL statements into user or password fields.
4, via urn:soap-service-manager and urn:soap-provider-manager.
4, via a request for a non-existent .JSP file
2, via shared secret data.
4, via a symlink attack on temporary files.
3," by uploading a (link) file that ends in a """".lnk."""" extension"
5, by marking a bug as the duplicate of a restricted bug
4, via a .. (dot dot) in the mailbox parameter.
2, by specifying passwd as a command line argument.
2, via an image in the (1) DATA
4, via a buddy icon GIF file whose length and width values are larger than the actual image data.
4, via a malformed WAV file.
2," via an instant message that contains a large amount of """"<!--"""" HTML comments."
0, via a long filename
4, via a large number of different fonts followed by an HTML HR tag.
2, via unknown attack vectors.
4, via a crafted text file.
4, via a .. (dot dot) in the URL.
4," via an """"snmp-server host"""" command"
2, by causing one of the services handled by inetd to core dump during startup
4, via a view request with a non-integer news message id field
5, by sending a large or crafted SMS image.
2, via text editors such as (1) e
2, via the URL
4, via a long -c command line argument.
1," via crafted e-mail addresses in """"RCPT TO"""" commands."
2," by opening applications using the (1) """"recent items"""" and (2) """"services"""" menus"
4, via a symlink attack on temporary files created by the (1) mkuserproc
4," via a crafted FTP URL such as """"/.#./""""."
4, via a long host parameter.
4, via a long drop database request.
0, via URLs containing Unicode characters.
4, via a crafted mail message.
4, via a long HTTP_USER_AGENT CGI environment variable.
4," via a request for /servlet/webacc?User.html= that contains """"../"""" (dot dot) sequences and a null character."
2, via the user parameter.
1, by modifying the cfgProgDir parameter to reference a URL on a remote web server that contains the code.
2, via an invalid language value
2, via the viewemail parameter.
3, by creating a Session ID that matches the Session ID of the target
4, via a symlink attack on /tmp/smc$SMC_PORT.
2, via the $sortby variable.
0, by printing random passphrases if the user account does not exist and static passphrases if the user account does exist.
4, via a bounce attack from a system on the local area network (LAN) side
4, via a symlink attack on the -trace file option.
4, via a web page with a large number of images.
4, via a web page with a large number of images.
4, via a web page with a large number of images.
5, by setting a hardlink from the typescript log file to any file on the system
4, via shell metacharacters in the target parameter.
0, by pressing certain control keys that jump between non-alphanumeric characters
4, via a long script.
3, via shell metacharacters in the NEXTPAGE parameter.
1, by typing finger 'a b c d e f g h'@host.
4, via a Lotus Notes object with code in an event
3, by sniffing and replaying packets.
4, via a long command line argument.
5," via a request URL containing the source filename ending in (1) """"jsp%00"""" or (2) """"js%2570""""."
4, via a URL request for the web application directory without the trailing '/' (slash)
4, via user-submitted reviews.
3, by starting a serial monitor
2, via the uname parameter.
4, via a message.
2, via the topic parameter.
2, via the (1) uname parameter in user.php
2, via the zeit parameter.
4, via a long string.  NOTE: due to lack of details in the vendor advisory
2, via an email attachment with a long filename.
4, via a flood of fragmented UDP packets.  NOTE: the vendor disputes this issue
2, via the JavaScript settimeout function.  NOTE: the vendor could not reproduce the problem.
4, via a long command line argument.
4, via non-standard TCP packets created with non-Windows protocol adapters.
4, via non-standard TCP packets created with non-Windows protocol adapters.
2, by sending multiple newlines in a Simple Service Discovery Protocol (SSDP) message.  NOTE: multiple replies to the original post state that the problem could not be reproduced.
1, by calling the ShowWindow function after receiving a WM_NCCREATE message.
4, via long (1) -name and (2) -T arguments.
0, via format string specifiers in a filename.
0, via format string specifiers in the __vanessa_logger_log function.
2," via an HTTP request with a large number of """"+"""" characters before the .nsf file extension"
2, by setting the fast user switch to the same user (self) multiple times
0, via a certain configuration parameter.
4, via a command line argument.
4," via """".."""" sequences in the query string."
4, via a modified name in a Content-Type header.
4, via a long LDAP_OPTIONS environment variable to a privileged program that uses libsldap.
5, via a job request with a crafted control file that is not properly handled when lpd invokes a mail program. NOTE: this might be the same vulnerability as CVE-2000-1220.
4, via shell metacharacters in the recipient field.
3," via encoded ../ (""""%2E%2E%2F%"""") sequences in a request to the cgi-bin/ directory"
2, via an anonymous STOU command.
2, via an improperly terminated comment or phrase in the address list.
0, via lpd in the LPRng printing system.
4, via a malformed execution time
2," via an HTTP request to process_bug.cgi using the """"who"""" parameter"
4, via (1) the sql parameter in buglist.cgi
4, via SNMPv1 trap handling
4, via (1) GetRequest
5, via a URL enclosed in single quotes and containing shell metacharacters (&).
2, via an SNMP request.
2, via malformed protocol options.
4, via a malformed product announcement.
4, via a web page that specifies embedded ActiveX controls in a way that causes 2 Unicode strings to be concatenated.
2, via an object that processes asynchronous events after the initial security checks have been made.
1, by using the Document.open function to pass information between two frames from different domains
4, via a Voice Video & Games request.
4, via a request with a long directory and cache name.
4, via a large unsigned data element length
0, by forcing the cache to fill the disk.
2, via the HOSTALIASES environment variable
5, by creating a file that is not properly processed by XFS.
4, via a symlink attack on temporary files.
4, via a short malformed packet.
2, via long authentication data.
1, by opening Group Policy files with exclusive-read access.
4, via a long OLE DB provider name to (1) OpenDataSource or (2) OpenRowset in an ad hoc connection.
2, via long attribute names or language values.
0, via a custom URL handler that has not been removed for an application that has been improperly uninstalled.
3, via HTR requests with long variable names.
2, via an applet containing an illegal cast operation
0, by embedding the script in a cookie
4, via a long (1) Notes_ExecDirectory or (2) PATH environment variable.
4, via a symlink attack on temporary files.
2, via long arguments to (1) the -d command line option
4, via a long display command line option.
2, via certain form fields.
4, via shell metacharacters in the file name during filename conversion.
4, via a long name field when creating a new banner.
4, via a long HTTP request to the cgi-bin directory in which the CGI program name contains a large number of . (dot) characters.
4, via a URL that directly references the file.
2, via an infinite loop for modeless dialogs showModelessDialog
4, via (1) a request to TCP ports 1100
4, via a CD (CWD) ~ (tilde) command
4, via a series of requests to .JSP files that contain an MS-DOS device name.
4, via a series of GET requests that do not end in with HTTP/1.0 or another version string
0, by modifying the hidden form fields for the name and e-mail address.
4, via a .. (dot dot) in the URL.
4, via /./ in the URL.
4, via a message containing encoded Javascript in an IMG tag.
4, via a message containing encoded Javascript in an IMG tag.
4, via a network scan with unusual packets
2, via an SMS message containing unusual characters.
5, via a ../ (dot dot) containing URL-encoded slashes in the HTTP request.
2, use the library
4, via a long argument to (1) USER
4, via a long HOME environment variable.
4, via (1) long header fields to the HTTP proxy
4, via a series of connections to one of the ports (1417 - 1420).
0, via extremely long values for form fields such as INPUT and TEXTAREA
4, via a symlink attack on the $HOME/.cdrdao configuration file.
2, via the show-data command.
2, via the PORT command.
4, via a long or malformed DNS reply
4, via a symlink attack on the /tmp/f file.
4, via a series of requests whose physical path is exactly 260 characters long and ends in a series of . (dot) characters.
4, via a long HOME environment variable.
4, via a .. (dot dot) attack.
4, via a long UNC request.
1, by invoking the file:// directive with a large number of / characters
4, via a database query with certain long arguments.
4, via a symlink attack on the .nautilus-metafile.xml metadata file.
4, via a long -co (color database) command line argument.
5, via a symlink attack on the logwatch temporary directory.
4, via a symlink attack
2, via an HTTP request containing the script
1, by manipulating arguments that are passed to malloc
4, via a symlink attack on the nsd.dump file.
0," via format strings that use the """"'"""" and """"I"""" characters"
4, via a long HTTP GET request from an MP3 client.
2, via the script parameter.
2, via special characters in the -p (prompt) argument
2, via the publisher
3, via data queries with a long content-type parameter
0, via the root parameter as part of an XML SQL query
3, via malformed Content-Disposition and Content-Type header fields that cause the application for the spoofed file type to pass the file back to the operating system for handling rather than raise an error message
5, via a URL that exploits a local HTML resource file
3, via malformed Content-Disposition and Content-Type header fields that cause the application for the spoofed file type to pass the file back to the operating system for handling rather than raise an error message
2, via an argument with a large number of backslashes.
2, via an HTTP request for an MS-DOS device name.
4, via a long HTTP GET request
2," via the """"Description"""" parameter."
5, via a header length value that exceeds the actual length of the header.
5, via a symlink attack on the /tmp/brutest.$$ temporary file.
4, via a symlink attack on the VOLICON file
3, by requesting a non-existent .html file
4," via a SQL injection attack in the """"uid"""" parameter."
4, via (1) the Title field or a Private Message Box or (2) the image field parameter in pmlite.php.
0, via format specifiers in a command line argument.
2, via large command line argument.
2, via an SMS message containing shell metacharacters.
4, via a large number of PASV commands that consume ports 1024 through 5000
2, via the PORT command.
3, by using a filename that contains an accepted extension
4, via a malformed message.
2,use Javascript that references an ActiveX object to
0, via the cmd parameter
4, via a long nickname.
5, via a .. (dot dot) in the cfg parameter for (1) 14all.cgi
4, via a .. (dot dot) in an HTTP request.
5, via a URL that contains the script.
4, via a long string in the (1) -fn
0, via an Extended HTML Form
0, via an Extended HTML Form
4, via a .. (dot dot) in the pathname argument to chdir.
4, via a request for a nonexistent file with a .pl (Perl) extension
1, by modifying the LC_MESSAGE environment variable to read other message catalogs containing format strings from setuid programs such as vxprint.
4, via a symlink attack on a configuration file.
4," via a long string of format string characters such as """"%d""""."
4, via a response containing a long Content-Type MIME header.
4, via a malformed picture that contains large height and width values
4, via a series of connections with long strings
2, via the form fields (1) TITLE
4, via a long login name
4, via a ... (modified dot dot) in the GET command.
4, via a .. (dot dot) in the file parameter.
5, via a long boundary value in a multipart Content-Type header to (1) ezboard.cgi
4, via a request for a nonexistent file
4," via a linebreak in the """"theme"""" field followed by the Status::admin command"
3," by using CTRL-ALT-DEL and running a """"Browse"""" function"
4, via a symlink attack on temporary files.
4, via a long URL to (1) a command line option
4, via a long item parameter.
4, via a buffer overflow in long -C (configuration file) and other command line arguments.
2, via an extra / (slash) in the requested URL.
4, via shell metacharacters in the list parameter.
4, via a .. (dot dot) in the list parameter.
2, by providing Javascript in the job information field to user_update.php.
4, via (1) a direct request to add_user.php
4, via a flood of TCP SYN packets containing possibly malformed data.
3, by providing a non-existent user name and the MD5 checksum for an empty password to add_user.php
4, via a ... (triple dot dot) in the HTTP request.
4, via a long HTTP request.
0, via several large HTTP requests within a short time.
3, by modifying root's .profile file.
4," via a symlink attack on the """"spinning"""" temporary file."
4, via a long URL in an HTTP request.
2, via certain HTTP GET requests containing (1) a %2e%2e (encoded dot-dot)
4, via a .RVP file that creates a file with an arbitrary extension (such as .BAT)
4, via a /./ in the HTTP request.
4, via shell metacharacters in the p (plugin) parameter.
4, via a .. (dot dot) in the p parameter
4, via a SQL injection attack on the Login and Password arguments.
4, via shell metacharacters in the -c argument for (1) in scoadminreg.cgi or (2) service_action.cgi.
4, via a .. (dot dot) in a URL.
0, by inserting the script into an IMG tag.
3, by specifying a Trojan Gator installation file (setup.ex_) in the src parameter.
4, via a flood of Access-Request packets.
4, via Javascript in a username.
4, via a long (1) message or (2) IMvironment field.
0, by modifying the username and using the spoofed username for social engineering or denial of service (flooding) attacks.
0, by specifying the target file as an argument in the URL.
0, by guessing the name of a gmrightclick-*.reg file which contains the administrator name and password in cleartext
4, via a ... (modified dot dot) in the URL.
4, via a URL that contains Javascript.
4, via a long tty argument to the callin program.
0, via Javascript in an IMG tag.
0, via Javascript in an IMG tag.
0, via Javascript in the IMG tag.
4, via a .. (dot dot) in the HTTP request.
3, via malformed .mp3 files.
2, via an email message whose body is approximately 55 K long.
1, via Javascript in a URL to (1) service.cgi or (2) alert.cgi.
4, via a port scan of the management IP address
0, via a direct HTTP request to the stats.php program
4, via a certain malformed packet
3, by opening a URL that redirects the browser to the file on the client
0, by overwriting critical system files.
2, via certain arguments
4, via a long filename argument to the gettransbitmap CGI program.
4, via a long AddExternalApp request and a TLV type greater than 0x2711.
5, by using .locksafe or .setsafe to reset the current pagedevice.
2, via the processing of HTR request sessions
4, via a mail message with a malformed RFC message attribute
4, via a routine that processes cookies while in StateServer mode.
1, via ZIP files containing entries with long filenames
2, via an executable .wma media file with a license installation requirement stored in the IE cache
4, via a program that calls the WMDM service to connect to an invalid local storage device
2, via format strings in the configuration file name.
4, via a URL with the script in the HTNAME parameter.
4, via a long pluginspage field.
2, via an NFS packet.
4, via a /dns command on a host whose DNS reverse lookup contains shell metacharacters.
4," via a request that contains a large number of '""""' (double quote) and and '>' characters"
4," via (1) an HTTP GET request containing a """".."""" (dot dot) sequence"
4, via a long HTTP request URL.
4, via (1) the admin login page
4, via a long administration password.
4, via a long user name.
5, via a malformed DNS packet that triggers an error condition that is not properly handled when the rdataset parameter to the dns_message_findtype() function in message.c is not NULL
0, via malformed packets that cause Ethereal to dereference a NULL pointer.
5, via a malformed packet that causes Ethereal to enter an infinite loop.
4, via a CWD command with a large number of . (dot) characters.
3, by establishing a large number of connections to the server without providing login credentials
0, via requests that contain certain MS-DOS device names such as com5
2, via an email message with the script in the Subject line.
2, by causing format strings to be injected into calls to the syslog function
2, via an IMG tag whose URL includes the malicious script.
4, via a .. (dot dot) and a null character in the ALTERNATE_TEMPLATES parameter for various mmstdo*.cgi programs.
5, via a .. (dot dot) and a null character in the param_name parameter.
0, via responses from the server in which (2) in certain configurations
5, via (1) a PROPFIND HTTP request with a blank Host header
4," via a """"100 testing"""" message in a DCC connection request that cannot be ignored or canceled by the user"
1, by modifying the to_expire or expire values in the client's users.C configuration file.
4, via a a binary compatibility interface (lcall).
4, via a symlink attack on a temporary file
1, via random inputs in the initial connection.
0, via attacks such as a long HELO command to the SMTP server.
2," via an HTTP request containing a """"*"""" (wildcard or asterisk) character."
4, via shell metacharacters in the dir parameter.
5, by moving a low-level directory to a higher level as it is being deleted
4, via shell metacharacters in the email address parameter.
3, via shell metacharacters (backquotes) in message text
2, via an ARP packet with the firewall's IP address and an incorrect MAC address
4, via a Content-length header set to 0
4, via a .. (dot dot) in the cwd parameter.
2, by changing the current password before it expires
2, via an invalid post number in the post parameter
2, via an invalid category ID (cid) parameter
4, via a .. (dot dot) in an HTTP GET request.
2," via an HTTP request that contains many """"C:/"""" sequences."
4, via a long argument to webplus.exe program
4, via a long Web Markup Language (wml) file name to (1) webplus.dll or (2) webplus.exe.
0, by specifying the URL to the code in the lib_path parameter.
4, via a very large string
1, via encoded tags such as &lt;
2, via the WEB parameter.
2, via the WEB parameter.
4, via a large number of incomplete connections that are not properly terminated
1, via Javascript in a web page that calls location.replace on itself
4, via a displayBegin parameter with a very large number
2, via an invalid language in the arsc_language parameter
4, via a .. (dot dot) in arguments to (1) file_editor.asp
4, via a full C: style pathname in the filepath arguments to (1) Statsbrowse.asp
4, via (1) address_match() of mystring.c or (2) other functions in tolist.c.
4, via (1) a long command line argument
4, via shell metacharacters in the a_query variable.
2, via the phpbb_root_path parameter.
0, by embedding the script within IMG image tag.
1, by embedding the script within an IMG image tag while editing a message.
4," via a .SWF file containing the undocumented """"save"""" FSCommand."
1, via arbitrary SNMP community strings.
2, via an IFRAME in an HTML email message that references .WMS (Windows Media Skin) or other WMP media files
3, via attachments whose Content-Type and Content-Disposition headers are mixed upper and lower case
4, via shell metacharacters in the host parameter.
5, via shell metacharacters in the (1) query or (2) type parameters.
4, via a null character in the database parameter.
5, via a new link submission containing the script in a website name.
2, via the savesetup command and the setup parameter
4, via a malformed URL to port 5002.
2, via an IMG tag with a dynsrc property that references the target file
2, via format strings that are inserted into logging messages.
1, by accessing the applist.asp page.
4, via a .. (dot dot) in the NFuse_Template parameter.
4, via a series of authentication failures
4, use libnewt.
1, via several submissions of an OWA Authentication request with the proper OWA password for the previous user
2, via the parameters (1) prolog or (2) epilog.
4, via a single malformed TCP packet to port 1521.
1, by modifying the THEME variable in a cookie.
4, via a SYN packet that is accepted using syncookies that causes a null pointer to be referenced for the socket's TCP options
0, by embedding it within an IMG tag.
1, via script in (1) the name parameter in downloads.asp
1," by modifying the """"pseudo"""" cookie."
0," by submitting an invalid """"pseudo"""" cookie."
0, via format string specifiers in NTTP responses.
2, via the search parameter.
4, via a .. (dot dot) in the type parameter.
4, via a .. (dot dot) in the HTTP Host header that points to a Trojan horse configuration file that contains a pageroot specifier that contains shell metacharacters.
4, via null \0 characters within [code] tags.
3, via null \0 characters within [code] tags.
5, via (1) an [IMG] tag when BBCode is enabled
4, via a SQL injection attack in a session ID that is stored in the s_key cookie.
4, via a series of login attempts with invalid usernames and passwords.
4, via an ID3v1 or ID3v2 tag in an MP3 file.
5, via a long string in the title field of an ID3v2 tag.
4, via shell metacharacters in the gbdaten parameter.
2, via the parameters (1) name
4, via (1) a long argument in the /yell command
0, by injecting the script into fields during new customer registration.
4, via a SQL injection attack in an HTTP request.
4, via a .. (dot dot) in a URL.
4, via a .. in a LIST (ls) command ending in wildcard *.* characters.
4, via (1) a long help page request without a dadname
2, via the OWA_UTIL stored procedures (1) OWA_UTIL.signature
0, by modifying the URL to reference an alternate DAD that already has valid credentials.
2, via an HTTP Authorization header without an authentication type.
0, by using the TNS Listener to directly connect to the EXTPROC process.
4, via a direct request to the XSQL Servlet (XSQLServlet).
4, via a SQL query using ANSI outer join syntax.
1, via format strings in a message that is not properly provided to the syslog function when the wall command cannot be executed.
2, via ICMP echo packets that trigger a bug in ip_output() in which the reference count for a routing table entry is not decremented
2, via an HTTP request that contains an MS-DOS device name such as NUL
2, via an HTTP request with Basic Authentication containing a long (1) user name or (2) password.
4, via a direct HTTP request to the /admin/adminproc.asp script
4, via a request to datasource.asp
0, by modifying the TSN ID parameter to the ts_app_process.asp script
2, via the Error or Notice parameters.
2, via the Error or Notice parameters.
3, via the (1) title or (2) body of posts.
4, via a Direct Connection with an IMG tag with a SRC attribute that specifies the target filename.
4, by connecting to port 4443 (Direct Connection) or port 5190 (file transfer) before the intended user.
4, via a long channel name in an IRC URI.
4, via a LINK element in a Cascading Style Sheet (CSS) page that causes an HTTP redirect.
4, via a long HTTP GET request to the /reports/ directory.
4, via a GET request to get_od_toc.pl with an empty Profile parameter
4, via a stream of malformed data to microsoft-ds port 445.
2, via format string specifiers in the server banner.
4, via a long response to a passive (PASV) mode request.
1, via malformed DHCP packets that cause RealSecure to dereference a null pointer.
4, via a large number of connections to (1) the HTTP web management port
4, via a zero length packet to UDP port 500.
4, via a large number of packets with malformed IP options.
2, via long commands such as login.
4, via a SQL injection attack on the parameters (1) M_NAME
4," via a long """"220"""" banner."
1, via malformed IP packets.
4, via a ....// (modified dot dot) in the (1) head or (2) foot parameters
4, via shell metacharacters in the (1) head or (2) foot parameters.
1, by setting the user_logged_in or user_dnstools_administrator parameters.
0, by attaching an inline macro to an object within an Excel workbook
3, by creating a hyperlink on a drawing shape in a source workbook that points to a destination workbook containing an autoexecute macro
0, by embedding HTML scripts within an Excel workbook that contains an XSL stylesheet
2, via an input field using an affected API.
2, via certain input to the OWC package installer.
0, by passing the commands as input to the OWC package installer
2, via long authentication data
1, via Unicode encoded requests.
2, via multiple connections to the server.
0, via long or malformed ICMP packets.
4," via e-mail messages with headers that violate RFC specifications by having (or missing) space characters in unexpected places (aka """"space gap"""")"
4, via a large number of responses during challenge response authentication when OpenBSD is using PAM modules with interactive keyboard authentication (PAMAuthenticationViaKbdInt).
1, via UDP packets to port 1434 in which (1) a 0x04 byte that causes the SQL Monitor thread to generate a long registry key name
4," via a """"ping"""" style packet to the Resolution Service (UDP port 1434) with a spoofed IP address of another SQL Server system"
4, via shell metacharacters that are not properly filtered from several calls to the popen() function
1, via temporary files
5, via a symlink attack on the scrollkeeper-tempfile.x temporary files.
4, via a large outgoing HTTP request.
2, via an extra slash (/) in the URL.
1, by modifying the SIP_AUTHENTICATE_SCHEME value to force authentication of incoming calls
4, via a menu option
5, via a symlink attack on the transaction log file used by the _TT_TRANSACTION RPC procedure.
2, via an argument to the _TT_CREATE_FILE procedure.
4, via a URL with an encoded / (%5C) in a .. (dot dot) sequence.  NOTE: it is highly likely that this candidate will be REJECTED because it has been reported to be a duplicate of CVE-2001-0228.
1," via script in a URL that generates a """"404 not found"""" message"
1, via script in a URL with the /servlet/ mapping
4, via a .. (dot dot) in the VBEXE parameter.
4, via a long argument to the NS-rel-doc-name parameter.
3, via certain headers.
2, via an HTTP GET request with a URI containing format strings.
4, via a URL that references a local HTML resource file
4, via a query that calls the OpenRowSet command.
0, by using an LDAP client to directly connect to MMS and bypass the checks for MMS credentials.
4, via an EHLO request from a system with a long name as obtained through a reverse DNS lookup
5, by authenticating to a web page that calls the function
2, via large GET requests
2, via an HTTP request containing ... (triple dot) sequences.
2, via the RunReport option to SimpleBar.dll
0, by specifying the desired files in the BlurbFilePath parameter.
3, via the MSNT auth helper (msnt_auth) when using denyusers or allowusers files
2, via format string specifiers in the file name argument.
2, via an HTTP POST request with certain arguments in a multipart/form-data form
2, via an MCMS resource request for image files or other files.
4, via a complex attack that causes the handler to run in the LocalSystem context with user-specified code.
4, via a hard link to the target file
4, via a long server name field.
4, via a malformed 0x08 packet that is missing a colon separator.
0, via fields such as (1) Name
4, via a link that contains the script in arguments to demo scripts such as respond.pl.
0, via fields such as (1) user name or (2) comments.
4, via a URL to a nonexistent page
2, by triggering log messages.
5, by sending a PASS command with a long password argument and quickly killing the connection
1, via an HTTP GET request that ends in two newline characters
4, via shell metacharacters in the form-attachment field.
0, by specifying the target filename in the form-attachment field.
3, via modified (1) form-to
2, via an HTTP request with a long cookie.
2, via certain control characters in the authentication information
1, via spoofed DHCP responses
1, by changing filesize limits before calling programs that modify the files.
2, via an HTTP request to (1) plugin.php
1, by filling the kernel's file descriptor table and closing file descriptors 0
2, via an HTTP POST request with a single byte
2, via the (1) cvsroot or (2) sortby parameters.
4, via a .. (dot dot) in the RootName parameter.
4, via a direct request to imp_rootdir.asp and modifying parameters such as (1) ftp
0, by specifying the target pathname in the FilePath parameter.
0, by modifying the username parameter
4," via a long """"bind DN"""" parameter."
4,use HTTPS to
4, via a connection to port 21 with a large amount of random data.
5, via a connection to port 8225 with a large amount of random data
4, via a GET request to port 9090 followed by a series of carriage returns
0, by filling the connection table with a large number of connection requests to hosts that do not have a specific route
2, via an HTTP request with a ... (modified dot dot).
3," via an """"AddBuddy"""" link with the ScreenName parameter set to a large number of comma-separated values"
0, by specifying the target file in the LOG parameter.
1, via administrator URLs with modified (1) LOCID or (2) OC parameters.
4, via a long query (q) parameter.
4, via a connection to the server followed by a carriage return
4, via (1) an HTTPS POST request
4, via (1) the -f argument to the monitor utility
4, via a symlink attack on X Windows lock files.
4, via a long USER argument.
4, via a URL with an encoded '%' character at the end.
4, via a direct request to the filter with a long HTTP host header field in a URL for a .jsp file.
4, via a long GLOBAL argument.
4, via a long username and argument.
4, via a long command line argument.
4, via a negative Content-Length value.
4, via (1) the BGP dissector
2, via the (1) SOCKS
2, via an HTML document that calls the HTML Help ActiveX control (HHCtrl.ocx) with a long pathname in the Item parameter.
4, via a symlink attack on a file that is specified as a tty device.
4, via a long SITE CPWD command.
4, via (1) ppptalk or (2) ppp
3, by creating a file that is larger than allowed by the virtual memory system.
5, via a pipe call in which one end is terminated and an EVFILT_WRITE filter is registered for the other end.
3, via malformed packets.
2, via certain DHCP packets from Voice-Over-IP (VOIP) phones.
2," via certain parameters (possibly """"dict"""") to the wordtrans.php script."
5,send a SIGUSR1 signal to
4," via a destination URI that forces a """"502 Bad Gateway"""" response"
2, via an HTTP request using chunked transfer encoding.
5, via a malformed SWF header that contains more data than the specified length.
2, via an encrypted document that has a long filename when it is decrypted.
2, via format strings in the device name command line argument
4, via (1) an Internet Key Exchange (IKE) with a large Security Parameter Index (SPI) payload
4, via a packet with a zero-length payload.
4, via a subscriber's list subscription options in the (1) adminpw or (2) info parameters to the ml-name feature.
2, via certain debug requests that are not properly handled by the debugging feature.
4, via a URL that redirects to the target file.
4," via script"""" setting"
4, via a PDU Confirm Active data packet that does not set the Pattern BLT command
0, via a Java applet that calls the constructor for com.ms.jdbc.odbc.JdbcOdbc with the desired DLL terminated by a null string
0, via invalid handle data in a Java applet
0, by executing an out of process application that acquires LocalSystem privileges
4, via a long value in an attribute/value pair
4, via a malformed HTTP request.
4, via a .. (dot dot) in the (1) LIST (ls) or (2) GET commands.
4, via (1) a .. or (2) a C: style pathname in the FILE parameter.
4, via (1) a large packet to the DHCP port
4, via a symlink attack on temporary files
4, via a long bulldir argument in the user's .qpopper-options configuration file.
4, via a direct request to com.newatlanta.servletexec.JSP10Servlet without a filename
4," via a URL-encoded request to com.newatlanta.servletexec.JSP10Servlet containing """"..%5c"""" (modified dot-dot) sequences."
4, via (1) a request for a long .jsp file
4, via a long PASS (password) command.
5," via a URL that contains the """"/./"""" directory."
4, via a URL whose directory portion ends in a . (dot).
4, via a long search argument to the lookup capability.
2, via long commands to the amindexd daemon
3," by including a http:// and a double-quote ("""") in the [IMG] tag"
4, via shell metacharacters (backtick or pipe) in the essid argument.
4, via a long INFORMIXDIR environment variable.
5," via a long value in a header whose name begins with """"icy-""""."
4, via a .. (dot dot) in the HTTPS request.
1, via long responses
4, via a long FQDN reply
0, via format strings in a server response.
4, via a message with an extremely large or negative value for the year
0, via the -c parameter
4, via newlines in the title field of the edit page.
4, via a direct URL-encoded request to (1) default%2edb or (2) default%2edb.style
2," via terminating quotes and metacharacters in text fields of the """"Advanced Settings"""" capability."
0, via (1) the USER command to mmpop3d for mmmail 0.0.13 and earlier
4, via a .. (dot dot) in the MSPStoreID parameter.
4, via a long hyperlink in a channel or private message.
2, via long DHCP requests.
2, via format strings in the USER command.
2, via an illegal character in the middle of a .. (dot dot) sequence in the parameters (1) _browser_out or (2) _out_file.
4, via a JSP page that calls WPrinterJob().pageSetup(null
4, via a JSP page that calls WPrinterJob().pageSetup(null
2, via the action argument in a link to setup.exe.
2, via long arguments to the extended stored procedures (1) xp_logattach_StartProf
2, via the (1) user-agent or (2) referrer
4, via a long HTTP GET request.
4, via ..\ (dot dot) sequences in an HTTP request.
0, via a certain packet to UDP port 9833
4, via a certain e-mail header
4," via a """"'--"""" sequence in the username and password."
1, by sending IP packets with non-zero Type of Service (TOS) bits to the Timing Control Card (TCC) LAN interface.
0, via script in the num parameter
0, via the go parameter in the comments section.
4, via an [img] tag with a closing quote followed by the script.
4, via (1) the url variable in the Link field of a calendar event
2, via the pid parameter.
2, via multiple responses to the initial challenge with different cd_key values
4, via a long HTTP request.
4," via a long """"ed2k:"""" URL."
4, via a long HTTP request method name.
2, via long arguments to the functions (1) lpad or (2) rpad.
2, via large negative values to the (1) accept
5, via a link to the hcp: protocol that accesses uplddrvinfo.htm.
4, via a long File parameter.
4, via a web page that accesses a legacy XML Datasource applet (com.ms.xml.dso.XMLDSO.class) and modifies the base URL to point to the local system
4, via a long TS value.
4," via a man-in-the-middle attack with modified TGT and TGN parameters in a call to the """"Persist"""" function."
5, via a long command line.
2, via an IRC channel that has a long topic followed by a certain string
4, via shell metacharacters in a link.
2, via an attack that modifies internal data.
4," via a direct call to login.php with the action parameter set to """"insert"
4, via (1) WebAdmin or (2) ModWeb.
4, via .. (dot dot) sequences and null characters in the lang parameter
4, via a long request to TCP port 8001.
4, via (1) a long HTTP request to TCP port 6588 or (2) a SOCKS 4A request to TCP port 1080 with a long DNS hostname.
4, via a long user name.
4, via a long HTTP GET request.
4, via .. (dot dot) sequences in a URL.
0, by forwarding the email to the user while autoresponse is enabled
4, via parserl.pl.
4, via (1) the course_id parameter in a link to login.pl
2," via an HTTP request appended with a """"?"""" character"
4, via a long HTTP GET request.
0, by using the backup feature
4, via a modified loanMin parameter to download.asp.
2," by accessing the """"Add to bookbag"""" feature when the server reports that no more copies are available."
2, via an HTTP GET request without a URI.
2, via an encoded null byte in an HTTP GET request
5, via a long malformed request to TCP port 2500
4, via a link to 500error.jsp with the script in 1the et parameter.
4, via long arguments.
4, via a malformed request to TCP port 17990.
2, via an HTTP request containing a %00 (null) character.
4, via a malformed HTTP header.
4," via a """"..:"""" sequence (dot-dot variant) in the argument."
0, via an absolute pathname in the argument.
2, via an HTTP request with a long
2, via the (1) Rank or (2) Match parameters.
4, via .. (dot dot) sequences when downloading files from the Projects: Attachments feature.
4," via a malformed Subject (""""\t\t"""")."
4, via a long Subject field.
4, via a malformed Date field that is converted into a year greater than 2037.
4, via a malformed packet containing tab characters to TCP port 4110.
2, via an SNMP request to the variable (.iso.3.6.1.4.1.11.2.3.9.4.2.1.3.9.1.1.0.
2, via the TSI data element.
2, via the -T (terminator) command line argument.
0,use MS-DOS device names in HTTP requests to
4, via a URL that contains a reference to a nonexistent host followed by the script
4," via """"..\"""" (dot-dot backslash) sequences in a LIST command."
4, via a long password.
4, via a long USER command.
4, via a large message index value in a (1) RETR or (2) DELE command to the POP3 server
4, via a long password
4, via a large HTTP POST request.
4, via a direct web request to the pages (1) release.htm
2, via the pagename parameter.
4, via a long password.
4, via long (1) To or (2) From headers.
4, via a long HTTP GET request for HTTP/1.0.
2, via an HTTP POST request without a Content-Length field.
2, via an HTTP GET request that ends in a large number of / (slash) characters.
5, via ..\ (dot-dot backslash) sequences in an HTTP GET request.
1, via direct requests to CHL files such as (1) srvstatus.chl
2," via an HTTP request to a target file that ends in a """"+"""" character."
2, via the diary and other capabilities.
4, via a long RCPT TO command.
4, via a certain response or (2) cause a denial of service via long server responses.
4, via a long URL request.
2, via the (1) SSH banner
1, via TCP packets with source and destination ports of 137 (NETBIOS).
0," by modifying the cookie that is used by the """"View Bugs"""" page."
1, by modifying the g_jpgraph_path parameter to reference the location of the PHP code.
2, via the parameters (1) g_bottom_include_page
1, by modifying the f_id bug ID parameter to (1) bug_update_advanced_page.php
4, via a long HTTP GET request.
4, via a long request to TCP port 1433
4, via a long source (-s) command line parameter.
4, via a long MH environment variable.
4, via a long -xrm argument.
4, via (1) addressbook.php
4, via a malformed optpage file argument
4," via """".."""" (dot dot) sequences with URL-encoded (1) """"/"""" (%2f"""") or (2) """"\"""" (%5c) characters."
2, via certain field codes that insert the information when the document is returned to the attacker
4, via a direct request to the servlet.
0, by entering certain logoff or shutdown sequences (such as CTRL-ALT-DEL) and canceling out of the resulting user confirmation prompts
2, via an HTTP request with long HTTP headers
4, via a long -Coding command line argument.
4, via a POST request to a directory with both WebDAV and CGI enabled.
4, via a long GET request.
2, via an HTTP GET request.
2," via an HTTP request that contains an Location: header with a """"%0a%0d"""" (CRLF) sequence"
2, via an HTTP request to helpout.exe with a missing HTTP version number
4, via a NULL dereference.
4, via (1) long headers that are not properly processed by the readheaders function
4, via a long Artist ID3v2 tag in an MP3 file.
4, via ..\ (dot-dot backslash) sequences in an HTTP request to the cgi-bin directory.
4," via a digitally signed email with a long """"From"""" address"
1, via malformed WebDAV requests that cause a large amount of memory to be assigned.
0, via web pages using the <frame> or <iframe> element and javascript
2, via certain uses of the OBJECT tag
1, via malformed input to TCP port 1001.
4, via a symlink attack on temporary files.
4, via a flood of malformed TCP packets without any flags set
5,use a link to
5, via a modified PROMETHEUS_LIBRARY_BASE that points to code stored on a remote server
0, via a certain PPTP packet with malformed control data.
1, via certain packets to UDP port 694 (incorrectly claimed as TCP in some sources).
4, via a symlink attack
4, via a request for a subdomain that does not exist
0, via SIG RR elements with invalid expiry times
4, via a long HTTP request.
4, via a URL with a modified icon parameter.
2, by killing the lockd daemon.
4, via an rcp call on /proc.
4, via a large number of requests for a map that does not exist.
2, via an HTTP request to Gozila.cgi without any arguments.
2, via an HTTP request with a sequence of multiple / (slash) characters such as http://www.example.com///file/.
2," via the """"bio"""" argument to modules.php."
4, via a long LOGNAME environment variable for the resLISa daemon.
4, via a long -net command line argument.
4, via a long log message.
2, via command line arguments that specify alternate Lisp scripts that run at escalated privileges
2, via an email message with a certain invalid header field that is accessed using POP3
3, by including a Java applet that invokes COM (Component Object Model) objects in a web site or an HTML mail.
2, via an untrusted Java applet.
4, via a long USERID parameter in the isqlplus URL.
3, by mounting a disk image file that was created on another system
0, by accessing the CUPS Printing Web Administration utility
4, via a mounted ISO 9600 CD
2, via the map_fd() Mach system call.
5, via a certain image file that is not properly handled when Window Maker uses width and height information to allocate a buffer.
4, via a certain URL.
2, via an authentication request with a long Distinguished Name (DN) attribute.
2, via certain command line arguments.
4," via """".."""" sequences in the pc_clname field of a pcinfo_t structure"
2, via an email message with the script in a MIME header name.
4, via a jar: URL that references a malformed .jar file
2, via an HTTP GET request with a long .cfm file name.
2, via an HTTP GET request with a long .jsp file name.
2, via an email to a local user that does not exist
4, via a certain XFS query.
2, via an encrypted password that causes the overflow during decryption in which a DOS codepage string is converted to a little-endian UCS2 unicode string.
2," via an email message with a From header that contains a large number of quotation marks ("""")."
4, via (1) a Synchronized Multimedia Integration Language (SMIL) file with a long parameter
0, via a Java applet that accesses the user.dir system property
4, via an .MP3 or .WMA audio file with a corrupt custom attribute
4, via (1) the direct parameter in imageFolio.cgi
2, via certain formatted address fields
3, by detecting an exception.
1, via filenames containing (1) /absolute/path or (2) .. (dot dot) sequences.
1, via filenames containing /absolute/path or .. (dot dot) sequences.
4, via (1) long inputs during user name canonicalization
2, via the msgText buffer in the chat_InterpretData function
0, by changing the price parameter.
4, via a ... (dot dot dot) in the cd/CWD command.
4, via malformed messages.
1, via malformed packets to the (1) LMP
4, via a POST request with shell metacharacters in the email parameter.
2, via malformed ICQ message types without a 0xFE separator character.
2, via long WHOIS responses.
0, via file race conditions
4, via a certain UDP packet
2, by causing negative arguments to be fed into memcpy() calls via HTTP requests with (1) a negative Content-Length value or (2) a negative length in a chunked transfer encoding.
2, by causing large negative integers to be provided to a memcpy call.
4, via (1) long -t or -r parameters to slurpd
1, by using the mmap() function with a PROT_READ parameter to access non-readable memory pages through the /proc/pid/mem interface.
2, via certain malformed data headers in Shockwave Flash file format (SWF) files
4, via (1) the CUPSd HTTP interface
4, via .. (dot dot) sequences in a login name
4, via a long hostname argument.
0, via an array index overflow using the nprobes (number of probes) argument.
4, via HTML mail messages.
4, via long input.
5, via a Caller ID string with a long CallerName argument.
4, via a large negative argument
4, via a long date string
3, by causing repeat() to generate a large string.
3, via shell metacharacters that are fed from a dhcpd .info script into a .exe script.
4," via """"an incorrect reference to thread register state."""""
4, via .. (dot dot) sequences in the id parameter.
5, via a modified GALLERY_BASEDIR variable that points to a directory or URL that contains a Trojan horse init.php script.
4, via a long QMAILADMIN_TEMPLATEDIR environment variable.
1, via format strings in SMTP requests.
4, via a negative value for the size parameter
4, via (1) report.php
4, via URL-encoded pathnames in the cur and dest parameters.
0, via an absolute pathname in the file parameter.
4, via a ../ (dot-dot) sequence in the filename to be extracted.
2, via an SNMP write request containing 85 characters
4, via a cookie or URL with the user_cookie parameter set to 1.
2, via the site parameter.
1, via SYN packets to the supported network services.
4, via certain URLs.
2, via an HTTP POST request.
2," via an HTTP request containing """"..%5c"""" (URL-encoded dot-dot backslash) sequences."
2, via the -v option.
4, via (1) the Steelarrow Service (Steelarrow.exe) using a long UserIdent Cookie header
5, by opening a window to tools.google.com or the res: protocol
4," via an """"onkeydown"""" event handler."
4, via a link to a non-existent page whose name contains the script
5, via a long profile name in a connect argument.
5, via a query with an invalid link between tables
2," via an HTTP request that ends in a (1) """"+"""" or (2) """"\"""" (backslash) character."
4, via a long searchTarget parameter.
4, via a long request followed by the malicious script
4, via a request for a directory that does not exist
4, via (1) test.php
4, via a long $asctime value.
2, via the search parameter.
4, via shell metacharacters in the search box.
2, via the GPC variable.
2, via the tablehosts variable.
4, via a GET request to port 8001
4, via shell metacharacters in the title during edit mode.
2," via the """"Data Input"""" option in console mode."
2, via an HTTP request whose argument is a filename of the form (1) C: (drive letter)
2," via certain strings such as """"P > O < C""""."
4, via (1) a large response from the server
0, by sending the raw messages (1) 206
4, via a PART message with (1) a missing channel or (2) a channel that the Trillian user is not in.
0, via (1) an HTTP GET request with a long URL or (2) a request with a long method name.
5, via a series of calls to the TIOCSCTTY ioctl
5, via (1) STYLE attributes or (2) SRC attributes in an IMG tag.
0, by inserting the script after a trailing / character
4, via (1) attached file names in the Read Mail feature
4, via a negative value in the Content-Length HTTP header.
4," via a URL containing .. sequences with """"/"""" or """"\"""" characters."
4, via (1) the authornumber parameter in author.asp
2, via multiple port scans to ports 15077 and 15078.
4, via a symlink from the user's .breakyhighscores file to the target file.
4, via a long MON_WORK_DIR environment variable or -w (workdir) argument to (1) afd
4," via """"..\"""" (dot-dot backslash) sequences in a URL."
2, via the boardid parameter.
4, via a long LINUXCONF_LANG environment variable
1, via malformed messages containing a small number of characters to UDP ports 7778 or 10777.
5, via a race condition during the creation of a log file for rejected replication requests.
4, via a symlink attack on the xbru_dscheck.dd temporary file.
2, via the -logfile command line option
4," via a symlink attack on a """"isc_init1.X"""" temporary file"
4, via .. (dot dot) sequences in the img parameter.
4, via a symlink attack
4, via (1) ../ (dot-dot slash) or (2) ..\ (dot-dot backslash) sequences.
4, via a skin file (.wal) with a long include file tag.
4, via a .. (dot dot) attack on port (1) 6015 or (2) 6016
2, via the email address field.
5, via a malformed string containing script
2, via the mask parameter.
2, via the Reason parameter.
4, via a request to the userlist.asp program
2, via an HTTP request without a Content-Length parameter.
4, via a GET request without the terminating /r/n/r/n (CRLF) sequence
2, via an HTTP request to a .jsp file whose name contains the malicious script and some encoded linefeed characters (%0a).
2, via XML script in a .swf file that is hosted on a remote SMB share.
5, via a CONNECT request
4, via shell metacharacters in (1) the $host variable for nslookup.pl
3, via long (1) DELE or (2) UIDL arguments.
2, via an HTTP request containing an extra / (slash).
4, via a large UDP datagram
2, via long keyboard input.
4, via .. (dot dot) sequences in the commands (1) LIST (ls)
4, via a PWD command
2," via an HTTP request containing a """"/./"""" sequence."
4, via a malformed SSH packet to the Secure Command Shell (SCS) management interface
4, via a long HTTP GET request.
4, via a symlink attack on temporary files.
0, by establishing an FTP connection to the TCC
2, via an HTTP request to the TCC
4, via (1) C: (drive letter) or (2) .. (dot-dot) sequences in the page parameter.
0, by setting the login parameter to true.
4, via SIGCHLD signal handler race conditions that cause an inconsistency in the child counter.
5, via a cookie that contains script which is executed when a page is loaded
4, via a long URL.
5, via a URL with encoded newlines followed by a request to a .jsp file whose name contains the script.
4," via CRLF injection of encoded newline (%0a) characters in parameters such as """"required-subject"
4, via a connection to a high-numbered port
5, via a large length value that facilitates a buffer overflow attack
4, via .. (dot dot) sequences and a null byte (%00) in the configLanguage parameter.
5, via a long username that is read from a file descriptor argument.
2, via certain packets that cause some network interfaces to stop responding to TCP traffic.
2, by setting the sd_struiowrq variable in the struioget function to null
5, uses libthread by causing the application to wait for a certain mutex.
2, via an HTTP request with large headers.
4, via a fragmented packet to the Gigabit interface.
2, via long command line arguments to (1) mlclear or (2) mllock.
4, via hex-encoded URLs.
2, via the category parameter.
5, via a URL terminated with a /
4, via a long NLSPATH environment variable to (1) csh
4, via a long argument to /usr/bin/at.
4, via (1) a long -contextDir argument to dtaction
4, via .. (dot dot) sequences in a URL.
4, via .. (dot dot) sequences in the quiz parameter.
4, via .. (dot dot) sequences in the type parameter.
2, via the sql parameter.
5, via (1) info.jsp
2, via long command line arguments to (1) sample
4, via (1) ndsobj.nlm
0, via the cbuf parameter to htp.print.
5," via a request to the oracle.apps.cz.servlet.UiServlet servlet with the test parameter set to """"version"""" or """"host""""."
4, via (1) Text Features in the DHTML UI or (2) the test parameter to the oracle.apps.cz.servlet.UiServlet servlet.
4, via unknown vectors.
2, via the VACUUM command.
4, via (1) a long Transport field in a SETUP RTSP request
4, via a long URL.
1, use less secure authentication schemes (e.g. password) than configured for the server.
2, via an IMG URL with modified send_to and subject parameters.
4, via a javascript: URL in an IMG tag.
4, via a modified sqspell_command parameter.
4, via a long query parameter.
2, via the wp-force-auth Web Publisher command
4, via a wp-html-rend request.
0, by obtaining the MD5 checksum of the password
4, via a long user argument.  NOTE: since htdigest is normally only locally accessible and not setuid or setgid
1, by modifying the user_id variable.
4, via shell metacharacters in the command parameter.
4," via (1) search.php and (2) the """"Your name"""" field during account registration."
4, via a POST request with an invalid or missing Content-Length header value.
4, via a long set_buddygrp field.
0, by modifying the Oracle Applications URL.
5, by removing a file that the fstatfs function refers to.
2, via format string specifiers.
5, via a request with an invalid cfg parameter
2, by injecting script into $letterbits.
2, by injecting script into a bulletin board message.
2, by injecting script into (1) diagnose.cgi or (2) compatible.cgi.
2, by injecting script into the paragraph <P> tag.
2, by injecting script into the cleanSearchString() function.
4, via a ../ (dot dot slash) in the script used to read Microsoft Office documents.
2, by injecting script into ext.dll ISAPI.
4, via a long DIAGNOSTICS environment variable.
1, via cookies by injecting JavaScript into the URL
3, by causing a filename with a long extension to be placed in a folder to be backed up.
4, via a long FN (font) argument in the message header.
2, via the password field.
2, by injecting script into the HTTP request for the name of a template
2, via the URL parameter.
2, via the Term parameter.
4, via a Cascading Style Sheet (CSS) with the p{cssText} element declared and a bold font weight.
4, via a DOCSIS file without a Message Integrity Check (MIC) signature
2, by injecting script into the (1) subject or (2) message fields.
2, via the id variable.
5, by sending a flood of empty TCP/IP packets with the ACK and FIN bits set to the NetBIOS port (TCP/139)
2," via an object of type """"text/html"""" with the DATA field that identifies the HTML document that contains the object"
4, via a GET request to (1) /_vti_pvt/access.cnf
2, via the password field.
4, via an x-header that causes snprintf overwrite the FFGET_FILE variable with a (null) byte.
3, by sending a cookie containing a non-existent username to profiles.php
2, via the pic parameter.
2, via the pw=show option
4, via a URL with a large Time parameter
4, via a URL.
4, via a request for a file that does not exist
2," via the """"web site"""" parameter in a guestbook message."
0, by viewing the object names that are type USRPRF.
4, via (1) the query string argument to certain .pl files
4, via a message board post.
0," by setting their authentication cookie to """"logged"
2, via unknown attack vectors.
4," via """"unfiltered user input."""""
4, via a long folder name (NewFolder parameter).
4," via a """".."""" (dot dot) in the Attachments parameter."
5, by suppling a non-existent function in a script using a SOAP::Lite module
4, via a malformed .hpf file.
4," via a hex-encoded """"%c0%ae%c0%ae"""" string"
3, by sniffing and replaying packets.
2, via the setup parameter
0, via the setup parameter
2, via the setup parameter
2, via the setup parameter
1, by using ping
4, via an .ais file with a long file description field
4, via requests to certain scripts that do not verify if the user is logged in.
2, via the unknown attack vectors.
4, via .. (dot dot) sequences.
4, via a symlink attack on temporary files.
2, via an email with a malformed MIME header.
4, via a font tag with a long face attribute.
4, via a long command line argument.
2, via an HTML e-mail message that uses a file:// URL in a t:video tag to reference an attached Windows Media Player file containing JavaScript code
5, by injecting a newline character followed by CC:
1, by logging into a Novell Directory Services (NDS) account
4, via a long request.
5, via a NULL character in the MIME header before the virus.  NOTE: the vendor has disputed this issue
3, by using a non-RFC compliant MIME header.  NOTE: the vendor has disputed this issue
5, via a Word Macro virus with a .nch or .dbx extension
4, via a filename in the Content-Type field with an excluded extension such as .nch or .dbx
3, by using a (1) SYN/FIN
3, by sending a URL request for a MS-DOS device such as con.  NOTE: it has been disputed that this and possibly other application-level DOS device issues stem from a bug in Windows
2, via unknown attack vectors.
2, via the section parameter to index.fcgi.
2, via unknown attack vectors.
2, via format strings in server responses.
0, via format string specifiers that are not properly handled in a call to the syslog function.
1, via encapsulated SMTP addresses
4, via a long request that is split into multiple packets.
4, via unknown vectors.
2, via the (1) email parameter to add.php or (2) banurl parameter.
4, via a nonexistent image category
2, via Javascript in an IMG tag when submitting news.
0, via Javascript in an IMG tag.
0, via Javascript in an IMG tag.
0, via Javascript in an IMG tag.
0, via Javascript in an IMG tag.
1, via Javascript in an IMG tag.
0, via Javascript in an IMG tag when creating a topic.
0, by sending several SNMP GetNextRequest requests.
4, via a long filename parameter.
0, by specifying the program in the href attribute of a link.
4, via a ..  (dot dot) in the URL.
4, via a long HTTP GET request.
0, via a full pathname in the AnalyseSite parameter.
4," via a """".."""" (dot dot) in the URL."
1, via direct requests to (1) admin_members.php
4, via a long HTTP request.
3, by using mmap to directly map /dev/mem or /dev/kmem to kernel memory.
0, by obtaining an exclusive lock on the (1) alias
2, via an HTTP GET request with a negative Content-Length value.
4, via (1) myhome.php
4, via a direct request to moderator.php with the action and ismod parameters.
2, via an invite request that contains hex-encoded spaces (%20) in the Invitation-Cookie field.
2, via certain IP options.
4," via """".."""" sequences in the album parameter"
4, via a symlink attack on temporary files.
5, via shell metacharacters in (1) a word that is being spell checked or (2) an e-mail address.
4, via shell metacharacters in (1) the $text variable in SpelCheck.pm or (2) the $filename variable in HTMLPlog.pm.
2, via the password (passwrd) parameter.
4, via a long mp3 filename command line argument. NOTE: since the only known attack vector requires command line access
3, by causing a CGI script to send a large amount of data to stderr
2, via unknown attack vectors.
0, via (1) the URL or (2) a parameter to test2.pl.
2, via the subject of a newsgroup post
4, via shell metacharacters in the domain name field.
1, by sending data and closing the connection before all the data has been sent.
4," via a """".."""" (dot dot) in an HTTP request."
2, via certain form fields.
4, via shell metacharacters in an HTTP request.  NOTE: earlier disclosures stated that the affected versions were 1.7.1 through 2.1.2
4, via a large number of rapid requests
5, via a URL that uses the IP address instead of the hostname.
2, via the inc_dir parameter.
2, via the (1) member parameter to member.php or (2) loser parameter to misc.php.
1, by modifying the pmid parameter to pm.php.
1, via malformed content in a Flash Shockwave (.SWF) file
2, via unknown attack vectors.
1," by setting the pymembs parameter to """"admin""""."
2, via the rel_path parameter.
2, via the l parameter.
4, via a malformed log entry.
4, via a symlink attack on the mask file.
4, via a long invite request.
2, via the e-mail message.
2, via the highlight parameter.
4, via a long HTTP request
4, via shell metacharacters in a telnet:// link
3," via the """"Full Name"""" (addressname) parameter."
4, via tasklists.
4, via image tags.
3, by creating a message board post that is a child of an outdated parent.
4, via a long HTTP GET request.
4, via a long HTTP GET request.
0, by sending incomplete HTTP requests and leaving the connections open.
4, via a long HTTP GET request.
2," via an HTTP request with a Host header that contains a large number of """"/"""" (forward slash) characters."
0, via a full pathname in the filnavn variable.
5, by using flock() to lock the /etc/dumpdates file.
5, by using flock() to lock the /var/log/acculog file.
5, by injecting a CRLF into the Subject field and adding a BCC mail header.
2, via the (1) username or (2) password fields.
4, via a MKD command with a long directory name.
2, via the (1) $scriptpath or (2) $url variables.
4, via SYN
4, via a .. (dot dot) in the HTTP query string.
1, by editing the userlist.cgi file.
2," via an HTTP GET request with a trailing """"~"""" (tilde) or """".bak"""" extension."
2, via the query string in the (1) rate
4, via a SOCKS4 request with a long username.
0, via Javascript in the search string.
2, via the (1) tar (TARGET) or (2) zielport (ZIELPORT) parameters.
4, via a long HTTP GET request with the Host header set.
3, by performing a SYN scan using a tool such as nmap.
4, via a long request to (1) TCP port 25 (SMTP) or (2) TCP port 110 (POP3).
2, via unknown attack vectors.
2, via the (1) the email parameter of add.php or (2) the banner URL (banurl parameter) in the main list.
4, via a long HTTP GET request with a large number of subdirectories.
4, via escaping of the screen name parameter
2, via the query string argument
1, via malformed log messages.
3, via shell metacharacters in plugin output.
2, via an HTML link.
5," via a URL whose hostname portion uses a fully qualified domain name (FQDN) that ends in a """"."""" (dot)."
4, via a URL with an IP address instead of a hostname.
2, via unknown attack vectors.
2, via the (1) Javascript events
4, via a .. (dot dot) in the page parameter.
4, via a long (1) ctcp
2, via an invalid username during login.
4, via shell metacharacters in the Domain name or IP address argument.
5, by sending a PASV command string as the argument of another command to an FTP server
2, via unknown attack vectors.
4, via a .. (dot dot) in the GET request
1, by creating multiple timers with a 1-ms tick.
2," via an OBJECT tag that contains a crafted CLASSID (CLSID) value of """"CLSID:00022613-0000-0000-C000-000000000046""""."
4," via a long """"MAIL FROM"""" command"
2," via an HTTP request with a trailing dot (""""."""")."
4," via a """"\.."""" (backslash dot dot)."
4, via a URL with long variables for non-existent resources.
2, via multiple URL requests containing the DOS 'CON' device name and a registered file extension such as .jsp or .xtp.
5, via a URL request for the example Java class file HelloServlet.
4, via shell metacharacters in the followup parameter.
1, via multiple HTTP requests containing a single carriage return/line feed (CRLF) sequence.
2, via the filnavn parameter.
2, via the (1) name parameter in modules.php and (2) catid parameter in index.php.
0, via email attachments containing a trailing dot after the file extension.
0, via a long parameter to rtable_create (procedure 21).
1, via crafted HTTP requests.
4, via a flood of packets.
2, via the (1) SnoopServlet or (2) TroubleShooter example servlets.
2, via an HTTP request for a resource that does not exist
1, via HTTP requests for JSP files preceded by (1) +/
2, via the file parameter.
2, via an HTTP request.
4, via a link with a hex-encoded null character (%00) followed by the target domain.
2, via the caselist parameter.
2, by setting the authprog environment variable to reference a malicious program
1, by setting the netencralg environment variable
2, via the include_file parameter.
2, via the message parameter.
2, via an HTTP request for (1) poppassd.php3
0, by exhausting the number of working threads via a large number of HTTP requests for (1) an MS-DOS device name and (2) an MS-DOS device name with a large number of characters appended to the device name.
4," via a long FTP """"220"""" message reply."
4, via a long HTTP request.
0, by specifying the filename in the toc parameter with a trailing null character (%00).
1, via crafted recursive multipart MIME attachments.
2, via the (1) Username or (2) Password in the login form.
2, by sending the SIGSERV (invalid memory reference) signal.
4, via (1) a long ABLANG environment variable in phlocale or (2) a long -u option to pkg-installer.
2, via the password.
4, via a parameter to the phpinfo action.
2, via an invalid action parameter
5, by stealing and replaying the md5_password cookie.
4, via shell metacharacters in the filename of an encapsulated Postscript (EPS) file.
4, via a long query value passed to the (1) finger program
2, by setting the valid_level cookie to admin.
2, via the id parameter.
2, via the valid_username_online cookie.
1, via gamma tables in large 16-bit PNG images.
4, via a PNG image with large width and height values and an 8-bit or 16-bit alpha channel.
0, by changing the filenames to permitted filenames.
2, via by setting the photo_login cookie to pseudo.
4, via a Java program that calls the doPrivileged method with a null argument.
2, via the (1) ctr parameter in Default.asp and (2) the query string to formslogin.asp.
2, via the search web page.
4, via a contact message with a large contacts number.
4, via a .. (dot dot) in an HTTP GET request.
4, via a long POP3 APOP USER command.
3, via malformed packets.
4, via a large number of RCPT TO: messages during an SMTP session.
2, via an HTTP POST of a file with a long TargetURL parameter
4," via the """"What is this?"""" help feature"
4, via a .. (dot dot) in the (1) l and (2) topic parameters.
4, via a .. (dot dot) in an HTTP request.
4," via (1) """"<<script"""" in unspecified input fields or (2) a javascript: URL in the src attribute of an IMG tag."
4, via a long INTERBASE environment variable when calling (1) gds_drop
4, via a long command line argument.
1, via requests for MS-DOS device names such as lpt9.xtp.
4, via a GET request with a relative path that includes the root's parent
5, by creating a file with a similar name in the web root
1, via crafted DNS packets.
4, via large packets.
4, via a long HOME environment variable.  NOTE: since DDD is not installed setuid or setgid
2, via an HTML email message that uses an IFRAME to reference malicious content.
2, via an invalid block of deflated data.
2, via the command parameter
4, via a corrupt explorer.exe.manifest file.
2, via the TemplateDir variable
2, via the search parameter.
4, via (1) a blank referer
3, by connecting to port 80 on the 10.0.0.0/8 device.
0, by causing the kernel to return a large packet.
4, via shell metacharacters in the template parameter.
4, via a UDP port scan
0, by flooding UDP port 500 (ISAKMP).
4, via a long URL.
2, via long filename arguments to (1) Watcom or (2) int10.
4, via a long SMTP (1) HELO or (2) RCPT TO command
3, by specifying a URL to an init.php file in the GALLERY_BASEDIR parameter.
4, via .. (dot dot) sequences in the file parameter.
2, via an arbitrary form field name containing the script
1, by modifying the GALLERY_BASEDIR parameter to reference a URL on a remote web server that contains the code.
4, via a .. (dot dot) in an unknown argument.
1, by modifying the dirroot parameter to reference a URL on a remote web server that contains the code in a lang.php file.
5, via a URL with a hex encoded space (%20) and a '.' (%2e) at the end of the filename.
4, via a long HTTP request.
2, via direct HTTP requests to the /admin/ directory
4, via .. (dot dot) sequences.
2, via an invite to a channel with format string specifiers in the name.
4, via a long PING response.
2, via an invalid ticket ID
4, via a SYN packet flood.
1," by setting the """"already_voted"""" cookie by various methods"
5, via .. (dot dot) sequences terminated by a null character in the $designNo variable
2, via various programs including function_describe_item1.inc.php.
4, via a URL
4, via a long DCC Chat message.
2, via the user_level parameter in the User Profile page.
0, via the sid parameter
4, via a TCP port scan using a tool such as nmap.
5, via requests to the web site's IP address instead of the domain name.
4, via a long MSN packet.
4," via a """"Showip"""" parameter in the chat applet."
2, via an IGMP membership report to a target's Ethernet address instead of the Multicast group address
4, via a call to getrlimit(2) with invalid arguments
4, via a link.
4," via (1) a Host: header when DNS wildcards are supported or (2) the query string in a """"dir"""" request to indexed folders."
2, via the email parameter.
4, via a long server response.
4, via a program that uses /dev/poll
2," via the """"subpath"""" variablein (1) entete.php"
4, via shell metacharacters in the printer name.
4, by connecting to the server from an IP address that resolves to a long hostname.
4, via a long username with multiple /localhost entries.
4, via a symlink attack on the USERNAME_autoresponse.conf temporary file.
4," via an e-mail header with a long """"To"""" header."
4," via an e-mail message with a large number of """"To"""" addresses"
4, via a URL in the (1) l parameter to customize.php or the (2) pg parameter to index.php.
4, via a long user (userid) field.
4, via a modified PATH that references a malicious cp binary.  NOTE: this issue might overlap CVE-2006-6639.
1, via crafted Internet Key Exchange (IKE) response packets
1, via crafted Internet Key Exchange (IKE) response packets
1, via crafted Internet Key Exchange (IKE) response packets
4, via a long filename argument.
4, via a crafted SSLv2 challenge value.
1, via attachments with a filename with (1) extra leading spaces
4, via a .. in an HTTP request.
4, via a private message with a javascript: URL in the IMG tag
5, via (1) a javascript: URL in a photo URL or (2) an X-Forwarded-For: header.
4, via a long CD (CWD) command.
4," via """"@"""" (at) characters in a CD (CWD) command"
0, by splitting the URL into fragmented IP requests.
4, via a GET request with a DOS device name such as com1 or aux.
4," via a """"..\"""" (dot dot backslash) in a GET request."
4, via a malformed packet.
4," via a """".."""" (dot dot) in an HTTP GET request."
5, via a long HTTP OPTIONS request.
4, via a .plan with a symlink to /dev/urandom or other device
2, via the HTTP referer header (HTTP_REFERER) to a non-existent page
4, via phpinfo.php
2, via an applet that calls the WDefaultFontCharset constructor with a long string and invokes the canConvert method.
2, via the neurl parameter to (1) backend.php
4, via (1) a long parameter to the xp_freedll extended stored procedure or (2) a long database name argument to the DBCC CHECKVERIFY function.
4, via a long argument.
4, via a base64-encoded user parameter.
4, via (1) a long header name
0, via the search_username parameter in searchuser mode.
3, via Unicode characters.
4, via a long argument.
2, via an HTTP POST request with a (1) large integer or (2) non-numeric value in the Content-Length header
2, via unknown attack vectors.
2," via the """"show all quips"""" page."
4, by spoofing a blank DNS hostname.
2, via unknown attack vectors.
2, via unknown attack vectors.  NOTE: this might be the same issue as CVE-2002-2185
2, via unknown attack vectors.
4, via a symlink attack on the bogopass temporary file.
4, via a long URL.
4, via a .. (dot dot) in the URL.
2, via the URL.
4, via a symlink attack on the .plan file.
0," by pressing the Windows and """"F"""" key together for 30 seconds"
4, via a direct request to add.php
2, via the (1) $rech
2, via the (1) $App_Theme
2, via an applet that uses a jump call
2, via an applet that loads user-supplied Java classes.
0, via an empty HTTP request
2, via the phpbb_root_path parameter.
2, via an HTTP request to index.php with a parameter that does not exist
4, via a long request
4, via a .. (dot dot) in the HTTP request to port 9095.
3, by pressing CTRL-ALT-DELETE and (1) hitting the cancel button or (2) killing the screensaver from the task manager.
4, via (1) a 1024-byte TCP stream message
2, via the num parameter.
2, via the root_path parameter.
2, via the root_path parameter.
2, via the root_path parameter.
4, via a long CEL command.
0, by modifying the price in a hidden form field.
2, via the idsession parameter.
2, via the (1) agentname or (2) agentpassword parameter.
0, by sending several large messages.
0, by connecting from source port 20.
4, via a webpage containing a recursive META refresh tag where the content tag is blank and the URL tag references itself.
3,upload arbitrary file contents when users press a key corresponding to
3,upload arbitrary file contents when users press a key corresponding to
4," via a javascript: URL with a leading """"//"""" and ending in a newline"
2, via the URI
2, via the (1) LOGIN
4, via a direct request to vider.php3.
2, via the catid parameter.
4, via (1) HTTP_USER_AGENT or (2) HTTP_REFERER
2, via an IMG tag with large width and height attributes.
2, via an IMG tag with large width and height attributes.
4, via a javascript: URL in (1) image
4, via (1) the t parameter or (2) the body of an email response.
4, via a blocked URL.
4, via email messages.
0, by defining an alias that is the target's email address.
2, via the command parameter.
2, via the class parameter.
0," via attachments with names containing a trailing """"."""" (dot)."
0, via a full pathname in GET and PUT requests.
4, via a large number of TCP connection requests.
4, via a direct request to hwadmin.cgi.
5, via a long USER string
2, via the title tag of an FTP URL.
2, via the title tag of an ftp URL.
2, via the noticemsg parameter.
4, via a help ticket.
2, via the shell metacharacters in the search field
4, via a long hostname.
4, via a long username to (1) the GetString function in proxy.c for the SOCKS5 module or (2) the HandleS4Connection function in proxy.c for the SOCKS4 module.
5," via a leading """"/./"""" in a URL."
4, via a packet containing the device's hardware address as the source MAC address in the DLC header.
4, via a long username
4, via a (1) .. (dot dot) or (2) . (dot) in a URL.  NOTE: it is not clear whether this issue reveals any more information regarding directory structure than is already available to any CommuniGate Pro user
4, via a colon (:) in the query string
4, via a port scan
0, by sniffing undocumented usernames and passwords from network traffic.
4, via a symlink attack on /var/tmp/cvsupd.out.
3, via file names.
5, via a URL containing a long voice phone number.
4, via a .. (dot dot) in the LS command.
4, via a long HELO command.
2, via the roomid parameter.
3, via HTTP 1.1 chunked transfer encoding.
3, via HTTP 1.1 gzip content encoding.
4, via spoofed (1) source IP address of 127.0.0.1 or (2) network address of 127.0.0.0.
1, by modifying the insertinto parameter.
4, via a .. (dot dot) in the file parameter.
4, via a long HTTP POST request.
4," via """"..."""""
4, via a long request to the POP3 port (TCP port 110).
4, via a direct request to the 1.TEXT file in a directory whose name is a hex-encoded user ID.
4, via a long rcmd command.
4, via a URL request that uses the equivalent 8.3 file name.
4, via a stream of zero (null) bytes sent via UDP to a running service.
4, via a .. (dot dot) in a URL GET request.
2, via the URL
5, via a string ending with a NULL byte character.
4, via shell metacharacters in the page parameter.
2, via an HTTP request for a MS-DOS device name such as COM2.
0, via Javascript in the style attribute of an HTML tag.
4, via a direct request.
4," via """"an extra slash in a URL"
2, via an HTTP POST request that contains a Content-Length header but no body data.
2, via an HTTP POST request that contains a negative integer in the Content-Length header.
3, by performing a socket disconnect to terminate a request before it has been fully processed by the server.
3," via unknown """"malicious code"
4, via a crafted username.
4, via a crafted ABOR command.
2, via the REASONTXT parameter.
4, via a long parameter.
3, via an hcp:// URL with the malicious script in the topic parameter.
4, via a malicious web page or HTML e-mail that uses a large array index value that enables a heap-based buffer overflow attack.
0, via a certain type of incoming DNS request that is not properly handled.
4, via a symlink attack on temporary files.
4, via a malformed Directory request
2," via an HTTP request that ends in certain illegal characters such as """">"""""
4, via a certain character escape sequence when it is echoed to a user's terminal
4, via a certain character escape sequence when it is echoed to a user's terminal
0, via a certain character escape sequence that inserts the commands into the menu.
4, via a certain character escape sequence that inserts the commands into the menu.
1, via certain database functions such as check_prefs() in db.pgsql
2, via the KCS_OPEN_PROFILE procedure.
2, via the extended stored procedures (1) xp_pty_checkusers
4, via a large number of requests to the application
1, via fragmented RPC packets.
2, via the (1) email or (2) language parameters.
2, via the user name.
4, via a pipe (|) character in a filename that is retrieved by the client.
4, via a request for a JSP page containing an MS-DOS device name
0, by using the administrator password.
3, via shell metacharacters.
4, via a NULL file parameter.
2, via the filename parameter
4, via a request to port 7070 with the script in an argument to the rtsp DESCRIBE method
5, via a long filename.
4, via a long (1) -c or (2) -r command line argument.
5, via a long attachment filename that is not properly handled by the hypermail executable
5, via a certain protocol request that causes a null dereference.
0, via format string specifiers in Kerberos principal names.
4, via a long LANG environment variable.
4, via a long path name.
4, via a certain character escape sequence and then insert it back to the command line in the user's terminal
4, via a certain character escape sequence and then insert it back to the command line in the user's terminal
4, via a certain character escape sequence and then insert it back to the command line in the user's terminal
5, via a certain character escape sequence and then insert it back to the command line in the user's terminal
4, via a certain character escape sequence and then insert it back to the command line in the user's terminal
4, via a certain character escape sequence and then insert it back to the command line in the user's terminal
4, via a certain character escape sequence and then insert it back to the command line in the user's terminal
5, via a certain character escape sequence that causes the terminal to enter a tight loop.
4, via mysql_change_user.
2, via the functions (1) debuglog
4," via a negative offset value following a """"fmt"""" wave chunk."
5, via a certain character escape sequence that causes the terminal to enter a tight loop.
1, via SOCKS packets containing format string specifiers.
4, via a race condition involving chown.
2, via several possible attack vectors
3, by setting a certain environment variable that is used to write debugging information.
4, via a long LANG environment variable to setuid programs such as (1) swinstall and (2) swmodify.
4, via a long HOME environment variable.
0, via an invalid RADIUS packet with a header length field of 0
4, via a large number of OSPF neighbor announcements.
1, via requests that are URL-encoded with escapes
4, via a certain malformed ISAKMP packet to UDP port 500
4, via a spoofed
0, by causing certain error messages to be passed to a debugger.
4, via a certain request to the HTTP receiver.
4, via a request to (1) rawdocdata.asp or (2) RawCustomSearchField.asp containing an embedded SQL statement.
4, via a symlink attack on a default temporary directory with a predictable name.
2, via an attachment that does not specify a MIME-Version header field
4, via a long HTTP status line.
4, via a malformed man file with improper quotes
4, via a long GET /OPTIONS value.
4, via a malicious uuencoded (UUE) header
4, via a mail message that is uuencoded multiple times.
2, via large chunks of linefeed characters
4, via a symbolic link attack on the /tmp/before file.
1, via arbitrary community strings.
4, via a series of steps that (1) obtain the database administrator username and encrypted password in a configuration file from the ePO server using a certain request
1," by using the """"SELECT * INFO OUTFILE"""" operator to overwrite a configuration file and cause mysql to run as root upon restart"
4, via (1) the file
5, via .. (dot dot) sequences in the v parameter.
1, by modifying hidden form fields in the HTML page.
0, via format string specifiers in a command line argument for the file to display.
2, via negative arguments to functions such as (1) socket_recv
4, via a long QuickTime URL.
4, via a request to hpnst.exe that calls itself
4, via a certain call to the PIOCSWATCH ioctl.
5, via (1) the s_ViewName option in the PresetFields parameter for iNotes
2, via multiple attack vectors
2, via an incomplete POST request
4," via a """"Fictionary Value Field POST request"""" as demonstrated using the s_Validation form with a long"
4," via a symlink attack on predictable temporary file names (""""word$$.html"""")."
4, via a partial printing request to the IPP port (631)
4, via a long ISC_LOCK_ENV environment variable (INTERBASE_LOCK).
4, via a symlink attack on temporary files.
4, via a long FTP banner.
4, via (1) PostScript (PS) or (2) PDF files
4, via shell metacharacters in the ticker title of a URI.
5, via (1) link or (2) title elements that contain multiple lines.
2, via the clickTAG field.
2, via large sequence numbers in packets
4, via a long user parameter to port 2002.
4, via a large number of rejected connections.
4, via a length field of 0 or 1
4, via a symlink attack on temporary files.
2, via the (1) username and (2) password fields
4, via a certain CGI script.
5, via a POST request with a large body.
1, by sniffing packets from a valid session and replaying them against the remote administration server.
4, via a handshake packet.
4, via a symlink attack.
4," via a """"CREATE DATABASE LINK"""" query containing a connect string with a long USING parameter."
4, via a web page with a Server Side Include (SSI) directive with a long filename
4, via a long WebDAV request with a (1) PROPFIND or (2) SEARCH method
5, via a skins file with a URL containing hex-encoded backslash characters (%5C) that causes an executable to be placed in an arbitrary location.
2, via format strings in the response to a UIDL command.
2, via the (1) Subject or (2) Date headers.
0, by spoofing the address of an ADS server and sending HTML with a -1 width in a table tag.
4, via malformed GIF89a headers that do not contain a GCT (Global Color Table) or an LCT (Local Color Table) after an Image Descriptor.
2, via an HTTP request to the admin/admin.shtml containing a leading // (double slash).
5, via shell metacharacters in the file parameter for the (1) normal_html.cgi or (2) member_html.cgi scripts.
2, via long strings
4, via a malformed address.
4, via a TCP client request that does not respond to the server
1, via certain RPC requests to mountd that do not contain newlines.
5, via a malformed SSH initialization packet.
4, via a flood of malformed ICMP packets.
3, via long (1) MAIL FROM or (2) RCPT TO commands.
4, via (1) a long EHLO argument to slmail.exe
4, via (1) a long Language parameter to showlogin.dll
1, via invalid requests to DLLs such as WebMailReq.dll
4, via a long HOME environment variable.
4, via a long USER argument.
2," by setting the miniPortailAdmin cookie to an """"adminok"""" value."
4, via message bodies.
4, via a long ULISTPROC_UMASK value.
1, by modifying the sourcedir parameter to reference a URL on a remote web server that contains the code.
4, via a GET request with a large number of / characters.
4, via .. (dot dot) sequences in the file parameter.
2, via the file parameter.
2, via numeric fields
3, via long (1) MAIL FROM or (2) RCPT TO commands.
2, via invalid characters between two . (dot) characters
4," via a message with a """"<<"""" before a tag name in the (1) subject"
2, via file with a long filename
0, via format string specifiers in the dev parameter.
4, via a large number of connections
4, via a flood of ICMP echo request (ping) packets.
2, via the name parameter in a modload operation.
2," via the """"Preview Message"""" capability."
0, via certain large literal size values that cause either integer signedness errors or integer overflow errors.
1, via certain large (1) literal and possibly (2) mailbox size values that cause either integer signedness errors or integer overflow errors.
2, via certain large literal size values that cause either integer signedness errors or integer overflow errors.
3, via certain large literal size values that cause either integer signedness errors or integer overflow errors.
2, via certain large literal size values that cause either integer signedness errors or integer overflow errors.
2, via the sg parameter.
4, via a desktop.ini file with a long .ShellClassInfo parameter.
1," by appending the """"|"""" field separator and an """"admin"""" value into the email address field."
4, via a .. (dot dot) in an HTTP request.
4, via a ... (triple dot) in an HTTP request.
4," via a URL that ends in a """"</"""" sequence."
4, via a long HTTP request
2, via an HTTP request containing URL-encoded characters.
2, via the year parameter.
4, via a long SELECT command.
1," by setting the ttcms_user_admin parameter to """"1"""" and modifying the admin_root parameter to point to a URL that contains a Trojan horse header.inc.php script."
1, via long hostnames
0, via responses that are not properly fed to the my_strcat function by (1) ctcp_buffer
2, via long replies that are not properly handled by the (1) userhost_cmd_returned function
4," via a LOCATE_PATH with a large number of """":"""" (colon) characters"
4, via a remote password array with an invalid length
4, via a long -player command line argument.
2, via the Ignorelist-Textfield argument in the Preferences page.
1, via long arguments to (1) ask
2, via certain channel mode changes that are not properly handled in names.c.
2," via an email message with a carriage return (CR) character in a spoofed """"Attachment Converted:"""" string"
1, by modifying the LSF_ENVDIR environment variable to reference an alternate lsf.conf file
5, via .. (dot dot) sequences in HTTP GET or POST requests.
2, via long HTTP requests.
2, via the Search field.
5, via a MIDI (.mid) file with (1) large length for a Text or Copyright string
4, via a document with a long ID parameter.
4, via HTML script.
4, via a long response to a broadcast request to UDP port 1434.
2, via the (1) AIM
2, via the (1) Mount and (2) PPP dissectors.
2, via long command lines.
2, via certain packets that cause a large number of hash table collisions.
4, via a large query.
4, via a symlink attack on temporary files.
4, via a malformed IP packet with a 0xFF TCP option.
4, via a long FTP banner.
5, by causing a negative argument to be provided to the insstr function as used in a NASL script.
4, via (1) a long proto argument to the scanner_add_port function
2," via the """"member"""" parameter."
2, via an Attachment Converted argument with a large number of . (dot) characters.
4, via a long ETERMPATH environment variable.
4, via a CD command with a DoS drive letter argument (e.g. E:).
4, via a Server[path] parameter that points to malicious code on an attacker-controlled web site.
2, via an HTTP request containing the code in the User-Agent header
4, via a request for the /vgn/style template.
4, via (1) an HTTP query or cookie which is processed in the NEEDS command
4, via a long connection string.
4, via a long HTTP (1) POST or (2) HEAD request.
4, via a long URL to port 6588.
4," via a request that uses the uppercase """".JSP"""" extension instead of the lowercase .jsp extension."
2," via an HTTP request that generates an """"Invalid JSP file"""" error"
1, by receiving packets from the server and sending them back to the server.
4, via (1) the year parameter in a showmonth action
4," via """".|."""" (modified dot-dot) sequences."
1, via certain packets to PPTP port 1723 on the internal interface.
5, via an MS-DOS device name (e.g. AUX) in a request to HTTP port 1220
4, via a request to view_broadcast.cgi that does not contain the required parameters.
2, via the filename parameter.
1, by appending encoded space (%20) or . (%2e) characters to an HTTP request for the script
4, via a ... (triple dot) in an HTTP request.
2, via an archive file that contains a file with a long filename.
4, via a certain NDR string.
0, via invalid IPv4 or IPv6 prefix lengths
0, via an invalid ASN.1 value.
4, via shell metacharacters in an embedded hyperlink.
4, via a long ul parameter.
4, via a long tmplt parameter.
2, via the PHPSESSID parameter.
4, via a PNG image of certain color depths.
2, via an HTTP request with a long Request-URI.
2, via the (1) -c (host file) or (2) -l (log file) command line options.
4, via a large value in an NAS-Port attribute
0, via certain long command line arguments.
4," via (1) long environment variables or (2) long """"file redirections."""""
3," via certain """"nprobes"""" and """"max_ttl"""" arguments that cause an integer overflow that is used when allocating memory"
4, via a long HOME environment variable.
4, via a request containing a folder that does not exist
2," via an email address to the local host containing the target IP address and service name followed by a """"!"""" string"
4, via cut-and-paste operation
2, via an HTTP request to WebAdmin.dll with a long USER argument.
4, via port scanning.
2, via an HTTP request containing .. sequences
2," via an HTTP request containing URL-encoded .. sequences (""""%5c%2e%2e"""")"
4, via a PORT command without an argument.
2, via the (1) Name
4," via """"symlink manipulation."""""
0, by uploading the code using file_new.php
4, via (1) the member parameter to member.php or (2) the action parameter to buddy.php.
2, via the topic_id parameter.
2, via source code containing a long
2, via the topic_id parameter.
4, via (1) a long showuser parameter in the do_subscribe module
4, via (1) the add_name parameter in the add_acl module
3, by uploading a PHP file without a MIME image type
2, via the Search parameter.
4, by stealing and replaying the encrypted password after obtaining a valid session ID.
4, via a direct request to password.asp with a modified member id.
4, via a news item.
2, by calling the xp_fileexist extended stored procedure with a named pipe as an argument instead of a normal file.
1, by bypassing authentication or stealing passwords via the USER name.
0, by opening various entries in /proc/self before executing a setuid program
4, via a .. (dot dot) sequence followed by an MS-DOS device name (e.g. AUX) in a request to HTTP port 1220
4, via a long third argument.
4," via """"..\.."""" (dot dot) sequences in a file transfer request."
1, via malformed packets
2," via an LDAP version 3 search request with a large number of (1) """"AND"
5, via a .pdf file with a long mailto link.
2, via the ProductCode parameter in (1) 10expand.asp
2," via the """"sessions"""" command."
4, via a malformed URL.
4," via """"%2e%2e"""" (encoded dot dot) directory traversal sequences in a URL"
4," via """"%2e%2e"""" (encoded dot dot) directory traversal sequences in a URL"
4, via a symlink attack on JOB files.
4, via a large number of characters in the password field
4," via a TypingUser message in which the """"TypingUser"""" string has been modified."
1, via script in a URL that is logged but not properly quoted when displayed via the (1) Error Log or (2) Latest Visitors screens.
0, via the idadmin parameter to login.asp or (2) gain other privileges via the Email parameter to Custva.asp.
2, via the message parameter.
5, via a symlink attack on the qt_plugins_3.0rc temporary file in the .qt directory.
4, via a URL containing the script in the domain name portion
4, via a malformed RPC request with a long filename parameter
1, via crafted Content-Type and Content-Disposition headers
4, via a long -display command line option.
5, via .. (dot dot) sequences in the (1) template or (2) lng parameters.
4," via (1) a malformed envelope address to a local host that would generate a bounce and contains the """".!"""" string in the MAIL FROM or Errors-To headers"
4, via a regular expression with more than 9 captures.
2, via an SSL client certificate with certain ASN.1 tag values.
2, via an SSL client certificate with a certain invalid ASN.1 encoding.
4, via a short authorization key name.
1, via forged packets whose source addresses are the same as the target.
2, via an attachment with a long filename.
4," via a """"%x"""" filename"
4," via a large number of """"user"""" requests to the control port 5003"
4, via a long IP address response to a PASV request.
2, via the id parameter.
4, via (1) a long FTP banner
4, via a long input string.
5, via an S/MIME email message containing certain unexpected ASN.1 constructs
5, via an X.400 message containing certain unexpected ASN.1 constructs
5, by sending a particular sequence of IPv4 packets to an interface on the device
2, via certain packets that cause XDR decoding errors
2, via an MP3 file with a zero bitrate
4, via a long -uv.install command line argument.
4, via a (1) FS_QueryXExtents8 or (2) FS_QueryXBitmaps8 packet
2, via the (1) user or (2) pass parameters.
4, via a direct HTTP request to settings.inc.php.
2," via the """"displayed name"""" attribute of the """"ubber"""" cookie."
5, via a cookie with the username set to the name of the administrator
4, via a cookie with the username set to the name of the administrator
2, via the post icon (image_subject) field.
5," via """"%2e%2e"""" (encoded dot dot) directory traversal sequences in a URL"
4," via """"%2e%2e"""" (encoded dot dot) directory traversal sequences in a URL"
4," via """"%2e%2e"""" (encoded dot dot) directory traversal sequences in a URL"
4, via a long cookie to Witango_UserReference.
0, via (1) multiple default German and Russian HTML templates or (2) ALT and NAME attributes in AREA tags as used by the GraphViz graph generation feature for local dependency graphs.
2, via the (1) USER or (2) DISPLAY environment variables.
0, via a certain HTTP request.
4, via a long (1) -display command line argument or (2) XTOKKAETAMADIR environment variable.
2, via long command line arguments to crafty.bin.
2, via the high score file.
2, via the searchstring parameter.
4, via a URL that is fed into the form's action parameter.
4, via a negative size value within XDR data of an NFSv3 procedure call.
1, via modified paths in the INIFILE argument.
2, via pathname arguments that contain MS-DOS device names such as CON and AUX.
2, via the INIFILE argument.
2, via the person parameter.
4, via a malformed client request in the connection handshake
2, via the (1) headername or (2) footername arguments.
2, via an HTTP request with an invalid value.
0, via a certain HTTP request to IScript.
2, via long command line arguments
4, via a long URL.
2, via the OpenProcess() function
4, via a symlink attack on \Device\PhysicalMemory.
2, via an extremely long (2GB) HTTP GET request.
4, via a long HOME environment variable.
4, via a long HTTP GET request.
4, via a long -nickname command line argument
4, via qmail.
0, by specifying the target file as a command line argument
4, via a symlink attack on a temporary file that is used as a lockfile.
3, via long (1) LB_DIR messages to ListBox or (2) CB_DIR messages to ComboBox controls in a privileged application.
2, via an HTML document with a long argument to the RunQuery2 method.
4, via a crafted LDAP message.
1, via modified data offset and data size parameters in a Corel WordPerfect file.
2, via the setuid helper applications (1) RunTCPDump
2, via the username that isp rovided during authentication
4," via """"..%2f"""" (partially encoded dot dot) sequences."
4, via a large number of TCP SYN packets to the circuit IP address
0, by causing an incorrect amount of memory to be freed and corrupting the heap
3, via buffer overflow attacks
4, via a long query in an HCP URL.
4, via a malformed DCERPC DCOM object activation request packet with modified length fields
4, via a malformed message/external-body MIME type.
2, via an email that causes an out-of-bounds array access using a negative number.
5, via a SMIL presentation with a URL that references a scripting protocol
0, by stealing the ID from a referrer URL.
4, via a TFTP request with a long filename.
4, via heap-based and stack-based buffer overflow attacks.
4, via a certain POST request to com.cisco.nm.cmf.servlet.CsAuthServlet
1," by changing the """"guest"""" user to the Admin user on the Modify or delete users pages."
4, via (1) the day parameter in the calendar module
2, via an invalid year
4, via a long year parameter.
1, by setting the REMOTE_ADDR environment variable to cause menu.mana to run as if it were called from ncsa_httpd
2, via an invalid (1) HELO or (2) EHLO argument with a large number of spaces followed by a NULL character and a newline
2, via certain malformed Usenet news articles that cause fetchnews to hang while waiting for input.
2, via incorrect parameters (1) ~service
4, via ..\ (dot-dot backslash) sequences in the ~theme parameter and a ~template parameter with a filename followed by space characters
2, via the ~service parameter.
1, by setting the adminpy parameter.
2, via the email parameter.
0, via a full pathname to the target file in the nphp_config[LangFile] parameter.
2, via an HTTP request with a modified nphp_users array
0, by creating long directory names and listing them with a LIST command.
4, via .. (dot dot) sequences in the selectedpage parameter.
3, via certain SecuRemote requests to TCP ports 256 or 264
4, via a long command line argument.
4, via a long command line argument.
4, via a flood of connections to UDP port 701.
4, via a long URL (PATH_INFO value).
0, via the method parameter
4, via a malformed request
4, via a null character in the beginning of a tag name.
2, via the message field.
3, via long (1) APPE (append) or (2) STAT (status) arguments.
4, via a CallerID string.
3, via login
2, via certain inputs to the IPP port (TCP 631).
0, by modifying the string used as input to the script.thaw JavaScript function
2, via unknown attack vectors.
4, via a URL to the docs/ directory that contains the script.
4, via a URL in the location parameter
4, via (1) a long filename as a result of a LIST command
4," via RPC calls that cause long entries to be written to a debug log file (""""NetSetup.LOG"""")"
0, by causing two threads to process the same RPC request
1," by setting the window's """"href"""" to the malicious Javascript"
2, via an XML object.
3, via certain H.323 traffic
4, via a crafted chunked encoded request.
1, by calling the window.moveBy method
4, via a long packet to UDP port 523.
4, via a long HOME environment variable.
4, via .. (dot dot) sequences in a Hostname header.
1, by creating directories that result in a long pathname.
4, via (1) a modified DTHELPUSERSEARCHPATH environment variable and the Help feature
2, via an ASX header with a long hostname.
3," by creating a popup window and inserting ActiveX object code with a """"data"""" tag pointing to the malicious code"
4," via .. (dot dot) sequences in a """"shell:"""" link."
5, via a symlink attack on the .java_wrapper temporary file.
5, via a symlink attack on the susewm.$$ temporary file.
1, via certain packets with modified length values
4," via """"overlarge TCP packets."""""
3, via large recursion) via malformed ASN.1 sequences.
4, via format strings in an error message.
4, via a large -w value
4, via a large -w value
4, via a news post with a long author email address.
1, via spoofed messages as other users to the kernel netlink interface.
2, by sending spoofed messages as other users to the kernel netlink interface.
2, by sending spoofed messages as other users to the kernel netlink interface.
4, via a long request.
1, via several requests that do not follow the HTTP protocol
2, via an HREF with a large number of escaped characters in the server name.
4, via a symlink attack on temporary files.
4, via (1) the cat parameter in faq.php
2, via the route.check temporary file.
4, via a symlink attack on core files that are created with predictable names in the /cores directory.
4, via a symlink attack on a temporary file
4, via a long command line argument.
4," via a loaded class name that contains """"/"""" (slash) instead of """"."""" (dot) characters"
5, by sending (1) BCM_GETTEXTMARGIN or (2) BCM_SETTEXTMARGIN button control messages to privileged applications.
0, via requests that contain '<' or '>' characters
4, via a malformed UDP response to a broadcast request.
4, via a certain sequence of TCP/IP packets.
3, by creating a task at an elevated privilege level through the eventtriggers.exe command-line tool or the Task Scheduler service
4, via an expand-down data segment descriptor descriptor that points to protected memory.
4, via a malformed GTP MSISDN string.
2, via the SOCKS dissector.
3, by replaying a malformed discovery packet to UDP port 39999.
4, via a long (1) command line or (2) environment variable.
4, via a long environment variable.
4," via a malicious """"NETAPI32.DLL"""" in the current working directory"
4, via a connect packet with a 256 byte segment to the niserver (aka serv.exe) process on TCP port 7269
5, via .. (dot dot) sequences in a URL.
4, via a direct request to waadmin.wa.
5, via a long Name parameter to waadmin.wa.
4, via a URL with a long requestURI.
5, via a long HOME environment variable.
4, via a program with an invalid header that is not properly handled by (1) ibcs2_exec.c in the iBCS2 emulation (compat_ibcs2) or (2) exec_elf.c
2, via unspecified vectors that trigger copy_from_user function calls with improper length arguments.
2, via long directory names that are processed by the ls or rels commands.
5, via a short RADIUS string attribute with a tag
4, via a long User-Password attribute.
1, via an mp3 file that passes certain strings to the printf function
1, via ARP packets
4, via a link with a hex-encoded null character (%00) followed by the target domain.
1, via malformed module requests.
4," via (1) the """"do"""" parameter"
5, via a VCF file.
2, via certain ISAKMP packets
4," via shell metacharacters in the """"To:"""" field."
4, via malformed e-mail commands.
4, via a queue registration request.
2, via the help interface.
4, via a passive DCC request with an invalid ID number
2, via HTTP auth requests for (1) TACACS+ or (2) RADIUS authentication.
2, via an SNMPv3 message when snmp-server is set.
1, via malformed ASN.1 sequences.
4, via a long command line parameter.
2, via unknown attack vectors.
2, by holding down the CTRL and C keys when the system is booting
4, via a malformed SMB packet that triggers a segmentation fault during processing of Selected packets.
1, via MIME messages that use multiple MIME fields with the same name
4, via MIME messages that use whitespace in an unusual fashion
1, via MIME messages that use malformed quoting in MIME headers
1, via crafted strings on the commandline.
4," via a """"%01"""" character before an @ sign in the user@domain portion of the URL"
4, via a javascript protocol URL in a sub-frame
0, by using method caching (SaveRef) to access the window.moveBy method
2, via an HTTP response with an invalid ContentType and a .htm file
4, via a packet with invalid data to UDP port 1701
4, via a long pre-authentication request to TCP port 6129.
0," via optional fields such as (1) """"Interests-Hobbies"""""
0, by using the RFC API instead of the SAPGUI to conduct a brute force password guessing attack
4, via long (1) ~command
4," via a high """"trace level."""""
4, via a ~command parameter with an AgateInstallCheck value
0, via a long HTTP Host header to (1) Message Server
5," via a modified directory traversal attack using a URL containing """".."""" (dot dot) sequences and a filename that ends in """"::"""" which is treated as a .chm file even if it does not have a .chm extension.  NOTE: this bug may overlap CVE-2004-0475."
2, via the product name.
4, via a malformed GIF image.
2, via long command line arguments to (1) db2start
2, via certain command line arguments to (1) db2start
0, by modifying the shared libraries that are used in setuid root programs.
4, via a long (1) -KCONV command line option or (2) XSHISENLIB environment variable.
4, via a malformed Referer header that is missing a hostname
0, via a long hostname in an LDAP lookup.
4, via a crafted IPv6 packet.
0, via long syslog UDP packets.
2, by closing stderr before executing wall
2, via the -r argument with .. (dot dot) sequences in the job name
4, via a symlink attack on the .asppp.fifo temporary file.
4, via a long HTTP request.
2, via an HTTP POST request with a negative Content-Length field.
1, by modifying the pm_path parameter to reference a URL on a remote web server that contains the code.
2, via the method parameter.
0, via invalid parameter names
4, via a long window title.
0, via malformed ID3 tags in MP3 files.
3, via unknown vectors.
0, via HTML with certain input tags that are not properly rendered.
5, via an e-mail message with a malformed time stamp in the FILETIME attribute.
1, via crafted INVITE messages
1, via crafted INVITE messages
1, via crafted INVITE messages
1, via crafted INVITE messages
1, via crafted INVITE messages
1, via crafted INVITE messages
4, via a spoofed server response containing a long string followed by a \n (newline) character.
4, via malformed BER/DER packets.
2, via the HTTP TRACE method
4," via a file send request (sendfile) with a large number of """"%"""" (percent) characters after the Yahoo ID."
4, via (1) HTML in a posted message or (2) Javascript in an onmouseover attribute in an e-mail address or URL.
4, via a GET request that contains an asterisk (*) wildcard character.
3, by triggering a segmentation fault and using a symlink attack on the resulting musicqueue.crash file.
4, via a long language variable in the configuration file.
4, via a long string to TCP port 515.
4, via a GET request with a long file name.
2, via the listing parameter.
2, via the dir parameter.
4, via a URL to a blocked site
2, via unknown attack vectors.
2, via the URL
2," via an HTTP request for %3f.jsp (encoded """"?"""")."
4, via a direct request to files.inc.php.
5, via a mail message with a malformed zip attachment
4, via a symlink attack on an unknown file.
4, via a symlink attack on (1) unpack.log
2, via the NFuse_Message parameter.
3, via long (1) dir
2, via an invalid URI in an HTTP GET request to TCP port 8080.
2, via an HTTP request to aindex.htm that contains double leading slashes (//).
1, by modifying the thread_id
4, via a UDP packet that contains a single-byte name string
2, via the URI
2, via an HTTP request with a long User-Agent header.
4, via a .. (dot dot) in the file parameter.
2, via an HTTP request that contains a . (dot) in the file parameter
0, via format string specifiers in command line arguments.
5, via a server side script that sends a large amount of data.
5, via a .. (dot dot) in the filename parameter.
1, by appending search to the end of the URL and checking all of the search option checkboxes and leaving the text field blank
4, via (1) icy-name followed by a long server name or (2) icy-url followed by a long URL.
2, via the vo parameter.
4, via a long (1) AUTH command to the POP3 server or (2) AUTHENTICATE command to the IMAP server.
2, via the (1) id
2, via the include_path parameter in (1) booth.php
4, via .. sequences in the base_path or pollvars[lang] parameters to the admin files (1) index.php
2, via an HTTP request to info.php
2, via the lng parameter.
4, via (1) time in board.php
2, via various vectors including (1) Admin-Center
4, via a long HTTP Referer header.
4, via the contact_email parameter.
1, by adding extra chat characters (avatars) and logging in to a chat room
4, via a recipe.
0, via HTML in the Name field
4, via a long GET request.
2, via the error message.
2, via the msn variable.
2, via the forumid parameter.
2, via the (1) top_message parameter or (2) topic field of a new thread.
2, via an HTTP POST request without a Content-Length header field.
2, via the URL.
4, via a long From parameter to Form2Raw.cgi.
4, via shell metacharacters in a (1) password
2, via the ?option parameter.
4, via (1) the link parameter in sectionswindow.php
5," by renaming a file to the """"con"""" MS-DOS device name."
4," via """"%s"""" or """"%n"""" sequences in (1) the username during login"
4," via a dir command with a large number of """"."""" characters followed by a """"/*"""" string."
4, via a POST request without a Content-Type header.
2, via the (1) lid parameter to the getit function or the (2) min parameter to the search function.
2, via the Search parameter.
0, by modifying hidden form fields
2, via the sql_in parameter.
2, via the search_id parameter.
2, via the osCsid parameter.
4, via a malformed URL.
1, via malformed data to the Node Manager's port
2, via the cat parameter.
3, via multiple calls to (1) fpathconf and (2) lseek
4, via a URL request for testcgi.exe
2, via format string specifiers in syslog.
4, via a message post.
0, via cookies by injecting arbitrary HTML or script into op of the (1) Team
5, via .. specifiers in the album parameter
4, via a URL in the cutepath parameter in (1) shownews.php
4, via a URL request for a non-existent module
2, via the mod parameter.
4, via a URL request where session_id is set to the MD5 hash of a session cookie.
4, via a symlink attack on \winnt\system32\drivers using the subst command.
4, via (1) a long URL content type in CGI::readFile
3, via shell metacharacters in the (1) mode and (2) zipfile parameters in a URL request.
3, by creating a user whose name ends in a .php extension and entering the desired commands into the E-mail field
4, via (1) head.php
1, by modifying the rep_include parameter to reference a URL on a remote web server that contains para_langue.php.
4, via a URL request which executes phpinfo.
5, via a URL request with the uid parameter set to the webmaster uid.
4, via a long FTP server banner.
4, via a long response to a LIST command.
5, by copying a long URL into a clipboard.
5, via a URL request via a long (1) host
4, via a malformed HTTP request
4, via a GET request for MS-DOS device names such as lpt1.
2, via an HTTP request with a long argument to a script
2, via an HTTP request to aux.cgi with a long argument
4, via a URL containing the script.
4, via a .b4s file containing (1) a long playlist name or (2) a long path in a file: argument to the Playstring parameter.
4, via a .b4s file with a playlist name that contains some non-English characters
4, via .b4s file with a file: argument to the Playstring parameter that contains MS-DOS device names such as aux.
4, via a Javascript function that uses the object.innerHTML function to recursively call that function.
0, via cookies by injecting arbitrary HTML or script into (1) news_icon of news_template.php
1, via cookies by injecting arbitrary HTML or script into IMG tags.
4, via a symlink attack on (1) /tmp/__F8499 by Sqpe
4, via a .. (dot dot) in multipart/form-data uploads.
4, via a symlink attack on certain temporary files.
2, via direct requests to the default scripts (1) environ.pl and (2) testcgi.exe.
2, via the query string to (1) isapi/testisa.dll
4, via a request with an MS-DOS device name such as com1.pl
2, via unknown attack vectors related to the (1) s_info and (2) ip_info data structures and the (a) forget_original_parent
5, via a large length parameter
2, via certain modified VMware ESX Server environment variables.
4, via a URL in the pathtoashnews parameter to (1) ashnews.php and (2) ashheadlines.php.
2, via the (1) Name
4," via (1) an """"empty symbol"""" in the Title field or (2) certain data in the Your Message field"
3," via an e-mail message with a (1) To or (2) From header with an address that contains a large number of """"\"""" (backslash) characters."
4, via a long e-mail address in a (1) To or (2) From header.
5, via a Javascript src attribute that recursively loads the current web page.
2, use the server's file descriptors
4, via carriage returns in a filename.
0," by overwriting memory locations via certain control codes (aka """"Device Driver Attack"""")."
4, via a URL in (1) the emml_admin_path parameter to admin/auth.php or (2) the emml_path parameter to emml_email_func.php.
4, via a URL in the emgb_admin_path parameter.
4, via a ' (quote) value in the lng parameter
2, via the mod parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a GET request for a long URI
1, via crafted Internet Key Exchange (IKE) response packets
4, via a long URL in an HTTP request.
4, via a long (1) EXAMINE
4," via a certain connection string to UDP port 27015 that represents """"absence of player informations"
1, via dialog boxes
4, via a long socket name
4, via a crafted request
3, via unspecified vectors.
4, via a long irc:// URL.
4, via a long HTTP GET request.
4, via CRLF sequences in the Location header.
4, via (1) a uid (user) cookie to modules.php; and allow remote attackers to execute arbitrary SQL commands via an aid (admin) cookie to the Web_Links module in a (2) viewlink
4, via a direct request to cgiMasterPwd.exe.
2, via multiple URL requests for ActiveSupport.exe.
4, via a full pathname in the d parameter.
2, via the (1) cid parameter to comment.php
2, via the (1) comment
4," via a """"\.."""" (backslash dot dot) in the CD (CWD) command."
5," by inserting a """"|"""" (pipe)"
4," via a """"%2F.."""" (encoded slash dot dot) in the file parameter."
4, via a long user name and password.
4, via a long command line argument.
4, via a long TERM environment variable.
4, via a hard link attack on a temporary file used to store user database information.
4, via a long FTP server banner.
4, via a long FTP server banner.
4, via (1) the Author field in the Guestbook module
5, via .. (dot dot) sequences followed by NULL (%00) characters in CGI parameters
4, via a long argument to the (1) -r or (2)-c options.
2, by calling wall with a large file as an argument.
4, via a client with a long hostname.
2, via the characters (1) A
5, via an 'ls @../' command
1, via long domain names in (1) MAIL FROM or (2) RCPT TO fields.
2, via an HTTP request for the logicworks.ini file
2, via the (1) titre
2, via an HTTP request to /support/messages
4, via a long HTTP request ending in a .ZIP extension.
4, via a long EXECUTE command.
4, via a response to the ad server.
4, via a filename with a long extension.
2, via an HTTP request containing a long string that gets passed to the ShowDocument method.
2, via the user_avatar parameter.
0, via the url_hit parameter
4, via a direct request
0, via the cmd parameter to (1) exec.php3 or (2) system.php3.
4, via a URL in the (1) my_header parameter to header.php3 or (2) my_footer parameter to footer.php3.
0, via a long pathname argument to the cd command.
2, via an HTTP request with a filename with a trailing dot.
0, by sending an HTTP request with an invalid parameter to (1) in.php or (2) out.php
2, via the cer_skin parameter.
2, via the emailreader_ini parameter.
2, via the plugin parameter to (1) 3fax/1blocklists/index.php; (2) 6departamentadmin/index.php
3," by using """".."""" sequences in the filename parameter and comparing the resulting error messages."
4, via a ... (triple dot) in the filename parameter.
2, via an HTTP request with an invalid chunked transfer encoding specification.
4, via a long (1) ls or (2) cwd command.
4, via (1) the ETag header
4, via a web page with an invalid regular expression argument to the JavaScript reformatDate function.
2, via the HTTP Location header.
2, via unknown attack vectors.
2, via the template parameter.
4, via a long request.
4," via a """".."""" (dot dot) in an unreal:// URL."
4, via a long host string in the Unreal URL.
4, via (1) a packet with a negative size value
0, via the days parameter to the search module.
2, via the filhead parameter.
3, via HTML e-mail with newline characters within an href tag
4, via a DNS message without a question section
4, via a file with a long pathname.
4, via a long pathname.
3, by setting a long HOME environment variable and invoking the save game function with a ~ (tilde).
4, via a NetBIOS continuation packet.
4, via a malformed RPL_NAMREPLY numeric 353 message.
3, via an e-mail attachment with a compressed ZIP file that contains a file with a long filename.
1, by modifying the PATH environment variable to reference a malicious smbpasswd program.
4, via a javascript: URL in an IMG tag.
2, via the member name.
2, via the (1) template parameter in News.php or (2) installdir parameter in install.php.
4, via a long argument.  NOTE: the vendor was unable to reproduce the problem on a system that had been patched for an lp vulnerability (CVE-2002-1473).
2, by reading the contents of the Name parameter in a link
4, via a Short Message Service (SMS) message with a long image name.
4, via (1) register.php or (2) login.php.
2, via an invalid cid parameter that is non-numeric or null
4, via a CREATE command with a long mailbox name.
5, via a (1) DELE or (2) UIDL with a negative number.
4, via a long banner.
4, via a long HOME environment variable.
4," via a PowerPoint attachment that either (1) is corrupt or (2) contains """"embedded objects."""""
5," via a web page that begins with a """"xFFxFE"""" byte sequence and a large number of CRLF sequences"
2, via the message field.
3," by creating a DHTML link that uses the AnchorClick """"A"""" object with a blank href attribute."
4," via a file attachment that contains """"multiple extensions combined with large blocks of white space."""""
0, via an incorrect HTTP request to (1) smileys.php
2, via the (1) UserAdmin program
4, via a request to admin.php without the connect parameter and with the loggedin parameter set to any value
0, by specifying the target filename in the file cookie in form.php
5, via a long HTTP POST to the internal interface
2, via an HTTP request for a domain with an extra . (dot) at the end.
1, via crafted TCP packets.
4, via a crafted TCP packet.
2, via unknown attack vectors.
2, via unknown attack vectors. NOTE: due to lack of details in the vendor advisory
2, via an HTTP request with a long Log_Page_Num variable.
2, via the zoom_query parameter.
4, via a .. (dot dot) in the infolder parameter.
2, via the prefix parameter.
4, via a .. (dot dot) in the req_file parameter.
4, via an aim:getfile URL with a long screen name.
2, via the (1) vadmin_login or (2) vadmin_pass cookie in a request to goldlink.php.
3, by creating a web page or HTML e-mail with a textarea in a div element whose scrollbar-base-color is modified by a CSS style
2, by injecting arbitrary HTML or script into the DENIEDURL parameter.
4," via a """".%00."""" in an HTTP GET request to the cgi-bin directory."
4, via (1) the query string to test.txt
4, via a long DCC SEND request.
4, via (1) env.jsp
4, via a long password
0, via an invalid db parameter
4, via a long syslog message.
2, via the query parameter to the search program.
2, via the email parameter.
2, via the createXmlDocument method in the org.apache.crimson.tree.XmlDocument class
2, via the redirect parameter to the admin/index.html page.
2, via the (1) login username
2," via certain characters such as (1) """""
4, via a symlink attack on the nsrsh[PID] temporary file.
2, via the mark[] parameter.
2, via the query string.
2, via the (1) identifiant and (2) password parameters.
2, via the (1) uid and (2) pwd parameters.
2, via the (1) name
4, via a direct request to cfooter.php3
4, via (1) the q parameter to search.php and (2) the year parameter to calendar.php.
2, via the theme parameter to index.php.
4, via (1) file names and (2) directory names.
4, via a .. (dot dot) in the fm_path parameter.
5, by obtaining a read lock on msgina.dll
0, via a full pathname in the file parameter.  NOTE: This was originally reported as an issue in PHP-Nuke 6.5
2, via the comment section.
2, via the subject parameter.
2, via an invalid IDAdmin or other parameter
2, via the ma_kw parameter.
3, by uploading a file with an executable extension
2, via the (1) username
2, via an invalid PG parameter in view.php
2, via the (1) name and (2) homepage_title (webpage title) parameters.
4, via a long CGI request passed to the do_cgi function.
3, by launching a daemon listening on a TCP port that would otherwise be used by the Distributed Lock Manager (DLM)
2, via an invalid URL
2, via the ReadEnv class
3, by entering a valid username with an arbitrary password
4, via unspecified vectors.
4, via a crafted client domain name
4, via a crafted client domain name
4, via a crafted client domain name
4, via a crafted User-Agent HTTP header.
4, via a crafted User-Agent HTTP header.
3, via unknown vectors.
3, via unknown vectors.
4, via a large number of FTP sessions
4, via a long (1) username or (2) password.
2, via the posts variable.
4, via a URL in the $abspath variable.
1, by sending packets to an interface that has a 0.0.0.0 IP address
4, via (1) a low MTU
4, via (1) octal encoding in yahoo_decode that causes a null byte to be written beyond the buffer
2, via certain long strings.
4, via a direct HTTP request to editconfig.php.
2, via the firstname parameter.
0, via an action parameter with a phpinfo command.
4, via (1) the phorum_check_xss function in common.php
2, via the hide_email parameter.
4, via the eventid parameter.
0, via hyperlinks in FirstClass RTF messages.
2, via certain HTTP POST requests to the spipe/file handler on ePO TCP port 81.
2, via an ISAKMP packet with a large Certificate Request packet.
5, via a long filename in the download feature.
5," via a GET request containing a terminating '""""' (double quote) character."
2, via certain HTTP POST messages to the Administration System port.
4, via an MS-DOS device name in the web search option
4, via MIME messages that use non-standard but frequently supported Content-Transfer-Encoding values such as (1) uuencode
2, via MIME messages that use non-standard separator characters
4, via MIME messages that use fields that use RFC2047 encoding
4, via a RADIUS attribute with a large length value.
1," via malformed ISAKMP packets that cause invalid """"len"""" or """"loc"""" values to be used in a loop"
4, via .. (dot dot) sequences in the filename parameter of a Content-Disposition: header.
4, via a large POST request.
4, via (1) a URL with a trailing . (dot)
2, via an order with a large quantity.
5, via a symlink attack on files within the tmp.SuSEconfig.gnome-filesystem.$RANDOM temporary directory.
4, via (1) timeline.php and (2) placelist.php.
1, via malformed parameters to (1) indilist.php
4, via (1) descendancy.php
1, by modifying the $relative_script_path parameter to reference a URL on a remote web server that contains the code.
0, via format string specifiers in the username
0, by modifying the link parameter to reference a URL on a remote web server that contains the code.
2, via the command parameter ($cmd variable) to index.php.
3, via encoded \.. (backslash ..
1, by modifying the edp_relative_path parameter to reference a URL on a remote web server that contains a malicious serverdata.php script.
4, via (1) a long LANG environment variable
2, via certain mail messages.
4, via a font alias file (font.alias) with a long token
4, via a long environment variable.
2, via the reg_site (or possibly regsite) parameter.  NOTE: the vendor has disputed this issue
4, via an out-of-bounds array index when using the GLX extension and Direct Rendering Infrastructure (DRI).
2, via an HTTP POST request with an invalid Content-Length value
4, via a certain query string
1, via symlink attacks on temporary files
4, via a long URL.
4, via a malformed bitmap (BMP) file.
1, via plain HTTP requests to the SSL port of an SSL-enabled server.
4, via .. (dot dot) sequences in the gedcom_config parameter.
1, by modifying the PGV_BASE_DIRECTORY parameter to reference a URL on a remote web server that contains a malicious theme.php script.
5, via .. (dot dot) sequences in the what parameter.
1, via an HTTP request to login.php that does not contain the required username or password parameters
4, via a UDP packet with an Acct-Status-Type attribute without a value and no Acct-Session-Id attribute
3, by loading a user provided library while restarting the checkpointed process.
3, by reading and writing to kernel memory.
4," via a """"corrupted binary."""""
4, via a crafted ELF file with an interpreter with an invalid arch (architecture)
1, via malformed Bluetooth OBject EXchange (OBEX) messages
0, by triggering certain error messages.
2, via an NFS mount of a directory from a client whose reverse DNS lookup name is different from the forward lookup name.
4, via a large HOME environment variable to (1) editor.c
0," via file names containing format string characters that are not properly handled when executing an """"ls"""" command."
4, via a symlink attack on the configuration file.
4, via MIME messages that use RFC2231 encoding
2, via MIME encapsulation that uses RFC822 comment fields
4, via DESCRIBE requests with long User-Agent fields
2, via the (1) NetFlow
3, use absolute pathnames during checkouts or updates
2, via an email message with an empty subject field.
1, via ISAKMP packets containing a Delete payload with a large number of SPI's
2, via an ISAKMP packet with an Identification payload with a length that becomes less than 8 during byte order conversion
4, via a s/key (SKEY) request with a long name.
4, via a long password.
4," via a URL with a NULL (""""%00"""") character"
4, via a /sgmi URL that contains malicious script
4, via a PDF document with XML Forms Data Format (XFDF) data.
4, via a specially-crafted database query.
2, via an HTML redirect query.
2, via the redirect function.
2, via certain parameters
4, via a malformed e-mail header.
4, via a symlink attack on /tmp/LiveUpdate.log.
2, via an ISAKMP packet with a zero-length payload
2, via an ISAKMP packet with a malformed IPSEC SA payload
2, via an ISAKMP packet with a malformed Cert Request payload
2, via an ISAKMP packet with a delete payload containing a large number of SPIs
2, via certain ISAKMP packets
4, via a long query string.
2," via an LHA archive containing filenames with (1) .. sequences or (2) absolute pathnames with double leading slashes (""""//absolute/path"""")."
2, via the password field.
0, via a full pathname in the show parameter.
4, via a long HOME environment variable in the (1) load_cfg and (2) save_cfg functions; possibly allow remote attackers to execute arbitrary code via long strings to (3) the send_message function; and
2, via the photo variable.
4, via a .. (dot dot) in the shop_closed_file argument to auth.php.
2, via the perl_binary argument in (1) upgrade.php or (2) general.php.
0, via a mode parameter with (1) phpinfo command or (2) perlinfo command.
5, by sending a HTTP POST request with a large or negative Content-Length
4, via exception) via a UDP packet with a length field that is greater than the actual data length
0, by injecting arbitrary HTML or script into (1) keywords argument of main.inc.php
1, by modifying the cookie's PXL variable to reference another userID.
4, via (1) the product parameter in showproduct.php or (2) the cat parameter in showcat.php.
2, via the query parameter.
2, via an empty USER name.
2, via certain SQL code
2, via an img tag.
1, by sending an IPv6 packet with a small MTU to a listening port and then issuing a TCP connect to that port.
2, via an empty or spoofed HTTP Referer
2, via an email address that starts with |||.
4, via a 0 in the uid parameter.
5, via a link to a palace:// url followed by a long server address string.
0, by establishing two simultaneous HTTP connections
4, via URL-encoded (1) title or (2) fname parameters in the News or Reviews modules.
2, via the c_mid parameter.
4, via (1) a long cd command to the FTP server
4, via a uuencoded e-mail message with an invalid line length (e.g.
4, via (1) the sub_name parameter of dl_showall.asp
0, via the SendTo parameter in Personal Messages.
2, via the calendar parameter.
2," via an HTTP request with a sequence of """"%"""" characters and a missing Host field."
0, via format string specifiers in the username.
4, via a symlink attack on /tmp/AS.log.
2," via an HTTP request to a .jsp file that ends in a """"%20"""" (encoded space character)"
2," via an HTTP request for """"WEB-INF.."""""
4, via a symlink attack on (1) /tmp/mailmgr.unsort
4, via a long username.
5, via a RETR command with a long argument containing a large number of / (slash) characters
3, by indexing a large document.
4, via a database file that contains a large key parameter.
2, via an information packet that contains large (1) battle type and (2) map name fields.
2, via the quote parameter.
4, via a long HTTP GET request.
4, via a .. (dot dot) in a HTTP request to (1) gotopage.cgi or (2) genindexpage.cgi.
2, via an open idle connection.
5, by opening and immediately closing a connection.
2, via an LDAP message with a large tag length.
4, via a long RETR parameter.
2," via an FTP request with a large number of """"/"""" (slash) characters."
4, via (1) the cat parameter in shop.php
2, via the id parameter.
4, via a .. (dot dot) in the (1) file parameter in index.php
3, via absolute pathnames in (1) the file parameter in /glossaries/index.php
2, via the Search_Text parameter.
2, via the Message_id parameter.
2, via the stylesheet
4, via a query for OID 1.3.6.1.4.1.3955.2.1.13.1.2.
4, via a long HTTP request
2, via the message parameter.
4, via a long GET request on port 1080.
4, via (1) a large GET request to port 1080 or (2) a large GET request of % characters to port 8080.
2, via certain sequences of commands.
4, via a packet that uses a negative number to specify the size of the data block that follows
2, via the (1) member parameter in member.php
2, via the (1) ppp parameter in viewthread.php
4," via an e-mail header that contains shell metacharacters such as """""
5," via """"//../"""" arguments to (1) mkd"
4, via a long GET request.
4, via ..  (dot dot) sequences in the clang parameter.
3, by using a copy of the router's html menu on a separate system.
2, via certain unexpected strings
4, via a long time zone argument to the MDTM command.
4, via a HTTP POST with a long application variable.
2, via an HTTP request to (1) videophone_admindetail.asp
2, via the mail login form
4, via a URL to index.html
2, via the st parameter.
4, via (1) the msg parameter in ModifyMessage.php or (2) the postid parameter in ModifyMessage.php.
4, via a .. (dot dot) in the attachOld parameter.
4, via a long server name.
4, via a 1024 byte RETR command.
2, via the row parameter.
2, via the userId parameter.
4, via a .. (dot dot) in the URL.
4," by selecting a file for """"Personal Photo"""" that is not an image file"
2, via an HTTP request with a long HTTP sub-version.
4, via (1) user.dll
4, via (1) the mainnews parameter in admin.php
2, via the (1) c
2, via unknown attack vectors.
5, by creating a new Array object with a large size value
5, via a malformed RADIUS packet that triggers a null dereference.
5, via a zero-length Presentation protocol selector.
4, via a symlink attack on a bug report email that is generated by the (1) xine-bugreport or (2) xine-check scripts.
2," via an HTTP request ending with the """"__SQLUSER__"""" string."
4, via a PORT command with a large value.
0, via filenames that end in a backslash character.
2, via certain server scripts.
4, via a symlink attack on the failed-mysql-bugreport temporary file.
4, via a symlink attack.
0, via malformed requests that trigger a null dereference
2," via an IKE message with a malformed Generic Payload Header containing invalid (1) """"Security Association Next Payload"""" and (2) """"RESERVED"""" fields."
0, via format string specifiers in a buffer that can not be resolved
4, via a (1) DAV2 REPORT query or (2) get-dated-rev svn-protocol command.
2, via an ISAKMP packet with a large length field.
4, via a symlink attack on a temporary directory in /var/tmp.
4, via .. (dot dot) sequences in filenames via CVS client requests
4, via a crafted email request to the Mailman server.
4, via a malformed PNG image file that triggers an error that causes an out-of-bounds read when creating the error message.
5, via a symlink attack on the ssmtp.log temporary log file.
2, via the MCAST_MSFILTER socket option.
4, via a large SMPROFILE cookie.
2, via unknown attack vectors.
4, via a LoginExt packet for a Cleartext Password User Authentication Method (UAM) request with a PathName argument that includes an AFPName type string that is longer than the associated length field.
4," via a large """"number of entries"""" field in the sample-to-chunk table data for a .mov movie file"
4, via a Kerberos 4 compatibility administration request whose framing length is less than 2
0, via format string specifiers in certain syslog messages.
0, via format string specifiers in a logfile monitored by log2mail.
0, via format string specifiers in an output string.
4, via a web page that is processed by www-sql.
4, via a missing argument
2, via multiple hostname options in (1) DISCOVER
4, via a large number of MPLS packets
2, via certain IPv6 packets.
4," via an """"http://"""" or """"file://"""" argument to the topic parameter in an hcp:// URL.  NOTE: since the initial report of this problem"
4," via a double backward slash (""""\\"""") before the target CHM file"
4, via a long string containing Telnet escape characters to the Telnet port.
0, via repeated attempts using any username and password.  NOTE: this identifier was inadvertently re-used for another issue due to a typo; that issue was assigned CVE-2004-0447.  This candidate is ONLY for the ADSL router bypass.
1, via Javascript that creates a new popup window and disables the imagetoolbar functionality with a META tag
4, via a notes: URI that uses a UNC network share pathname to provide an alternate notes.ini configuration file to notes.exe.
2, via certain RPC requests.
4, via a table containing a form that crosses multiple td elements
5, by causing a disk image file (.dmg) to be mounted as a disk volume.
3, via the ProxyCommand option or (2) conduct port forwarding via the -R option.
4, via a negative Content-Length HTTP header field
4, via a gnome-vfs URI.
1, via crafted H.323 packets.
4, via MSNSLP protocol messages that are not properly handled in a strncpy call.
2, via an HTML e-mail message containing a Vector Markup Language (VML) entity whose src parameter points to the remote site
4, via a Rich Text Format (RTF) message containing an OLE object for the Windows Media Player
2, via certain SIP messages between Hotsip servers and clients.
2, via unknown attack vectors.
0, via unknown attack vectors that cause a null pointer dereference.
0, via multiple attack vectors
2, via the content-type mail header
2, by accessing iLO using the TCP/IP reserved port zero.
2," via A HREF tags with modified """"alt"""" values that point to the legitimate site"
2," via A HREF tags with modified """"alt"""" values that point to the legitimate site"
1," via A HREF tags with modified """"alt"""" values that point to the legitimate site"
2, via document names when uploading a document.
2, via the (1) putlvcb or (2) getlvcb commands.
4, via a symlink attack.
4," via a long entry in the wordlist that is not properly handled when using the (1) """"c"""" compress option or (2) """"d"""" decompress option."
4," via a URL with a large number of """"."""" (period) characters."
2, via certain WAV file header fields.
4, via a certain UDP packet to the IPP port.
4, via a symlink attack on the /tmp/.usermin directory.
1, via crafted content of a certain size that triggers the overflow.
4, via a BMP image with a large bfOffBits value.
4, via a malicious message
4, via a shell: URL with a long filename and a .grp extension
2, via the (1) DownLoadURL
4, via e-mail messages.
5, via a non-existent device name that triggers a null dereference.
4, via a certain PNG image that triggers a null dereference.
4, via a malformed PNG image.
2, via an invalid base-64 character during HTTP basic authentication.
2, via the (1) CLIENTID or (2) HOSTNAME option of a DHCP request.
4, via a large number of open HTTP connections.
4, via a large number of open HTTP connections.
2, via an HTTP request that uploads a PHP file to the ticket attachments directory.
2, via the rawURL parameter.
4, via an execve system call with an unaligned memory address as an argument.
4, via a negative add_dsa_buf_bytes variable
2, via the Edit-panel.
4, via a list_user operation with the ulevel parameter set to 1 (administrator level)
0, via format string specifiers in a string that gets logged by syslog.
0, by modifying the id parameter to reference a URL on a remote web server that contains the code.
2, via the login page.
2, via an integer overflow.
4, via a handle without a policy name
4, via a (1) malformed or (2) missing community string
2, via the ctxsys.driload package
4, via (1) the $mailer variable in read_body.php
4, via a certain BER encoding.
4, via a document with a long DateTime field.
4, via a direct call to the UploadServlet URL.
4, via a symlink attack on the esearchdb.py.tmp temporary file.
0, by exceeding the maximum number of connections.
2, via the functions (1) raw1394_write
4, via a long file name.
4, via a DHCP request with the LEASETIME option set to -1
0, via invalid or missing parameters in HTTP requests to (1) resize.php or (2) modules.php
4, via the (1) id parameter to the (a) private_messages module; (2) search parameter to the (b) links and (c) content modules; and (3) files parameter to the gallery module.
4, via a .. (dot dot) in the files parameter.
2, via an invalid database parameter
5, via an e-mail message with a certain line length
4, via a large e-mail message
4, via a long password.
0, by modifying the id parameter in a viewMsgDetails.do request.
2, via (1) script that starts with %00 in the numOfExpressions parameter or (2) the mobjtype parameter.
2, via an invalid request that is echoed in the resulting error message.
0, via the cart32 parameter to a GetLatestBuilds command.
4, via .. (dot dot) and // (double slash) sequences in the filename parameter.
2, via the cd command with an unusual argument
2, via the page parameter.
4, via a compressed archive that contains a large number of directories.
4, via a symlink attack on DCOP files in the /tmp directory.
5, via a malformed image file that triggers a null dereference
5, via a malformed image file that triggers a null dereference
2," via unknown vectors related to """"command line processing"
4, via a long FTP command.
5," via a URL with the desired path and a """"*"""" (asterisk) character."
4, via a symlink attack.
0, via format string specifiers in certain log messages for HTTPS that are handled by the ssl_log function.
5, by creating a user with the same name as an existing group that has higher privileges.
4, via a request with a small fragment length and a large amount of data.
2," via the """"GET/Key"""" and """"PUT/Key/Value"""" commands"
2, via an empty fragmented packet.
2, via the file parameter.
0, via an ASX filename that contains javascript
1, via a data packet to TCP port 2702 that causes the server to read or write to an invalid memory address.
2, via an invalid (1) category_rows parameter to index.php
4, via (1) the cat_title parameter in index.php
2, via the input field.
2, via the instory parameter.
0, via format string specifiers that are directly provided to the OutputDebugString function call.
4, via shell metacharacters in the page parameter.
2," via the (1) """"**"""" or (2) """"+"""" search patterns"
2, via the (1) sid
3, via the (1) min or (2) categ parameters.
4, via a long filename.
4, via a long URL
2, by changing the display options to a non-default view.
4," via a """"Rose Attack"""" that involves sending a subset of small IP fragments that do not form a complete"
4, via a directory with shell metacharacters in its name.
4, via a .htaccess file that causes the overflow during expansion of environment variables.
0, by aborting an SSL connection in a way that causes an Apache child process to enter an infinite loop.
4, via a crafted BMP file.
2, via the size variable in Groupware server messages.
0," via Javascript that sets the value of an <input type=""""file""""> tag."
4, via a null character (%00) in an FTP URI.
3," via redirects and Javascript that uses the """"onunload"""" method."
2, via an invalid address for the BaseAddress parameter to the hooks for the (1) ZwAllocateVirtualMemory or (2) ZwProtectVirtualMemory functions.
2, via an invalid address for the ObjectAttribues parameter to the hooks for the (1) ZwCreateFile or (2) ZwOpenFile functions.
4, via long pathnames in LHarc format 2 headers for a .LHZ archive
4, via a symlink attack on temporary files during decompression of (1) gzip or (2) bzip ROM files.
5, via a long w (working directory) command line option
4, via a POST request with a Content-Length header set to -1.
4, via a long -S command line argument.
2, via the UserAgent parameter.
4, via shell metacharacters in the filename of the tar file that is dragged to the smiley selector.
4, via (1) Rich Text Format (RTF) messages
4, via a certain URI
4, via a crafted ICO file.
1, via spoofed ICMP error messages
4, via a blind throughput-reduction attack using spoofed Source Quench packets
4, via a long instancename parameter.
4, via a GET request containing an MS-DOS device name
2, via format strings in the argv[0] value.
4, via a specially-crafted BMP image
4, via a TIFF image that causes a divide-by-zero error when the number of row bytes is zero
4, via a certain (1) mp3 or (2) mp2 file.
2, via certain malformed requests that cause new processes to be spawned and enter an infinite loop.
4, via a certain sequence of LOCK requests for a location that allows WebDAV authoring access.
4, via a certain data string that is sent to multiple simultaneous client connections to TCP port 407.
4, via a malformed IP packet.
4, via a crafted BMP file.
0, via script in HTML files that are referenced from XML files contained in a .wsz skin file.
4, via a symlink attack on PPPDialer log files.
4, via a modified record length field in an SSLv2 client hello message.
5, by sending a FindNextPrintChangeNotify request without a previous FindFirstPrintChangeNotify
2," via the """"System Scan"""" properties of the System Tray applet"
4, via (1) modem_run
4, via mousedown events that call the Popup.show method and use drag-and-drop actions in a popup window
4, via a URL containing special characters
4," via a request containing a (1) """"\"""" (backslash) or (2) """"%5C"""" (encoded backslash)"
4," via a link with a URL file location containing long inputs after (1) """"%00 (null byte) in .doc filenames or (2) """"%0a"""" (carriage return) in .rtf filenames."
4, via a symlink attack on temporary files.
4, via a crafted URL.
4," via a TRANSACT2_QFILEPATHINFO request with a small """"maximum data bytes"""" value."
4, via a samba server (1) returning more data than requested to the smb_proc_read function
1, via TIFF images that lead to incorrect malloc calls.
4," via an """"unexpected sequence of MSNSLP messages"""" that results in an unbounded copy operation that writes to the wrong buffer."
0, via spoofed reverse DNS lookup results.
4, via a cabinet file containing .. (dot dot) sequences in a filename.
2, via certain SNMP packets with negative length fields that trigger a memory allocation error.
4, via (1) negative coordinates or (2) large coordinates.
4, via a certain BMP image.
4, via a SAMBA request that contains multiple * (wildcard) characters.
2, via an HTTP request to webdbm with high ASCII values in the Server field
4, via a compressed file with both local and global headers set to zero
4, via a compressed file with both local and global headers set to zero
4, via a compressed file with both local and global headers set to zero
4, via a compressed file with both local and global headers set to zero
2, by sending an Ascend-Send-Secret attribute without the required leading packet.
3, via SSI (XSSI) documents that trigger a length calculation error.
1, via malformed image files that trigger the overflows due to improper calls to the gdMalloc function
2, via an HTTP GET request with a MIME header containing multiple lines with a large number of space characters.
4, via a large number of active sessions
3, via an arj archive that contains long filenames.
4, via a long username.
4, via a MATCH AGAINST query with an opening double quote but no closing double quote.
4, via (1) GET
4," via a PHP script with a certain MIME header that causes the """"$_FILES"""" array to be modified."
1, via malformed USR vendor-specific attributes (VSA) that cause a memcpy operation with a -1 argument.
4, via a series of Access-Request packets with (1) Ascend-Send-Secret
4, via a symlink attack on temporary files.
4, via a symlink attack on temporary files.
4, via a symlink attack on temporary files.
4, via a symlink attack on temporary files.
4, via a certain image file.
2, via an mp3 file that contains a long string before the @ (at sign) in a URL.
2, via frame headers in MP2 or MP3 files.
0, via format string specifiers in an invalid proxy answer.
0, via images with large width and height values
4, via unknown vectors.
3, via segmentation fault) via crafted multiple-image (animated) GIF images.
4, via a CBCP packet with an invalid length value that causes pppd to access an incorrect memory location.
2, via the smency.nsf file.
2, via certain DNS messages
2, via mail headers that cause a line feed (LF) to be replaced by a null byte that is written to an incorrect memory address.
5, via a SSH2_MSG_DEBUG packet with a modified stringlen parameter
2, via unknown attack vectors.
4," via a certain command (""""body[p"""") that is treated as a different command (""""body.peek"""") and causes an index increment error that leads to an out-of-bounds memory corruption."
2," via certain commands such as (1) """"body[p"""""
1," via untrusted data to the unserialize function that may trigger """"information disclosure"
4, via an arj archive with filenames that contain .. (dot dot) sequences.
4, via shell metacharacters in a search string.
2," by using the """"Related Topics"""" command in the Help ActiveX Control (hhctrl.ocx) to open a Help popup window containing the PCHealth tools.htm file in the local zone and injecting Javascript to be executed"
4, via a .bmp
3, via long (1) SRC or (2) NAME attributes in IFRAME
3," by using """"()"""" style environment variables to create functions that have the same name as any program within the bash script that is called without using the program's full pathname."
2, via certain HTTP headers in an HTTP response
4, via (1) the PmaAbsoluteUri parameter
4, via /proc/.../cmdline.
2, via the (1) next and (2) prev result search pages
2, via certain error messages.
4, via a long section name in an image file.
0, via SOCK_SEQPACKET unix domain sockets
4, via a malformed URL
2, via large values in the configuration file.
4, via a full UNC path in the AppInStartmenu directive.
4, via a long cached icon filename in the InName XML element.
1, via HTTP requests to certain special file names related to multiple data streams in HFS+
2, via the force-quit key combination
4, via a crafted PostScript input file.
4," via """"a corrupt section header."""""
3, by triggering a null dereference.
2, by causing mc to free unallocated memory.
4," via """"use of already freed memory."""""
4, via a ZIP file containing a file with a long filename
4, via an e-mail attachment with a virus that contains an empty boundary string in the Content-Type header.
4, via a web page that contains a BASE element that points to the legitimate site
4," via """"specially formed URLs"
4, via a symlink attack on temporary files.
5, via a symlink attack on a temporary directory.
4, via a (1) TCP
4, via a symlink attack on the epson temporary file.
3, via the (1) sender or (2) recipient e-mail addresses.
4, via a callto:// URL with a long non-existent username
4, via TABLE tags.
2, via an attachment with a long filename.
1, via personal information fields
2, via long command line arguments.
4," via (1) HTTP headers such as """"Connection"""" or (2) invalid parameters whose values are echoed in the resulting error message."
4, via a long query string.
3, via long (1) SITE
4, via a file containing a crafted modeline that is executed when the file is viewed using options such as (1) termcap
0, via an invalid RTP timestamp.
4, via a certain packet that causes the dissector to access previously-freed memory.
0, via a certain malformed SMB packet.
3, via JavaScript and (2) do not properly restrict access to certain Java classes from the Java applet
4, via a cda:// URL with a long (1) device name or (2) sound track number
4, via an e-mail message with a crafted PDF attachment.
5, via an .ETD document containing format string specifiers in (1) title or (2) baseurl fields.
4, via a Samba request with a large number of security descriptors that triggers a heap-based buffer overflow.
1, by injecting content from one window into another window whose name is known but resides in a different domain
3, by ending a connection after sending a certain sequence of packets.
4," via a certain """"unexpected packet sequence."""""
4," via an ftp:// URL that contains a URL-encoded newline (""""%0a"""") before the FTP command"
4," via an ftp:// URL that contains a URL-encoded newline (""""%0a"""") before the FTP command"
4, via a long Overwrite header.
2, via an HTTP GET request for a file that does not exist
4, via shell metacharacters in the filename.
2, via the document object model (DOM) methods in the DHTML Dynamic HTML (DHTML) Editing Component (DEC) and Javascript that calls showModalDialog.
4," via """"insecure filename quoting"
4, via a URL
4, via a symlink attack on temporary directories.
4, via a symlink attack on temporary files.
4, via a crafted TIFF file.
3, via shell metacharacters.
0, via format string specifiers sent to the server.
4, via a long nickname.
4, via a join request that contains a memory address that causes the server to read arbitrary memory.
2, via the acao parameter.
2, via the screen parameter.
5, by calling Xman with a long -title value
2, via an invalid filetohighlight parameter
4, via a .. (dot dot) in the filetodownload parameter.
4, via a long password field in a join request.
2, via long arguments to the (1) EXAMINE
4, via a .. (dot dot) in the file argument.
1, via format specifiers in (1) a nickname or (2) message text.
4, via a long UDP packet
5, via a long (1) nickname or (2) model type
0, by making 7 simultaneous connections.
4, via .. sequences in the TextFile parameter.
4, via shell metacharacters in the TextFile parameter.
0, via the record parameter in a DetailView action to index.php
2, via certain requests to scripts that contain invalid input
4, via .. (dot dot) sequences in the (1) module
4, via (1) http:// or (2) news:// URLs
5, via a DCC connection and a CTCP packet that contains a 1 as the type and a 4 as the subtype.
4, via .. (dot dot) sequences in a DCC connection with a CTCP packet that contains a 1 as the type and a 4 as the subtype.
4, via a large image filename.
4, via a user packet to the DCC file transfer capability with an invalid file length.
0, via an ELF binary in which the interpreter is NULL.
0, by manipulating the VMA descriptor.
3, via unknown vectors.
4, via a PNG file containing large (1) width or (2) height values
4, via a text file that is converted to TIFF.
1, via crafted ABC files.
1, via crafted ABC files.
1, via crafted ABC files.
1, via crafted ABC files.
1, via crafted ABC files.
1, via crafted ASP scripts.
1, via crafted BSB pictures.
4, via a crafted chbg scenario file.
4, via a crafted 3DS file.
4, via a crafted CSV file.
4, via a crafted HPGL file.
4, via a crafted DXF file.
4, via a crafted email message.
5, via a GRX file containing a long filename.
5, via a GRX file containing a filename with shell metacharacters.
4, via a crafted HTML file.
0, via filenames that contain / (slash) characters.
4, via a crafted ABC file.
4, via a crafted set of JPEG files and filenames.
4, via shell metacharacters in a filename.
4, via .. (dot dot) sequences in a filename.
4, via a crafted message that is not properly handled during a Reply operation.
1, via crafted mesh files.
4, via a crafted MP3 playlist.
4, via a crafted ASF video stream.
4, via a crafted asm file
4, via a crafted SXW file.
4, via a crafted calendar file.
4, via a crafted PGN file.
4, via a long HELO command
4, via a crafted eMelody file.
4, via a crafted RTF file.
0, via FTP responses containing file names with / (slash) characters.
4, via a symlink attack on temporary files.
4, via a crafted RTF file.
4, via a crafted FRM file.
4, via a crafted web page.
4, via a crafted AIFF file.
4, via a crafted Excel (XLS) file.
2, via an MP3 file with double quotes in the Artist tag.
1, via crafted HTTP responses.
4, via a crafted ELF file.
4, via a TIFF file with the STRIPOFFSETS flag and a large number of strips
4, via a TIFF file containing a TIFF_ASCII or TIFF_UNDEFINED directory entry with a -1 entry count
4, via a bitmap (BMP) file containing a large biClrUsed field.
4, via a large MMST stream packet.
4, via a Real RTSP streaming media file with a -1 content-length field
1, by injecting content from one window into a target window whose name is known but resides in a different domain
0, via an NNTP URL (news:) with a trailing '\' (backslash) character
4," via a query that starts with a tab (""""%09"""") character"
5, by setting a name for a window
5, via a large signal number to (1) xxx_sys_kill
2, via the (1) artist or (2) song fields of a music file
4, via a long -setup parameter.
4, via a response to a LIST command that contains a file name with a long extension.
4, via a long username.
2, via the SaveAs command.
4, via a short new screen value
5, via a cmsg_len that contains a -1
3, by using a sequence of partially privileged actions: using CCBKAPPLROWTRIG or EXEC_CBK_FN_DML to add arbitrary functions to the SDO_CMT_DBK_FN_TABLE and SDO_CMT_CBK_DML_TABLE
2, via the new.table_name or new.column_name parameters.
2, via the arguments to info2www.
4, via a malformed probe request to the SVM.
0, via an invalid X Display Manager Control Protocol (XDMCP) request.
1, via unknown vectors
3, via unknown vectors.
4, via unknown vectors.
1, via environment variables in the library name
0, via an absolute pathname in the file parameter to the load.uix script.
5, via a malformed service_register_NSGR request containing a value that is used as an invalid offset for a pointer that references incorrect memory.
4, via (1) DBMS_EXPORT_EXTENSION
5, via a long token in the text of a wrapped procedure.
4, via (1) a long third argument to the rec2xml function or (2) a long filename argument to the generate_distfile procedure.
0, via format string specifiers in a content URL
4, via a symlink attack on temporary files.
5, via a (1) DVD or (2) MPEG subpicture header where the second field reuses RLE data from the end of the first field.
4, via a symlink attack on temporary files
2, via the (1) order
2, via the (1) kp3
5, via (1) unexpected characters in the session ID such as shell metacharacters
4, via a symlink attack on temporary files.
4, via a long argument to the (1) -F
0, by modifying the PATH environment variable to point to a malicious mount program.
4, via a file: URL argument to the curl_init function.
2, via an argument to wiki.pl.
4, via a .. (dot dot) in the filename.
2, via the username parameter.
4, via (1) the string parameter for index.php
0, by modifying the doc parameter to reference a URL on a remote web server that contains the code.
2, via the (1) st or (2) keywords parameter.
2, via the showThumb method for thumb.php
4, via a URL
4, via a message that contains an image whose filename does not start with restricted characters.
2, via the searchm parameter.
2, via the (1) subcat
5, via a message that contains many special strings that are converted to images.
2, via the id_album parameter.
2, via the login parameter.
3, via an e-mail address
2, by modifying the (1) _zb_path parameter to outlogin.php or (2) dir parameter to write.php to reference a URL on a remote web server that contains the code.
2, via the (1) site_title or (2) http_images parameter.
4, via phpinfo
2, via the search parameter.
4, via a .. (dot dot) in the file parameter.
4, via .. (dot dot) sequences in the lng parameter.
1, by modifying the G_PATH parameter to reference a URL on a remote web server that contains the code
2, via the gameid parameter.
2, via long FTP commands such as (1) USER
2, via an SSH2 packet with a base argument that is larger than the mod argument
2, via the action parameter.
4, via a macro filename
4, via .. (dot dot) sequences in an @@ command in an HTTP GET request.
4, via a crafted SSH v1 packet.
1, via crafted playlists that result in a long vcd:// URL.
4, via shell metacharacters in rcsinfo.
4, via a malformed IKE packet
4, via a flood of TCP connections to port 2002.
2, via multiple vectors
5, via (1) date or search text field in the calendar module
4, via shell metacharacters in an e-mail message.
4, via (1) long VideoCD vcd:// MRLs or (2) long subtitle lines.
4, via a large DNS response that is handled by the gethostbyname function.
4," via a redirection URL containing a """".."""" that resolves to the IP address of the malicious server"
3, via dots and non-breaking spaces (ASCII character code 160) in the (1) Content-Disposition or (2) Content-Type headers.
1, via a data packet that contains a large size specifier
2, via multiple connections with long nicknames
4, via a long string.
4, via a corrupt ZIP archive.
4," via a URL containing (1) """"..\"""" (dot dot backslash)"
2, via the messageToUserAccNum parameter.
2, via the Subject field.
3, by sending a POST request with a large Content-Length value
4, via a Telnet request to an IP address of the proxy's network interface
4, via a blank show parameter
4, via a .. (dot dot) in the show parameter.
4, via (1) view_entry.php
0, via the return_path parameter and perform HTTP Response Splitting attacks to modify expected HTML content from the server.
2, via the user_inc parameter.
2, via an invalid encoded_login parameter
0, by modifying critical parameters to (1) view_entry.php or (2) upcoming.php.
1, via script code in the URL
2, via an HTTP request for an MS-DOS device name such as COM2.
0, via the fsel parameter
2, via the block_username parameter in the user module.
2, via an instant message containing a URL with hex encoded file extensions.
2, via the forum_id parameter.
4, via (1) the bug_id parameter in a viewvotes operation or (2) the project parameter in an add operation.
5, via a long IMAP DELETE command.
5, via a nickname that contains format strings.
0, via format string specifiers in a message.
5, via a malformed UDP packet sent to a game port
2, via the status command.
2, via an HTTP request to (1) config.php
2, via the (1) type
2, via the (1) eid or (2) cid parameters.
2, via the qpid parameter.
4, via a long (1) username or (2) password.
1, by modifying the phpbb_root_path parameter to reference a URL on a remote web server that contains the code.
2, via the cat parameter.
2, via the img parameter.
2, via the id parameter.
4, via a long value in a game server reply
4, via a long (1) query or (2) reply.
4, via a .. (dot dot) in the path parameter.
2, via the query parameter.
4, via a long (1) SAML
4, via a long filename
4, via a .. (dot dot) in the filename.
2, via the id parameter.
4, via (1) the username field on the login page or (2) the eventid parameter to calendar.asp.
4, via (1) the username field on the login page or (2) the cat parameter to album.asp.  NOTE: it was later reported that vector 1 affects aspWebAlbum 3.2
1, by modifying the chem_absolu parameter to reference a URL on a remote web server that contains the code.
2, via the (1) keywords parameter to search.asp
4, via a large number of connections within a short time.
4, via a long (1) POP3 USER command or (2) SMTP request.
2, via the (1) redirect_to
4, via a long request to TCP port 1433
2, via an HTTP request with a large number of headers.
2, via the key parameter.
2, via the (1) thread parameter to download_thread.php
2, via the thread parameter.
4, via a crafted HTTP request
2, via the module parameter.
1, by setting the mail parameter to 1
4, via a ..%5C (hex-encoded dot dot) in the URL.
2, via the p parameter.
4, via a direct request to (1) auto-acronyms.php
4, via a message with a long first field.
1, via XML attributes in a crafted XML document.
0, via format string specifiers in a chat message.
2, via an invalid show parameter
2, via the Referer field in the HTTP header.
2, via an HTTP request with an invalid cat_id parameter
2, via the cat_id parameter.
4, via a direct request to (1) checkdb.inc.php
1," by modifying the libpath parameter (incorrectly called """"libpach"""") to reference a URL on a remote web server that contains _more.php"
4, via a .. (dot dot) in FTP commands such as (1) DIR
2, via the text parameter.
2, via certain wide characters.
2, via the (1) QuestionNumber and Category parameters to Forum.asp or (2) Username and Password parameter to Login_Exec.asp.
2, via the (1) Category parameter to Forum.asp or (2) MainMessageID parameter to ReplyToQuestion.asp.
2, via an HTTP request to phpinfo.php
1, by modifying the req_path parameter to reference a URL on a remote web server that contains a malicious funcs.php script.
2, via the utf parameter.
0, via an img src tag.
4, via a long font field.
4, via a direct HTTP request to app_sta.stm.
4, via a calendar message with a long Location field
4, via a PDF file that contains an embedded Shockwave (swf) file that references files outside of the temporary directory.
2, via the (1) query or (2) nick parameters.
2, via an invalid op parameter
4, via a .. (dot dot) in the op parameter.
4, via a symlink attack on the _private directory
1, by modifying the slxweb cookie to set user=Admin
0, via an invalid HTTP request
4, via a (1) Library or (2) Attachment request with an invalid file parameter
0, via the id parameter in a view operation.
4, via a .. (dot dot) in a ProcessQueueFile request.
5, via a web page that contains a (1) TEXTAREA
4," via an """"unusual combination of visual elements"
4, via a web page or HTML email that contains a TBODY tag with a large COL SPAN value
4, via a web page or HTML email that contains a table with a td element and a large rowspan value
4, via a malformed mp2 stream.
4, via a long nickname.
2, via the url parameter in (1) index.php and (2) exit.php
2, via the Name parameter.
4, via a WAV file with an invalid file header whose fmt chunk length is set to 0xFFFFFFFF.
2, via the url parameter.
0, by specifying the target in an rmi:// Worklist URL
2, via the arguments to wiki.php.
4, via a long option string in a TFTP packet.
3, by connecting to port 254
5, via a long (1) EHLO and possibly (2) HELO command.
2, via the (1) terme parameter to search.php or (2) letter parameter to letter.php.
5, via a long FTP command such as (1) CWD
4, via a series of long MLIST commands.
4," via a CD command that contains an invalid path with a """"../"""" sequence."
0, by connecting multiple times from the same IP address.
2, via the (1) username parameter to test.x
4, via a .. (dot dot) in the URL.
4, via (1) admin or Pass parameter to index_next.asp
4, via a long filename in the msinfo_file command line parameter.  NOTE: this issue might not cross security boundaries
2, via the (1) Name or (2) Lastname fields during new user registration
4, via cal_template.
2, via the (1) CM_pid parameter in the comments module or (2) the subject or message fields in the notes module.
4, via the redirecturl parameter.
2, via the (1) User Agent or (2) Referrer HTTP headers.
0, via the cutepath parameter to (1) show_archives.php or (2) show_news.php.
4," via a cookie that contains """"auth=1"""" and """"uId=1."""""
4, via a direct HTTP request to Admin.php
4, via a large (1) query or (2) reply packet
2, via the no parameter.
4, via a long string that ends in a newline character.
4, via a long client response.
2, via the (1) pageid
3, via the (1) User name parameter to accountsettings.html or (2) Search string parameter to search.html.
4, via a direct request to (1) accountsettings_add.html or (2) topmenu.html.
0, by specifying the username and message ID in an HTTP request.
2, via the accountid parameter.
2, via the originalfolder parameter or (2) move arbitrary files via the messageid parameter.
4, via a STORE UNIQUE (STOU) command with an MS-DOS device name argument such as (1) COM1
4, via a crafted GG_MSG_IMAGE_REPLY message.
2, via an invalid lang parameter
4," via """".."""" sequences terminated by a %00 (null) character in the lang parameter"
4, via a .../ (triple dot) in the (1) CWD
4, via a long HTTP GET request
0, via format string specifiers in the QUOTE command.
1, by modifying the PATH environment variable to reference a malicious io-graphics program before is executed by crrtrap.
3, by connecting to it from the same IP address as the administrator who is logged in
2, via an XHTML page that contains an Internet Explorer formatted comment between the DOCTYPE tag and the HTML tag
2, via the location parameter.
5, via a long login name sent to port 3103.
3, via the URL.
4, via a large amount of data.
2, via the (1) Itemid
1, by modifying the mosConfig_absolute_path parameter to reference a URL on a remote web server that contains the code.
4, via a URL that contains an extra leading / (slash).
4, via a sequence of carriage returns sent to TCP port 66.
2, via invalid characters in a message
2, via an invalid Skin parameter.
2, via the Skin parameter
4, via a long SAUTH command during RSA authentication.
4, via a direct request to adminrestore.php in the extras directory.
4, via a long username.
2, via an HTTP GET request with a long version string.
4, via a large number of connections.
4, via shell metacharacters in the url parameter.
2, via the reply parameter.
2, via the name parameter.
4," via """"..\\"""""
2, via the (1) IRC Server or (2) AIM ID fields in the user profile.
4, via a Postscript file with a long (1) BoundingBox
2," via an invalid pointer in the """"oa"""" argument."
2, via the (1) category
0, via an invalid HTTP request
0, via a direct HTTP request to port 32000.
2, via the schedule parameter.
4, via a direct HTTP request
4, via a crafted image file.
4, via a large number of connections from the same IP address.
0, by calling the client with a long string.
2, via the User-Agent HTTP header.
4, via (1) the return parameter to login_page.php
0, by creating multiple users and providing the same e-mail address.
2, via the folderid parameter.
4, via .. (dot dot) sequences in the URL.
2, by modifying the (1) t_core_path parameter to bug_api.php or (2) t_core_dir parameter to relationship_api.php to reference a URL on a remote web server that contains the code.
2, via the description field.
2, via an HTTP request to (1) auth.php
2, via the (1) username or (2) password parameters.
2, via the xPage parameter.
4, via invalid users.
1, by calling LOAD with a full pathname
1, by calling LOAD with a binary file as an argument
4, via a .. (dot dot) in the viewcat parameter.
2, via an HTTP request for the disk_c virtual folder.
0, via many large HTTP requests.
4, via a long password.
2, via the (1) cat_select or (2) show parameters.
2, via the DHCP HOSTNAME option.
4, via a large number of connections to port 5900.
4, via a large packet
4, via a POP3 email with a long Content-Type header.
4, via a malicious DNS server query response that contains authoritative or additional records.
5, via a malformed color filter file.
4, via a long project name.
0, via messages with the ISO-8859-10 character set
4, via a long -o command line argument.
4, via (1) long output from wc to shar
4, via a long LAYER parameter.
2, via the read-write community string.
2, via the cable-docsis read-write community string used by the Data Over Cable Service Interface Specification (DOCSIS) standard.
2, via long command line arguments or a long callto:// URL
2, via the lastvisited parameter.
2, via repeated authentication attempts.
2, via the CMD_CREDITCARD_CHARGE command.
4, via shell metacharacters in the pass parameter.
4, via a /.. (slash dot dot).
4, via a long HTTP GET request.
0, via the m parameter
5, via search queries.
2, via the rpAuth_1 page.
2, via the URL.
4, via a long packet with two CRLF sequences to the service management port (TCP 8000).
4, via a long message parameter in a SendMsg action to action.htm.
2, via the NICKNAME tag in a vCard.
4, via a 'file://' URI.
2, via the (1) config[header] parameter to hotnews-engine.inc.php3 or (2) config[incdir] parameter to hnmain.inc.php3.
2, via the search parameter.
4," via a Synchronized Multimedia Integration Language (SMIL) presentation with a """"file:javascript:"""" URL"
4, via a crafted URL and a certain cookie.
4, via a .. (dot dot) in the URL.
4, by using %00 before the nickname
0, via multiple malformed HTTP requests without the GET command.
2, via format string specifiers in class names.
2, via the (1) category_id
3, via the URL.
3, via the (1) postdays parameter to viewtopic.php or (2) topicdays parameter to viewforum.php.
5, by creating a new Array object with a large size value
2, via an HTTP request to home.asp with a trailing slash (/).
4, via .. (dot dot) sequences in an HTTP request
2, via the (1) Your Name field
0, by injecting arbitrary script into the z parameter.
4, via a direct request to displaycategory.php
0, by modifying the basepath parameter to reference a URL on a remote web server that contains fileFunctions.php.
2, via the gid parameter.
2, via the (1) HTTP_REFERER parameter to login.php
2, via the (1) page parameter to showthread.php or (2) order parameter to forumdisplay.php.
2, via the what parameter to memberlist.php.
2, via the (1) return or (2) mos_change_template parameters.
2, via the id parameter.
2, via the background:url property in (1) glow or (2) shadow tags.
2, via the (1) pagetitle or (2) error parameters
2, via an invalid (1) language
4, via a packet with a large length value
4, via a large amount of data to TCP port 660.
2, via the (1) img
2, via the id parameter of the comments action.
2, via the certain survey fields or error messages for malformed query strings.
4, via a .. (dot dot) in the URL.
4, via a direct request to (1) browsers.php
2, via the (1) screen parameter to modules.php
2, via the referer field in an HTTP request.
2, via an img tag with a URL to admin.php.
0, via the ID parameter to (1) resend.asp or (2) news_view.asp.
4, via (1) the err parameter to error.asp or (2) register.asp.
2, via the (1) email parameter to comment_add.asp
2, via the (1) ID parameter to more.asp
0, by setting the ADMIN parameter in the NEWS_LOGIN cookie.
5, via a REST command with a large size argument
3, via the (1) email parameter to dodelautores.html or (2) handle parameter to addhandle.html.
4, via a TCP packet with the port and IP address set to zero.
4, via a long ServerInfo variable.
4, via a large packet.
4, via a .. (dot dot) in the setinclude parameter.
4, via a malformed request
4, via a .. (dot dot) in the URL.
4, via a large filter on a column when using SmartView Tracker.
2, via the (1) xmbuser parameter to xmb.php
4, via (1) the u2uheader parameter in editprofile.php
0, via the restrict parameter to (1) member.php
4, via a blog name ($blogname).  NOTE: if administrators are normally allowed to add HTML by other means
4, via a large packet
2, via the Name field.
4, via a long STREAMQUOTE tag.
5, by sending a packet that specifies the size for the next packet
2, via the (1) photo parameter to addfav.php
2, via the (1) ppuser
3, via the @import URL function in a CSS style tag.
2, via the catcode parameter.
2, via the user information forms.
2, via the (1) email parameter to testfile.html
4, via shell metacharacters in a file name.
4, via forum messages.
2, via the strItems parameter.
2, via the strImageTag parameter.
3, by causing a large error string to be generated by the ALLO handler
1, by using the SITE command to modify certain iFtpSvc options that are handled by iftpmgr.exe.
2, via an HTTP request with a trailing %00 (null).
4, via shell metacharacters in the file variable.
4, via a link failure with Microsoft Windows.
2, via the PORT mode.
4, via a symlink attack on you-$USER/cookies.
4, via a Fasttracker 2 (.xm) mod media file.
5, by sending a Basic Authentication request without a password
4, via a long username.
4, via a POST that contains 1024 bytes.
0, via format string specifiers in RCON commands.
4, via a hard link attack on the lockfiles.
4, via a long URL property inside an object tag.
2, via the Internacional property followed by a long string.
2, by calling the SetSitesFile function.
4, via a long string in the ScanParam property of a COM object
3," by sending hex-encoded URLs containing """"%13%12%13""""."
2, via the GetSpecialFolderLocation function with certain parameters.
2, via certain RAR archives
4, via a long string to the GetPrivateProfileString function.  NOTE: this issue was originally reported as a buffer overflow
2, via the (1) l parameter (aka language variable) to index.php or (2) id parameter to view.php.
4, via a large number of arguments.
0, via format string specifiers in the str variable.
4, via a large number of connections with a command other than AUTHENTICATE
2, via large malformed strings.
4, via a direct request to (1) banner_click.php
2, via via the (1) theme parameter to tiki-switch_theme.php
0, via the sort_mode parameter in (1) tiki-usermenu.php
2, via the (1) Theme
4, via .. (dot dot) sequences in the mapfile parameter.
2, via the img/wiki_up URL.
5, by injecting base64-encoded SQL code into the user parameter.
4, via base64-encoded SQL in the admin parameter.
2, via the base parameter.
4, via onload
0, via attachments whose names contain certain non-English characters.
4, via .. sequences in (1) the user_langue parameter to index.php or (2) the langue parameter to update.php
5," via doubly hex-encoded characters such as """"%2527"""""
2, via double encoded slashes (%252F) in the key parameter.
4, via a STUN response packet with a large attrLen value that causes an out-of-bounds read.
4, via a username that does not exist.
3, via the phpbb_root_path parameter.
4, via a deeply nested multipart MIME message.
5, via a long MAIL FROM field.
1, via format string specifiers in the -C command line argument.  NOTE: it is not clear whether this issue could be exploited remotely
4, use the RequestFile method to download and execute arbitrary code via an object codebase that uses bitdefender.cab.
4, via (1) the sif parameter to index.php in the Comments module or (2) timezoneoffset parameter to changeinfo.php in the Your_Account module.
2, via the password.
4, via a direct HTTP request to upload.php
2, via the jcode parameter.
2, via the offset parameter.
4, via a direct HTTP request to files in the (1) includes/blocks directory
4, via the (1) lid and query parameters to the Downloads module
4, via .. (dot dot) sequences in a UMOD (Unreal MOD) file.
4, via a string in the portNum parameter
2, via the (1) target or (2) portNum parameters.
4," via URL-encoded """"'"""" characters (""""%27"""")."
3," by using """"/**/"""" sequences in the targeted fields."
5, via a string in the portNum parameter
2, via the portNum parameter.
2, via the (1) redirect parameter to member.php
2, via the (1) FID parameter in board.php
0, by modifying the id parameter.
1, by uploading files that include scripting code such as Javascript.
2, via an HTTP request with an invalid (1) catid or (2) clipid parameter
4, via the (1) clipid or (2) catid parameters in a viewclip
2, via an HTTP GET request that contains a large number of / (slash) characters
4, via a direct request to (1) login.php
0, via the id parameter
4, via a Nessus scan in safeChecks mode.
2, via the text parameter.
2, via the search_string parameter.
4, via a .. (dot dot) in (1) module or (2) format variables.
1, via carriage return characters in the subject field.
0, via a direct HTTP request to (1) phpinfo.php
2, via the CPG_URL parameter.
4, via a .. (dot dot) in the startdir parameter.
3, via shell metacharacters in the (1) $CONFIG['impath'] or (2) $CONFIG['jpeg_qual'] parameters.
1, by modifying the CPG_M_DIR to reference a URL on a remote web server that contains functions.inc.php.
1, by modifying the THEME_DIR parameter to reference a URL on a remote web server that contains user_list_info_box.inc.
0, via an arbitrary character
4, via a .. (dot dot) in an HTTP GET request.
4, via a long -l parameter
4, via a direct request to banning.cfm.
4, via a link to adduser.cfm.
2, via the size tag.
2, via an invalid show parameter to modules.php
2, via the (1) ttitle or (2) sid parameters to modules.php.
2, via the (1) orderby or (2) sid parameters to modules.php.
4, via a certain UDP packet.
4, via a certificate with a long (1) subject or (2) issuer name field.
2, via the (1) cat parameter in a CatView function or (2) jokeid parameter in a JokeView function.
2, via the jokeid parameter.
4, via (1) a direct call to mainfunctions.php
1, by modifying the base_dir parameter to reference a URL on a remote web server that contains phpshop.cfg.
4, via a single & (ampersand) in a <Ref href> link
4, via an optlen value of -1
4, via a symlink attack on the name of the file being downloaded.
4, via (1) iframe
4, via a long GET request.
1, by modifying the modpath parameter to reference a URL on a remote web server that contains the code.
2, via an invalid show parameter
4, via a .. (dot dot) in the filename argument.
2, via the products_id parameter.
2, via format string specifiers in syslog messages.
4, via a long Basic Authorization header that triggers an out-of-bounds read.
0, via the referer parameter to log.php.
4," via a Basic Authorization HTTP request with a """"A=="""" value."
2, via the (1) URL
5, by requesting a long URL
4, via a long HTTP GET request.
4, via a long filename.
0, via a malformed HTTP GET or HEAD request without the proper number of trailing CRLF sequences.
2, via the id parameter.
4, via a long CWD command
4, via a BBcode img tag in (1) functions.php
4, via a direct request to (1) alt_news.php
2, via the (1) LAN_407 parameter to clock_menu.php
0, by modifying the p parameter to reference a URL on a remote web server that contains the code.
0, via (1) content parameter to content.php
2, via an HTTP request with a long username.
2, via unknown attack vectors.
4, via a .. (dot dot) in the pathext parameter.
3," by pressing CTRL-SHIFT-ALT-DEL and entering the """"maertsJ"""" password"
4, via a file:/// URL.
2, via the site parameter.
4, via (1) the mode parameter to privmsg.php or (2) the redirect parameter to login.php.
2, via the search_author parameter.
2, via the itemid parameter.
4, via (1) hidden form fields or (2) error messages.
2, via the (1) SearchFor parameter in [TABLE-NAME]_search.asp
2, via the (1) thread_id
2, via the feedback parameter.
2, via the (1) Email or (2) Website fields.
4, via a hex encoded extension or . in the filename.
2, via the (1) linpha_userid or (2) linpha_password cookies.
2, via the (1) user
2, via an empty NNTP news article with missing mandatory headers.
1, by opening the AClient tray icon and using the View Log File option
4, via a modified chroot-again exploit using the chmod command.
0, via format string specifiers in the (1) PASS or (2) RETR commands.
4, via a MIME header that is not properly terminated.
2, via the query parameter.
1, via malformed data to TCP port 2350
4, via a long request to TCP port 80
4, by issuing (1) a CD command with a tilde (~) character or dot dot (/../) or (2) a GET command for an unavailable file.
4," via a GET request wit a large number of leading """"/"""" (slash) characters."
3, by embedding a CLSID in the file name
2, via the xSearch parameter.
2, via multiple parameters
2, via an HTTP POST request with a long query parameter.
3, by using a qmail generated Delivery Status Notification (DSN) where the original email is not included in the bounce message.
0, by logging in using four spaces as the username and password and then issuing a LIST command.
2, via the VBScript LoadPicture method
4, via a long RSYNC_PROXY environment variable.  NOTE: since rsync is not setuid
4, via a URL that contains the script.
0, by injecting arbitrary HTML or script into the URL.
4, via a symlink attack on (1) /tmp/fvwm-bug created by fvwm-bug
2, via the HTML banner view/preview capability.
4, via a long pwd parameter
4, via (1) a malformed request for a Perl program with script in the filename
0, via a full pathname in the error parameter.
4, via a direct request to (1) /com/
2, via certain parameters to (1) search.asp
3, via Javascript in a URL.
2, via the hide_email parameter.
5, via a long filename.
4," via """".."""" (dot dot) sequences in the URL."
2, via the URL.
4, via a GET request with a long ftp:// URL.
4, via a .. (dot dot) in the URL.
2, via malformed HTTP requests such as (1) a GET request without the HTTP version (HTTP/1.1)
5, via a GET request with a long filename
2, via the URL.
2, via multiple incomplete GET requests without the HTTP version.
4," via (1) multi-dot """"......"""" sequences"
2, via the (1) use_last_read or (2) forum parameters.
2, via the (1) level parameter of productdetail.asp
0, via the GALLERY_BASEDIR parameter
4, via a .. (dot dot) in the file variable.
2, via the query string to ISAPISkeleton.dll.
4, via a series of long HTTP GET requests
2, via the (1) folder or (2) mode variables.
4, via a ..  (dot dot) in the p parameter.
2, via the (1) Name
4, via settings.pl.
2, via the subject variable.
0, via the filecatid parameter in the com_remository option.
4, via a direct request to regadmin.php.
2, via the (1) sortdir or (2) criteria parameter to ladder-log.asp or the (3) memberid or (4) teamid parameter to view-profile.asp.
0, via the fid parameter in a writenew action to thread-post.asp.
3," via malformed e-mail messages (1) without a body or (2) without a carriage return (""""\n"""") separating the headers from the body."
4, via a large number of placeholders.
4, via a very large data size.
4, via a direct request to (1) config/*
0, via the entry_id parameter to (1) exit.php or (2) comment.php.
2, via the link_id parameter.
4, via (1) the search field of the Address Module or (2) the t parameter to app_new.php.
2, via multiple connections to TCP port (1) 25 (SMTP) or (2) 110 (POP3).
4, via a long file request.
2, via the fname parameter.
2, via the URL
2, via the priceUntil parameter.
2, via the redirectUrl parameter.
2, via the (1) product parameter to showproduct.php or (2) cat parameter to showcat.php.
4, via unknown vectors.
3, via unknown vectors.
3, via the (1) country parameter to view_user.php
2, via the (1) sort_by or (2) page parameters to view_user.php
2, via the query string.
5," via """"../"""" or """"..\"""" sequences in commands such as (1) dir or (2) put."
4, via (1) the UnicodeConverter extension
4, via SpecialMaintenance.
4, via unknown vectors.
3, via unknown vectors.
2, via the (1) msg[0] or (2) siteurl parameters.
2, via the ttt_admin parameter.
2, via the (1) tms[0] or (2) url parameters.
3, via malformed (1) SMTP or (2) IMAP commands.
2, via the inc parameter.
2, via direct requests without required arguments to (1) adm_pages.php
1," by modifying the MM_recordId parameter on the """"My Account"""" page."
2, via the message text.
0, via via the message text.
0, via the FOR_ID parameter in messages.asp
2, via the (1) cat_id or (2) sub_id parameters in adDetail.asp
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
2, via the (1) n
2, via the (1) forum_id
2, via the forum_id parameter.
4," via a (1) trailing dot (""""."""") or (2) trailing space in an HTTP request."
4, via a URI with mixed case characters.
3, via unknown vectors.
2, via the password parameter.
0, via Javascript that uses an invalid URI
0, via a long parameter in an HTTP GET request.
2, via the dir parameter.
2, via an image with a large size attribute
1, via an HTTP GET request that contains MS-DOS device names such as com1.
4, via a crafted data: URI that is not properly handled when the user clicks the Save button.
4, via IPSEC credentials on a socket.
4, via (1) the query string in read.php or (2) unknown vectors in file.php.
4, via search.php. NOTE: some sources have reported that the affected file is read.php
5, by stealing and replaying the session hash in the phorum_uriauth parameter
3, via the (1) page parameter to viewalbum.php or (2) btopage parameter to viewpic.php.
2, via the conversation_id parameter to viewpic.php.
4, via a .. in the page parameter of the show command.
4, via a direct request.
2," via the """"login name/author"""" field in the (1) news submit or (2) article submit functions."
2, via the vc2 cookie.
2, via the image parameter.
2, via the album name.
1, via debug information in rowLatex.inc.php.
4, via a long report file name argument. NOTE: since Pads is not normally installed setuid
2, via unknown vectors in the sample code.
4, via a long HTTP GET request.
4, via a long finger command.
4, via a packet with a single byte
4, via shell metacharacters via the p parameter.
4, via a long server response.
2, via the pop parameter in a chat action to index.php.
2, via unknown vectors related to Java applets
4," via a """".."""" in the request."
4, via a crafted request that causes a page to be added to the clean page cache.
4, via shell metacharacters in a filename argument.
4, via a large multiplier
4, via .. (dot dot) in the wdir parameter.
2, via the loc parameter.
4, via a system folder with a Desktop.ini file containing a .ShellClassInfo specifier with a CLSID value that is associated with an executable file.
4, via a HTML and script in a self-executing folder that references an executable file within the folder
2, via an embedded script that uses Shell Helper objects and a shortcut (link) to execute the target script.
4, via a long STATUS command to the IMAP server.
2, via the (1) eid parameter or (2) query parameter to the Encyclopedia module
5, via hex-encoded XSS sequences in the text parameter
2, via the order parameter.
4, via a large
2, via an HTTP GET request with a long Range header.
4," via an e-mail with a long """"To:"""" field"
1, via large offsets in sysfs files.
5, by including a password-protected file in a ZIP file
4, via a shell: URI with double backslashes (\\) in an HTML tag such as IFRAME or A.
2, via the dir parameter in dohtaccess.html.
3, via multiple ../ (dot dot slash) in the DIR command.
5, via a Domino command in the Quick Console.
4, via a .. (dot dot) in the new folder dialog.
2, via an empty OPTIONS request.
4, via a GET request containing an MS-DOS device name such as COM1.
4, via a user message that is generated when Mbedthis denies access.
0, via requests with two percent (%) signs in the CMD parameter.
2, via the /001 log file to onedcu or (2) read arbitrary files via a symlink attack on a file in /tmp to onshowaudit.
4, via MBean attributes
2, via the (1) table and (2) field parameters in LinkClick.aspx.
2, via the (1) login or (2) password.  NOTE: this issue was later reported to also affect firmware 4.0.34.
2, via multiple malformed requests including (1) requests without GET
4, via an e-mail with a crafted RAR archive attached.
2, via the Load button in the Firewall Configuration Files option
2, via an HTTP request containing a large number of form fields.
1, by using Java reflection methods to access trusted Java objects without using the CreateObject function or cfobject tag.
3, via unknown vectors.
5, via (1) a hex-encoded value to the variable parameter in emumail.fcgi
2, via the username and password fields of the login form.  NOTE: the original vulnerability report contains several significant inconsistencies that make it unclear whether the report is accurate
2, via the isearch_path parameter.
4, via a malformed request to the server
4, via (1) the Subject field in post1.htm and (2) the File Description field in postfile2.htm.
5, via shell metacharacters such as '|' in the file parameter of ViewFile requests.
2," via an encrypted ZIP file with the """"include full path info"""" option set"
2, via the search_results parameter.
2, via multiple parameters
1, via cookies that are stored in the $_COOKIE PHP variable
0, via the entry parameter to modules.php
2, via the name field of a livehelp or chat session.
3, by connecting to the server and then disconnecting without sending any data
2, via the id parameter.
4, via a UDP packet with incomplete data
4, via a null or invalid value in the limit parameter
4, via hex-encoded tags
4, via URLs that are automatically executed on behalf of the administrator
4, via a SITE command with a long argument.
4, via a long FTP command.
2, via the systempath parameter.
4, via a .. (dot dot) in the directory creation command.
5, via a Yahoo Messenger packet with a long key name.
4, via a request for phptest.php
2, via an APOP USER command with a long second parameter (digest).
4, via a URL request with a long attfile attribute.
2, via certain network scans
4, via a large number of POP3 connections to the server.
4, via (1) the Displayed Name attribute in util.pl and (2) the Folder attribute in showmail.pl.
4, via a .. (dot dot) in the attfile parameter.
1, via HTTP requests with a large Content-Length.
4," via a malformed URL such as """"?""""."
2, via an HTML document with Javascript that is outside a frameset that includes the target domain
3, by creating a file with a long filename
2, via an HTTP request for init.emu.
0, via format string specifiers passed from the HandleCPCCommand function.
3, via user re-registration.
0, via unknown attack vectors
4, via a large number of failed read attempts from the password buffer.
2, via delayed responses to DNS queries.
2," via an HTML message with long """"tag text."""""
4, via a hex-encoded to parameter.  NOTE: some sources say that the board parameter is affected
5, via a link or IMG tag to YaBB.pl that specifies the desired action
2, via the catalogid parameter in (1) shopreviewlist.asp and (2) shopreviewadd.asp.
2, via the (1) Processed0 and (2) Processed1 parameters in a POST request to shopproductselect.asp.
5, via (1) a very large XML file or (2) entity expansion attacks.
4, via a long HTTP GET request.
0, via format string specifiers in the (1) client hostname or (2) message-id
4, via a long command
2, by reading the dmscore.db file on the local system.
4, via a port scan involving reset packets.
4, via (1) a long sender field to the Queue Manager or (2) a long To field to the Web Messaging component.
4," via """"specific content."""""
3, via unknown actions in HTTPS sessions
2, via the (1) qmail_parseline and (2) sendmail_parseline functions in parser.c
4, via a request for a file with a long file name
4," via a link with """"::{"""" (colon colon left brace)"
0, via the rowstart parameter to (1) index.php or (2) members.php
2, via the (1) Submit News
2, via an HTTP request to admin.php with the logged cookie set to the MD5 hash of a null password
2, via the action parameter.
4, via a .. (dot dot) in the gadget parameter.
4," via a """".."""" (dot dot) sequences in unknown vectors."
0, via the Mailbox parameter to (1) viewmail.tagz
4, via a long
1, by using TFTP to download the nvram file
0, via the user parameter in a userinfo action.
4, via a large amount of UDP traffic.
3," via an """"infinite"""" Unique IDentification Listing (UIDL) list."
4, via a symlink attack on the cplay_control temporary file.
4, via a long GET request.
4," via hex-encoded """"..//"""" sequences (""""%2e%2e%2f%2f"""").  NOTE: it was later reported that 0.6.21 and earlier is also affected."
2, via the username parameter.
4, via a long username parameter
2, via the search parameter.
3, via unknown vectors.
4, via a flood of small
4, via a symlink attack on temporary files.
0, via the mid parameter to sendtofriend.php.
0, via about.html in the About section.  NOTE: some followup posts suggest that the demonstration code's use of the res:// protocol does not cross privilege boundaries
2," via an IFRAME with """"?"""" as the file source."
0, by overwriting the current Service Descriptor Table (SDT) in \device\physicalmemory with the original SDT found in ntoskrnl.exe.
0, via URLs containing invalid hostnames that cause DNS operations to fail
4," via """"@@"""" sequences in a URL within Internet Explorer."
2, via the message parameter to (1) event.php or (2) index.php.
4," via (1) """".."""""
4," via """"C:"""" sequences in the (1) RETR (get)"
4, via a modified INFORMIXDIR environment variable that points to a file with format string specifiers in the filename.
4, via a long GL_PATH environment variable.
2, via the erromsg parameter.
4, via a large number of POST requests to /Search.
2," via unknown attack vectors when a web site is """"improperly accessed."""""
4, via (1) a long command string or (2) a long string to the MEIMAP service and then terminating the connection.
4, via a symlink attack on the imswitcher[PID] temporary file.
4, via a large number of connect/disconnect actions to the (1) POP3 and (2) SMTP services.
4, via a direct HTTP request to the config.inc file.
0, via an absolute pathname in the next_file parameter.
2, via the next_file parameter.
2, via the Cat parameter.
4, via (1) the year
4," via CRLF (""""%0d%0a"""") sequences in the PHPSESSID parameter."
4, via a long SELECT command.
2, via the (1) SUBJECT or (2) MESSAGE field.
2," via an HTTP GET command with a large number of """"./"""" sequences followed by """"../"""" sequences."
4, via a long HTTP POST request in a View=Logon operation to index.html.
4," via (1) a trailing null byte (""""%00"""") to a URL or (2) an invalid LANGUAGE parameter to web.tmpl"
1, via directory specifiers in the LANGUAGE parameter to (1) index.tmpl and (2) web.tmpl
4, via a large numeric value in the (1) LIST
4, via a large number of connections to TCP port (1) 25 (SMTP) or (2) 110 (POP).
2, via the (1) template or (2) language parameter.
2, via format string specifiers in the message argument.
1, by using the clogin_e and base64_encode functions to encode the desired user ID in the c parameter
2, via the searchTerm variable.
4, via a .. (dot dot) in the Template parameter.
2, via the cam parameter.
5, by sending a very small image file
4, via a filename with a large number of spaces followed by the real extension
0, via certificates containing long chains and signed with large RSA keys.
4," via a SITE CHMOD command with a """"\\...\"""" followed by a short string"
1, by using the group's public encryption key.
2, via the (1) header or (2) footer.
2, via unknown attack vectors
1, via crafted serialized data.
2, via unknown attack vectors
2, via invalid traffic to the (1) T.120 or (2) RTSP proxy
2," via unknown attack vendors involving an """"extremely busy network.""""  NOTE: this might not be a vulnerability because the embedded monitoring sub-system automatically restarts after the failure."
0, via HTTP requests that (a) specify the / URI
5, via (a) a URI containing the script
4, via (1) the sys_comment_id parameter in editcommentenduser.asp
4, via a long -icshost command line argument. NOTE: since the program is not setuid and not normally called from remote programs
0, by using the unofficial umode command with the +ORD argument.
4, via (1) the ISS_TECH_CENTER_LOGIN cookie in search.asp and (2) one or more cookies in DoCustomerOptions.asp.
2, via the id parameter.
2, via the (1) user id
2, via the (1) user id
5, via a symlink attack on the ipmenu.log temporary file.
2, via the (1) parseQmailFromBytesLine
3," by entering (1) invalid characters such as """"()"""" or (2) a large number of characters in the Lookup field on the netaddressbook.php web form"
2, via an external URL in the appdir parameter.
0, via the date parameter in a calendar.uicalendar.planner menuaction.
4, via a direct request to (1) hook_admin.inc.php
2," via an unspecified attack vector involving a string that contains escape sequences represented with """"overlong UTF-8 encoding."""""
3, via unspecified vectors.
4," via a URL with a """"specific string."""""
4, via a large number of simultaneous open connections to TCP port 25.
4," via a folder name with a null byte (""""%00""""). NOTE: it is not clear whether this issue poses a vulnerability."
4," via Javascript to the """"check spelling"""" feature in the compose area."
2, via the filename parameter.
4, via a long txtusername parameter
4, via a long HTTP Content-Length header
4, via a URL in the SKIN_inner parameter to inc/skin.php.
4, via a URL in the HCL_path parameter to pipe.php.
0, via the find parameter to index.php.
2, via the error parameter.
4, via a symlink attack on (1) the aStats-Graphic-Signature-Generation file and (2) certain PNG image files.
4, via a large len argument
4," via four """"stuffit /f:stuffit.dat"""" invocations"
4, via shell metacharacters in a remount option in the configuration file.  NOTE: It is not clear whether this is a vulnerability because there is not necessarily any common usage in which privilege boundaries are crossed.  Typical usage would restrict write access to the configuration file.
4, via a long HTTP GET request.
3, by uploading a file
4, via a .. (dot dot) directly after the initial '/' (slash) in the URI.
2, via the URI
4, via a base64 MIME encoded attachment containing invalid characters that are not properly extracted.
2," via the """"phrase"""" parameter."
0, via Javascript in an attribute of an IMG tag.
3, by overlaying a confirmation message with a malicious message.
3, via shell metacharacters in unspecified vectors.
3, via modified $cfg['Servers'] variables.
4, via unknown vectors.
5, via a symlink attack on temporary files via unknown attack vectors.
2, via web pages that use the control's RegQueryValue() method.
4," via """"/./"""" in the URL."
1, by modifying the in_login parameter to a non-zero value.
2, via unknown attack vectors.
4, via (1) .. (dot dot) sequences or (2) absolute paths to the template parameter.
4," via """"../"""" sequences in file names in a CAB archive."
2, via unknown attack vectors that cause the usrName variable to be null.
2, via multiple connections from the same user.
1, by overwriting the db.fzx file.
3," by inserting a large number of characters (e.g. spaces coded as """"&#32"""") in the middle of the URL."
0, by triggering various error conditions in the retrieve function
2, via the (1) urlmaskfilter parameter to index.html or the (2) page parameter to Wiki.html.
2, via unknown vectors involving (1) admin/userlevelmembers-edit.asp and (2) admin/edit-groups.asp.
1, via unspecified vectors that trigger a null dereference.  NOTE: in a followup advisory
4, via (1) the topic parameter in search.pl and (2) the filter parameter in submit.pl.
3, via certain O_DIRECT (direct IO) write requests.
1, via certain data related to OpenSSL
1, via direct requests to certain scripts that result in an undefined value of ADODB_DIR
2, via unknown attack vectors.
4, via unknown vectors.
1, via parameters including (1) s
4, via (1) the mod parameter in a viewcat operation or (2) the query parameter in a search operation in the publisher module.
2, via certain direct requests
3, via unknown vectors.
4, via (1) a SITE ZIP command with a long first or second argument
4," via """".."""" sequences in the SITE UNZIP argument."
4, via a SITE PASS command with a long password parameter
1, via format specifiers in the (1) clientRcptTo array
0, by sending an Internet Key Exchange (IKE) with a certain Vendor ID payload that causes Firewall-1 to return a response containing version and other information.
4, via a long address in a ping (p) command to the Telnet proxy service
2, via the cat_id parameter.  NOTE: this issue might overlap vector 3 in CVE-2006-3358.
4," by setting a cookie to the """"autorized=admin; root=admin"""" value."
4, via a crafted request to the web management interface.  NOTE: the provenance of this information is unknown; details are obtained from third party reports.
4, via a backtick operator
2, via the x_invoice_num parameter.  NOTE: this issue might be related to CVE-2006-4267.
4, via a symlink attack on a command line argument (log file).  NOTE: this might be related to CVE-2006-5002.
4, via a modified ProductID parameter.
4, via admin/images.aspx.
2, via the returnurl parameter.
2, via the login_name parameter.  NOTE: this might be the same vector as CVE-2006-6451.
2, via conference packets with error messages.
1, via unknown vectors involving HTML tags.
1, via vectors related to (1) sending certain typing statuses or (2) setting the chat room status bar to the current chat room name.
4," via vectors related to """"avatar retrieval."""""
1," via unspecified vectors related to """"URL data."""""
0, via format string specifiers in a font specification in WMGLOBAL
2, by setting the do_not_login parameter to false.
2, via the (1) sortBy
4, via a .. (dot dot) in the (1) sheet and (2) What parameters.
4, via a mail message with a long From field
4, via javascript events in the Email parameter.
4, via a username beginning with percent (%) followed by a null character.
4, via (1) the search parameter in (a) search.php
4, via a long HTTP GET request.
2, by changing the program for handling incoming connections.
2, via the cmd=test option
4, via (1) SET_PREFERENCES parameter in SetPreferences.cgi; (2) BRANCH parameter in branchView.cgi; (3) FSPC and (4) COMPLETE parameters in changeByUsers.cgi; (5) FSPC
2, by setting the UserId and UserType values in a cookie.
2, via the where parameter.
2, via the user_id parameter.
2, via unknown attack vectors.
4, via a URL in the path_pre parameter.
2, via the (1) module
1, via unspecified parameters related to names of uploaded files.
4, via a .. (dot dot) in a URL.
2, via the (1) username and (2) password parameters.
2, via an invalid profileid parameter
2, via the directory parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via url parameter.
4, via a crafted e-mail message
4, via shell metacharacters in the (1) query string or (2) artarchive parameter.
3, by triggering a free of statically allocated memory.
0, via format string specifiers in a web page.
4, via shell metacharacters in a URL.
4, via a symlink attack on temporary files.
4, via a symlink attack on temporary files.
4, via (1) an IPv6 address with more than 8 components
4, via a modified DISPLAY environment variable. NOTE: the severity of this issue has been disputed.
0, via queries that trigger the overflow in the q_usedns array that tracks nameservers and addresses.
4, via a compressed DNS packet with a label length byte with an incorrect offset
4, via a compressed DNS packet with a label length byte with an incorrect offset
4, via a compressed DNS packet with a label length byte with an incorrect offset
2, via the (1) register a new user page
4, via a long URL in (1) .m3u or (2) .pls playlist files.
0, via an anonymous logon using a named pipe
4, via a crafted message.
4, via a PDF file with a large /Encrypt /Length keyLength value.
4, via a symlink attack on temporary files.
1, via setuid applications that use the library.
4, via a symlink attack on a temporary PID file.
4, via a crafted packet.
2, via the config parameter
4, via a crafted file
4, via a crafted URL.
1, via crafted responses.
0, via malformed WCCP messages with source addresses that are spoofed to reference Squid's home router and invalid WCCP_I_SEE_YOU cache numbers.
0, via a malformed NTLM type 3 message that triggers a NULL dereference.
2, via the command line.
4, via a long string without a newline character.
4, via a length value of -1
3, by modifying a URL parameter to reference a URL on a remote web server that contains the code.
2, via certain integer variables.
5, via a RADIUS_REPLY_MESSAGE with a RADIUS attribute length of 1
5, via a web page with a body element containing an onclick tag
4, via a long password parameter.
2, via the SUN_TTSESSION_CMD environment variable
5, via a PE file with an Import Address Table containing a long import library name.
4, via a long GECOS field.
2, via the elvrec setuid program.
2, via the elvprsv setuid program.
5, via (1) a long map name command line argument or (2) a long username as recorded in the USER environment variable.
5, via negative vi.in_size or vi.out_size values
0, via malformed ICC color profiles that modify the heap.
4," via a channel name containing """"%"""" variables"
4, via shell metacharacters in (1) channel names or (2) song names that are not properly quoted when the user runs IRC scripts.
4, via a ZIP file with malformed headers.
1, via crafted syscalls
4," via a """"missing Itanium syscall table entry."""""
5, via a PE file with an Import Address Table containing a long import library name.
3," via links """"with a custom getter and toString method"""" that are middle-clicked by the user to be opened in a new tab."
0, via Javascript that generates a middle-click event on systems for which a middle-click performs a paste operation.
4," via """"URL manipulation."""""
3, by using a valid cookie that specifies an address other than the address for which the cookie was assigned.
4, via a symlink attack on temporary files.
4, via (1) 2 overflows in ACE archives
2, via an ACE archive containing (1) ../ sequences or (2) absolute pathnames.
4, via a username with a space at the beginning or end
0, via headers that do not follow the HTTP specification
2, via an HTTP response splitting attack.
2, via the mlockall call.
2, via negative integers in arguments to the scsi ioctl
4, via shell metacharacters in a command line argument.
4, via a .. (dot dot) in a get request.
5, via a LinkDown-Trap packet that contains a long OCTET-STRING in the Trap variable-bindings field.
4, via a long skin name.
0, via format string specifiers in an invalid URL that is recorded in the debug log.
4, via a long ShowPreferences argument.
4, via a Real Metadata Packages (RMP) file with a FILENAME tag containing .. (dot dot) sequences in a filename that ends with a ? (question mark) and an allowed file extension (e.g. .mp3)
4, via a long tag.
4, via a .. (dot dot) in an RJS filename.
4, via a crafted IPv6 packet.
5, via a long MODE line that causes an incorrect length calculation
4," via """".../....///"""" sequences"
0," via malformed HTML that causes """"an invalid memory access"
1, via crafted IP packet fragments.
2, via certain packet fragments that are reassembled twice
4, via a long WCCP packet
4, via a zero byte UDP packet.
5, via a .. (dot dot) in a zip file.
4, via a .. (dot dot) in the entry parameter.
4, via a XBM (X BitMap) file with a large (1) height or (2) width value.
2, via the eid parameter.
4, via a base64 encoded image in a data: (RFC 2397) URL.
4, via (1) the index field in add_comment.php
2, via the username field.
2, via the g2_form[subject] field.
0, by changing the value of g2_subView parameter
4, via object deserialization.
3, by using a plugin such as Flash
5, uses homograph characters from other character sets
4, uses homograph characters from other character sets
4, uses homograph characters from other character sets
5, uses homograph characters from other character sets
4, via shell metacharacters in the cert parameter.
0, via format string specifiers in a command line argument
4, via a large number of arguments to a refcursor function (gram.y)
5, via (1) a large number of variables in a SQL statement being handled by the read_sql_construct function
4, via a UPX compressed file containing a negative virtual offset to a crafted PE header.
4, via a glob pattern with a large number of * (wildcard) characters
4, via a long packet to UDP port 41524
2, via the (1) expand or (2) order parameter.
2, via the (1) parent or (2) sortposted parameter.
2, via the (1) return_module
2, via carriage returns and #10 in the url_avatar field
2, by placing the code into the url_avatar field.
2, via the (1) si parameter to showcat.php
2, via the (1) cat parameter to showcat.php or (2) product parameter to addfav.php.
5, by posting a review file with multiple extensions
2, via the (1) cat or (2) ppuser parameter.
2, via the (1) cat
4, via a GET request containing an MS-DOS device name.
0, via format string specifiers in (1) the username
4, via (1) a long username in the USER command or (2) an FTP command that contains a long argument
4, via a cd command that contains an MS-DOS device name
0, via format string specifiers in a message.
4, via a user message
2, via the uid parameter.
4, via a .. (dot dot) and a %00 at the end of the filename in the page parameter.
2, via an HTTP request for a .bhtml file that contains a (1) . (dot) or (2) + (plus sign) at the end
4, via a report template with modified ReportPath or ReportName values.
4, via a .. (dot dot) in the month parameter.
2, via an HTTP request for a file that the web server does not have permission to read
4, via a .. (dot dot) in the (1) dir parameter to controller.php or (2) dir_name parameter to controlleroo.php.
5, via a .. (dot dot) in the table parameter.
4, via a direct request to the program.
2, via the referer field in the HTTP header.
2, via the error parameter.
4, via a .. (dot dot) in a filename in a ZIP file for a skin.
0, via the line parameter in a docreate operation.
2, via an HTTP request with the n parameter set to 0
2, via the (1) s
4, via a large import or export function name.
2, via the module parameter.
4, via a direct HTTP request to (1) search.info.php
2, via certain parameters to upload.php or (2) read arbitrary files via certain parameters to download.php
2, via the personal information fields.
2, via the user parameter.
2, via the (1) username parameter to login.html
2, via an HTTP request to (1) calendar_d.html
2, via the URL.
2, via an HTTP request that contains invalid characters for a Windows foldername
4, via a packet with large values that are not properly handled in certain malloc or memcpy operations.
2, via an invalid or missing action parameter
4, via a modified action parameter that is used in an include statement for login.php.
4, via a ZIP file with a file whose name includes .. (dot dot) sequences.
0, via the AttachmentsKey parameter to attachment.do
4, via a malformed UDP packet.
2, via an HTTP POST request containing an unknown parameter without a value.
4, via a .. (dot dot) in the URL.
4, via a long HTTP request.
5, via a long MAIL FROM command.
4, via a negative UAM string length in a FPLoginExt packet.
5, by creating a hard link from the .DS_Store file to an arbitrary file.
2, via the view parameter.
4, via a .. (dot dot) in the filename parameter.
2, via an RGS file with an invalid size string for the GUID and game name
2, via an RGP file with a .. (dot dot) in the FILENAME tag.
4, via a crafted ARJ archive.
5, by sending a large amount of data to UDP port 5093.
4, via a spoofed packet with a large timer value
4," via shell metacharacters in the (1) """"pluginmode"""""
4, via shell metacharacters in the config parameter.
2, via the (1) EntryID or (2) searchterm parameter to index.php
5, via a packet with a large (1) descriptor ID or (2) claim_id
2, via an empty UDP packet
4, via a large number of player connections that do not send any data.
4, via .. (dot dot) sequences in filenames returned from a LIST command.
4, via an [img] bbcode image tag with an event such as mouseover.
2, via an HTTP request with (1) idalbum and (2) idimage unset
1, by modifying the DOCUMENT_ROOT parameter to reference a URL on a remote web server that contains (1) config.php or (2) sql_layer.php.
2, via the (1) idalbum or (2) idimage parameters.
2, via the (1) group parameter to prefs.php or (2) url parameter to index.php.
4, via a .. (dot dot) in the _zb_path parameter to (1) _head.php or (2) outlogin.php
2, via the members parameter.
2, via an empty UDP packet
4, via a replay attack of the encrypted username and password.
4, via a pppd client.
4, via MIME text/enriched or text/richtext messages.
2, via the fields of a CSV file.
5, via .. (dot dot) sequences in the load parameter.
2, via the page parameter.
4, via (1) the fid in forum.php
4, via a reply post action for index.php with (1) the t parameter or (2) the qu parameter.
1, via malformed MQL statements.
2, via long FTP commands
2, via the password field.
4," via """"Heavy UDP Usage"""" that triggers a NULL dereference."
4, by sending a random stream of bytes.
0, via invalid or missing arguments to (1) db.php
4, via (1) the newdownloadshowdays parameter in a NewDownloads operation or (2) the newlinkshowdays parameter in a NewLinks operation.
1, by setting the loadplugin and pluginmode parameters to rawlog.
2, via the PluginMode parameter.
4, via .. (dot dot) sequences in the loadplugin parameter.
0, by setting the debug parameter.
0, via attachments with long file names.
4, via a modified URL.
3, via the (1) attrib_valid function
2, via the language parameter.
2, via an invalid language parameter
2, via the domain name parameter (logindomain) in the login page.
1, via certain DNS responses regarding (1) Fully Qualified Domain Names (FQDN) in fqdncache.c or (2) IP addresses in ipcache.c
1, via crafted packets
2," via an HTTP request containing (1) .. (dot dot) or (2) """"%2e%2e"""" (encoded dot dot) sequences."
2, via an HTTP request containing two CRLF sequences
1, via Unicode representations for ASCII fullwidth characters that are converted to normal ASCII characters
4, via (1) the lcat
4, via the enquiry parameter.
0, by setting the debug parameter.
2, via the f parameter.
0, via responses that contain a large number of characters that require escaping
4, via invalid EAPOL-Key packet data.
0, via malformed SNAC packets from (1) AIM or (2) ICQ.
0," via malformed HTML that causes """"an invalid memory access"
2, via an encoded webcalendar_session cookie.
5, by posting a message.
4, via (1) a signature file or (2) a message post containing an IMG tag within a COLOR tag whose style is set to background:url.
5, via (1) an HTTP request with a long User-Agent header or (2) a long argument to an arbitrary PHP script.
4," via """".."""" sequences and (1) """"/"""" slash)"
2, via the login request
0, via the fn parameter in a direct request to the ComGetLogFile.php3 script.
4, via (1) a large number of connections with a negative Content-Length header
2, via an FTP transfer with a crafted filename that causes format string specifiers to be inserted into the ProFTPD transfer log.
2, via the showpost parameter.
2, via unknown vectors that cause an invalid access of free memory.
4, via a long type 77 request.
4, via a PDF file that contains a negative Count value in the root page node.
4, via CRLF sequences and forged mail headers in the email parameter.
2, via the (1) sn1
3, by uploading a .profile that sets the ADPROOT environment variable to the root directory.
4, via a direct request to backup.cfg
1, via malformed DNS queries.
4, via a long nickname.
4, via (1) ../ and (2) ..\ characters in an HTTP request.
4, via .. sequences in an HTTP request.
2," via certain features of the Rhino scripting engine due to a """"script security issue."""""
1, via Unicode representations for ASCII fullwidth characters that are converted to normal ASCII characters
1, by modifying the mosConfig_absolute_path parameter to reference a URL on a remote web server that contains the code
4, via search parameters.
2, via certain commands that generate thumbnails.
3, by uploading a ZIP file containing a shortcut (.LNK) file
3, via shortcut (.LNK) files in the SITE COPY command
2, via format string specifiers in the Location header.
4, via (1) the search string to search.php
0," via plugins that load """"privileged content"""" into frames"
4, via a parameter related to image deletion.
2, via the (1) cats
4, via a direct request to the /about.html page.
1, by modifying the consolename parameter.
2, by setting the adminUser parameter to true.
4, via (1) the strServer
1, via direct requests to (1) sqlvalidator.lib.php
0, by using the browse feature in Office 10 applications such as Word or Excel
4, via (1) an off-by-one error in the imapd annotate extension
2, via the Search function.
2," via the """"View Log Files"""" function."
5, via a crafted X-LINK2STATE extended verb request to the SMTP port.
4, via a GIF image with an improper height and width.
2," via an email message with an encoded javascript: URL (""""jav&#X41sc&#0010;ript:"""") in an IMG tag."
1, by setting the Image field to reference a PHP file whose name contains a .gif.php extension.
4, via a long RNTO command.
2, by modifying the (1) theme parameter to phpmyadmin.css.php or (2) cfg[Server][extension] parameter to database_interface.lib.php to reference a URL on a remote web server that contains the code.
4, via a large cl_guid value
2, via the (1) language parameter to register.php
1, by setting the user's password to NULL.
2, via the plugin parameter.
2, via an invalid SEA_search_module parameter
5," via a file transfer in which the filename contains """"("""" or """")"""" (parenthesis) characters."
4, via .. (dot dot) sequences in the URL.
4, via a long HTTP GET request.
1, via crafted BDF font files.
4, via (1) certain long fields in the Checksum item in a GCR request
0, via a long filename in a PUTOLF request.
4, via .. (dot dot) sequences in a PUTOLF request.
2, via the Content-Disposition header
0, by tricking the user into downloading a .LNK (link) file twice
4, via (1) a web site that does not finish loading
4, via a long mfcisapicommand parameter.
1, by using the readfile function on a file whose size is a multiple of the page size.
4," via a """"crafted TCP connection."""""
3, via malformed packets.
0, via a highlight parameter containing invalid regular expression syntax
4, via a negative bitmap_unit value that leads to a buffer overflow.
2, via direct calls without parameters to (1) information.php
4, via a POST request with a Content-Length that is less than the amount of data that is actually sent.
4, via pkg_fetch
2, via the autologinid value in a cookie.
2, via the (1) Program name
2, via the show parameter.
0, by triggering an error
4, via (1) the keyword parameter in search.php or the (2) body or (3) subject of a forum message.
2, via the (1) user or (2) Avatar parameters.
0, via a full pathname in the orig parameter.
1," by modifying the """"id"""" and """"a"""" parameters."
4, via a crafted PNG image file.
4, via a long USER command.
4, via a long USER command.
2, via format strings in the USER command.
4," via """"buffer management errors"""" from certain image properties"
2, via the (1) name or (2) description in a report template.
2, via an imported file.
1, via crafted LHA files.
4, via a malformed LHA file with a type 2 header file name field
2, via the mysql_prefix parameter.
2, via the (1) $form[comments] or (2) $form[autoapprove] parameters
4," via (1) """"decimal HTML entities"""" or (2) """"the \x00 symbol."""""
4," via """"hexadecimal HTML entities."""""
4," via (1) the pages parameter to divers.php (incorrectly referred to as """"drivers.php"""" by some sources)"
4," via (1) liste or (2) desc parameters to divers.php (incorrectly referred to as """"drivers.php"""" by some sources)"
2, via an HTTP request with an invalid id parameter to (1) teman.php
2, via the (1) hits parameter to hits.php
4, via a .. (dot dot) in an HTTP request.
2, via the category_uid parameter.
4, via a direct request to oracle.php
2, via certain fields
2, via the (1) userid or (2) lastvisit cookie.
2, via the Avatar field.
2, via the f parameter.
0, via format string specifiers in a filename.
4, via an e-mail message with certain headers containing non-ASCII characters that are not properly handled when the user replies to the message.
4, via the (1) the faq_id in the faq mod
4, via (1) the new parameter to mod.php
1, by setting the (1) allowhtml
2, via the text hidden parameter in an HTTP POST request.
2, via the (1) list or (2) frommethod parameters.
0, by modifying the id parameter.
1, by modifying the script_root to reference a URL on a remote web server that contains the code.
1, by modifying the script_root parameter to reference a URL on a remote web server that contains the code.  NOTE: it was later reported that 2.4 is also affected.
2, by modifying the script_root parameter to reference a URL on a remote web server that contains the code.
4, via a Bluetooth nickname.
3, via certain inputs.
0," via (1) an HTTP GET request with a long file parameter after a percent (""""%"""") sign or (2) a long Lock-Token string to the WebDAV functionality"
1, by modifying the rootFolder parameter to displaynavigator.jsp
0, via format string specifiers in a reply address
4, via shell metacharacters in (1) the URL or (2) the template parameter.
0, by modifying the name parameter to reference a URL on a remote web server that contains the code.
4, via a message with IMG bbcode containing character-encoded Javascript.
4, via a long nickname.
5," by providing a portion of the domain name to the """"login ID"""" field."
4, via a long DELE command. NOTE: this issue was later reported to also affect 1.4.3.5.
1, by modifying the (1) G_PATH parameter to init.inc.php or the (2) PATH parameter to index.php to reference a URL on a remote web server that contains the code.
2, via RADIUS authentication packets with large length values.
4," via """"\\.\\..""""  (modified dot dot backslash) sequences to UTL_FILE functions such as (1) UTL_FILE.FOPEN or (2) UTL_FILE.frename."
2, via the username field in forum messages.
4, via a long EXAMINE command.
0, by aborting the connection during a (1) PUT or (2) POST request
1, by modifying the skinfile parameter to reference a URL on a remote web server that contains the code.
0, by modifying the file parameter to reference a URL on a remote web server that contains the code.
4, via a direct request to modules.php without any parameters
2, via the URL parameters
4, via (1) an invalid str parameter to pafiledb.php
2, via the articleid parameter to article.php.
2, via the Number parameter.
2, via format string specifiers in a message.
4, via a request to a file on the floppy drive
4, via a direct request to Filelist.html.
4, via a request for a non-existent filename
2, via an HTTP request with a full pathname
4, via a large number of HTTP requests.
0, by setting the mode parameter to admin.
4, via a large number of events.
2, via the offline mode.
0, by deleting or moving a folder with deeply nested subfolders
1, via crafted values in the TCP timestamp option
0, via the username parameter in a usersrecentposts action.
4, via unknown vectors.
4," by dialing """"*#26845#"""" and causing a device reset."
2, via the PWD command.
0, by reusing the hidden ID field
1, by modifying the absolute_path parameter to reference a URL on a remote web server that contains the code.
4, via a crafted ELF library or executable
4, via (1) socket or (2) socketpair call with a negative protocol value.
5, via a crafted file containing long escape sequences.
1, via malformed SLP packets.
2, via format string specifiers in a dynamic link library (DLL) name.
2, by calling methods to the RPC interface on TCP port 6106.
2, via the uid parameter.
4, via (1) the check_tags function or (2) the editbio field in the user profile.
4, via a direct request to (1) auth.php
0, via the start parameter to pafiledb.php.
2, via the start parameter to pafiledb.php.
2, via the filename of an attached file.
4, via (1) the subject line to follow.php or (2) the subject line in the user's personal control panel.
2, via the username parameter.
2, via the quote parameter to guestbook.php.
1, by specifying the full pathname in a Gnutella GET request.
4, via a .. (dot dot) in a magnet request.
4, via a direct request to (1) lib-xmlrpcs.inc.php
2, via the (1) uname parameter to index.php or (2) page parameter to zpanel.php.
1, by modifying the page parameter.
4," via a """"holaDB/votes"""" followed by a .. (dot dot) in the vote_filename parameter"
0, by modifying the l parameter to reference a URL on a remote web server that contains the code
4, via (1) a .. (dot dot) or (2) a full pathname in the URL.
2, via the search parameter.
4, via a crafted Enhanced Metafile (EMF) file that causes invalid (1) end
0, via format string specifiers in the mailto field.
1, via crafted messages
4, via (1) an IKE packet with a large ID field that is not properly handled by the PSK sniffer filter
4, via a crafted AJP12 packet to TCP port 8007.
2, via the URL.
3, via unknown vectors.
4, via unknown vectors.
4, via a crafted filesystem.
2, via the (1) email or (2) Jabber parameters.
4, via a direct request to GUIMirror/Start.
4, via a crafted highscores file.
4, via a dynamic link library (DLL) with a long filename.
2, via the (1) user_name or (2) user_pass parameters.
2, by registering with a username containing hex-encoded characters.
3, via unknown vectors.
1, by sniffing URIs from UPNP datagrams
3, via unknown vectors.
0, via the value parameter of a property tag in a JNLP file.
4, via a request for a .xsl file with a trailing . (dot).
4, via (1) a long test value in an xsl:when tag
2, via the (1) _i or (2) _c parameter.
2, via the body parameter
4, via a .. (dot dot) in the attach_id parameter.
2, via the (1) message subject or (2) message header field.
4, via a large number of connections.
4, via a request for a filename containing an MS-DOS device name such as CON
2, via an empty datagram to a raw IP over IP socket (IP protocol 4)
2, via direct requests to (1) entete.php
2, via certain requests to (1) alert.php or (2) viewip.php
2, via the img parameter.
4, via (1) the pseudo parameter to entete.php or (2) the login parameter to register.php.
2," via the tpath parameter to (1) headlines.php or (2) news.php.  NOTE: some sources have reported the """"dir"""" parameter as being affected; however"
2, via the dir parameter to (1) article.php
0, via the phpbb_root_path parameter to (1) poc_loginform.php or (2) phpbb/poc.php
4, via (1) the chatter parameter to regulars.php or (2) the chatter
5, by writing to a sysfs file.
4, via a direct request to (1) class.OpenBSD.inc.php
2, via the start parameter.
2, via the (1) desname or (2) repprod parameter.
2, via the DHCP lease file.
3, via answers to queries that were not made by Dnsmasq.
2, via the title field of a PM (private message).
4, via a URL in the act parameter.
2, via an invalid act parameter
2, via the Articleld parameter.
2, via the (1) userid or (2) userpw parameters.
4, via (1) the mt parameter to the membres.php page or (2) the -afs-1- query string to the msg.php page.
2," via the (1) Mood or (2) """"Send To"""" fields."
2, via an HTTP POST request.
2, via the menuAction variable in (1) functions.inc.php or (2) main.php
2, via the (1) class or (2) method name.
2, via the area parameter.
2, via the area parameter.
5, via a long string in the MAIL FROM command and possibly other SMTP commands.
4, via a symlink attack on (1) temporary files in the openmosixcollector directory or (2) nodes.tmp.
4, via a large number of ping packets.
2, via the (1) subcat
0, by modifying the menu and main parameters to reference a URL on a remote web server that contains the code.
2, via the txn_id parameter.
2, via an invalid (1) file or (2) category parameter
2, via the (1) catname
2, via the category parameter.
4, via a JPEG file with crafted Huffman Table (marker DHT) data.
2, via the m2_search_text property.
4, via (1) the id parameter to category.php
4, via (1) the lang parameter to index.php or (2) the searchTopCategoryID parameter to search_result.php.
2, via the query parameter.
4, via (1) the sortdays parameter to viewforum.php or (2) the viewcat parameter to index.php.
4, via (1) the viewcat parameter to index.php or (2) the artid parameter in the viewarticle action for index.php.
4, via (1) the profile parameter to index.php or (2) the cat parameter.
4, via a direct HTTP POST request to (1) ajout_admin2.php or (2) suppr.php.
4, via a process that executes the io_queue_init function but exits without running io_queue_release
3, via unknown vectors.
4, via a query keyword.
2, via the msg parameter.
3, via attachments with MIME-encoded file names.
2, via the (1) cat
4, via (1) the sl parameter to showmembers.php or (2) the photo parameter to showphoto.php.
4, via (1) the user field or (2) the message parameter to message.php.
2, via the search engine
2, via the page parameter.
4, via unknown vectors.
2, via the (1) idpages parameter to pages.php or the (2) id2 parameter to products1.php.
2, via the id parameter.
1, via malformed data sent to the XP Server TCP port.
4, via a crafted HTTPS packet.
0, via onmouseover or onload events in (1) img
2, via the (1) term/keywords field on the search page
4, via a .. (dot dot) in the page parameter.
2, via the banner_id parameter.
2, via the (1) contenttype or (2) keywords parameter.
4, via a (1) ... (triple dot) or (2) ..\ (dot dot backslash) in the URL.
2, via the id parameter.
4, via a hard link attack on a file while it is being decompressed
4, via a malformed Windows Metafile (WMF) file.
2, via the id_ctg parameter.
2, via the (1) idp
0, by pressing the escape and enter keys at the username prompt.
4, via a long path.
2, via the parent frame title.
2, via the (1) crn parameter in a show action or (2) rn parameter in a show_detail action.
4, via a malicious process that impersonates a legitimate process that has fewer restrictions.
4, via a malformed file transfer request to a Jabber user
0, via large size values that are not properly validated before calling the CPImportKey function in the Crypto API.
1, via crafted parameters.
1, via crafted arguments.
1, via crafted parameters.
1, via crafted arguments.
1, via crafted arguments.
4, via a .. (dot dot) in a PUSH command.
1, via crafted values in a profile file
0, by modifying the view parameter to reference a URL on a remote web server that contains the code.
2, via the (1) payment or (2) send parameter.
2, via the (1) name
4, via a long message using commands such as (1) say and (2) tell.
0, via unspecified attack vectors related to the fan control unit (FCU) driver.
4, via a symlink attack on the unsh.X temporary file.
3, via the convcharset parameter.
4, via a long command line argument.
4, via (1) the Category or resultCnt parameters to advSearch_h.asp
4, via (1) the keyword parameter to advSearch_h.asp
5, via (1) the email or url parameters in the Add function
4, via (1) the email or url parameters in the Add function
2, via an invalid show parameter
2, via the querylang parameter.
4, via (1) the bid parameter to the EmailStats op in banners.pgp
1, via direct requests to (1) the Surveys module with the file parameter set to comments or (2) 3D-Fantasy/theme.php
3, via modified (1) VAR_FT_LANG and (2) VAR_FT_TMPL parameters.
5, via .. (dot dot) sequences in the modID parameter.
2, via the sgnuptype parameter.
4, via (1) the URL or (2) the user login name
2, via certain multipart messages.
4," via a """"javascript:"""" URL in an IMG tag."
4, via a modified computer name and length that leads to a heap-based buffer overflow
2, via the account username.
2, via the sortby parameter.
4, via (1) the contenttype parameter to content.asp
3, via an EHLO command with a Unicode string.
4, via a long AUTHENTICATE command.
4, via a long LOGIN command.
4, via a Javascript URL in a banner URL.
0, via the EVENT_ID parameter
2, via an agent request to TCP port 6050 with a large argument before the option field.
4, via a long HOME environment variable.
4, via a username that contains a domain name when using a TACACS+ server to authenticate
2, via the (1) min parameter to the Search module
4, via a direct request to (1) my_headlines
2, via the (1) file_id parameter to dlman.php in DLMan Pro or (2) id parameter to links.php in Linkz Pro (aka LinksLinks Pro).
2, via the (1) username parameter in the Your_Account module
5, via a direct request to (1) index.php with the forum_admin parameter set
2, via the (1) catid
2, via the (1) ReturnURL
4, via invalid (1) category_id or (2) product_id parameters.  NOTE: this issue was originally claimed to be due to SQL injection
2, via an invalid (1) language parameter to index.php
2, via the LEAK command.
4, via a crafted PCX image file.
2, via the sid parameter.  NOTE: the vendor reports that they could not reproduce the issues for 760 RC3
2, via the (1) module parameter to admin.php or (2) op parameter to user.php. NOTE: the vendor reports that certain issues could not be reproduced for 760 RC3
2, via an invalid id parameter
2, via the id parameter in a change_email action.
2, via the (1) c_code or (2) aid parameters.
0, by modifying the DIR parameter to reference a URL on a remote web server that contains the code.
1, via the data parameter to changepw.html.
3, via certain packets.
2, via certain strings in the secure file that are later used as part of a regular expression
4, via a symlink attack in the /var/cache/fonts directory.
4, via a symlink attack.
2," via the password """"new""""."
4, via [url] tags.
2, via the st parameter.
2, via the haslo parameter.
2, via the read parameter.
2, via the mode parameter.
4, via (1) the farea parameter to faq.php or the (2) cat
2, via the message field.
4, via (1) cds.php
2, via the catid parameter.
2, via the id parameter.
5, via (1) the id parameter to view.php or (2) the from parameter to members/index.php.
2, via the skin parameter.
2, via the event parameter.
2, via an HTTP request with a long User-Agent header.
2, use restricted plugin API functions via script that includes the max.src file into the source page.
2, via the page parameter.
2, via the UserID parameter.
0, via format string specifiers in data that is passed directly to syslog.
2, via large amounts of data in certain (1) time or (2) date fields.
2, via the (1) content or (2) title of the post.
2, via the (1) username
4, via a .. (dot dot) in the filename in the Content-Disposition header.
5, via a GIF image with the maximum depth start value
4, via heap corruption.
4, via a large packet sent to TCP port 81.
4, via a hard link attack on a file while it is being decompressed
2, via the bsid parameter to (1) groupcp.php
2, via the (1) mode or (2) search parameters.
0, via the bsid parameter to (1) album_cat.php or (2) album_comment.php.
0, via the start parameter to calendar_scheduler.php.
0, by modifying the site parameter to reference a URL on a remote web server that contains the code.
2, via the postdata parameter.
4, via a symlink attack on temporary files.
2, via the e-mail (1) body
2," via an HTTP GET request containing double-encoded format string specifiers (aka """"double expansion error"""")."
4, via a request for a zero byte file.
2, via certain inputs from HTTP POST queries.
2, via the pg parameter.
4, via a malformed MIDI file.
2, via the (1) url_id or (2) entry_id parameters.
2, via the q parameter.
4, via a direct request to sb_functions.php
3, via certain e-mail messages.
2, via the comments.
2, via the yr parameter.
2, via an invalid ev parameter
2, via the template parameter
0, via the username parameter
3, via invalid (1) calendar or (2) template parameters
3, via invalid (1) year or (2) month parameters
2, via the (1) username or (2) password parameters.
4, via a setter function for a variable in the target domain
5," via a <LINK rel=""""icon""""> tag with a javascript: URL in the href attribute"
0, by overriding certain properties or methods of DOM nodes
0, via the idProduct parameter to (1) owAddItem.asp or (2) owProductDetail.asp
3, via the (1) sEmail parameter to owContactUs.asp
4, via (1) a crafted nickname or (2) a packet with a large amount of data.
4, via a packet with a game header that provides less data than indicated by the length.
2, via certain malformed data.
2, via the bstrSavePath argument.
2, via the id parameter.
2, via the id parameter.
4, via the X-Forwarded-For parameter.
4, via a long GET request.
4, via a certain valid TCP connection that causes a free of unallocated memory.
4, via a certain valid TCP or UDP request.
2, via the Query/Where feature.
4," via hex-encoded CRLF (""""%0d%0a"""") sequences in the forwarder parameter."
2, by modifying the ariadne parameter to reference a URL on a remote web server that contains the code.  NOTE: the vendor has disputed this issue
2, via the Search parameter.
5, via a TCP packet with the correct sequence number but the wrong Acknowledgement number
4, via a malicious C:\program.exe file
2, via the curPage parameter.
2, via the chat name
4, via a long chat name
2, via the cat parameter.
2, via the CHANGE_SET_NAME parameter.
4," via hex-encoded null characters (%00) in the middle of """".."""" sequences in the template parameter."
2, via the main parameter.
1, by modifying the (1) dir_src or (2) abs_layer parameter to reference a URL on a remote web server that contains the code.
4, via a .. (dot dot) in the URL to admin_avatar.php or admin_attachment.php or (2) remote attackers to enumerate files via a .. (dot dot) in the attachment parameter to attachment.php
2, via the (1) ab_id
3, via the (1) filter or (2) cats_app parameter.
4, via a crafted WebDAV request containing special parameters.
4, via a crafted PNG file.
5, via a bookmark link file (.cbo
1, by disguising security prompts on a malicious Web page.
4, via a malformed HTTP request packet containing multiple Content-Length headers.
4, via a NetBIOS connection with an ISA Server that uses the NetBIOS (all) predefined packet filter.
2, via an image with crafted ICC profile format tags.
4, via a direct request to db/settings.dat
2, via the password field.
2, by setting the ad_direct parameter to reference cat_for_gen.php
2, via the Admin_id field.
2, via the (1) nChannel parameter to default.asp
2, via the favs parameter to (1) init.inc.php or (2) zipdownload.php.
2, via the chatroom text submission form.
5, via a .. (dot dot) in the original filename within a compressed file.
4, via a .. (dot dot) in a cpio file.
4," via """"..\"""" (dot dot backslash) sequences in a GET request."
2, via the (1) term or (2) description.
3, via unknown vectors.
2, via the (1) dir or (2) file parameters.
2, via the (1) u parameter to auction_rating.php or (2) ar parameter to action_offer.php.
2, via an invalid mode parameter
2, via the (1) iChannel parameter to channel.asp or search.asp
2, via the newsid parameter.
0, via format string specifiers that are not properly handled in a syslog call.
1, via malformed ASN.1 packets in corrupt client certificates to an SSL server
4, via a crafted MPEG4 file.
4, via an LSUB command with a large number of null characters
2, via the (1) User Name field (sUserName parameter) or (2) Password (sPassword parameter).
2, via an instant message (IM) with a large URL.
4, via a malformed MSN message.
4, via a Yahoo! message with non-ASCII characters in a file name.
5, via a long string sent to port (1) 6070 or (2) 6050.
2," via an HTTP unlock request and a long """"If"""" parameter."
4, via a crafted RSVP packet of length 4.
4, via (1) the src parameter in an IMG tag
2, via the UIDL parameter to the msg script or (2) copy or move the user's .eml file to arbitrary locations via the delete script
2, via the hilight parameter.
3, by creating a malicious C:\program.exe
2, via the (1) id parameter to member.asp
2," via the """"in"""" value in a cookie."
4, via shell metacharacters in the (1) art and possibly (2) cat parameters.
2, via the (1) u parameter to profile.php
0, via the idProduct parameter to (1) addToCart.asp or (2) productDetails.asp
0, via the idProduct parameter to (1) tellAFriend.asp or (2) addToWishlist.asp
2, via the (1) language
5, via a socket call with a negative protocol value
0, via a full pathname in the argument.
4, via shell metacharacters in the argument.
2, via the argument.
0, via a full pathname in the argument.
4, via shell metacharacters in the argument.
2, via the argument.
2," via the """"change user"""" field."
0, via a full pathname in the argument.
4, via shell metacharacters in the argument.
0, via a full pathname in the argument.
0, via Javascript containing XML script
4, via CRLF sequences in the redirect parameter followed by the desired script or HTML.
2, via the (1) entry title field or (2) comment body text.
2, via the postid parameter.
3, via unknown vectors.
4, via unknown vectors.
2, via the parent's frame page title.
2, via the parent's frame page title.
2, via the parent's frame page title.
2, via the parent's frame page title.
2, via the parent's frame page title.
2, via the parent's frame page title.
3, via the parent's frame page title.
2, via the parent's frame page title.
2, via the parent's frame page title.
2, via the parent's frame page title.
4, via a long USER command.
2, via the (1) part
2, via the mylang parameter.
4, via a crafted packet.
2, via the folderid parameter.
4, via a direct request to owConnections/chksettings.asp.
1, by modifying the idOrder parameter.
4, via a malformed TIFF image that causes the NXSeek to use an incorrect offset
4, via (1) chfn
4, via a long environment variable.
4, via a help:// URI.
0, by logging in with their full name.
2, via terminal escape sequences.
4, via a long -i (Server_id) argument.
4, via a long realm argument.  NOTE: since htdigest is normally only locally accessible and not setuid or setgid
5, via a long HTTP Authorization header.
0, via a malformed parameter to a read operation.
0, via a full pathname in the argument.
4, via shell metacharacters in the argument.
2, via the argument.
0, via a full pathname in the argument.
4, via shell metacharacters in the argument.
0, via a full pathname in the argument
2, via the argument.
0, via a full pathname in the argument.
4, via shell metacharacters in the argument.
2, via the argument.
1, by modifying the path_prefix parameter to reference a URL on a remote web server that contains the code.
2, via the (1) intProdID parameter in product.asp or (2) strCatalog_NAME parameter to productsByCategory.asp.
2, via the (1) intProdID parameter to product.asp
4, via (1) intCatalogID
2, via the (1) username or (2) password fields in logIn.asp
4," via a URL with multiple leading """"/"""" (slash) characters and """".."""" sequences."
4," via """"dirname/../cgi-bin"""" in a URL."
4, via a symlink to a file outside of the web document root.
4, via SMP.
3, via unknown vectors.
2, via the (1) q or (2) p parameters.
0, via the p parameter
2, via the server parameter to a JndiFramesetAction action.
2, via the (1) cache_dump_file or (2) PartialPageErrorPage parameter.
4, via a full pathname in the cache_dump_file parameter.
2, via the (1) search parameter to index.php
5, via a long https URL that triggers a NULL pointer dereference.
4, via a direct request to (1) ipban.php
3, via unknown vectors.
4, via a long Host HTTP header.
2, via long command line arguments to (1) asmaster
2, via format string specifiers in the ARCHOME environment variable to (1) wservice or (2) lockmgr.
4, via a long (1) XAPPLRESLANGPATH or (2) XAPPLRESDIR environment variable
4, via a symlink attack on the ce_edit_log temporary file.
3, via unknown vectors.
2, by modifying the (1) price or (2) postage parameters.  NOTE: it was later reported that 3.4 through 4.6.4 are also affected.
0, via arguments with negative or very large values.
0, via game messages or other text.
2, via the (1) image parameter to closeup.php
1, by modifying the (1) nbuser parameter to post.php or (2) sender parameter to privmsg.php.
4, via malicious applications.
2, via the keynote: URI handler in a crafted Keynote presentation.
2, via the AdminPWD parameter.
2, via the (1) username or (2) password parameters to admin_login.asp
4, via a long FTP command.
2, via the Admin_id parameter.
4, via a request for an invalid page
4," via """".."""" (dot dot) sequences in an HTTP request."
4, via a direct request to admin.html.
4, via .. sequences in the A parameter.
2, via the password parameter.
4, via shell metacharacters in a filename.
4, via (1) the t parameter to view.php
2, via the (1) id parameter to admin.php or (2) cat parameter to view.php.
2, via the include_dir parameter.
4, via .. sequences in the file parameter.
0, via (1) various parameters to basket.php
2, via the Notes protocol (NRPC).
2, via the NOTES.INI file.
2, via the (1) act
4, via (1) the v
0, via the id parameter in a rmattach action to 5.php
2, via an attachment to a trouble ticket.
2, via the p parameter.
4, via unknown vectors.
2, by closing the connection while fetchnews is reading (1) an article header or (2) an article body
3, by opening a URL from a text input field.
0, via Safari without prompting the user
4, via a redirect.
0, by using an IFRAME and causing the browser to navigate to a previous javascript: URL
0, via format string specifiers in the xtellmail command.
2, via the id parameter.
4," via a """"..\\"""" (dot dot backslash) in the urlget site command."
2, via the Event_ID parameter to (1) defer.asp or (2) details.asp.
1, by modifying the (1) auth and (2) userId fields in a cookie.
2, via the (1) Query
4," via a """"\.."""" (backward slash dot dot) with a leading '""""' (double quote) in the GET command."
4, via a GET request for a file that does not exist
2, via the (1) trackingnum
2, via the (1) cartid parameter to upstnt.php or (2) psku parameter to display.php.  NOTE: the vendor disputes this report
4, via (1) the E-mail address
2, via certain requests to (1) calendar_addevent.html
4, via viewaction.html or (2) move arbitrary files via the importfile parameter to importaction.html.
2, via the url parameter.
4, via a ..\ (dot dot backslash) in the URL.
2, via the (1) entryid or (2) password parameter.
5, by changing SESSION_USER to the SYS user.
2, via an invalid post_id parameter
2, via the (1) year parameter in viewmode.php
1, by modifying the comment_id parameter.
4, via (1) the keyword parameter in search.php; or (2) the date_no parameter in viewdate mode
4, via a direct request to (1) search_list.php
2, via the (1) searchstring parameter to search_list.php or the (2) secondgroup or (3) maingroup parameters to item_list.php.
2, via the (1) searchstring parameter to search_list.php
2, via the perm parameter.
4, via a long URL.
2, via the (1) month or (2) annee parameters to the news module
2, via the id parameter.
4, via a direct request to the admin directory
2, via the Pseudo cookie.
2, via the config[library_path] parameter.
2, via the id parameter.
2, via the config[include_path] parameter.
5, via a LD_LIBRARY_PATH environment variable that references a malicious library.
4, via a TIFF file with a malformed BitsPerSample tag.
4, via a crafted ELF file
4, via a crafted PE file.
2, via the entry parameter.
4, via a .. (dot dot) in the print parameter.
4, via shell metacharacters in the print parameter.
2, via the URL
3, by capturing and replaying a cd-key authorization session.
2, via the (1) title or (2) content of a message.
1, by setting the cyclone500_auth cookie.
5, via hex-encoded shell metacharacters in the ip parameter for (1) nslookup.cgi or (2) ping.cgi.
4, via shell metacharacters in arguments to certain commands
2, via the (1) mod
4, via the (1) fpassword parameter to inc_functions.asp
5, by pressing CTRL-C at the username or password prompt in a telnet session
2, via the topic parameter.
2, via an invalid topic parameter
4, via a javascript: URL in (1) a thread or (2) an IMG tag.
4, via a certain hex-encoded argument to the page parameter
4," via """".."""" sequences in arguments to the (1) ShowAlbum"
4, via a malformed request to port 8083.
2, via the password parameter.
2, via the Content-Type HTTP header and a filename containing whitespace
4, via a .mov file with a Quartz Composer composition (.qtz) file that uses certain patches to read local information
2, via various fields to bug_report.php
2, via the (1) nom
4, via a direct request to admin/delete.php or (2) upload arbitrary images via a direct request to admin/upload.php.
2, via the topic field in a NewTopic action.
2, via the (1) iCategory or (2) page parameter to index.php
2, via the sWord parameter.
2, via the iCategory parameter.  NOTE: the vendor has privately disputed this issue
5," by finding and showing the """"Altiris Client Service"""" hidden window"
2, via the id parameter.
2, via the id parameter.
2, via the highlite parameter.
4, via a crafted cookie password hash (pass_hash) that modifies the internal $pid variable.
2," via the """"Search For"""" field."
2, via the password field.
4, via a crafted string to TCP port 7080.
0, via filenames containing multiple file extensions
2, via the name field to (1) psoft.guestbook.GuestBookServ in Standalone Site Studio or (2) E-Guest_sign.pl in Integrated Site Studio with H-Sphere.
2, via the (1) merchant or (2) demo parameters.
4, via a base64 encoded Codigo parameter.
5," via a URL with an """"@"""" followed by the desired script."
2, via the TID parameter.
0, via the reverse parameter in a list action.
2, via the postorder parameter.
0, via the postorder parameter
2, via an invalid (1) id or possibly (2) postorder parameter
4, via a room login or a room join request packet with a third : (colon) and an & (ampersand)
2, via the FontName parameter.  NOTE: it was later reported that 0.14.5 is also affected.
4, via a .. (dot dot) in the func parameter to index.php.
2, via the strCatalog_NAME parameter.
4, via a PDF document with a long /Filespec tag.
2, via the verifykey parameter.
1, by guessing item IDs.
2, via the (1) anzahl_beitraege parameter to jgs_portal.php
2, via the (1) anzahl_beitraege parameter to jgs_portal.php
1, via direct requests to (1) jgs_portal_ref.php
2, via the thold parameter to (1) comments.php or (2) pollcomments.php.
2, via the (1) username
2, via the $email variable.
5, via a crafted UDP packet with a large size value
2, via the (1) livreornom
4, via a .. (dot dot) in the wmm parameter.
0, by modifying the email parameter.
2, via the email parameter.
4, via a direct request to addsubsite.asp with the loginname and password parameters set.
2, via an invalid smiley icon location in the sml parameter of a font tag.
5," via a URL with a trailing hex-encoded space (""""%20"""")."
2, via the Folder.Id parameter to (1) deletefolder.ctml
4," via a URL with a """"...""""  (triple dot)."
4," via a URL with a """"...""""  (triple dot) followed by an onmouseover event."
4, via a long GET request
4, via a .. (dot dot) in the URL.
4," via a GET request beginning with """"://""""."
1, via long arguments to FTP commands such as MKD
4, via a long HTTP GET request.
4, via a direct request to assetmanager.asp.
4," via """"javascript:"""" URLs when a new window or frame is opened"
2, via the (1) find parameter to index.php
2, via the (1) id parameter to index.php
4, via a link or IMG tag to view.php.
4, via a long error message.
2, via the Name field and other fields.
4, via a direct request to admin.asp.
4, via a bin file with format string specifiers in the filename.  NOTE: while this issue is triggered on the command line by the gedit user
2, via the tb_id parameter.
4, via a direct request to files in (1) wp-content/themes/
2, via certain error conditions.
4," via """".."""" sequences in an HTTP GET request."
2, via the (1) name or (2) module parameter.
2, via the (1) rss_url parameter to magpie_slashbox.php
2, via the (1) skin or (2) paletteid parameter to demo.php in the Xanthia module
4, via a direct request to simple_smarty.php
4, via a direct request to (1) theme.php or (2) Xanthia.php in the Xanthia module
4, via a .. (dot dot) in the skin parameter.
2, via the riga[0] parameter.
0, via the id parameter to the (1) News
0, via format string specifiers in a nickname.
5, via a partial join packet that triggers a NULL pointer dereference.
4, via a symlink attack on the postinst.txt temporary file.
2, via an HTTP POST that sets volatile.user.administrator to true.
0, via (1) the username in an Add User window or (2) the license key (volatile.license_to_add parameter) in the Licensing page.
2, via the (1) templatedropdown and (2) shoutbox plugins.
3, via unknown vectors.
2, via the (1) m
1, via crafted fragmented IP packets.
4, via a long nickname.
5, via a symlink attack on the socket file in an insecure temporary directory.
4, via a URL containing an MS-DOS device name such as AUX
2, via the testmycgi and path parameters to testmy.cgi.
3, via unknown vectors.
3, via unknown vectors.
2, via certain inputs that are not properly handled in a syslog call.
4, via malformed data.
2, via the password parameter.
4, via a symlink attack on the .shtool.$$ temporary file
4, via shell metacharacters in the file_name parameter.
2, via the relativer_pfad parameter.
2, via calendar display fields.
4, via a symlink attack on temporary files after they have been created
4, via ptrace and the restore_sigcontext function.
4, via a concurrent thread that increments a pointer count after the nargs function has counted the pointers
2, via certain signals combined with crafted input.
4, via a long client cd-key hash value
4, via a large nickname.
4, via a long text string.
2, via the start parameter.
2, via the start parameter.
2, via the password.
0, via the node parameter to (1) add_review.htm
2, via certain parameters to search.htm
4, via a modified emailaddress parameter in an updateprofile action for UserProfile.asp.
2, via the password parameter.
2, via the password parameter.
1, by setting the $check variable.
2, via the jresourceid parameter.
2, via the password.
0, by creating security contexts more quickly than they can be cleared from the RPC cache.
4, via .. (dot dot) sequences in an HTTP request.
3, via unknown vectors.
2, via the term parameter in a view or ViewTerm action to index.php.
4, via a vCard with a long Name field
2, via an IPsec IKE packet with a malformed ISAKMP header.
2, via the language parameter to (1) admin.php
2, via the (1) terme parameter in the glossaire module (glossaire.php) or (2) query parameter to links.php.
2, via the password.
2, via format strings in the URL.
4, via a long header field.
4, via a packet with a large size value for the nickname
5, via an obexftp session with a long filename in an OBEX File Transfer or OBEX Object Push.
2, via the $cat_ID variable
2, via the website field in a user profile.
4, via a long (1) filename or (2) transfer mode string in a Read Request (RRQ) or Write Request (WRQ) packet.
4," via a TFTP GET request containing (1) """"../"""" (dot dot slash) or (2) """"..\"""" (dot dot backslash) sequences."
4, via a long URL.
4, via (1) an FTP command with a long argument to FTPD (ftpdw.exe) or (2) a large amount of data to LPD (Lpdw.exe).
2," via the """"Move users in this group to"""" screen."
4, via a direct request to index.php with modified parameters.
2, via unknown attack vectors.
3, via unknown vectors.
2, via improper quoting when using the preg_replace function.
2, via the incdir parameter to downloads.php.
2, via the (1) cat or (2) printable parameter to home.php
2, via the (1) cat or (2) printable parameter to home.php
2, via two embedded files that call each other.
0, via an invalid Debug Message pointer.
2, via the (1) forums
2, via the (1) eid parameter to calendar.php
2, via the password field.
4, via a crafted HTTP request
2, via the (1) Email
0, via the id parameter to (1) view.asp or (2) print.asp or (3) edit parameter to register.asp.
2, via the (1) rename or (2) sort options.
2, via the (1) rename or (2) sort options.
2, via unknown vectors that cause an out-of-bounds memory read.
2, via an invalid file that causes a large dynamic tree to be produced.
2, via unknown attack vectors.
0, via format string specifiers in a reply.
2, via the calpath parameter.
0, via the catview parameter to (1) cal_week.php
2, via the year parameter.
2, via the CONFIG[MWCHAT_Libs] parameter.
2, via the form parameter.
4, via a filename containing a .. (dot dot) in a .dz archive.
3, via the (1) search_row
2, via certain inputs that are injected into a template (.tpl) file.
2, via the pid parameter.
4, via a symlink attack on the temp.ip.addresses temporary file.
4, via a symlink attack on a temporary file created by a system call to wget.
4, via a symlink attack on a temporary file created by a system call to wget.
2, via the YAPIG_PATH parameter.
2, via the BASE_DIR parameter.
1, via HTML attributes in page templates.
2, via unknown attack vectors.
4, via a malformed buddy icon that causes an integer underflow in a loop counter variable.
4, via (1) a direct request to foot_news.php
1, via invalid parameters to certain scripts
0, by placing the code into the Referer header of an HTTP request
2, via the border or back parameters to (1) help.php or (2) footer.php.
2, via the image parameter.
4, via (1) the username in the Add User window or (2) the license key in the Licensing page.
4, via .. sequences in the (1) SELECT
4, via a long CREATE command.
2, via the password parameter.
2, via the password. NOTE: there is little public information about this product and its vendor
4, via a large amount of SecureNAT network traffic.
2, via an extra leading / (slash) or leading \ (backslash) in the URL.
4," via a """"</pre><!-"""" sequence in an HTTP GET request in the logon"
2, via the password.
4, via a non group-leader thread executing a different program than was pending in itimer
4, via a symlink attack on predictable log4sh.$$ filenames.
4, via a symlink attack on temporary files.
5, via a symlink attack on the .popper-new temporary file.
4, via a crafted tar file
4, via a crafted file that causes repeated errors in the cli_msexpand function.
4, via shell metacharacters in (1) the fpr parameter to the deleteKey function in gpg_keyring.php
4, via (1) the suck_url parameter to tiki-editpage.php or (2) language parameter to tiki-user_preferences.php.
4, via a RCPT TO command with an invalid argument
0, by overriding the behavior of system widgets via a user widget with the same bundle identifier (CFBundleIdentifier)
4, via a malformed MSN message that leads to a memory allocation of a large size
2, via nested constructed bit strings
4," via """".."""" (dot dot) sequences in a request to the Report service (TCP 8022)."
4, via spoofed Cisco Discovery Protocol (CDP) messages.
2, via the (1) password field to default.asp or (2) cat parameter to catinfo.asp.
4, via a symlink attack on a database backup file in /tmp.
0, via double hex encoded highlight data.
2, via the (1) eid parameter to an editentry
4, via a link or IMG tag to the (1) albums or (2) delimg actions.
4, via (1) the comment parameter in an editcomment action or (2) the rating parameter when voting on a photo.
4, via shell metacharacters after a valid argument to the eping_host parameter.
4, via shell metacharacters in the argument.
4," via hex-encoded CRLF (""""%0d%0a"""") sequences in the (1) products_id or (2) pid parameter to index.php or (3) goto parameter to banner.php."
4, via a /./ (slash dot slash) before each .. (dot dot) sequence in the URL
4, via a long HTTP request.
4, via a direct request to (1) admin.class.php
2, via the gallery parameter.
0, by modifying the test variable to contain a value of '~~~~~~' (six tildes)
4, via shell metacharacters in the mail parameter.
4, via shell metacharacters in certain log entries
2, via the (1) errorcode parameter to index.php or (2) certain fields to clients.php.
2, via certain requests to (1) reports.php
2, via the babInstallPath parameter.
4, via a URL in the LOCAL_PATH parameter.
4, via shell metacharacters after a valid argument to the etrace_host parameter.
2, via the (1) idcategory parameter to viewPrd.asp
2, via the error parameter to techErr.asp.
4," via """".."""" sequences in the language parameter."
4, via (1) the username
4, via (1) the id parameter to index.php
4," via an """"unexpected protocol command during the reconnection request"
4, via a crafted Transaction Internet Protocol (TIP) message that causes DTC to repeatedly connect to a target IP and port number after an error occurs
5, via a crafted Kerberos message.
4, via a crafted packet
4, via hex-encoded characters in a filename
2, via direct request to (1) subscr_form.php or (2) dbquery_error.php
3, via the _SERVER[DOCUMENT_ROOT] parameter.
4, via a .. (dot dot) in the lang parameter.
2, via the (1) sortby or (2) filelist parameters to the category action (category.php)
2, via the formname parameter (1) in the login form
4, via a .. (dot dot) in the action parameter.
2, via the user_rating parameter.
2, via an invalid (zero) id parameter to (1) viewtopic.php
2, via the (1) ref parameter to login.php
4," via a GET request (1) with a """"%."""" (percent dot)"
4, via a .. (dot dot) in the id parameter to the (1) upload or (2) attachment scripts.
4, via a request to a yaw script with a trailing %00 (null).
2, via the (1) ci
2, via the btitle parameter.
2, via the (1) username or (2) id parameters.
4, via a direct request to admin/backup.php
3, by uploading a malicious language pack.
2," via the """"Scan for viruses"""" option"
4," via """".."""" sequences in the URL to TCP port 21700."
2, via the user parameter in the login page.
4," via (1) certain """"unusual HTML messages"""" or (2) """"certain malformed headers"""" such as Content-Type."
0, by sending an IKE Aggressive Mode packet with the groupname in the ID field
2, via the User-Agent HTTP header.
4, via (1) the sid parameter to article.php
2, via the folder parameter.
2, via the folder parameter.
2, via the password.
4, via a modified nickname value.
4, via (1) the username or password to logon.asp
0, via onmouseover or other events in HTML tags.
4, via lang.php.
2, via the (1) show_course parameter to browse.php
2, via the (1) iChannel parameter to default.asp
2, via the (1) iCat parameter to cat.asp
2, via the (1) iCat parameter to cat.asp
2, via the (1) iState parameter to default.asp or (2) iPro parameter to edit.asp.
4, via (1) an * (asterisk) in the id parameter
4, via a crafted MP3 file.
4, via a crafted Quantum archive.
2, via the (1) Searchpage parameter to dosearch.php
0, via the Number parameter to (1) download.php
2, via the language parameter in a cookie followed by a null (%00) byte.
2, via the catid parameter to (1) default.asp or (2) buyersend.asp
3, via the (1) Title parameter to sendpassword.asp or (2) Keyword field in search.asp.
2, via the (1) email parameter to forgot_password.asp
4," via CRLF (""""%0d%0a"""") sequences in the LangCode parameter."
4, via the TaskID parameter.
2, via the articleid parameter.
4, via a TCP packet with the SYN flag set for an already established session.
4, via (1) a large number of -g arguments or (2) a malformed -s argument with a trailing . (dot).
4, via a news or article post
2, via the error parameter.
2, via an invalid command with a long argument.
4, via shell metacharacters in the df parameter.
4, via a LIST command with format string specifiers as the second argument.
2, via the q parameter.
5, via a long (1) SMTP FROM field or possibly (2) FTP NLST command.
4, via a filename that contains invalid UTF-8 characters.
2, via an away message with a large number of AIM substitution strings
2, via the (1) p or (2) comment parameter.
2, via input that is not filtered in the HTTP_RAW_POST_DATA variable
2, via the message variable
4," via (1) a direct request to menu-header.php or a """"1"""" value in the feed parameter to (2) wp-atom.php"
2, via the file parameter.
2, via the (1) order parameter to edit.php or (2) cid parameter to comment_edit.php.
1, via crafted values in an XML file
4, via a large ID value in the ignore command
2, via an AVI file with a crafted strn element with a modified length value.
1," by using the set-parameters ioctl on an audio device to change the block size and set the pause state to """"unpaused"""" in the same ioctl"
2, via the (1) T1 or (2) T2 parameters.
2, via unknown attack vectors.
0," via Javascript in the onMouseOver event of an """"A"""" tag in a review message."
2, via the sitepath parameter.
4," via """".."""" sequences in the filename parameter."
4, via a long string to the chat service
4," via a """"\..""""  (backslash dot dot) in an LS (LIST) command."
4, via a crafted style tag in a web page.
3, by using MapViewOfFile to perform memory mapping on the file.
0, via a full pathname in the id parameter to the (1) upload or (2) attachment viewer scripts.
2, via user comments for an article.
2, via the ticket variable.
2, via the inc parameter.
2, via the serverPath parameter.
2, via the prevnext parameter.
2, via the path parameter.
4, via a long request.
3, via nested [url] tags.
2, via the lang parameter.
2, via the search parameter.
2, via unknown attack vectors.
4, via shell metacharacters in the file parameters.
2, via the cid parameter.
2, via the cid parameter.
4," via """".../...//"""" sequences in the file parameter"
3, by connecting to LCF and ending the connection without sending any data.
3, via shell metacharacters in the olddat parameter.  NOTE: it is unclear which product or vendor this program is associated with
2, via the path parameter.
2, via the (1) thirdMenuName or (2) resourceName parameter to SystemEvent.jsp.
0, by setting the Access option to true
2, via the (1) email parameter to comersus_optAffiliateRegistrationExec.asp or (2) idProduct parameter to comersus_optReviewReadExec.asp.
2, via the (1) name parameter to comersus_backoffice_listAssignedPricesToCustomer.asp or (2) message parameter to comersus_backoffice_message.asp.
2, via the temp array
5, via a crafted TCP packet
5, via a URL with a filename containing a .cgi extension and an MS-DOS device name such as AUX
2, via the lang_path parameter.
2, via the config[ppa_root_path] variable.
4, via a direct request to admin.php.
4, via shell metacharacters in the query string.
2, via the (1) idProduct parameter to tellAFriend.asp
2, via the message parameter.
4, via a malformed message.
4, via a long URL.
4, via a file with more than 20 streams.
4, via a parameter in the page move template
2, via the news_file parameter.
1, by modifying the x_DragonflyCartProductPrice hidden field to (1) dc_Categorieslist.asp
2, via the (1) key parameter to dc_Categoriesview.asp
4, via a crafted SOAP message to an RPC/Encoded method.
5," via a plaintext message containing the """".pif"""" string"
4, via a symlink attack on temporary files.
4, via a long command line argument.
4, via a USER command with a large number of null (\0) characters.
4, via a symlink attack on the xpvm.trace.$user temporary file.
2, via the (1) doc_path parameter to getpage.php or (2) set_menu parameter to lib/static/header.php.
4, via a long filename in an OBEX file share.
2, via the cfgProgDir parameter
1, by setting the PHPAUCTION_RM_ID cookie to the user ID.
0, via the category parameter to adsearch.php. NOTE: there is evidence that viewnews.php may not be part of the PhpAuction product
2, via the lan parameter to (1) index.php or (2) admin/index.php
4," via """"%2e%2e%2f"""" (encoded dot dot) sequences in the formLanguage parameter."
1, by modifying the author_id parameter.
2, via the photoroot parameter.
4, via shell metacharacters in the filename argument of a PUT command.
2, via the status command with a long mailbox name.
1, via crafted telnet data.
4, via a crafted IP packet.
3, via unknown vectors.
2, via unknown attack vectors.
4, via a large TCP packet with a leading space
2, via the EpochPrefix parameter.
4, via a direct request to prelims.php
4, via shell metacharacters in the (1) art and (2) cat variables.
4, via a packet with a zero datablock size.
4, via a direct request to ssi_examples.php
4, via a large javascript parameter.
2, via the (1) FID parameter to forum.cfm
4, via a symlink attack on the skype_profile.jpg temporary file.
2, via an image with an ICC Profile with a large Tag Count.
4, via a long message to TCP port 1071 or 1073
4, via a large integer argument to a particular function
2, via certain crafted JPEG images
4, via a crafted JPEG image
4, via a symlink attack on the (1) request1 or (2) request2 temporary files.
1, by modifying the user_id parameter.
2, via unknown attack vectors.
1, by setting the do_login parameter and performing an edit action using user.php
4, via a large number of large DNS packets with the Z and QR flags cleared.
4, via a DNS packet that uses message compression in the QNAME and two pointers that point to each other (circular buffer).
2, via the action parameter.
2, via the CLPATH parameter to (1) cl_minical.php
2, via the searchtype or searchterm parameters to (1) results.php or (2) categorysearch.php.
4, via a direct request to (1) ticker.php
0, via the yr parameter to calendar.php.
3, via nested [url] BBCode tags.
2, via the CFG_PATH variable.
4, via (1) .. sequences or (2) a full pathname in the readme_file parameter.
2, via the type parameter.
2, via the username parameter to (1) admin.php or (2) login.php.
2, via the doc parameter.
3, via shell metacharacters in the $no variable to (1) w_s3mbfm.cgi
4, via long UIDL responses.  NOTE: a typo in an advisory accidentally used the wrong CVE identifier for the Fetchmail issue. This is the correct identifier.
4," via """"missing pages"""" in which the page name is not properly escaped"
4, via a crafted (1) QuickTime Image File (QTIF)
4, via an e-mail attachment with a crafted TIFF file.
1, via crafted Server Routing Protocol (SRP) packets.
4, via a Java Application Description (JAD) file with a long application name and vendor string
4, via a malformed Portable Network Graphics (PNG) file that triggers a heap-based buffer overflow.
4, via a GWVW02xx.INI language file with a long entry
4, via a series of requests to mutt temporary files.
4, via a .. (dot dot) in the URL.
2," via an HTTP request for a directory that ends in a """"."""" (trailing dot)."
4, via a long directory name to (1) LIST
0, via format string specifiers in a (1) nickname or (2) chat message.
5, via a long (1) nickname or (2) chat message.
2, via an absolute or relative path to the (1) CUSTOMIZE or (2) desformat parameters to rwservlet.  NOTE: vector 2 is probably the same as CVE-2006-0289
2, via the (1) debug parameter to showenv
2, via the (1) sid
4, via a direct request to (1) question.php
2, via the user parameter in an HTTP POST request.
2, via the message parameter.
4, via (1) a RCPT TO command with a long DNS name
4, via a CONFIG message with an out-of-range timestamp
0, via (1) certain inputs to the shutdown message from ftpshut
2, via the web interface.
2, via the search parameter in the search function.
4, via (1) the lastusername parameter to index.php or (2) selected_search_arch parameter to search.php.
2, via an invalid archive parameter.
4, via a parameter to the page move template.
2, via the admin parameter.
4, via (1) the sid
1, via missing parameters to (1) browse.php
2, via the BBCode color tag.
2, via the query parameter.
2, via the id parameter.
5," by tricking a user into dragging an image that is a """"javascript:"""" URI."
3, by overlaying a malicious new window above a file download dialog box
0, via format string specifiers in a Wireless Access Point identifier
2, via the Include parameter.
2, via the apa_module_basedir parameter.
2, via the (1) value parameter to the poll module or (2) pId parameter to the gallery module.
3, via the (1) term parameter to the search module or (2) title in the blog aggregation module.
4, via a direct request to /config/version.xml.
4, via a direct request to firmwarecfg.
4, via shell metacharacters in an HTTP GET request.
2, via the webtag parameter.
2, via the webtag parameter.
4, via (1) an invalid final_uri or sort_by parameter to index.php or a direct request to (2) admin.php
4, via a (1) long history parameter in the configuration file (ares.conf) or (2) long search string.
2, via the message parameter.
3, via the (1) forum_id or (2) group_id parameter to forum.php
2, via the id argument to admin pages such as (1) members or (2) admin.
4, via a direct request to (1) about.php
2, via the dir parameter.
4, via (1) a directory that does not exist in the dir parameter or (2) a direct request to certain php files
2, via the BBCode color value.
2, via the svmPassword parameter.
2, via the (1) UserName parameter to profile.php or (2) UserID parameter to login.php.
2, via the idcategory parameter.
2, via symlink attack on sandboxpids.tmp.
4," via a TIFF image header with a zero """"YCbCr subsampling"""" value"
4, via a GET request to a file:// URL in the GM_xmlhttpRequest API function
4, via a p->dir value that is larger than XFRM_POLICY_OUT
4, via a crafted compressed ISO file system.
4," via a compressed file with """"improper tables""""."
2, via the (1) username parameter or (2) name field when entering a session or sending a message.
2, via the (1) year or (2) date parameter.
4, via a direct request to addressbook.php and other include scripts
0, by modifying the cookie to match the target userid.
2, via the msg variable.
2, via the (1) username or (2) password parameter.
2, via the (1) id parameter to view.php
2, via the (1) isCorrectPassword or (2) userExist function in class.auth.php
4, via a long user name in the USER command.
3, via unknown vectors.
4, via a long string to SMTP (1) HELO or (2) MAIL FROM commands.
2, via the PersonID parameter to (1) PersonView.php
0, via the PersonID parameter to (1) PersonView.php
4, via a hard link attack on a file while it is being decompressed
2, via the email parameter.
4," via a cat_id with a """"'"""" (single quote)"
2, via the user field on the login page in the Admin control panel.
4, via a long USER command.
2, via the fuseaction parameter
1, via an invalid fuseaction parameter
1, via modified arguments to a Karrigell services (.ks) script
4, via unknown vectors.
0," via the id parameter to index.php with the affiche parameter set to """"Forum-read_mess"""""
4, via (1) the strRootpath parameter to validsession.php or (2) the strTable parameter to Admin/News/List.php.
4, via a direct request to Admin/Users/AddModifyInput.php.
4, via a crafted pixmap image.
4, via a crafted Rich Text Format (RTF) file.
5, by forcing a particular error to occur at the login window.
2, via command line arguments to an application that uses CoreFoundation.
1, via crafted Gregorian dates.
4, via unknown vectors.
3, via unknown vectors.
1, via crafted web archives that cause Safari to render them as if they came from a different site.
5, by sending a partial IPP request and closing the connection.
0, via unspecified attack vectors related to a temporary directory
0," via unspecified attack vectors relating to """"the utility used to update Java shared archives."""""
4, via a large packet to TCP port 41523
4, via a direct request to structure.php.
4, via (1) a null byte or (2) an MS-DOS device name such as AUX
2, via the (1) bodycolor
1, via an ASCII char 13 (carriage return) in the signature field
2, via an attachment
4, via a .. (dot dot) in the download parameter.
2, via the path[docroot] parameter.
2, via the (1) title or (2) content parameter to profile.php and profile_misc.php
4, via a long (1) username or (2) password
2, via certain UDP packets that lead to a function call with the wrong argument
3, via unknown vectors.
2, via the dir parameter
5," via (1) shell metacharacters in the eping_count parameter or (2) restricted shell metacharacters such as """">"""" and """"&"""" in the eping_host parameter"
2, via the page parameter.
2, via the Theme parameter to (1) affichagefaq.php3
2, via the login field.
4, via (1) the board_id parameter to deletethread.php or (2) the template.
5, via (1) a 1 in the perm parameter to deletethread.php or a direct request to (2) ban.php
2, via the (1) FID parameter to board.php or (2) UID parameter to member.php.
2, via the language parameter.
4," via a string containing the code within """"{"""" and """"}"""" (curly bracket) characters"
2, via certain values that are inserted into the $in variable.
4, via a packet with a zero in the IP option length field.
2, via the Username field in (1) index.php or (2) member.php
4, via a large number of connections
2, via the mid parameter.
4, via (1) the page parameter to dispbbs.asp
4, via unknown vectors.
2, via unknown vectors
4, via unknown vectors.
2, via certain Javascript
3, via archived messages.
0, via the code_no parameter to (1) Item_Show.asp or (2) search_list.asp.
4, via a long URI
2, via the (1) currDir or (2) image parameters.
3, via certain currDir and image arguments
2," via the language parameter and a terminating null (""""%00"""") characters."
2, via the cache_lastpostdate[server] cookie.
3, via unknown vectors.
0, via the path parameter to (1) initialize.php
2," via the (1) min or (2) max parameter with a """"'"""" (single quote)"
2, via the (1) max or (2) ctg parameter.
3, by specifying a negative quantity for an item
0, via the cpaint_argument[] parameter to (1) calculator.asp or (2) cpaintfile.asp
2, via the (1) ExecuteGlobal function or (2) GetRef statement
2, via unprintable characters in the SSID.
4, via (1) kernel headers in a pcap file or (2) data frame dissection
4, via a SWF file with a modified frame type identifier that is used as an out-of-bounds array index to a function pointer.
2, via the User field.
4, via a long request.
4, via a .. (dot dot) in the (1) layerstyle parameter to adlayer.php or (2) language parameter to js-form.php.
2, via the clientid parameter.
2, via the (1) Match or (2) CatID parameter to SearchResults.php
2, via the (1) NewsMode parameter to NewsCategoryForm.php
5, via a long nickname.
4, via a long Jtext field.
2, via the site parameter.
0, via (1) course parameter in login.php or (2) words parameter in search.php.
2, via the (1) name
4, via shell metacharacters in the argv parameter.
2, via direct requests to (1) gorum/notification.php
1, via e-mail data in a message.
0, by compiling arbitrary code in the cache directory
4, via a date with a long month.
0, via format string specifiers in a banner or capability line.
1, via crafted e-mail addresses that are not properly sanitized when creating a failed delivery message.
4, via a symlink attack on a log file.
2, via the (1) x or (2) y parameters.
2, via the (1) c or (2) m parameters to index.php or (3) w parameter to journal.php.  NOTE: this issue has been disputed by the vendor
2, via the (1) s or (2) m parameter to forums.php
4, via EXIF data.
4, via a GET request with an http://localhost URI
3, via unknown vectors.
3, via shell metacharacters in the dictionary parameter (aka the lang variable).
2, via the (1) letter parameter to login/member.php or (2) im_receiver parameter to login/imcenter.php.
3, via shell metacharacters in the host parameter to a dig query.
4, via a direct request to admin/PhpMyExplorer/editerfichier.php
4," via """".."""" sequences in the (1) SITE_Path parameter to menu_dx.php or (2) CONTENTS_Dir parameter to menu_sx.php."
2, via the (1) SITE_Path parameter to menu_dx.php or (2) CONTENTS_Dir parameter to menu_sx.php.
4, via a large number of parameters to (1) footer.php
4, via (1) the moderate parameter to the Comments module or (2) htmltext parameter to html/user.php.
0, via the show parameter to dl-viewdownload.php.
2, via the (1) addquery and (2) subquery parameters to the newbb plus module
2, via the uid parameter.  NOTE: this issue might overlap CVE-2005-0282.
4, via a hex-encoded keywords parameter.
5, by uploading a .php file to the content/images/ directory using images.php.  NOTE: if a PHPKit administrator must already have access to the end system to install or modify configuration of the product
0, by opening an interface file in /proc/sys/net/ipv4/conf/
2, via the (1) image handle or (2) timeformat attribute in a RealPix (.rp) or RealText (.rt) file.
0, by specifying an alternate file in the password database option.
4, via a symlink attack on the .pwtmp.[PID] temporary file.
4, via shell metacharacters in a Bluetooth device name.
1, via crafted PCM audio data
4, via a status packet that contains less data than specified in the packet header sent to UDP port 3784.
2, via the Referer field in the HTTP header.
4, via (1) a direct request to /daylinks/index.php or (2) a negative value in the daylinkspage parameter to index.php
5, via a file attachment that is processed by the Display feature.  NOTE: the severity of this issue has been disputed by the developer.
5," via """"C:\"""" (Windows drive letter) sequences in commands such as (1) LIST or (2) RETR."
2, via an HTTP header with a large Range field.
2, via an invalid request
1, via EXIF data
1, via EXIF data
1, via EXIF data
1, via EXIF data
0, by granting themselves certain rights that should be restricted to administrators.
1, by setting the MallocLogFile environment variable to the target file before running a setuid application.
5, via a crafted MOV file that causes a sign extension of the length element in a Pascal style string.
4," via a crafted MOV file with """"Improper movie attributes."""""
4, via a crafted file with a missing movie attribute
5, via a crafted PICT file that triggers an overflow during expansion.
2," via unknown attack vectors involving """"validation of URLs."""""
1, via crafted HTTP headers with negative values
0, by modifying the main screen message.
3, via unspecified vectors.
5, via unspecified vectors.
4, via a long Host string in a Site Queue (.lsq) file.
2," via an HTML e-mail containing tags with strings that contain """">"""" or other special characters"
4," via (1) a long """"+VIEWS:"""" reply"
5, via shell metacharacters in the (1) node parameter to connectedNodes.ovpl
0, via format string specifiers in the nickname.
2, via the (1) version[fullname]
4, via shell metacharacters in the DNS lookup query field.
2, via the fid parameter.
5, via a man-in-the-middle (MITM) attack while the transaction is taking place
4, via a signature.
4," via an """"ftp://"""" URL in the alpath parameter"
4, via nested
5, via unspecified vectors.
4," via """".."""" sequences in the file parameter."
2, via the comment parameter.
0, via the c parameter to (1) events.php
4, via a .. (dot dot) in the custom_welcome_page parameter.
2, via the custom_welcome_page parameter.
2, via certain repeated reads from the /proc/scsi/sg/devices file
4, via a page name in a Login link
0, by modifying the forum number.
2," via an HTTP header containing only a """":"""" (colon)"
4, via a symlink attack on the silcd.[PID].stats temporary file.
4, via a long HOME environment variable to (1) config.cc
4, via -P arguments.
4," via """".."""" sequences and """"%00"""" (trailing null byte) characters in the id parameter to the read mod in index.php."
0, via the usr parameter in a vis_reg operation to index.php.
4, via an MS-DOS device name in the news parameter to print.php
4, via a post comment
0, via the id parameter to (1) email.php
4, via a direct request to (1) update.php
4," via an e-mail message containing Internet Explorer """"Conditional Comments"""" such as """"[if]"""" and """"[endif]""""."
0, via steps in which a terminating thread causes Asynchronous Procedure Call (APC) entries to free the wrong data
4," via (1) the username parameter to register.php or (2) a signature of a logged-in user in """"My Control Center"
4, via (1) Help.pm
2, via the username parameter.
4, via (1) dl-search.php or (2) wl-search.php.
2, via the username.
4, via a long group name argument to the RenameGroup function in the MMClient.MunduMessenger.1 ActiveX object.
2, via the nls[file][vx][vxsfx] parameter.
3, via shell metacharacters in the f parameter.
4, via a .. (dot dot) in the f parameter.
2, via the -f option to Dig (dig_device.cgi)
3, via certain (1) USER and (2) PASS commands
5, via a symlink attack on the (1) smb4k.tmp or (2) sudoers temporary files.
4, via (1) the pg parameter to printfaq.php
5, via CRLF sequences in the (1) name or (2) email fields
2, via the description field.
4, via the FullAddressBook method.
2, via the Server field in an HTTP response header
2, via the Server field in an HTTP response header
2, via the sessionid parameter.
4, via a symlink attack on the (1) high score or (2) save game files.
0, via the config[root_dir] parameter to (1) mysql.inc.php
2, via the Account ID field.
4, via (1) the Username to libraries/auth/cookie.auth.lib.php or (2) the error parameter to error.php.
2, via certain DHCP responses.
1, via pickled objects
4, via shell metacharacters
0, via format string specifiers in the SEARCH command.
4, via a direct request to the admin directory.
2, via the Description field in an event.
3, via the (1) fid parameter to misc.php or (2) Content-Disposition field in the HTTP header to newreply.php.
2, via the (1) wn_userpw parameter to startup.php
4, via a direct request to files in the actions directory
2, via the (1) date
2, via the 123 parameter.
2, via the (1) name
1, via SQL code in the file extension of an uploaded file.
2, via an HTTP POST request with a negative Content-Length value.
5, via a symlink attack on the gtkdiskfree temporary file.
4, via a crafted FSG packed executable.
4, via a crafted UPX packed executable.
4, via a long argument to the LIST command
4, via shell metacharacters in a command line for a privileged binary in /usr/sysadm/privbin.
4, via a long HOME environment variable.
0, via format string specifiers to the (1) EXPN
4," via a mailbox name containing a single double-quote ("""") character without a closing quote"
3, via unspecified vectors.
4, via a malicious c:\program.exe file
4, via a malicious C:\program.exe file.
4," via a malicious """"program.exe"""" file in the C: folder."
4," via a malicious """"program.exe"""" file in the C: folder"
4, via a long -t command line option.
4, via a symlink attack on the gwcc_out.txt temporary file.
2, via an exe file with a long FileDescription in the version resource.
1, by launching multiple processes at the same time
2, via the query string in an HTTP GET request.
4, via a .. (dot dot) in the l parameter.
2, via the Customer_Login parameter.
2, via the email field.
2, via the (1) SHELLOPTS and (2) PS4 environment variables before executing a bash script on behalf of another user
4, via a symlink attack on temporary files used by vicf.in
2, via the RTF import mechanism.
4, via a crafted SVG file.
4, via a crafted RTF file.
2, via an RTF file with long identifiers
2, via the rollid parameter.
3, via the rollid parameter.
2, via the URL
2, via the URL
2, via the values in the parameter form that appears when the paramform parameter is set to yes.
5, by connecting to the server via SSH and using the connect command to access the serial port.
2, via the Country parameter.
2, via the username parameter.
2, via the (1) tid parameter to topic.php
4, via a symlink attack on temporary files using (1) zdiff or (2) zcmp
4, via a symlink attack on temporary files
2, via symlink attacks on (1) the temporary file used by autoconf/randpass when openssl is not available
2, via certain ActiveX controls.
4," via """".."""" sequences in (1) the currentdir parameter to txt.php"
4, via a direct request to test.php.
2, via the (1) font
4, via unknown vectors.
4, via a malformed UDP packet.
2, via the (1) o or (2) sort parameters.
4, via the (1) idp
1, by modifying the PHPSESSID session ID parameter or cookie.
4," via a filename with a trailing """"."""" (dot)"
1, via crafted pickled objects
0, via the mod parameter to index.php.
2, via the HTTP_CLIENT_IP header (Client-Ip)
4, via a symlink attack on temporary files.
4, via a long Loc entry.
2, via the Login (OCW_login_username) field.
2, via the (1) BaseTarget or (2) Src parameters.
2, via the show parameter
4, via a crafted data:// URL.
2, via the (1) request parameter to joinrequests.php
2, via the (1) group parameter to css.php
2, via the upload action.
2, via the (1) announcement parameter to announcement.php
2, via certain arguments to (1) announcement.php
2, via the (1) announcement parameter to announcement.php
0, via the loc parameter to (1) modcp/index.php or (2) admincp/index.php
4, via a .. (dot dot) in the read parameter.
4, via a long USER name.
4, via a TFTP request with a long filename argument.
4, via a long HTTP GET request.
4, via a null session.
4, via a UDP packet sent directly to port 9110.
0, via the SEARCHTEXT parameter in a demos URL.
2, via the idPage parameter.
2, via the idOption_Dropdown_2 parameter.
4, via (1) fput in a 32-bit ioctl on 64-bit x86 systems or (2) sockfd_put in the 32-bit routing_ioctl function on 64-bit systems.
2, via the phrase field.
2, via the user field.
2, via the (1) PMF_CONF[version] parameter to footer.php or (2) PMF_LANG[metaLanguage] to header.php.
5, via a .. (dot dot) in the LANGCODE parameter
4, via a LANGCODE parameter that does not exist
2, via the search field to download.php.
4, via a userspace process that issues a USB Request Block (URB) to a USB device and terminates before the URB is finished
4, via unknown vectors.
0, via a long filename in a (1) ACE or (2) ARJ archive.
2, via the mode parameter.
2, via the email field on the password reminder page.
4, via a crafted command 40 that causes a -1 length to be used and triggers an out-of-bounds read.
2, via the query string.  NOTE: this issue was originally disputed by the vendor
2, via the module parameter.
4, via a symlink attack on the xferfax$$ temporary file.
3, via unknown vectors.
1, via crafted syslog messages.
4, via unknown vectors.
3, via invalid (1) pid
4, via a web page with malformed attributes in a BGSOUND tag
2," via the """"forgotten e-mail"""" feature."
2, via the user language selection.
2, via the language field without a source field set.
4, via shell metacharacters in the SITE command.
2, via the user_pass_sha1 value in a cookie.
2, via the page parameter.
4, via a crafted TIFF image.
2, via the (1) forum or (2) topic parameters.
4," via """".."""" sequences in the ctsWebsite parameter."
4, via a Proxy Auto-Config (PAC) script that uses an eval statement. NOTE: it is not clear whether an untrusted party has any role in triggering this issue
2, via the summary of the bug
0, via unknown attack vectors
5, via a .flp file that contains a long path to a (1) .mid or (2) .wav file.
2, via certain characters in the filename of a Bluetooth OBEX transfer.
4, via shell metacharacters in the topic parameter.
2, via the -t (trace file) command line argument.
2, via the (1) title
1, via URLs in comments.
5, via an ioremap on a certain memory map that causes the iounmap to perform a lookup of a page that does not exist.
3, by using hfsplus to mount a filesystem that is not hfsplus.
2, by setting the arguments to the GotNate.Excute method.
4, via a long third argument to the GotNate.Excute method.
4, via a crafted packet.
4, via a large number of authorization token keys.
2, via certain article headers containing Asian characters that cause Lynx to add extra escape (ESC) characters.
1," via crafted sequences such as """"/.//..//////././"""""
4, via a symlink attack on a temporary file.
4, via a symlink attack on temporary (a) output and (b) error files.
2, via the query string.
2, via the IMG tag.
4, via a link or IMG tag to serendipity_admin.php.
2, via the login field.
1, by downloading the launch.ica file and changing the client device name (ClientName).
4, via a long filename.
4, via a .. (dot dot) in a filename.
4, via a symlink attack on temporary files
4, via a reverse direct connection from a different client
4, via a CAB file with large records after the header.
2, via IMAP clients on Mac OS X 10.4 Mail 2.
2, via long HTTP headers.
3, by connecting to sblim-sfcb but not sending any data.
4, via a symlink attack on temporary files.
4, via a long command line argument.
0, via the redir parameter to (1) cart.php or (2) index.php
0, via a username parameter with SQL after a null character
0, via format string specifiers in file or directory name.
4," via """".."""" sequences in the pg parameter"
0, via the msg_send parameter
2, via the (1) pm_email_notify and (2) pm_save_sent parameters
2, via the msg_view parameter
2, via the (1) album and (2) photo parameters.
4, via (1) the activate parameter in register.php and (2) the cat_id parameter in faq.php.
4," via (1) <math> tags or (2) Extension or <nowiki> sections that """"bypass HTML style attribute restrictions"""" that are intended to protect against XSS vulnerabilities in Internet Explorer clients."
4, via a crafted URL.
2," via long headers such as (1) Host and (2) Accept in HTTP requests.  NOTE: the vendor suggests that this issues is """"in an underlying Microsoft technology"""" which"
4, via a srvloc packet with a modified length value.
2, via an XPM file with a number of colors that causes insufficient memory to be allocated
4, via a long HTTP request that causes an out-of-bounds read.
5, via (1) an m3u file containing a long line ending in .wma or (2) a pls file containing a long File1 value ending in .wma
4," via """".."""" sequences in the SELECT command."
4, by sending a crafted DeviceIoControl command
4, via (1) the sitetitle parameter in header.php and (2) the version and (3) query_count parameters in footer.php.
2, via the query string in an HTTP request.
0," via script in the """"set markup HTML TABLE"""" command"
2, via an HTTP request with an sid parameter that contains a STOP command.
0, via a userid parameter that contains a STOP command.
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via a malicious executable in a specially crafted RAR file with malformed central and local headers
4, via (1) the fid parameter of newmsg.php
0, via the t_login parameter of footer.php.
2, via unspecified attack vectors.
4, via a DOC file with an invalid property tree
4, by tricking a user into performing a drag-and-drop action from certain objects
2," via unknown vectors related to the """"/proc"""" filesystem"
4," via """"..""""  sequences in the g2_itemId parameter."
4, via a crafted UDP packet.
3," via certain """"odd"""" responses."
2, via the (1) login field
4, via (1) the url parameter in dereferrer.php and (2) the file parameter in imagewin.php.
2, via format string specifiers in a UUE/XXE file
2, via an ACE archive containing a file with a long name.
2, via the threadID parameter.
4, via (1) callto:// and (2) skype:// links
0, by modifying the PATH to reference a malicious (1) ps or (2) grep file.
3," via shell metacharacters (""""`"""" or single backquote) in a request that is not properly handled when an error occurs"
4, via a PostScript (PS) file containing a large number of pages value
2, via the file parameter.
3, via unknown vectors.
4, via unknown vectors.
2, via the (1) forwardTo1
1, by setting the PAGE_NOACCESS or PAGE_GUARD protection on the Page Environment Block (PEB)
0, via attachments with executable extensions such as ASPX
0," by attaching the file using the """"compose page"""" feature"
2, via the password field.
1, via Javascript events in tages such as <b>.
4," via a request with a trailing """"."""" (dot) or (2) list directory contents via a trailing null character."
4, via unknown vectors.
4, via unknown vectors.
0, via the $__redirect parameter
2, via certain arguments to (1) left.php
4, via a hierarchy element in a .bvh file
4, via a crafted FSG 1.33 file.
4, via (1) the username parameter in the Your Account page
2, via the (1) forum_id or (2) thread_id parameter in the Forum file
0, via the user parameter in a profile operation
4," via """".."""" sequences in the (1) user parameter in a profile operation or (2) quale parameter in a newtopic operation."
2, via the (1) name or (2) comment parameter in detail.php
4, via (1) the id parameter in detail.php and the catid parameter in (2) get.php and (3) index.php.
0, via HTML in corrupted images and other files such as .GIF
4," via """"long verb arguments."""""
2, via the (1) Direction parameter to computers/default.asp
2, via the session.save_path option in a .htaccess file or VirtualHost.
2, via the err parameter in the panel script.
3, by creating a hardlink to a file from a world-writable directory
5, via HTTPs (SSL).
2, via the username parameter.
2, via the awayday parameter.
4, via a modified client that skips the Security (Start) mode
2, via the pun_root parameter.
2, via the image parameter in a GetPic operation.
4, via a symlink attack on temporary files.
2, via the match parameter.
2, via unknown attack vectors.
2, via the (1) PHPSESSID
2, via the t_core_path parameter.
4, via unknown vectors.
4, via (1) unknown vectors involving Javascript and (2) mantis/view_all_set.php.
4, via a symlink attack on temporary files created by (1) register-q.sh and (2) register-p.sh.
1, via symlink attacks on temporary files in (1) lib/toascii.nw and (2) shell/roff.mm.
4, via a symlink attack on temporary files.
1, by using the rssh_chroot_helper command to chroot to an external directory.
4, via a symlink attack on the index.lok temporary file.
2, via the Referer when using image maps.
0, by having local users import LDIF files with long lines.
0, via the nome parameter in a login operation
4, via (1) the buddy parameter in buddy.php
2, via the phpicalendar cookie.  NOTE: this is not a cross-site scripting (XSS) issue as claimed by the original researcher.
2, via the name field.
2, via the query parameter.
2, via the (1) fileid and (2) subkatid parameters.
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
5, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
0, via the userid parameter in admin/login.asp.
2, via the userid parameter in admin/login.asp.
0, via the userid parameter in admin/login.asp.
2, via the userid parameter in admin/login.asp.
5," via a crafted URL with a """"stacked array assignment."""""
2, via unknown attack vectors in (1) ext/curl and (2) ext/gd.
0, via format string specifiers in a push of the dhcp-option command option.
2, via the (1) channel parameter in the topics module and (2) topic parameter in the posting module.
2, via the st parameter.
0, via the error parameter to comersus_backoffice_supportError.asp.  NOTE: the comersus_backoffice_message.asp/message vector is already covered by CVE-2005-2191 item 2.
4, via a file such as BAT
4, via a file such as BAT
4, via a file such as BAT
4, via (1) the _base_href parameter in translate.php
0, via the section parameter followed by a null byte (%00) in (1) body_header.inc.php and (2) print.php.
4, via a direct request to forum.inc.php with a modified addslashes parameter with either the (1) asc or (2) desc parameters set
4, via unknown vectors.
3, via unknown vectors.
2, via the limit parameter.
0, via the type parameter in a Topic method.
4, via a Post Reply to a topic
2, via the motd parameter.
2, by setting both a GET/POST/COOKIE (GPC) variable and a GLOBALS[] variable with the same name
2, via the (1) error_msg parameter to usercp_register.php
2, via the signature_bbcode_uid parameter
2, via the signature_bbcode_uid parameter
4, via a crafted search request for a filename that contains Unicode characters.
2, via the error parameter.
4, via (1) the loginusername parameter or (2) cookies to (a) subdreamer.php
4, via 404 error pages
1, via unspecified vectors
4, via a malformed client certificate during SSL session negotiation.
4, via a message body.
0, by giving the files specific extensions
0, via a full pathname in the AttachPath field of a mail message under composition.
5, via a request to index.php with the list parameter set to * (wildcard) and the page parameter set to all.
5, by convincing a user to enter long strings into the First Name and Last Name fields.
0, by obtaining the password hash for another user
2, via the (1) Search module
4," via (1) malformed packets and possibly other unspecified issues with unknown impact and attack vectors including (2) use of """"~"""" in a pathname"
2, via the category parameter.
2, via the (1) entry
1, via HTTP crafted GET requests.
0, via HTML or script in an image whose type does not match its extension
2, via the id parameter.
2, via the users parameter.
4, via a heap-based buffer overflow in system timers. NOTE: this issue does not correspond to a specific vulnerability
4, via a data block that is longer than the specified data block size.
4, via a gl_playerEnter command with a long player name.
3, via various (1) GLConsole::addLine
4, via various (1) GLConsole::addLine
5, via a negative numplayers value that bypasses a signed check in ServerConnectHandler.cpp.
4," via """"../"""" or """"..\"""" sequences in the URL."
2, via the (1) version
1, by sending an NT_CONN_OK command from a client that is not connected
4, via a large packet
4, via a blog comment.
3, by modifying cookies.
0, via the msg parameter to msg.php.  NOTE: some sources identify a second vector in the login parameter to process_signup.php
2, via the serviceid parameter.  NOTE: on 20060210
5, via a ZIP file with a version header greater than 15
4, via a crafted value in a CAB file that causes ClamAV to repeatedly scan the same block.
4, via a crafted CAB file that causes cabd_find to be called with a zero length.
4, via a modified file_id parameter.
4, via a chat message containing Javascript in style attributes in tags such as <b>
2, via the (1) Remote Proxy Server or (2) Proxy Filter IPs field.
2, via the galid parameter.
4, via (1) banner.php or the id parameter to (2) print.php
4, via a large number of simultaneous requests to list a web directory that has a large number of files.
4, via (a) the blogs module
0, via the t parameter in a newreply action.
5, via a viewforum action with the f parameter set to a single quote (').
0, via the forumID parameter to (1) newtopic.php
2, via the ID parameter.
4, via the entryID parameter.
4, via a URL that causes an error message to be displayed
2, via the old_searches parameter.
2, via the (1) INCLUDE_PATH and (2) SQUIZLIB_PATH parameters in new_upgrade_functions.php
4, via (1) the target_url parameter in upgrade_in_progress_backend.php
2, via the grDisp parameter.
2, via the dir (direction) field.
5, by creating a long directory name
1, via crafted large values for unspecified parameters.
4, via a long FETCH command.
3, by triggering a core dump in one thread while another thread has a pending SIGSTOP.
2, via the topics_offset parameter.
2, via an invalid topics_sort_mode parameter
4, via the notfound.skin error document.
4, via a long current working directory and filename.
3, via unknown vectors.
2, via the topic type.
4, via (1) the notify script in HylaFAX 4.2.0 to 4.2.3 and (2) crafted CallID parameters to the faxrcvd script in HylaFAX 4.2.2 and 4.2.3.
2, via unspecified attack vectors.
2, via the username parameter.
2, via the user parameter.
2, via the (1) adsess
4," via a ..  (dot dot) in the """"Task PHP File To Run"""" field."
0," by referencing the file in """"Task PHP File To Run"""" field and selecting """"Run Task Now""""."
4, via a .. (dot dot) in the id_user parameter.
3, via multiple vectors in (1) login/profile.php
2, via the (1) id parameter in conjunction with the login/userinfo.php path and (2) the session parameter (aka the PHPKITSID variable).
0, via the id parameter in the (1) editattributes or (2) admin page.
2, via the (1) listname parameter in (a) admin/editlist.php
4, via a .. (dot dot) in the selected%5B%5D parameter in an HTTP POST request.
2, via the (1) page and (2) site parameters.
4, via a .. (dot dot) in the folder parameter.
2, via unknown attack vectors.
4, via a long VCSI18N_LANG environment variable to (1) haagent
3, by importing a corrupted Microsoft Excel file
2, via unknown attack vectors involving LZH files.
4," via """"not properly escaped error messages""""."
2, via the rubid parameter.
2, via the page parameter.
2, via the id parameter.
2, by entering the article number in tsurl parameter.
2, via the sug parameter.
2, via the sug parameter.
2, via the querystring.
5, via a shared object in the Portage temporary build directory
5, via a shared object in the Portage temporary build directory
4, via a shared object in the Portage temporary build directory
2, via the forum parameter.
2, via the forum parameter.
4, via a URL that causes the application to return an error.
3, via unknown vectors.
2, via the username field.
4, via a long USER ftp command.
4, via parameters to the ActionDefineFunction ActionScript call in a SWF file
0, by triggering an error message
0, via HTTP POST methods utilizing the $player_name
2, via the (1) username and (2) password fields in adminlogin.asp.
4, via unspecified scripts.
2, via direct requests to multiple scripts in the libraries directory.
2, via the sap-exiturl parameter.
4, via a close command in the sap-sessioncmd parameter and a URL in the sap-exiturl parameter.
4, via (1) the sap-syscmd in sap-syscmd and (2) the BspApplication field in the SYSTEM PUBLIC test application.
3, via Error Pages.
2, via the (1) id parameter in profile.php and (2) titles of posts.
2, via the file parameter
2, via long arguments to various IMAP commands
2, via direct requests to (1) create.php
2, via the sessionID parameter in (1) logout.php and (2) index.php.
0, by running from or installing to the temporary files directory.
0, via the id parameter in (1) category.php and (2) info.php.
2, via the jump parameter.
4, via a long name value in an Application Set response.
4, via a large number of packets with 0xFF characters to the Telnet port (TCP 23)
2, via an HTTP POST request with a negative Content-Length parameter.
3, by creating a large number of connected file descriptors or socketpairs and setting a large data transfer buffer
4," via a malicious """"program.exe"""" file in the C: folder."
2, via the (1) HTTP_HOST variable and (2) various scripts in the libraries directory that handle header generation.
2, via certain malformed IKE packets
2, via certain crafted IKE packets
2, via certain crafted IKE packets
2, via certain crafted IKE packets
1, by sending ACK messages for packets that have not yet been received (optimistic ACKs)
2, via the file parameter.
4, via a crafted image in a RealPlayer Skin (RJS) file.  NOTE: due to the lack of details
2, via the username field in the admin control panel.
4, via a .. (dot dot) in the xoopsConfig[language] parameter.
2, via the list parameter.
4, via (1) the AuthID parameter in ForumAuthDetails.php
2, via the UserName parameter.
2, via the (1) DateFrom or (2) DateUntil parameter to forum.php.
4, via a modified c parameter.
2," via the """"Your Current Mood"""" field in the registration page."
2, via an invalid fid parameter in a newthread action.
5, via a long mailbox name in the (1) select
2, via the mailbox name argument of the (1) create or (2) rename commands.
2, via the (1) retid parameter in badlogin.php
4, via short zero-length packets
2, via the m parameter.
2, via the catid parameter in a view action (view.php) to index.php.
1, via unspecified vectors in index.php.
4, via edit.php.
2, via the title in an image in a link to a trusted site within a form to the malicious site.
2, via unknown attack vectors.
4, via a long file name.
0, by injecting various control characters such as newline (NL).
0, by causing an application that uses LibSystem to request a large amount of memory.
1, via crafted TGA image files.
1, via crafted TGA image files.
2, via the Color Map Entry Size in a TGA image file.
4, via a TIFF image file with modified image height and width (ImageWidth) tags.
5," via a TIFF image file with modified (1) """"strips"""" (StripByteCounts) or (2) """"bands"""" (StripOffsets) values."
2, via long extended attributes.
5, via a GIF image file with a crafted Netscape Navigator Application Extension Block that modifies the heap in the Picture Modifier block.
4, via a direct connection to UDP port 9090
2, via the Query parameter.
2, via the query parameter.
2, via direct requests to files in the revize/debug directory
2, via the (1) resourcetype
2, via the (1) thema
2, via the (1) productid parameter in shopaddtocart.asp
2, via the (1) strgifttoname parameter in shopgift.asp
4, via a SVG file with long CSS style property values.
3, via unspecified vectors.
4, via (1) the forum_id parameter to options.php or (2) lastvisited parameter to viewforum.php.
3, via the poll_ident parameter.
2, via the pollid parameter.
2, via the id parameter.  NOTE: an examination of the 0.7.5 source code suggests that there is no id parameter being handled directly by index.php.
2, via the start parameter.
3, via shell metacharacters (backticks) in a URL that another product provides in a command line argument when launching Opera.
2, via certain IPSec packets that cause alignment problems in standard multi-block cipher processors.  NOTE: it is not clear whether this issue can be triggered by an attacker.
2, via the (1) gzip/tar and (2) css MIME viewers
4, via (1) Javascript in forms produced by the form generator or (2) the parameters to the installer.
2, via the parent parameter.
2, via the cat parameter.
4, via (1) the subject in a post
4," via (1) """"GET and other variables"""" and (2) """"SEF""""."
2, via the (1) Itemid variable in the Polls modules and (2) multiple unspecified methods in the mosDBTable class.
0, via spoofed TCP packets that cause the PIX to create embryonic connections that that would not produce a valid connection with the end system
4, via a URL in the pollname parameter.
4, via (1) the subject field when creating a new thread and (2) information passed to the Reputation system.
1, via modified fields in the inbox form.
4, via unknown vectors.
4, via (1) memmcat in the memm module or (2) certain TSIG format records.
2," via unknown manipulations that cause in.named to """"make unnecessary queries."""""
4, via a symlink attack on the exi.X.sync temporary file
4, via (1) the cookie-based login panel
4, via a .. (dot dot) in the (1) form_lang parameter in login.php and (2) the imgdir parameter in random_image.php.
2, via the (1) i and (2) text parameters.
4, via adclick.php and possibly other unspecified vectors.
2, via the (1) username or (2) password to admin/admin_validate_login
4, via a direct request to scripts such as (1) togateway.php and (2) other unspecified scripts.
4, via (1) the Err parameter in admin/index.php and the (2) firstname and (3) lastname parameters in index.php.
2, via the number parameter.  NOTE: it is not clear from the original report whether administrator privileges are required.  If not
2, via the config[basepath] parameter.
2, via the username field.
4, via a large SQL query
2, via certain Samba activities that cause an fasync entry to be re-allocated by the fcntl_setlease function after the fasync queue has already been cleaned by the locks_delete_lock function.
4, via 64-bit mmap calls that are not properly handled on a 32-bit system.
2, via an update message without private protocol information
4, via a message without ICMP ID (ICMP_ID) information
2, via the sid parameter.
4, via a PORT command with missing arguments.
3, by using RENAME with a non-existent mailbox
2, via the username parameter in (1) directory.php
2, via the msg parameter.
2, via the (1) cat parameter or (2) thread parameter in thread mode.
2, via the (1) cid parameter in search_result.php
4, via (1) various input fields
2, via the (1) user_name and (2) date parameter in the HelpDesk module.
1, via multiple vectors
2, via the (1) username in the login form or (2) record parameter
2, via an arbitrary file in the templatename parameter
2, via the campaign_id parameter in a result action.
2, via the (1) edit_id
2, via the id parameter.
2, via the article parameter.
2, via an invalid category parameter
0, via the page parameter
2, via the song_id parameter.
2, via the searchFor parameter.
4, via a URL in the main parameter.
2, via the announce parameter.
2, via the (1) lorder
2, via the (1) post tickers and (2) view tickets options.
2, via the (1) id and (2) category_id parameter.  NOTE: due to a typo
2, via the (1) rowstart
2, via the cat_id parameter.
2, via the (1) poll and (2) category parameters to index.php
2," via the i parameter.  NOTE: the vendor has stated """"EZ Invoice"
2, via the category parameter.
5, by sending a SIGKILL to a real-time threaded process while it is performing a core dump.
4, via a large number of crafted packets that cause the ip_append_data function to fail
2, via the q parameter.
4, via hex-encoded values in the q parameter.
0, via certain search parameters
2, via the keyword parameter.
2, via the (1) id and (2) category parameters to index.php.
2, via the cat parameter.
4, via the AlbumID parameter.
3, by causing a large number of broken leases
1, via malformed IPv6 packets with unspecified parameter problems
4, via a URL in the id parameter.
4, via a URL in the athena_dir parameter.
4, via a URL in the content parameter.
1, via long file names in ALZ archives.
2, via the cnt parameter.  NOTE: various reports indicate that the affected version is 1.1.3
2, via the search parameter.
2, via the REQ parameter
3, via the (1) term
4, via hex-encoded values in the REQ parameter.
2, via the (1) table and (2) messageID parameters.
2, via the (1) nr parameter in topiczeigen.php
2, via the (1) FORUM_ID parameter in forum.php
2, via the offset parameter.
2, via the p_entry parameter in an entry command to index.php.
2, via the messageid parameter in (1) send.php or (2) a delete action in messages.php.
2, via the (1) cat and (2) lang parameters.
2, via the (1) folder_id parameter in list.php and (2) mid parameter in a view action to messages.php.
4, via a .. (dot dot) in the show parameter.
2, via the (1) sbres_id parameter in (a) details_res.php
2, via the (1) article_id parameter in users/comments.php
2, via the searchStr parameter.
2, via the id parameter.
1," via line feeds (LF) in the """"To"""" address argument."
2, via the (1) term and (2) start parameters to index.php.
4, via a symlink attack on the tmpepsifile.epsi temporary file.
2, via multiple DCC packets with a code other than 2 and a large size field
2, via multiple DCC packets with a code of 6 or 7
4, via a page with a large number of gg: URIs.
0, via an image filename between exactly 192 to 200 characters
4, via a web page that accesses the EasycallLite.oce ActiveX control
3, via the (1) user parameter in the Login action
4, via (1) hex-encoded values in the QueueID parameter and (2) Action parameters.
4, via a Javascript BODY onload event that calls the window function.
4, via a Javascript BODY onload event that calls the window function.
5, by poisoning a target's DNS cache and causing a large update file to be sent
2, via query strings that are included in an error message
5, via a -S (scheme) argument that specifies a large file
2, via unknown attack vectors
2, via unknown attack vectors involving untrusted Java applets.
2, via the sortorder parameter.
2, via the (1) year and (2) category parameters.
4, via (1) the cl parameter to SubCategory.php and the item_id parameter in (2) ItemInfo.php and (3) ItemReview.php.
1, via crafted IKE packets
0, via the id parameter in a profile action.
2, via the user_id parameter.
2, via the (1) threadid parameter to thread.php and (2) userid parameter to profile.php. NOTE: the vendor disputes these issues
2, via multiple fields in (1) UCP.php and (2) SendPm.php.
2, via the (1) gal parameter to index.php or (2) id parameter to comments.php.
2, via an HTTP interface to the contents of memory buffers
4, via a crafted ZOO archive.
2, via the (1) kategorieid and (2) katid parameters.
2, via the (1) detail[]
4, via (1) the meskin parameter to admin/editorTypetool.php
4, via a long command line argument.
4," via """".."""" sequences in the module parameter to index.php."
2, via the id parameter.
2, via the HTTP referer.
2, via the day_id parameter.
2, via the m parameter.
2, via the (1) node and (2) art_id parameters.
2, via the __f parameter.
2, via the cid parameter in (1) selloffers.php
0, via the id parameter in (1) index.php
2, via the (1) catid
2, via the start parameter.
2, via the msg parameter.
2, via the qid parameter.
2, via the (1) FAQ_ID and (2) action parameters in (a) viewFAQ.php; and (3) CATEGORY_ID parameter in (b) index.php.
2, via the SURVEY_ID parameter.
0, via a Java applet with a large string argument to the removeMember JNI method for the com.opera.JSObject class.
4," via """"../"""" sequences in the filename parameter."
2, via the (1) cmd and (2) var1 parameters.
2, via the (1) startid parameter to activity_log.php
4, via malformed packets.
2, via the sid parameter.
2, via the (1) category and (2) type parameters to viewcat.php
0, via the cwhere parameter to (1) index.php and (2) download.php
0, via the u parameter to index.php.
2, via the (1) id parameter in a comments action and the (2) sortorder and (3) display_num parameters in a news_list action.
2, via the (1) idcat parameter in a showcat action and (2) the action parameter.
2, via the (1) site
4, via a malformed message
4, via a modified id parameter.
0, via the dc_xd parameter in a cookie.
2, via the q parameter.
2, via the searchQuery.queryString search module parameter.
4, via unknown vectors.
3, via unknown vectors.
2, via the username field.
2, via the search parameter.
2, via various HTML tags and values
3, via HTML in a file with a GIF or JPEG file extension
2, via the REQ parameter to the search module.
2, via the group parameter.
0, via the ret parameter
0, via the time_range parameter to edit_report_handler.php.  NOTE: the startid/activity_log.php vector is already covered by CVE-2005-3949.
1, via crafted IKE packets
2, via the (1) cat_id parameter in portfolio.php and (2) cid parameter in content.php.
2, via unspecified attack vectors.
2, via the id parameter.
1, via crafted VoIP packets.
0, via the medium parameter to (1) start_page.css.php and (2) style.css.php; or the From parameter to users_popupL.php.
4, via (1) a long GET request to the HTTP server
2, via invalid IMAP commands.
2, via the admin_email parameter.
2, via the keywords parameter.
4, via unspecified parameters.
2, via the sKeywords parameter.
2, via the (1) haystack parameter to search_result.php or (2) ckey parameter to print_me.php.
2, via the q parameter.
2, via the srch_text parameter in a Search and Sort option to messages.php.
2, via direct requests to the usr/system files (1) insert_file.php
2, via the (1) cal_id parameter
2, via the (1) cid and (2) catid parameters to (a) day.php
2, via the (1) id parameter to category.php and (2) search parameters to search.php.
4, via (1) the lastnumber parameter to stat.php and (2) the HTTP referer to pixel.php.
4, via a large lastnumber value.
2, via the (1) property_id
2, via an invalid lang value
2, via the (1) start
2, via the mls parameter.
2, via the product_id parameter.
4, via Javascript in an IMG tag.
4, via unknown vectors.
2, via the query parameter.
0, via unspecified search module parameters.
2, via the (1) lamember_login parameter to sendpass.php and (2) login parameter to member.php.
2, via the HTML source of the WebEOC login webpage
2, via the HTTP_USER_AGENT header.
2," via the """"user language option"
2, via the q parameter.
2, via the (1) s
2, via the (1) prod
2," via the """"remote URL."""""
2, via the pid parameter.
2, via the idp parameter.
2, via the dir parameter.
2, via the search parameters
2, via the query string.
4, via a parameter to search.cgi.
2, via the (1) arrange and (2) p parameters.
2, via unspecified vectors
1, via unknown vectors
2, via the a parameter.
4, via (1) the cat parameter in index.php and (2) the note parameter in blog.php.
4, via a long INVITE field in a Session Initiation Protocol (SIP) packet.
1, via repeated requests to rate.php.
0, via the download parameter in rate.php
0, via the q parameter
2, via the (1) categoryid
2, via the (1) page and (2) car parameters.
2, via the (1) Location
2, via the (1) Location
0, via the id parameter to viewprofile.php.
2, via the q parameter.
2, via the searchtxt parameter.
2, via the search parameters.
2, via the search parameters.
2, via the (1) L
2, via the (1) faqid parameter to faqDspItem.asp and (2) catcode parameter to faqDsp.asp.
4, via unknown vectors.
5, via unknown vectors.
2, via the (1) ForumID parameter in view_forum.cfm
0, via the Words parameter in search_forums.cfm
2, via the ListID parameter.
2, via the (1) topic and (2) newsid parameter in the news sector
4, via a long APPFLUENT_HOME environment variable.
2, via certain URLs that (1) are malformed in a way that prevents a terminating null byte from being added to either a hostname or path buffer
2, via the (1) forumID
1, by modifying the import_blacklist variable in grab_globals.php
2, via the username and password parameters in (1) the user login and (2) administrator login pages.
4, via a .. (dot dot) in the edit parameter.
2, via an invalid viewbackup parameter.
4, via a long Host: header.
4," via """".."""" sequences in the beanFiles array parameter."
4, via a URL in the beanFiles array parameter.
3, via the (1) parent and (2) day parameters.
2, by using the @import directive to download files from other domains that are not valid Cascading Style Sheets (CSS) files
2, via the q parameter.
5, via a .mov file with (1) a Movie Resource atom with a large size value
1, by using the FileUpload command to upload a file that appears to be an image but contains PHP script.
4," via """".."""" sequences in the Type parameter in a GetFoldersAndFiles command."
3, via shell metacharacters in the Host header (possibly the name parameter or variable)
2, via the customerEmailAddress parameter.
2, via the invoiceID parameter.
2, via the (1) Wohnort and (2) Beruf fields in editprofile.php
2, via the (1) year parameter in calendar.php
2, via the username parameter
2, via the (1) harf parameter in kullanicilistesi.asp and (2) baslik parameter in forum.asp.
1, via SQL code after a numeric argument to a /read/attachment URL.
2, via unusual whitespace characters in the orderby parameter
5, via a request to the TCLHTTPd status module
4, via (1) a request with a trailing null byte (%00)
2, by causing errors in TML scripts
3, via unknown vectors.
4," via a message that causes the server to """"fail with an Overflow on bad date data in a processed message"
4, via a crafted package that can execute code when the pear command is executed or when the Web/Gtk frontend is loaded.
3, via an e-mail address that ends in a NULL character
2, via the start parameter.  NOTE: the vendor says that since only one character can be modified
4," via """"../"""" sequences in the query string argument."
0, via the domainname parameter to register.php
2, via the p0 parameter.
2, via the _tcf parameter.
2, via the id parameter.
2, via the (1) forum_id parameter to forum.asp
2, via the result parameter.
0, via the let parameter in a viewlist action to titles.php.
2, via the (1) let parameter in a viewlist action to authors.php and (2) sid parameter to viewstory.php.
0, via the uid parameter to viewuser.php.
2, via the StartRow parameter.
1, via unspecified inputs that cause insufficient memory to be allocated due to an incorrect expression that does not enforce the proper order of operations.
4, via (1) the Calendar name field when creating calendars
1, via multiple vectors
4, via (1) the tasklist's name or (2) description
4, via (1) the notepad's name or (2) description
2, via the $_SERVER['PHP_SELF'] variable.
4, via a long query string.
4, via (1) the ParentId parameter in SPT--BrowseResources.php
4, via (1) the ss parameter in SPT--QuickSearch.php; (2) ParentId parameter in SPT--BrowseResources.php; (3) the ResourceId parameter in SPT--FullRecord.php; (4) ResourceOffset parameter in SPT--Home.php
4, via a link in the a parameter
2, via the cat parameter. NOTE: the provenance of this issue is unknown; the details were obtained solely from third party sources.
2, via the (1) month
4," via """".../"""" (triple dot) sequences in unspecified vectors."
4, via (1) .. (dot dot)
2, via the msg command. NOTE: due to lack of appropriate details by the original researcher
2, via the q parameter.
2, via the (1) Username and (2) Password fields.
4, via a .. (dot dot) and null byte (%00) in the id parameter of the read module.
1, via script tags in the Subject header of an e-mail message
4, via a URL in the $_CCFG[_PKG_PATH_DBSE] variable.
5," via """".."""" (dot dot) sequences in the $_CCFG[_PKG_PATH_DBSE] variable."
2, via the phpcoinsessid cookie.
4, via a direct request to config.php
2, via an IP packet with the same source and destination IPs and ports
4, via a malformed request with a single character to port 1111.
0, via the msg parameter
2, via the (1) PHPSESSID (session ID) or (2) REQUEST_URI (query string).
2, via unspecified message fields.
4, via (1) the newsid parameter in editnews.php
4, via (1) the email
4, via (1) the category parameter in add.php
4, via (1) the ref parameter in download.php
4, via (1) the password and username parameters in advertiser.php
4, via the (1) since
2, via the searchstring parameter.  NOTE: the provenance of this issue is unknown; the details were obtained solely from third party sources and independently verified using source code inspection.
2, via the number parameter.
0, via (1) link parameter to tell_friend.php
2, via the cat parameter.  NOTE: the vendor has disputed this issue
2, via the ad_number parameter.
2, via the id parameter.
2, via the search parameters.
2, via the search parameters.
0, via unspecified search module parameters
2, via the target_field parameter.
4, via URL-encoded values in the sKeywords parameter.
2, via the by parameter.
2, via the batch parameter.
5, via (1) the address book and (2) contact data.
2, via the (1) popupid parameter in popups.edit.php; (2) so
2, via the (1) gallery_id parameter to view.php and (2) image_id parameter to image.php.
2, via the keyword parameter.
2, via the (1) id parameter to index.php and (2) page parameter.
2, via the searchterms parameter.
2, via various fields
2, via the language parameter.
2, via the (1) id
0, via unspecified search module parameters.
2, via the URL.  NOTE: this might be resultant from CVE-2005-4160.
2, via the id parameter.
4, via a hex-encoded phrase parameter.
3, via the forum_title parameter.  NOTE: the provenance of this issue is unknown; the details are obtained solely from the BID.  In addition
2, via an IP packet with the same source and destination IPs and ports
2, via an IP packet with the same source and destination IPs and ports
2, via the (1) TID parameter in topic.asp
2," by replacing the """">"""" in the tag with a """"<"""""
2, via the (1) startrow and (2) catid parameter.  NOTE: this issue might be resultant from the SQL injection problem (CVE-2005-4263).
2, via the (1) startrow and (2) catid parameter.
2, via the (1) username and (2) password fields
5," via a long IMAP command that ends with a """"}"""" character"
2, via an HTTP 401 response with a WWW-Authenticate header containing a long Realm field.
2," via unknown attack vectors related to """"authentication mechanisms"""" and """"form input."""""
2, via an IP packet with the same source and destination IPs and ports
2, via an IP packet with the same source and destination IPs and ports
2, via the id parameter.
4, via a malicious shared object in the Portage temporary build directory
4, via a malicious shared object in the Portage temporary build directory
4, via a malicious shared object in the Portage temporary build directory
0, via certain search module parameters
4, via parameters to the search module
2, via unspecified parameters to search.cgi
4, via (1) the search module parameter or the (2) product and (3) cart_id parameters.
3," via unknown vectors involving """"'smart' values for userid and password"
2, via the page parameter to index.php.
0, via the page parameter to index.php.  NOTE: this might be resultant from CVE-2005-4287.
2, via the user_action parameter.
2, via the (1) kword
2, via the (1) product
2, via unspecified search module parameters
2, via the affl parameter.
2, via the username in the login page.
2, via the text parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a large HTTP request.
0, via unspecified search parameters
2, via the (1) sch_allsubct
2, via the (1) before and (2) ct parameters.
2, via the address bar field.
4," via """"..""""  sequences in the p parameter."
3, via the db_id parameter.
2, via an invalid cat_id parameter
2, via the (1) pg
2, via the forum parameter to (1) forum.cgi and (2) post.cgi
2, via the mode parameter.
0, via unspecified search module parameters.
2, via the id parameter.
2, via the id parameter.
2, via the (1) stop and (2) user parameters.
2, via unspecified vectors
4," via """".."""" sequences in the option parameter."
4, via a direct request to (1) doc.inc.php
4," via an e-mail message with an """"invalid format."""""
2, via the (1) function
2, via the ID parameter.
2, via the (1) newsid and (2) id parameter.
2, via the (1) id
2, via the (1) step
1, via direct requests to obsolete JSP files including (1) admin/uploadclient.jsp
2, via the (1) inreplyto
2, via the H_ID parameter to (1) zixforum/forum.asp
4, via a crafted pageid parameter to admin/versions.html.
4, via the (1) fwd parameter in admin/adminsignin.html and (2) originalpageid parameter in admin/newpage.html associated with a group.
2, via an invalid permalink parameter to index.php
2, via the (1) dbname and (2) checkprivs parameters.  NOTE: the vendor and a third party have disputed this issue
2, via unknown attack vectors.
2, via the query parameter.
2, via the (1) Cat parameter in default.asp and the (2) accessdenied parameter in admin/default.asp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) username and (2) password fields.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a direct request with a non-empty setmodules parameter
2, via the (1) cat and (2) srcText parameters to faq.php.
1," via multiple requests to """".dll"""" followed by arguments such as """"~0"""" through """"~9"""""
2, via the query parameter.
2, via the page parameter.
2, via unspecified search parameters.
2, via the keywords parameter.
2, via the (1) name parameter in text.php and (2) frame parameter in forum.php.
2, via the (1) plan_id parameter to (a) domains.php
0, via unspecified search parameters
0, via unspecified search parameters
0, via the ID parameter to default.asp.
2, via the page parameter.
2, via an invalid mode parameter to community.html
2, via the (1) s parameter to faq.asp and (2) searchQuery parameter to search.asp.
2, via the change parameter.  NOTE: it is possible that this is resultant from CVE-2005-4376.
4," via """".."""" sequences in the change parameter."
2, via the (1) PageID and (2) SiteNodeID parameters.
2, via the SiteNodeID parameter.
2, via the (1) sort_mode parameter to (a) fisheye/list_galleries.php
2, via the (1) sort_mode parameter to (a) fisheye/list_galleries.php
2, via the (1) fileDN and (2) folderviewer_attrs parameters.
2, via the (1) nodeID
2, via the (1) presentationSite
2, via an invalid (1) fuseaction parameter to index.cfm and (2) documentid parameter to document/docWindow.cfm.
2, via the searchstring parameter.
2, via unspecified search parameters.
2, via the id parameter.
2, via the near parameter.
3, via invalid (1) submit.y
2, via the StoryID parameter.
0, via unspecified search parameters
2, via the id parameter.
2, via the (1) obcatid and (2) comid parameters.
0, via unspecified search query parameters.
0, via unspecified search parameters
3, via the LoginMSG parameter.  NOTE: the provenance of this issue is unknown; the details were obtained solely from third party sources.
2, via the Event_ID parameter.
0, via unspecified search parameters
2, via the page_search parameter.
2, via the (1) _77_struts_action
0, via unspecified search parameters
2, via the show parameter.
2, via the item parameter.  NOTE: the provenance of this issue is unknown; the details were obtained solely from third party sources.
4, via invalid (1) yellowpage_id
2, via the page parameter.
2, via the (1) content and (2) criteria parameters.
2, via the (1) page parameter to index.php
2, via unspecified search parameters.
0, via unspecified search parameters
4, via a long request to TCP port 105.
4, via the (1) E-mail address field to (a) PlantsByWebSphere/login.jsp
2, via the form parameter.
2, via the id parameter.
2, via the (1) series
0, via unspecified search parameters
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension to an accessible directory
4, via a .. (dot dot) in the path parameter and a %00 at the end of the filename
2, via certain RTSP streams.
3, via HTML in a file with a GIF file extension
2, via the (1) file_id parameter to attachment_send.php
2, via the kb_ask parameter.
2, via the (1) sort_by and (2) sort_order parameters to index.php.
2, via the (1) __mode and (2) __id parameters to helpdesk.php.
0, via the q parameter to search.php. NOTE: the view_user.php/sort_by vector is already covered by CVE-2005-1554 and CVE-2004-2181.
2, via the err parameter.
0, via the query parameter
4, via unknown vectors. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the title parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL with a long (1) cmd or (2) mode parameter.
4, via a message with two 802.1q tags
5, via a PVLAN message with a target MAC address that is set to a gateway router
4, via a malicious shared object in the Portage temporary build directory
4, via a malicious shared object in the Portage temporary build directory
4, via a long POP3 reply.
4, via a long email message header
2, via the strSearch parameter.
3," via the rec_next parameter. NOTE: the original disclosure suggests that command injection is not feasible because the injection occurs after an """"ORDER BY"""" clause"
0, by setting the file parameter to an arbitrary file and injecting the code into the body parameter.  NOTE: if a FlatNuke administrator is normally assumed to be able to modify arbitrary content
4, via a link or IMG tag to server_privileges.php
2, via unspecified attack vectors.
0, by modifying the original (1) p_User_user_id and (2) User_user_id parameters to UserProfile.aspx
2, via the XSL namespace in XML
4, via long (1) LIST
3," via several """"..."""" (triple dot) sequences in a UID FETCH command."
2, via the (1) Name
2, via the user_sess parameter.
4, via a URL in the ROOT parameter.
4, via a direct request to (1) wp-includes/vars.php
5, by sending a SYN packet for a TCP stream
4, via a REGISTER request with a SPI version number that contains a large number of space or tab characters.
5, via a .. (dot dot) in the PGV_BASE_DIRECTORY parameter.
4, via a URL in the PGV_BASE_DIRECTORY parameter.
4, via (1) the username field in login.php
4, via a .blend file with a negative bhead.len value
1, via crafted packets.
4, via a long request that is not properly handled during conversion to wide characters.
4," via """"a malformed URL."""""
0, by tricking the user into adding a file whose filename contains a non-default code page and non-ANSI characters
2, via unspecified search parameters.
2, via the (1) oe-action and (2) page parameters.
2, via the bab[searchfor] parameter.
2, via the (1) menuid parameter to (a) index.php and (b) guestbook.php
2, via the story_id parameter.
2, via unspecified search parameters.
2, via unspecified search parameters. NOTE: the vendor has disputed this vulnerability
2, via the ret_page parameter.
2, via the ret_page parameter.
2, via the (1) ret_page parameter to login.asp or the (2) do_search and (3) search parameters to content.asp.
0, via the keywords parameter to (1) forums.asp
2, via the p_news_id parameter to (1) news_and_events_new.asp and (2) news.asp.  NOTE: on 20060227
2, via the searchfield parameter.
2, via the (1) iid
2, via the (1) type and (2) count parameters
2, via the (1) keyword and (2) invalid parameter to articleSearch.asp; (3) username and (4) invalid parameter to lostPassword.asp; (5) Username
2, via the (1) query string
0, via unspecified search parameters
2, via unspecified search parameters.
2, via unspecified parameters to (1) spip_login.php3 and (2) spip_pass.php3.
2, via the cid parameter.  NOTE: the vendor has disputed this issue
2, via the search_query parameter.
2, via the action parameter in a search page
2, via unspecified search parameters.
2, via the (1) show and (2) type parameter.  NOTE: the provenance of this information is unknown
4," via a malicious """"program.exe"""" file in the C: folder"
0, via multiple unspecified user input fields.
5, via a URL containing a non-existent .dll file.
2, via the docID parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via """"../"""" sequences in the template parameter."
2, via format string specifiers in syslog function calls.
2, via unspecified search parameters.
0, via unspecified search parameters
0, via unspecified search parameters
4, via (1) the sortby parameter in members.php and (2) IMG tags.
2, via the ratings parameter in multiple scripts
1, by modifying the max_file_size parameter to (1) bug_file_add.php
3, via the (1) prefix and (2) sort parameters to the manage user page (manage_user_page.php)
4, via (1) the return parameter in login_cookie_test.php and (2) ref parameter in login_select_proj_page.php.
2, via the (1) view_type and (2) target_field parameters.
0, by executing the GUI (SmcGui.exe) and then killing the process
5, via a URL that does not include a .exe extension but returns an executable file.
4, via (1) the setLang parameter in index.php and (2) unspecified search module parameters.
4, via unknown vectors.
4, via unknown vectors.
0, via multiple unspecified parameters in (1) profile.htm
4, via a symlink attack on temporary files.
2, via the EXPS parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an invalid q parameter
0, via the q parameter
3, via unknown vectors.
2, via the (1) RowKeyValue parameter in the PORTAL schema; and the (2) title and (3) content input fields when creating an forum article.
4, via a df_next_page parameter with a trailing null byte (%00).
4, via a long APPE command.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) cat parameter in an openforum action (openforum.php) in index.php
2, via the (1) ENTER_ARTICLE_TITLE
4, via a Windows Metafile (WMF) format image with a crafted SETABORTPROC GDI Escape function call
0, via the loginid parameter
1, via crafted IKE packets
0, via format string specifiers in crafted IKE packets
1, via crafted IKE packets
5, by sending (1) the href parameter to index.fts
0, via format string specifiers in the (1) USER
4, via a long tzoffset value.
2, via the Keyword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via the (1) GroupsId and (2) ItemsId parameters in admin.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the config[basedir] parameter.
2, via the bNewWindow parameter.
2, via an invalid errmsg parameter to loader.cfm with a url parameter set to email-login-info.cfm
2, via the (1) COUNTRYNAME
2, via the query parameter in a search.
4, via a long window-id parameter. NOTE: because the program is not setuid and not normally called from remote programs
5, via a callsign that is not followed by a NULL (\0) character.
2, via unknown attack vectors.
2, via the (1) sql parameter in browse.php and the (2) sid
4, via a long crafted string on (1) port 7800 (the GUI Server port) or (2) port 7801 (the Device Server port).
3, via nested
4, via (1) removable media containing a program that will execute because of the autorun setting and (2) applications that are able to invoke other applications
0, via words that are longer than the input buffer used by flex.
4, via a long filename in an ARJ archive.
4, via a malicious library in the current working directory.
2, via the totalRows_rsRead parameter.
2, via the email parameter
2, via the page parameter.
2, via the index parameter.
4, via a trailing null byte (%00) in the (1) theme
4, via shell metacharacters in a filename that is processed by the display command.
2, via the file extension of an uploaded file attachment.
4, via a thread message
4, via a long HOME environment variable.
2, via the (1) ids[0]
2, via the (1) devWherePair[0]
2, via an invalid action parameter.
2, via the keywords parameter.
2, via the (1) f parameter to viewforum.php
2, via unspecified fields in the user edit profile.
4, via (1) the c parameter in cart.php and (2) unspecified search module parameters.
2, via the page parameter.
2, via the include_file parameter.
2, via the pg parameter.
4, via a long string
2, via the rollid parameter in the showhtmllist method.
4, via a long command-line argument.  NOTE: because this program executes with the privileges of the invoking user
4, via a URL in the remote avatar url field
2, via an argument with an invalid directory name.
4," via a large number of requests to join a """"charmed channel"""" such as PTnet"
2, via the lng parameter.
2, via the page parameter.
2, via unspecified search parameters.
4, via the (1) billshowid
2, via the p parameter.
2, via the poll_id parameter.
2, via the page parameter.  NOTE: the provenance of this information is unknown because the source URL is not available; the details are obtained solely from third party information.
2, via the (1) nav parameter in the downloads module
4, via (1) _a and (2) newsid parameters in the news module
2, via the (1) pollid or (2) previouspoll parameters.
2, via the page_id parameter.
0, via the s parameter to (1) search.php
2, via the pid parameter.  NOTE: it is not clear
0, via javascript in the SRC attribute of an IMG tag.
2, via the LangueID parameter.
0, via the mode parameter
2, via the (1) forumsId and (2) topicId parameters in index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the entry parameter in index.php and (2) the gb_id parameter in comment.php.  NOTE: The index.php/entry vector might be resultant from CVE-2005-1548.
2, via the pmodule parameter.
2, via unknown attack vectors.
5, by requesting view_caricatier.php
2, via nested tags in the news_body parameter
4, via a direct request to /admin/view.asp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unknown attack vectors in the administrative interface.
5," by replacing a backup archive during the time window when the archive is owned by """"nobody"""" but not yet encrypted"
4, via Javascript contained in nested
2, via unknown attack vectors.
4, via a long filename command line argument.  NOTE: since the overflow occurs in a non-setuid program
2, via the (1) username and (2) password fields.
2, via the msg parameter.
2, via the message parameter.
2, via the (1) m1
3, via the (1) c or (2) s parameter.
2, via the c parameter.
2, via the products_id parameter to product_info.php.
2, via the title in an image in a link to a trusted site within a form to the malicious site.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the title in an image in a link to a trusted site within a form to the malicious site.
3, via the TSerrorMessage parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, by selecting an arbitrary directory as a blog's top-level directory.  NOTE: this issue can be used in conjunction with CVE-2005-3102 to create or overwrite arbitrary files of all types.
4, via a crafted message from an ICQ buddy
2, via unknown attack vectors.
2, via malformed MIME messages.
2, via certain calls to the WZCQueryInterface API function in wzcsapi.dll.
2, via the 91) q_IP (IP) or (2) q_Host (HOST) parameters.
4," via """"--"""" style options in the q_Host parameter."
0, via unknown attack vectors
2, via the gameid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. In addition
2, via unknown vectors that trigger a null dereference in the secpolicy_fs_common function.
2, via unknown attack vectors.
2, via an HTTP Referer header.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via CRLF sequences in the login parameter.  NOTE: the vendor has disputed CVE-2005-3497
2, via unspecified vectors
4, via unknown vectors.
1, via invalid data to a port used by a system-server process
4," via (1) a crafted HTML file with a """"content: url(0);"""" style attribute"
4, via (1) the cid parameter in knowledgebase/index.php
2, via an IFRAME element with a large value of the WIDTH attribute
2, via the q parameter.
2, via an invalid id argument to pagename.cfm
2, via the X-Forwarded-For field in an HTTP header.
0, by guessing the story ID.
2, via the User-Agent HTTP header field.
4, via a malicious Mesa library in the /home/anand directory.
2, via the SubjectID parameter.
2, via the (1) name and (2) description parameters.
2, by calling the F_CLOSEM fcntl with a parameter value of 0.
4, via a long url parameter in the Redirect method.
4, via (1) certain equality predicates that trigger self-removal
4, via a hash join (hsjn) that triggers an infinite loop in sqlri_hsjnFlushBlocks.
4, by using a table function for an instance of snapshot_tbreorg
2, via the (1) id and (2) nnet_catid parameters.
2, via unknown attack vectors.
4," via (1) the rlm_sqlcounter module or (2) unknown vectors """"while expanding %t""""."
2, via unknown vectors involving the default page.
1, via unspecified attack vectors.  NOTE: this issue has been referred to as XSS
2," via unknown attack vectors involving """"network address translation."""""
2," via unknown attack vectors related to an """"internal servlet"""" accessed through HTTP."
0, via the id parameter in a manageaccount action to index.php.
4, via the addr_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the search parameter in a query_string to the home page. NOTE: The vendor disputes this issue
2, via the (1) idartist
2," via the (1) author (""""your name"""") and (2) """"comment"""" section."
4, via a phpinfo action to (1) index.php
2, via the module parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via unknown vectors related to the handling of the clipboard selection while an XView application exits.
4," via """".."""" sequences in an """"Unlink data file"""" command."
4, via a long symlink
4," via (1) the Homepage field (aka the Website field) in an """"image-related comment"""" and (2) the img_size field in view.php.  NOTE: due to lack of details from the researcher"
2, via the TestGallery parameter in a mod_info action to modify_gallery.php
4, via a symlink attack on temporary files.  NOTE: the raw source referenced an incorrect candidate number; this is the correct number to use.
4, via a symlink attack on temporary files.  NOTE: this issue was originally associated with a different CVE identifier
3, via unknown vectors.
5, via a .c file with crafted inline assembly code.
4, via a crafted .s file.
4," via a """"text/html"""" HTML Content-type header sent in response to an XMLHttpRequest (AJAX)."
4, via a long password.
2, via unknown attack vectors that cause format strings to be injected into the wprintw function.
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unknown vectors.
0, by flooding the router with traffic.
3, via parameters including (1) the m parameter in auth.php
2, via the project_id parameter.
3, via unknown vectors.
4, via a URL in the LOCAL_PATH parameter
4, via a crafted Subset-Advert message packet
4, via CRLF sequences in the content-type parameter.
2, via the content-type parameter
2, via the SUBSCRIPTION_NAME parameter in the (1) SYS.DBMS_CDC_SUBSCRIBE and (2) SYS.DBMS_CDC_ISUBSCRIBE packages
3, by moving a connected system to a location with low signal strength
3, by creating a COM object of the class associated with the control's CLSID
5, by creating a COM object of the class associated with the control's CLSID
3, by creating a COM object of the class associated with the control's CLSID
5, by creating a COM object of the class associated with the control's CLSID
0, via format string specifiers in a syslog call.
1, via certain data packets.
2, via unspecified parameters associated with the (1) name
4," by requesting account_manage.php with a trailing """"/login.php"""" PHP_SELF value"
4, via a long parameter.
4, via a long DB2LPORT environment variable.
4, via a long libname.
3, by connecting and sending a long username
2, via an empty string in the second parameter
1, via vectors that result in long function parameters
4, via a direct request to misc/phpcheck/
4, via Javascript events in the username parameter
2, via the (1) gmt_ofs and (2) language parameters.  NOTE: the page parameter is already covered by CVE-2006-1913.  NOTE: it was later reported that 3.50 is also affected.
3," via invalid """"connect frames."""""
2, via unknown vectors
3, via unknown vectors.
5, via vectors associated with an incorrect call to the ipv6_skip_exthdr function.
2, via vectors related to passwords.
0, by establishing many FTP sessions
4, via a crafted PUB file
4, via a PowerPoint presentation that attempts to access objects in the Temporary Internet Files Folder (TIFF).
4," via a crafted Windows Address Book (WAB) file containing """"certain Unicode strings"""" and modified length values."
4, via a crafted SWF file.
4, via a PNG image with a large chunk size.
4, via e-mail messages with crafted (1) vCal or (2) iCal Calendar properties.
4, via a long fifth argument to the BuildContextW or BuildContext opcode
4, via a nlmsg_len field of 0.
4, via a text e-mail with a large number of URLs
2, via unknown attack vectors that result in quadratic computational complexity.
1," via unspecified vectors involving template files and the """"handling of submitted form fields""""."
4, via a URL with a large number of trailing / (forward slashes)
1, via crafted packets with negative compressed size values.
2, via certain fragmented packets
4, via a symlink attack on a temporary log file.
2," via long HTTP request headers when Kaffeine is """"fetching remote playlists"""""
3, by writing a 2- or 4-channel JPEG image (or a 2-channel TGA image) to a scalar
0, via ICMP IP fragments that match a reset
1, via crafted passwords
5, by triggering timeouts in a way that causes the setjmp and longjmp function calls to be interrupted and modify unexpected memory locations.
3, via malformed packets.
4, via a URL in the glob[rootDir] parameter.
2, via the readold parameter.
2, via the username parameter.
2, via the (1) q parameter to search.php and (2) email parameter to user.php.
2, via the homepage parameter.
2, via an IMG tag with an unusual encoded Javascript function name
4, via a long -o command line argument.  NOTE: this is probably a different vulnerability than CVE-2005-0351 since it involves a distinct attack vector.
1, via unspecified vectors in a URL
2, via the personalID parameter.  NOTE: it was later reported that 1.1 and earlier are affected.
2, via the e-mail field (mail variable) in a new message
4, via a URL in the inc parameter.
2, via unspecified attack vectors.
2, via the (1) name and (2) shout variables to (a) shout.php
2, via the username field (adminname variable).
4, via a long text field
2, via unspecified attack vectors.
2, via the $_SERVER[HTTP_USER_AGENT] variable (User-Agent header).
2, via the (1) usuario_nkads_admin or (2) password_nkads_admin parameters.
2, via the page parameter.
2, via the id parameter.
2, via the user parameter.
4, via a .amp file with a COORDSYS tag with a long string attribute.
4, via a .. (dot dot) in the dir parameter.
2, via the cat parameter.
4, via a URL in the inc_stat parameter
4, via a long (1) arg_host or (2) arg_unix_socket argument
1, by using setuid programs to access file descriptors using /dev/fd/.
4, via a URL in the catalogDocumentRoot parameter.
4," via a long string in the """"Name of site"""" field of an FTP account.  NOTE: because this program executes with the privileges of the invoking user"
3, via the (1) p and (2) keyword parameters in (a) index.php and (b) search.php.
4," via a javascript: scheme in an """"[a]"""" bbcode tag"
4, via the viewID parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  Due to the unavailability of the original source
2, via the email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  Due to the unavailability of the original source
2, via the cat parameter.
2, via the email parameter.
2, via the (1) parent or (2) pg parameter.
2, via the dir parameter.
4, via a direct request to sp_helper_functions.php
2, via the (1) Press_Release_ID parameter in press/details.asp
2, via the searchterm parameter.
2," via unspecified vectors involving """"CD to MIME Conversion""""."
1, via multiple vectors
1, via unknown vectors related to (1) unspecified vectors during the SSL handshake (SPR# MKIN67MQVW)
2, via the Keyword parameter.
2, via the (1) fid parameter in index.php and (2) pagid parameter in verpag.php
0, via the titulo parameter
2, via the appserv_root parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  There is not enough detail from these third party sources to know whether this is directory traversal
4, via a .. (dot dot) in the RENAME command.
2, via unknown attack vectors.
4, via a direct request to (1) footer.php and (2) side_menu.php
4, via a .. (dot dot) in the argument to (1) getCommand.new (aka getCommand) and (2) getShell
2, via the www parameter.
2, via the username parameter (aka the u variable).
2, via the (1) comment_poster
2, via the id parameter.
4, via a modified replyid parameter.
2, via the (1) b
4, via (1) malformed NTLM authentication requests
2, via the s parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a WMF file containing (1) ExtCreateRegion or (2) ExtEscape function calls with arguments with inconsistent lengths.
4, via a large number of connections from the same IP address.
1, via various vectors
2, via the needle parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via the ForumID parameter.
5, via a new message with a url bbcode tag containing a javascript URI.
2, via the javascript URI in bbcode url tags in (1) addpost1.php and (2) addtopic1.php.
4, via a change action that specifies identical values for the passwd and admin_password parameters
2, via the page parameter.
2, via the email parameter.  NOTE: the provenance of this information is unknown
2, via the (1) parent
1, via crafted UPX files.
2, via the query parameter
2, via the (1) url and (2) name field of the default email form.
2, via the (1) cal_id parameter in calendar.php3 and the (2) password field on the login page.
2," via the description field on the """"Create New todo"""" page."
4, via a URL in the page parameter.  NOTE: it is not clear
3, via modified doc_ext and id parameters
4, via a direct request to hc
2, via the search parameter.
4, via a long (1) -lang
2, via format string specifiers in the quote command.  NOTE: because the program is not setuid and not normally called from remote programs
4, via a large amount of TCP SYN packets (syn flood) to arbitrary ports
2," via the Title field on the """"Adding New Event"""" page"
1," by setting the ACalAuthenticate cookie variable to """"inside""""."
4, via (1) the edit=header value
2, via the (1) id parameter to goto.asp or (2) password parameter to includeloginuser.asp.
0, via javascript in the SRC attribute of an IMG tag.
4, via a URL in the right_frame parameter.  NOTE: this has been called a cross-site scripting (XSS) issue
4," via a long attribute (aka """"a"""") field in the SDP data of a SIP packet on UDP port 5060."
2, via unspecified vectors
2," via unspecified vectors involving the use of the find command on the """"/proc"""" filesystem. NOTE: due to the vagueness of the vendor advisory"
0, via the Password parameter to login.asp.
2, via the login parameter in a login action.
0," via style sheet specifiers with invalid (1) """"/*"""" and """"*/"""" comments"
5, via a long value of the HOME environment variable
2, via the hid parameter.
0, via format string specifiers in MySQL error messages.
4," via (1) the """"Course name"""" field in index.php when the frm parameter has the value """"mine"""" and (2) possibly certain other fields in unspecified scripts."
2, via the password field in the login action to index.php (involving v_login.php and s_user.php) and (2) have other unknown impact via certain other fields in unspecified scripts.
0, via the date parameter in cal.php
4, via a crafted Set-Cookie header
2, via the (1) livestock_id parameter to showInfo.php and (2) tank_id parameter
2, via the username parameter when using the Login page.
2, via the txtEmailAddress parameter.
4,upload arbitrary files to
0, via the db_id parameter to visitorupload.php
2, via the cpage parameter.  NOTE: this issue might be resultant from CVE-2006-0216.
2, via the (1) item parameter in item.pl and (2) category parameter in itemlist.pl
4, via (1) the day parameter in calendar.php and (2) the input form in search.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  It is possible that this issue is resultant from an SQL injection problem in CVE-2005-4227.3 and CVE-2005-4227.13.
2, via the (1) username or (2) password.
2, via the tempid parameter.
4," via """".."""" (dot dot) sequences in the username field."
4," via a malicious """"program.exe"""" file in the C: folder"
4, via a javascript: URI in a [url] BBcode tag.
2, via the (1) month and (2) year parameters.
2, via the dir parameter to pictures.php.
2, via the (1) cat and (2) subcat parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the author parameter.
4, via (1) a comment to comments.asp and (2) possibly certain other fields in unspecified scripts.
2, via the month parameter in an archives view operation and possibly certain other parameters in unspecified scripts.
2, via the Name field.
2, via the fuseaction parameter.
2, via the text parameter
4, via a .. (dot dot) and trailing null byte (%00) in the sShare parameter.  NOTE: a followup post claims that this is not a vulnerability since the functionality of phpXplorer supports the upload of PHP files
2, via the (3) redir
2, via the ID parameter.
0, via the tK parameter in a find command.
2, by sending crafted SNMP messages to UDP port 162.
2, via the (1) _duration
1, via multiple parameters
4, via a long file name
2, via the (1) time parameter to cal2.jsp and (2) any invalid parameter
4," via a malicious """"program.exe"""" file in the C: folder"
4, via user-defined methods that trigger garbage collection in a way that operates on freed objects.
0, via unknown attack vectors that trigger an out-of-bounds read.
2, via the DHCP options field.
2, via the debug service on TCP port 60023.
4, via a javascript URI in the BBcode url tag.
2, via the username parameter.
2, by setting the uza parameter to 1.
0, via multiple unspecified vectors involving (1) util.php
4, via a query string value as a GET
4," via """".."""" (dot dot) sequences in a (1) PUT"
2, via the (1) username and (2) password parameter.
3, via crafted e-mail messages that cause a free of an invalid pointer when fetchmail bounces the message to the originator or local postmaster.
4," via """"certain malformed links."""""
2, via the username parameter to login.php.
4, via a direct request to (1) thumbs.php
0, via format string specifiers in a filename in a (1) GET or (2) SEND request.
0, via unknown attack vectors
2, via long command line arguments.
2, via the (1) month or (2) year parameter to index.php.
2," via the Keywords parameter.  NOTE: some sources claim that the affected parameter is """"q"""""
0, via multiple unspecified vectors involving (1) long strings received from Active Directory and (2) the filtering of HTML.
2," via unknown vectors involving """"browsing the web""""."
2, via the query string.
5," via a malformed query string containing special characters such as """"|""""."
1," via unknown vectors involving """"invalid format data""""."
4, via a .. (dot dot) in the (1) STOR and (2) RETR commands.
0, via the search parameter to search.php.  NOTE: the id/viewprofile.php issue is already covered by CVE-2005-4058.
4, via a website field in a new comment to view.php
4," via """"../"""" (dot dot) sequences in the URL."
2, via unknown attack vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter to blog.php.
2, via the message field to topic.php.
0, by sending the management interface a large number of spoofed ARP packets
4, via a long USER command combined with a long PASS command and an NLST command.
4, via a long USER command combined with a long PASS command.
0, via SIP INVITE commands with a long header field name sent during startup and (2) cause a denial of service (device hang or crash) via SIP INVITE commands with a long header field name sent during a call.
4, via a direct connection to UDP port 9090
4, via a javascript URI in an <a> tag in the comment parameter
4, via a signature containing a JavaScript URI in the SRC attribute of an IMG element
0, via JavaScript in the SRC attribute of an IMG element.
4, via a javascript URI in a BBCode img tag.
2," via the """"SELECT * FROM information_schema.views;"""" query"
2, via unknown attack vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via newline characters in the mailbox parameter of the sqimap_mailbox_select command
2, via the product_id parameter
0, via an undocumented system call.
2," via unspecified vectors involving the """"incorrect handling of error conditions""""."
2," via unspecified vectors that cause automount to """"mount file systems with reserved names""""."
1, via unspecified vectors involving HTTP redirection to local resources.
2, via unspecified vectors involving RSS feeds.
2, via an archive that is handled by BOMArchiveHelper.
4, via a crafted Canon RAW image.
4, by attempting to log in using an invalid user
1," via unknown vectors involving """"crafted archives."""""
2," via the (1) monthy parameter to index.php or (2) login parameter to admin/index.php. NOTE: some sources have reported item 1 as involving the """"monthly"""" parameter"
4, via a crafted TIFF image that triggers a NULL pointer dereference
4, via a certain search request that reveals the table prefix in a SQL error message
2, via the (1) nickname parameter and (2) an iframe tag in the topic parameter.  NOTE: the original disclosure specified the name parameter
2, via unspecified vectors
2," via the """"Add Comment"""" field in a comment popup."
2, via the username parameter in a login action.
2, via the (1) discuss
5, via a malicious Tor server that attempts a large number of accesses of the hidden service
2, via the pseudo parameter.
0, via the txt parameter to (1) chat_no.php and (2) chat_if.php.
4, via a crafted username.
3, via unknown vectors.
2, via unknown attack vectors.
4," via """".."""" (dot dot) sequences and null bytes in the sAction parameter"
4," via Javascript events such as """"onmouseover"""" in the (1) smile_url or (2) smile_emotion parameters"
0, by obtaining the MD5 hash of the password (possibly via another vulnerability that reads it from a data file)
4, via a long USER command
2, via the (1) notepad parameter in a notepad action and (2) signature parameter in an editsig action. NOTE: These are different attack vectors
4, via the (1) realname and (2) comment parameters
2, via the (1) par parameter in the post function on the forum page and possibly the (2) poll_id parameter on the poll page.  NOTE: the poll_id vector can also allow resultant cross-site scripting (XSS) from an unquoted error message for invalid SQL syntax.
0, by specifying an invalid file name to the uploader page
2, via unknown attack vectors.
5, via a long username to the (1) AUTH PLAIN or (2) AUTH LOGIN SMTP commands
2, via the LIST command; or create arbitrary files via the (b) APPEND
1, by sending an APPEND command and disconnecting before the expected amount of data is sent.
2, via long error messages.
4, via HTTP_REFERER (referer).
2, via the entrada parameter.
2, via the (1) goto_id parameter to index.php or (2) page parameter to news_full.php.
2, via the (1) goto_id or (2) mid parameter.
2, via the cerca parameter.
2, via the text parameter.
4, via long chat messages.
3, via LDAP messages with negative BER lengths
2, via the (1) sortby and (2) sortordr parameters
4, via (1) a large packet length field
5, via a playlist (pls) file with a long file name (File1 field).
2, via an index file with a long symbolic link.
2, via the query parameter in the search file.
4, via a crafted HTTP packet.
2, via the password field.
2, via the username parameter.
4, via (1) the catview parameter in cal_functions.inc.php and (2) the login parameter in cal_login.php.  NOTE: the catview vector might overlap CVE-2005-1865.
2, via the Name field in a comment associated with a picture.
0, via directory traversal sequences and a nul (%00) character in the plugin parameter.
0, via an HTTP Referer header ($url variable).
2, via unknown attack vectors.
2, via unknown attack vectors.
2, via the url parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Name field
2, via unspecified vectors involving the EXAMINE command.
3," by viewing """"formatted quoted-printable emails"""" via webmail."
2, via the letter parameter.
4, via (1) unknown attack vectors in the administrative interface and (2) input fields of the contact form.
2, via unspecified parameters in a login action.
4, via a .. (dot dot) in the filename parameter.
4, via the (1) id_forum
2, via the lang parameter.
4, via a direct request to inc-messforum.php3
2, via the site parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via certain manipulations of the query parameter
2, via unknown attack vectors related to a URL.
2, via the templatelist variable.
2, via the id parameter.
2, via the amadmin CLI tool.
5, via a strSok parameter containing a javascript: URI in an IMG SRC attribute.
2, via the numdays parameter.
2, via the (1) ortak or (2) kat parameter.
2, via unknown attack vectors.  NOTE: this candidate does not contain any actionable or distinguishing information.  Perhaps it should not be included in CVE.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2," via the sort parameter.  NOTE: some sources say that the affected parameter is """"date"
4, via a long RCPT TO argument.
4, via a long command-line argument
4, via unspecified vectors.
2," via unknown vectors related to """"posting new messages."""""
2, via the (1) email and (2) password parameters.
2, via an AIM message containing the Mac encoded Rich Text Format (RTF) escape sequences (1) \'d1
4," via a BGSOUND element with its SRC attribute set to """"file://"""" followed by a large number of """"-"""" (dash of hyphen) characters."
2, via the Number parameter.
4," via """"evilcode"""" in the key parameter"
3, via unknown vectors.  NOTE: due to the lack of relevant details from the Oracle advisory
4," via """"knowledge of the backend protocol"""" using a crafted SET ROLE to other database users"
4, via a crafted XFS ftruncate call
0, via unknown attack vectors related to the use of O_DIRECT (direct I/O).
3, by interrupting a task while another process is accessing the mm_struct
2, via format strings in the domain name portion of a destination address
2, via the data parameter.
0, via the entryid parameter in a comment_add action.
4, via a URL in the $GLOBALS[path] parameter.
1, via LDAP messages that contain Distinguished Names (DN) fields with a large number of elements.
2, via the file parameter.
2, via the username field during the registration of a new account.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unknown attack vectors in the administrative interface.
2, via the (1) email parameter to (a) editquota.html or (b) dodelpop.html; (2) showtree parameter to (c) diskusage.html; or the (3) mon
2, via the (1) file extension or (2) mime-type.
4," via """".."""" sequences and a symlink attack on the temporary file that is used during conversion."
5, via a modified PATH that references malicious (1) which or (2) dirname programs.  NOTE: while opcontrol normally is not run setuid
4," by navigating to the """"Appearance"""" dialog and selecting the """"Additional styles (skins) are available on the Lexmark web site"""" option"
2, via an ASF file with a large packet length value. NOTE: the provenance of this information is unknown; portions of the details are obtained from third party information.
4, via a crafted packet to the LDAP port (389/TCP).
2, via the (1) GatewayID parameter in an add action in AddGatewaySettings.asp and (2) IP parameter in IPManager.asp.
2, via the ID parameter.
4, via a Shockwave Flash object that contains ActionScript code that calls VBScript
1, via multiple parameters in (1) ATTACH_JOB
2, via the (1) mid and (2) keywords parameters.
4, via a direct request to logon.mod.php
2, via an invalid hl parameter to index.php
2, via the (1) shout_name field in shoutbox_panel.php and the (2) comments field in comments_include.php.
3," via long """"revision attributes""""."
2, via unspecified variables
4, via a request with the fail parameter set to 1
2, via the (1) username parameter to check.php or the id parameter to (2) admin/edit_smilie.php
2, via the (1) location
2, via unknown attack vectors.
4, via (1) the username parameter to check.php or (2) unknown attack vectors to scripts that display information from the database.
3, via unknown vectors.
4, via a .. (dot dot) in the unique parameter.
5, via unspecified vectors. NOTE: the provenance of this information is unknown; portions of the details are obtained from third party information.
2, via unspecified vectors involving the reflection APIs
1, via unspecified vectors involving the reflection APIs
0, via format string specifiers in the zeroth argument (program name).
3, via long (1) ABLPATH or (2) ABLANG environment variables in the libAP library (libAp.so.2) or (3) a long PHOTON_PATH environment variable to the setitem function in the libph library.
2, via unspecified manipulations of the PHFONT and PHOTON2_PATH environment variables.
5, via a long first argument to the (1) su or (2) passwd commands.
3," by supplying a """"break *0xb032d59f"""" command to gdb."
2, via the (1) username and (2) password parameters.
4," via """"..""""  sequences in the GLOBALS[type_urls] parameter"
2, via the file parameter.
4, via shell metacharacters in the URL
0, by tricking the user into requesting Buddy Info about a long screen name
0, by modifying mail headers
2, via an IMAP APPEND command with a long message literal argument
4, via a URL encoded value of the keywords parameter
0, by using the chmod command to change the permissions of the /private/etc/uc.app/Contents/MacOS/uc file
2, via the topic name of a conference.
0, via directory traversal sequences and a NUL (%00) character in (1) the newlang parameter and (2) the installlang parameter in a cookie
4, via unspecified vectors.
2, via the UID parameter in the definition Page.
2, via multiple vectors including the username parameter.
4, via unspecified vectors.
2, via unspecified vectors
4," via """"..""""  or invalid names in the archive parameter to index.php"
2, via the BBcode url tag.
0, via email with attached html files
4, via (1) an email subject; (2) an encoded javascript URI
2, via unknown attack vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  An original vendor bug report is referenced
2, via unknown vectors related to EMULATE_VMX.
4, via a symlink attack.
0, via the id parameter
2, via the (1) Forum and (2) pages parameter.  NOTE: SecurityTracker says that the vendor has disputed this issue
4, via a malformed Logical Link Control and Adaptation Protocol (L2CAP) packet.
2, via the q parameter.
2, via the pagetitle parameter.
2, via unknown vectors that trigger a null dereference.
2, via the username variable (Nickname field).
0, via format string specifiers in the WHATIDO variable.
2, via unknown attack vectors.
2, via the username
4, via a URL in the base_path parameter.
3, via the UserName parameter.
3, via unspecified vectors.
2, via the (1) yr
2, via the (1) login and (2) password parameters.
1," via unspecified vectors involving """"converting files accessible by the webserver""""."
4, via unspecified vectors.
2," via unspecified vectors related to """"other attempted exploits"""" other than SQL injection."
4, via a direct request to dir.php
1, via modified path and ext parameters.
4, via .. (dot dot) sequences in the path parameter.  NOTE: due to the lack of details
2, via the URL
5, via (1) an m3u file containing a long URL ending in .wma
4, via e-mail messages with a long boundary attribute
4, via a crafted LDAP request
4, via .. (dot dot) sequences in the (1) lang parameter in docs/index.php and the language parameter in (2) install/install.php
4, via a .. (dot dot) sequence in the adodbpath parameter.
2, via the comment field.
2, via the (1) category and (2) id parameters.
4, via a crafted LDAP request
2, via the (1) username parameter
5, via a crafted .m3u file that causes an incorrect strncpy function call when the player pauses or stops the file.
2, via the to_userid parameter.
4, via a URI that is generated when creating a list of online users.
2, via the title_op parameter.
2, via the (1) yy
2," via unspecified vectors involving (1) """"potential hangs"""" in the APPEND command and """"potential crashes"""" in (2) dovecot-auth and (3) imap/pop3-login.  NOTE: vector 2 might be related to a double free vulnerability."
2, via an absolute URL in the url parameter
2, via the fullName parameter to (1) sapbc/SAP/chopSAPLog.dsp or (2) invoke/sap.monitor.rfcTrace/deleteSingle.  Details will be updated after the grace period has ended.  NOTE: SAP Business Connector is an OEM version of webMethods Integration Server.  webMethods states that this issue can only occur when the product is installed as root/admin
2," via scriptable attributes such as (1) onfocus and (2) onblur in the """"author's website"""" field.  NOTE: followup comments to the researcher's web log suggest that this issue is only exploitable by the same user who injects the XSS"
4, via a backslash character at the end of a connection string to UDP port 27015.
4, via unspecified vectors.
4, via a SIP OPTIONS request with a negative Expires field.
1, via SIP INVITE requests with format string specifiers in the SDP session description
2, via an INVITE request with a Content-Length field that has more than 9 digits.
4, via unknown vectors.
2, via the userstat parameter in an army action to index.php.
1, via JavaScript that uses setInterval to repeatedly call a function to set the value of window.status.
2, via direct requests with an invalid baseDir to certain PHP scripts in the db directory
4, via (1) the contactgroupid parameter in addressbook.update.php
4, via a URL encoded expression in the query string in (1) index.php and (2) possibly certain other scripts
4, via (1) the contactgroupid parameter in addressbook.update.php
0, by renaming or moving the password file (FGuard.FGP)
0, via a URL encoded value in the fwd parameter.
0, via unknown attack vectors that cause errors in scripts that reveal system information.
4, via a large number of image send requests.
2, via unknown attack vectors.
5," via a URL that is not sanitized before being returned as a link in """"advanced details"""".  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
2, via the $month variable.  NOTE: a vector regarding the $date parameter and data.php (date.php) was originally reported
2, via the url parameter.
0, via the email parameter
2, via the (1) $u2u_select array parameter to u2u.inc.php and (2) $val variable (fidpw0 cookie value) in today.php.
2, via the username parameter
2, via the (1) name and (2) email parameters.
2, via the month parameter.
2, via unspecified attack vectors related to improper handling of (1) the reply parameter
4," via a request composed of """"GET"""" followed by a space and two newlines"
4," via a direct request with a path parameter with a null character and beginning with (1) '/' (slash) for an absolute pathname or (2) a drive letter (such as """"C:"""")"
1," via strings that begin with """"!R!SIOP0"""""
0, by sending crafted LDAP packets to port 389/TCP
2, via the $path variable
2, via the newid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, by referencing arbitrary websites in the rframe parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified invalid parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Subject field when sending private messages (privatemessages.php). NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a malformed Logical Link Control and Adaptation Protocol (L2CAP) packet whose length field is less than the actual length of the packet
5," via a web page with an anchor element with a legitimate """"href"""" attribute"
1," via HTML tags with a trailing """"<"""" character"
0, via unknown vectors that trigger a buffer overflow.
1, via font names in NJStar (.njx) documents.
5," by filling a client's mWebCache cache with malicious """"zombie"""" nodes."
2, via the (1) usern parameter in (a) sendpass.php
0, by causing certain variables in config.php to be modified
2, via unspecified parameters involved with the registration form.
4, via a large header block in an ARJ archive.
4," via a crafted URL with a """"/"""" (forward slash) after the file extension."
4, via a full Windows path and drive letter in the (1) language parameter in accounts/inc/include.php and (2) lang_settings parameter in admin/inc/include.php
4, via a modified language parameter and a full Windows or UNC pathname in the lang_settings parameter to mail/index.html
4, via (1) dot
2, via unspecified error messages.
2, via the tid parameter.
4," via a crafted packet that causes a """"ghost game"""" to be left on the server."
2, via the (1) userid variable to users.php or (2) sessid variable to lib-sessions.php.
5, via (1) absolute paths in unspecified parameters and (2) the language cookie
2, via unknown attack vectors.
4, via a crafted Postscript request.
2, via unknown attack vectors.
2, via unknown attack vectors.
2, via the referer (HTTP_REFERER)
4, via a web page that contains a recurrent call to an infinite loop in Javascript or VBscript
5, via a URL in the (1) sayfaadi or (2) sayfa parameter.  NOTE: this might be a site-specific issue.  If so
2, via the (1) uid and (2) pwd parameter.
2, via unspecified vectors to the (1) Add URL and (2) Suggest Category module.  NOTE: the provenance of this information is unknown; portions of the details are obtained from third party information.
2, via the tabls parameter.
0, by tricking the user into importing an LDIF file with a long field into the address book
2, via the (1) hide_status
4, via a modified javascript: string in the SRC attribute of an IMG element in an e-mail message
2, via the (1) Referer and (2) User-Agent HTTP headers
4," via """".."""" sequences in unspecified vectors."
4, by tricking a user into downloading a __MACOSX folder that contains metadata (resource fork) that invokes the Terminal
2, via the login_name parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the pid parameter
2, via the X-Forwarded-For HTTP header field
4, via a long SEARCH argument.
4, via a URL in the include_path variable
2, via the Username parameter.
4, via a Chatbox
4, via a crafted URL.
3, by specifying a nonexistent server in the server field
0, by registering many user accounts quickly.
2, via the id parameter.  NOTE: version 2.3 was later reported to be vulnerable as well.
4, via a .. (dot dot) sequence and trailing NULL (%00) byte in the lang parameter.
0, via the f parameter
2, via the lid parameter.
1, via unspecified vectors involving character sets within e-mail messages.
2, via the image variable.
4, via a direct request to include files
2, via unspecified attack vectors.
2, via the (1) inf parameter; or
0, via the otherTemplate parameter to index.php.
4, via an e-mail containing a javascript URI in the SRC attribute of an IFRAME tag
2, via the show parameter.
2," via the """"City/Region"""" field (mesto variable).  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
2, via the EventText parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via .. (dot dot) sequences and a trailing NULL (%00) byte in (1) the _SESSION['nocc_theme'] parameter in (a) html/footer.php; and (2) the lang and (3) theme parameters and the (4) Accept-Language HTTP header field
4, via a direct request to (1) the profiles directory
4, via (1) the html_error_occurred parameter in error.php
4, via a direct request to html/header.php.
2, via the X-Forwarded-For HTTP header field.
0, via the UpdateID0 parameter to Service_Requests.asp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: the vendor has disputed this issue
4," via """".."""" (dot dot) sequences in the template parameter."
4, via a crafted NFS mount request
0, via the catid parameter in (1) fastlinks.php and (2) catogary.php.
4, via encoded /%2a (/*) sequences in the query string
5," via /%2a (/*) sequences with the """"ad_click"""" word in the query string"
4, via a direct request to multiple PHP scripts that include the full path in error messages
4, via a direct request to multiple directories
1, via crafted requests to Login.asp
4," via a """"certain RTP sequence."""""
2, via the whinedays parameter
4, via a long Subject field.
2, via the (1) Username and (2) Password fields.
4, via (1) the letter parameter in reviews.php and (2) the dcategory parameter in download.php.
2, via the Calendar Text field when a new event is added.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, by creating and then listing folders whose names contain format string specifiers.
2, via the (1) userid parameter in (a) jgs_galerie_slideshow.php and (b) jgs_galerie_scroll.php
2, via the _DUMP command
4, via a .. (dot dot) in the RENAME command.
4, via a .. (dot dot) in the UIDL parameter.
2, via certain crafted pathnames in a ZIP archive.
4, via a javascript URI in a url XCode tag in a posted message.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the message field in the Contact Form.
4, via a crafted file
4, via a formname parameter with a filename containing a dangerous file extension and a trailing %00.
4, via a direct request to index.php with method=showfullcsv
3, via the RefererURL parameter.
2, via the (1) id or (2) action parameter to (a) basket.php
3, via variables that are written to settings.php.
1, via certain variables when posting new messages.
0, via the id parameter to index.php.
1, by setting the ba_admin cookie to 1.
4, via a URL ending in a NULL (%00) in the index parameter.
2, via the name parameter to the LocalNetwork page.
1," via scripting code in the """"31"""" parameter in a NewUser function"
2," via an ALZ archive with """".."""" (dot dot) sequences in a filename."
2, via the (1) X-Forwarded-For and (2) Client-Ip HTTP headers
2, via the (1) name and (2) subject parameters.
1, via crafted datagrams to UDP port 7778.
4," via the haber_id parameter.  NOTE: this product has also been referred to as """"Cilem News"
2, via the pass parameter in a cookie.
4, via (1) long locale environment variables to a strcpy function call in c_locale_glibc2.c and (2) long arguments to unspecified functions in num_put_float.cpp.
2, via the page parameter.
4, via a .. (dot dot) in the URL.
2, via the page parameter.  NOTE: the category vector is already covered by CVE-2005-3846.
2, via the topic parameter.
3, via the err_txt parameter.
2, via the lang parameter.
4, via (1) the Subject header
2, via the year parameter in (1) index.cgi and (2) viewday.cgi.
2, via certain crafted pathnames in a (1) zip or (2) tar archive.
2, via the page parameter.
2, via the gTopNombre parameter.
2, via the (1) name
4, via a direct request to (1) default-filters.php
4, via unknown vectors.
3, via unknown vectors.
1," via crafted """"Request Service"""" packets to the vnetd service (TCP port 13724)."
4, via a long Accept-Language value without a comma or semicolon.  NOTE: due to a typo
0, via long array variables
2, use weak encryption by stating that a weak cipher is required for client compatibility
2, via the (1) newsid parameter to newsdetailsview.asp and (2) password parameter to login.asp.
2, via the fid parameter.
2, via the AG_ID parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
0, by triggering an SQL error via an invalid AG_ID parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via unspecified parameters.
2, via the (1) dir and (2) page_id parameter to index.php.
2, via the (1) dir and (2) page_id parameter to (a) index.php and (3) userid parameter to (b) mailto.php.  NOTE: it is possible that issues 1 and 2 are resultant from SQL injection.
4, via (1) the pg parameter and (2) a query string without a parameter.
0, via the id parameter in a diwan view action.
4, via a BBCode url tag when using the show_post function.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information
2, via the postid parameter.
0, via the kuladi parameter ($kul_adi variable).
4, via a URL in the uye_klasor parameter
4, via unspecified vectors.
3, via the Pwd parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the ShipMethod parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a GET request with a modified account profileID.
4," via a """"/"""" (slash) in the feed parameter to index.php"
1, by creating many files via filenames in the feed parameter to index.php.
5, via a crafted mosmsg parameter to index.php with a malformed sequence of multiple tags
2, via an unspecified attack vector that reveals the path.
2, via the SG_HOME parameter.
4, via (1) uname
4, via (1) the username parameter to galerie_index.php and possibly (2) galerie_onfly.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. The second vector might not be XSS.
2, via unknown attack vectors.
2, via unknown attack vectors.
2, via the email field
2, via the (1) rss_query parameter to search.php or (2) tag parameter to tags.php.
2, via the (1) folder parameter to feed.php or (2) rss_query parameter to search.php.
4, via a long DataProject field in a (1) Visual Studio Database Project File (.dbp) or (2) Visual Studio Solution (.sln).
4, via a string containing a large number of characters that are escaped when Monopd produces XML output.
2, via certain attack vectors related to the (1) Weblink
2, via unknown attack vectors.
2, via unknown attack vectors
4, via a JPEG image with more than 3 output components
5, via a TFTP URL (tftp://) with a valid hostname and a long path.
3, via unknown vectors.
2, via unknown attack vectors.
2, via the forums[] parameter.
3, by sending a malformed DCC SEND string to an IRC channel
2, via the f parameter.
2, via the page parameter.
4, via a blog post.
2, via the (1) act and (2) blogid parameters.
4, via a long argument to the connect command.
0, via format string specifiers in (1) a nickname
4, via (1) the name parameter and (2) other unspecified parameters.
2, via the message parameter
2, via the email parameter.
4, via (1) the gamename parameter in tellafriend.php
4, via a .. (dot dot) in the (1) option[language] and (2) option[template] parameters
4, via (1) the option[prefix] parameter in admin.php and other unspecified PHP scripts
0, via the option_new[compatibility_mode] parameter
4, via a direct request to checktables.php
2, via the URL
4, via a flood of new user registrations.
1, via unknown attack vectors.
2, via unknown attack vectors that cause cause the kmem_oversize arena to allocate a large amount of system memory that does not get freed.
2, via unknown attack vectors
0, via the fileid parameter to (1) info_db.php or (2) database.php.
4, via a crafted session cookie.
2, via the action parameter.  NOTE: the vendor has disputed this issue in a comment on the researcher's blog
0, via the fileid parameter to (1) info_db.php or (2) database.php.
2, via the (1) informationID or (2) ParentCategory parameter to index.php. NOTE: the vendor has disputed this issue in a comment on the researcher's blog
4, via a URL in the pg parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the showimage parameter in index.php; and the (2) USER_AGENT
4, via a direct request to includes/phpinfo.php
2, via the (1) message
2, via the nick parameter.
2, via the id parameter.
2, via the id parameter.  NOTE: it is not clear whether this report is associated with a specific product.  If not
2, via the message body in a new message.
4," via a """"*/*"""" in the msg parameter to index.php"
4, via a long login value in a register form
2, via the id parameter.
4, via a .. (dot dot) and trailing %00 (NULL) byte in the (1) template and (2) page parameters in (a) index.php
1, via unspecified vectors involving GBK character sets.
2, via the query string to index.php.
2, via the msg parameter.
0, via the memName parameter in a cookie.
4, via a long USER command.
5, via a modified X-Forwarded-For (X_FORWARDED_FOR) HTTP header
2, via the X-Forwarded-For (X_FORWARDED_FOR) HTTP header
0, by specifying the session in a cookie
2, via the username cookie.
4, via a Javascript URI in a BBCode img tag.
2, via the comment_title parameter.
2, via the MainID parameter. NOTE: the SubjectID vector is already covered by CVE-2005-4729.
0, via the UserID parameter to (1) comment.php or (2) contact.php.  NOTE: the profile.php/UserName vector is already covered by CVE-2005-2441.
2, via the (1) keyword parameter to search.php or (2) username parameter to comments_do.php.
2, via the cat_id parameter.
4, via a long PATH_INFO environment variable.
0, via the comment_body parameter
4, via (1) the user parameter in deleteuser.php and (2) the hits parameter in viewuser.php.
2, via unspecified vectors when the server sends crafted messages to the clients.
5, by sending a long message to the server.
2, via an HTTP GET request with a long (1) parameter name or (2) value in a URL
2, via the go parameter.
2, via the go parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the load parameter
5, via the CONFIG[script_path] variable.  NOTE: 2.1.4 was also reported to be vulnerable.
2, via the Subject field (possibly messaggio parameter) when posting a new message in post.php.
4, via a crafted IMAP LOGIN command.
0, via format string specifiers in the query string argument in an HTTP GET request.
2, via the Description field in creating a folder or uploading a file.
3, by uploading a malicious file to the Windows startup folder.
4, via a ..  (dot dot) in the op parameter
2, via the op parameter.  NOTE: it is possible that this issue is resultant from the directory traversal vulnerability.
0," via unknown attack vectors relating to """"handling EXIF data."""""
1, via vectors related to the TDC Digital signature.
4, via deeply nested
5, via malformed RFC1006 (OSI over TCP/IP) packets.
4, via a crafted SOAP request to the AlterCast web service in which the request uses the (1) saveContent or (2) saveOptimized ADS commands
0, via certain invalid HTML that causes memory corruption.
2, via by instantiating the (1) Mdt2gddr.dll
1, via HTML elements with a certain crafted tag
4, via a crafted URL with an International Domain Name (IDN) using double-byte character sets (DBCS)
0," by spoofing the address bar and other parts of the trust UI via unknown methods that allow """"window content to persist"""" after the user has navigated to another site"
2, via the (1) from and (2) help parameters to (a) index.php; (3) action
2, via the site parameter.
2, via the url_name parameter
2, via the (1) mess and (2) user parameters in messanger.php
4, via a URL in the skin parameter to login.php
2, via the (1) prev
2, via the (1) confirmredirect and (2) post_id parameters in (a) delcomment.php
3, by uploading a file whose name ends in a .php.li extension
2, via the page parameter
4, via a direct request to certain scripts in the files directory
3, by causing a linked server to send malformed TKL Q:Line commands
2, via the percent parameter.  NOTE: this issue has been disputed in a followup post
2, via the id parameter.
0, via the pollid parameter to (1) results.php
0," via unknown attack vectors related to """"media streaming over HTTP 1.1""""."
2, via unknown attack vectors related to a large message header size
2, via the (1) memo box title
4, via a Javascript URI in the image BBcode tag.
4," via a """"%2E."""" (mixed encoding) in the pg parameter."
1, use Drupal as a spam proxy.
2, via unknown attack vectors.
3, by tricking a user to click on a URL that fixes the session identifier.
2, via the search parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) card_id
2, via the (1) ArtCat parameter to wmview.php
2, via the $deleteuser variable.  NOTE: the initial disclosure for this issue indicated that the researcher was unable to prove this issue; however
4, via a long setup sound command
4, via the rtcDescription$RadEditor1 field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long value of the -p argument.
0, via directory traversal sequences and a NUL (%00) character in the blog_language parameter
4, via a symlink attack on temporary files.
4, via a FlashPix (FPX) image that contains a field that specifies a large number of blocks.
2, via an email with a To field that contains a filename separated by whitespace
0, via the date parameter to index.php.
4, via a crafted DNS hostname
2, via unknown attack vectors. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long string to the (1) LOGIN or (2) SELECT command
2, via the url parameter.
2, by logging in to authfiles/login.asp with a valid username and any password
2, via the set_theme parameter.
2, via the (1) email or (2) pass parameter to admin/index.php.
4, via a null character in the url parameter in services/go.php
2, via unknown attack vectors.
2, via unknown attack vectors.
4, via a Javascript URI in a BBCode img tag.
2, via the view parameter.
2, via the Request_Name_Display parameter.
0, by obtaining the session ID from the s parameter
1, via crafted IKE packets
2, via long filename command line arguments
2, via the (1) Name or (2) Description field.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the oxynews_comment_id parameter.
2, via the (1) aim
2, via an HTML tag with a large number of script action handlers such as onload and onmouseover
0, via inputs that produce malformed XML
0, by setting the admin parameter in a cookie.
2, via the (1) real_name
0, via the id parameter to (1) functions.php and (2) user.php in the libs directory
4, via a symlink attack on temporary files used by (1) Driver::File
2, via the url parameter
3, via cookies
2, via the (1) username
2, via the (1) ipAddress
1, via directory traversal sequences and a NUL (%00) character in the phpicalendar[cookie_language] and phpicalendar[cookie_style] cookies
2, via the query string (PHP_SELF).
4, via a URL in the dir parameter.
2, via the recherche parameter.
4, via a malicious beagle-info program in the current working directory
4, via a .xls file with a crafted SELECTION record that triggers memory corruption
4, via a .xls file with certain crafted fields in a SELECTION record
0, by instantiating certain COM objects from Wmm2fxa.dll as ActiveX controls including (1) DXImageTransform.Microsoft.MMSpecialEffect1Input
4, via a .xls file with a crafted COLINFO record
4, via a .xls file with a crafted BIFF record with an attacker-controlled array index that is used for a function pointer
5, via a .xls file with a crafted FNGROUPCOUNT value.
4, via a .xls file with a crafted LABEL record that triggers memory corruption.
2, via the (1) url
4, via an MDTM command that uses a long path for the target file
4, via a (1) RAR
0, via the errormsg parameter when a SQL error is generated.
2, via unknown attack vectors.
2, via the (1) result_type
2, via the mail parameter.
2, via the (1) count_fieldname
5," by sending a """"response stanza before an auth stanza""""."
2, via the sid parameter to (1) friend.php or (2) article.php.
2, via the (1) method or (2) list parameter.
2, via an invalid list parameter in the showdetails method to index.php
2, via the (1) id parameter to template_permalink.asp or (2) fldGalleryID parameter to template_gallery_detail.asp.
2, via the (1) entry and (2) email parameters to (a) print.php and (b) mail.php.
2, via the (1) year
2," via unspecified vectors involving """"incorrectly encoded quoted-printable emails""""."
2, via unspecified vectors involving an invalid file path.
2, via the (1) month and (2) year parameters.
4," via a vote action with an """"option[]=null"""" parameter value"
2, via directory traversal sequences in a lang[*][file] parameter
2, via the username parameter.
2, via the lang[*][file] parameter
2, via the (1) id and (2) type and (3) show parameters in a top action in (a) index.php; and the (4) message1 parameter in (b) cart.php.
4, via a URL in the page parameter.
0," via unknown attack vectors related to a """"default internal servlet"""" accessed through HTTP."
4, via (1) the downloadid parameter in download_click.asp and (2) content_ID parameter in news/News_Item.asp; authenticated administrators can also conduct attacks via (3) user_id parameter to users/add_edit_user.asp
4," via """"Insufficient input validation"""" in the EAP-MSCHAPv2 state machine module."
2, via the s parameter.
4, via a certain createTextRange call on a checkbox object
2, via the (1) id
2, via the username field to (1) list.rhtml or (2) show.rhtml.
4, via (1) the uid parameter in (a) members.asp
3, by uploading a .php file into the /upload directory as specified in the dirPath parameter
4, via a remote NDIS response to OID_GEN_SUPPORTED_LIST
5, via a Private Message (PM) in certain circumstances.
4,use the HTMLArea FileManager plugin to
2, via the (1) EventID parameter in viewEvent.cfm
2, via the base_url parameter.
2, via the transactions_offset parameter.
4, via (1) a blank campaignId parameter to editCampaign.php and (2) a blank schemeId parameter to viewPricingScheme.php.
2, via the i parameter.
2, via unspecified manipulations
2, via the skin parameter.
1, via multiple SSIDs in a Cisco vendor tag in a 802.11 management frame.
4, via unknown vectors.
4, via (1) . (dot) and (2) space characters in the extension of a URL.
2, via unspecified vectors in a showmessage action
4, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) certain parameters to the banner delivery module
2, via the g_message parameter.
2, via the search_term parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the Task parameter.
2, via the (1) allwords or (2) oneword parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a long nickname or teamname to the SV_SetupUserInfo function or (2) execute arbitrary code via a long string sent when joining a match or a long chat message to the SV_BroadcastPrintf function.
0, via format string specifiers in strings passed to the console.
2, via the (1) file or (2) function parameter.
2, via the keywords parameter.
3, via the (1) txtuser or (2) txtpassword parameters.
2, via the (1) txtDomainName parameter to domains.asp or (2) SearchText or (3) UserLevel parameters to default.asp.
4, via (1) a packet with no data or (2) a large packet
2, via an invalid comprLength value in a compressed packet.
2, via the (1) Screen name or (2) Session Topic field.
4, via (1) the shownew parameter in gallery.asp and (2) unspecified search module parameters.
2, via the (1) adid or (2) aname parameter in (a) common/email.asp
2, via the (1) author
2, via the em parameter.
2, via unspecified search module parameters
2, via the msg parameter.
2, via the m parameter to index.php.
2, via the lessid parameter.
2, via the event_id parameter.
2, via the name parameter.
2, via the (1) date parameter in index.php or bypass authentication via the (2) password parameter in admin/index.php.
3, via the (1) action
0, via the fs parameter to (1) mod.php or (2) mod_print.php.
2, via the rtn parameter.
2, via the (1) dedicatedPlanID parameter to dedicated_order.php
4, via URL-encoded (1) srchfor and (2) srchby parameters.
4, via a direct request to include/lang-en.php
2, via the Comment Field (COMMENTAIRE parameter).
2, via the Message Field (message parameter).
2, via the (1) Event
2, via the (1) keyword_list parameter to (a) index.php; (2) title
2, via an archive that contains symbolic links.
1, via crafted chunked transfer encoding.
1, via unspecified vectors involving conversions from string to file system representation within (1) CFStringGetFileSystemRepresentation or (2) getFileSystemRepresentation:maxLength:withPath in NSFileManager
3," via vectors related to """"FTP server path name handling."""""
0, via long file name extensions
5, by tricking a user into launching an Internet Location item that appears to use a safe URL scheme
4, via a crafted MacMIME encapsulated attachment.
2," via an enriched text e-mail message with """"invalid color information"""" that causes Mail to allocate and initialize arbitrary classes."
4, via a deep directory hierarchy.
5, via a crafted QuickDraw PICT image format file containing malformed font information.
4, via a crafted QuickDraw PICT image format file with malformed image data.
4, via a QuickTime movie with a missing track
4, via a crafted RTSP request
4, via a crafted JPEG image.
4, via a crafted QuickTime movie (.MOV).
4, via a crafted QuickTime movie (.MOV)
4, via a crafted QuickTime Flash (SWF) file.
4, via a crafted QuickTime H.264 (M4V) video format file.
5, via a H.264 (M4V) video format file with a certain modified size value.
5, via a crafted QuickTime MPEG4 (M4P) video format file.
4, via a crafted QuickTime AVI video format file.
4, via a crafted TIFF image.
2, via an invalid LDAP request that triggers an assert error.
0, via format string specifiers that are not properly handled in a syslog call in the logging facility
2, via unknown vectors related to the search results.
3, via unknown vectors.
2, via the browser parameter.
0, via the abs_path parameter in (1) initiate.php
2, via the Description field in (1) newProject.php
2, via GET commands
2, via the frm_search_in parameter.
2, via the page parameter.
2, by uploading files to locations within the web root.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) bamin
2, via unspecified parameters to the KnowledgeBase search module.
3, via invalid (1) article or (2) print parameters in a kb action to index.php
2, via the (1) companyid
2, via the help viewer.
2, via the chemin parameter.
2, via the chemin parameter.  NOTE: it is possible that this issue is resultant from CVE-2006-1492.
2, via the tempnam function.
4, via (1) a remote URL in the page parameter
2, via the page parameter.
1, via crafted encoded links.
2, via the URI (_SERVER[REQUEST_URI] variable).
2, via the id parameter.
0, via the id parameter
4, via (1) a certain ASF file handled by asfheader.c that causes the asf_descrambling function to be passed a negative integer after the conversion from a char to an int or (2) an AVI file with a crafted wLongsPerEntry or nEntriesInUse value in the indx chunk
4, via a URL in the vwar_root parameter.  NOTE: this is a different vulnerability than CVE-2006-1636.
2, via the title parameter in (1) online.php and (2) download.php.
2, via the error parameter to include.php
2, via the (1) calendar_id
4, via a .il file that calls a function with a long name.
1, via crafted ABC music files.
3, via unknown vectors.
1, via crafted COM_TABLE_DUMP packets with invalid length values.
2, via the newsletteremail parameter.
4, via (1) the user_email parameter in (a) lostpass.php
2, via the m parameter.
2, via the (1) motclef and (2) nbr_line_view parameters in (a) carnet.php
4, via a direct request to (1) includes/index.php
3, by modifying tetris-bsd.scores to contain crafted executable content
2, via the Scheme parameter.
2, via the (1) loginvar parameter in (a) admin/admin.php
2, via the (1) autorkomentarza and (2) tresckomentarza parameters.
0, by inserting the code into variables that are stored in admin/config.php.
4, via a request with a 'org.apache.struts.taglib.html.Constants.CANCEL' parameter
4, via a multipart/form-data encoded form with a parameter name that references the public getMultipartRequestHandler method
2, via the parameter name
3, by defining and executing a recursive function.  NOTE: it has been reported by a reliable third party that some later versions are also affected.
2, via the (1) $method and (2) $args parameters.
4, via a crafted JPEG image with malformed JPEG metadata
2, via the name parameter while adding a comment.
1, by setting the vsns[topic_id] cookie to the targeted topic.
2, via the (1) CatName
2, via the (1) from and (2) into parameters in a calculate action
2, via the search parameter.
2, via the search parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified parameters
2, via the x parameter.
2, via the (1) autor
2, via the searchField parameter.
2, via the (1) email
2, via the (1) username or (2) password parameters to (a) login.php or (b) register.php; or (3) u parameter to (c) profile.php.
2, via unknown attack vectors.
2, via the (1) username or (2) password parameters.
0, via the fid parameter in a newthread action.
4, via a URL in the rub parameter (part of the $page_menu variable).
4, via the (1) autorx and (2) newsx parameters.
3, by modifying config.php.
0, via the subject_type_id parameter in (1) the index page and (2) the search module.
2, via the limite parameter.
2, via the (1) msg parameter in query.jsp and (2) entryId parameter in edit.jsp.
4, via a .. (dot dot) in the _path parameter.
2, via the _path parameter.  NOTE: this might be resultant from the directory traversal issue.
2," via the page parameter.  NOTE: post-disclosure analysis by CVE suggests that the """"page"""" parameter is not used in this product"
2, via the page parameter
4, via (1) the pc parameter in (a) index.php and (2) pnom
2, via the pass parameter.
2, via an ELF interpreter that does not have a PT_LOAD section in its header
2, via the (a) back parameter to base_graph_main.php
1, via crafted embedded image data in a .hlp file.
4, via a long filename argument.
2, via the file parameter in a rqEditHtml command to document/rqmkhtml.php or (2) execute arbitrary code via the includePath parameter to learnPath/include/scormExport.inc.php.
4," via """".."""" sequences in the file parameter in a rqEditHtml command."
2, via the includePath parameter.
2, via the search parameter.
4, via unspecified vectors.
4, via a URL in the vwar_root2 parameter.  NOTE: it is possible that this issue stems from a problem in VWar itself
2, via the cur_password parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1," via unknown vectors involving """"parsed PHP."""""
4, via a source argument containing a compress.zlib:// URI.
2, via the (1) yname
2, via the (1) user123 variable in (a) login.php or (b) fpass.php; or (2) cid parameter to (c) visview.php.
2, via the (1) id parameter to comments.php or (2) poll_id parameter to page.php.
2, via the (1) id parameter to comments.php or (2) poll_id parameter to page.php.  NOTE: it is possible that this issue is resultant from CVE-2006-1616.
0, via format string specifiers in an argument to the JOIN command
2, via an HTTP request with a large header.
2, via an absolute path in the OpenPath parameter.
4, via (1) the description parameter to linklist.php and possibly other vectors involving (2) index.php and (3) linksubmit.php.
5, via a JavaScript event in a BBCode email tag
3, by using setenv with the LD_PRELOAD environment variable.
2," via unspecified vectors that trigger an """"invalid memory access."""""
4," via (1) """"valid"
2, via the command parameter.
4, via a direct request to /lucid_phplib/translator.php
4, via a URL in the vwar_root parameter.  NOTE: this is a different vulnerability than CVE-2006-1503.
3, via the (1) tname or (2) fpost parameters to (a) post.php; (3) fullname
2, via the (1) Username parameter to (a) accounts.php
2, via the postid parameter.
2, via the email parameter.
2, via the (1) usern or (2) passw parameters to (a) cn_auth.php
4, via (1) the search_terms parameter to (a) search.php
4, via the user_name parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party.
2, via the User-Agent HTTP header
4, via a malicious server that sends a long string to a client that connects on TCP port 5900
4, via a URL in the installPath parameter.
5, via a .. (dot dot) in an HTTP GET request to TCP port 5225.
5, via a certain MP3 file
2, via the username parameter
2, via the (1) id parameter in image_desc.php
3, via msg parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) areaID parameter in area.View.action
0, via the Itemid parameter in index.php.
2, via the (1) adminJump and (2) forum_middle parameters in (a) forum.php
2, via the mineID parameter.
2, via the limitquery_s parameter when the $projectid variable is less than 1
4, via a multipart/form-data POST with a .jpg filename in the fullimage parameter and the ext parameter set to .php.
2, via the T parameter.  NOTE: this issue can be leveraged to execute arbitrary shell commands since the username is later processed in an eval() call
0, by sending an invalid response when the final ACK is expected
5," via (1) a """"crafted"""" IP packet to a device with secure mode EMS-to-network-element access"
2, via the sortorder parameter.
0, via the id parameter
2, via the (1) cat
2, via unknown vectors in unspecified scripts in the themes directory.
2, via the layout parameter to index.php.
4, via a malformed request that generates an HTTP 400 error
2, via the deptname parameter
2, via the User name.
4, via (1) the lang parameter in news.php and (2) other unspecified vectors.
2, via the user_name parameter.
0, via the user_name parameter to unsubscribe.php.
2, via the (1) user_email parameter to (a) unsubscribe.php or (b) subscribe.php; or the (2) user_name parameter to subscribe.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information
4," via a """"custom command"""" with a long argument."
2, via the id parameter.
2, via unknown attack vectors.
2, via the (1) Your Name
3, via the (1) url
2, via the banner parameter in view mode.
2, via the page parameter to load.php.
4, via a URL in the url parameter.
4, via a URL in the rub parameter.
4, via a direct request to upload.php.
2, via the (1) itemID parameter to (a) login.php and (b) memo.php; and the (2) itemgr
2, via the url parameter.
2, via the showid parameter in the member page to index.php.
2, via the (1) pn and (2) sbeg parameters.
2, via the (1) email and (2) id parameters.
2, via the action argument.
2, via the page parameter.
4, via hex-encoded CRLF sequences in the type parameter.
5, via a JavaScript event in a BBCode img tag.  NOTE: the email vector is already covered by CVE-2006-1625
2, via any scrollbar Cascading Style Sheets (CSS) property.
2, via the Word parameter.  NOTE: it is possible that this issue is resultant from SQL injection.
2, via the Suchstring1 (aka search) parameter.
2, via the (1) nom or (2) mail parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a long player name that is used in a scanf function call.
2, via the error parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) GLOBALS[database_module] or (2) GLOBALS[language_module] parameters
4, via a URL in the vwar_root parameter to (1) admin/admin.php
3, by uploading a Flash (.SWF) video that contains a getURL function call
2, via the returnpath parameter.  NOTE: this issue was later reported to affect 2.01 as well.
2, via the (1) pic or (2) show parameters.
4, via unknown vectors.
2, via the (1) name or (2) body fields in a comment.
4, via a symlink attack on a temporary file.
2, via the id parameter.
4, via a direct request to a script in the Administration Area.
2, via the message parameter.
2, via the cid parameter.
2, via the jahr parameter.
2, via the page parameter in (1) Classic.view/thumbnail.php
0, via the errormsg parameter
2, via the shard parameter.  NOTE: this issue can be exploited to produce resultant XSS when the parameter has XSS manipulations
0, via the ID parameter in a (1) g_reply or (2) g_permaPost action to the blog shard (engine/shards/blog.php)
2, via the page parameter.
4, via a URL in the theme_path parameter in (1) index.php
2, via the (1) newuser_name
4, via (1) the mode parameter in msgReader$1 and (2) the end of the URI in viewDepartment$.
4, via a URL in the int_path parameter in (1) vote.php
0, via the contentid parameter
2, via the (1) Site Description field in (a) admin_board.php
4, via a URL in the s parameter.
2, via directory traversal sequences in the s parameter
2, via the (1) blogid parameter in (a) index.php and (b) archive.php
2, via the btag parameter.
4, via a URL in the root_path parameter.  NOTE: It was later reported that 1.4.2 and earlier are affected.
2, via the URI.
4," via a leading (1) ftp or (2) http URI in the ReaderURL variable in the """"Update Download Site"""" section of ads-readerext.  NOTE: it is not clear whether the vendor advisory addresses this issue.  In addition"
4, via (1) the actionID parameter in ads-readerext and (2) the op parameter in AlterCast. NOTE: it is not clear whether the vendor advisory addresses this issue.
2, via the $className variable.
2, via the InstallTrigger.install method
2, via the request parameter.  NOTE: this issue can also produce resultant XSS when the associated include statement fails.
0, via the bbPath[path] parameter to (1) class.forumposts.php and (2) forumpollrenderer.php. NOTE: this issue is closely related to CVE-2006-0659.
2, via the Title of Table field.
2, via the rateit_id parameter.
4, via shell metacharacters in the page parameter.
4," via """".."""" sequences in the language cookie"
2, via the search_exp parameter.
2, via the twg_album parameter.
2, via the sql_query parameter.
2, via the sql_query parameter.
2, via the memberid parameter.
0, via the term parameter in a search action.
3, via the (1) start parameter in a search action or (2) type parameter in a top action.
2, via the show parameter in a Template operation.
2, via an invalid show parameter
2, via the (1) ICQ
2, via the (1) id
4, via a .. (dot dot) in the language parameter.
2, via the (1) newuser_realname and (2) newuser_icq parameters
2, via unspecified vectors
0, via the hub_dir parameter
2, via the id parameter.  NOTE: this might be resultant from the directory traversal vulnerability.
4, via a .. (dot dot) sequence and trailing NULL (%00) byte in the id parameter.
3, via the selected_search_arch parameter.
4," via """".."""" sequences in the archive parameter to index.php"
2, via the (1) Name
2, via the term parameter.
2, via the (1) gallery_id parameter in view.php
4, via a length value that passes a length check as a negative number
2, via the sess_username variable
4, via a leading ; (semicolon) in the name parameter in a systemdoc action
2, via the debugger action.
3, via long values in a stylesheet attribute
2, via the ycyear parameter.
2, via the ID parameter.
2, by setting the authorized cookie.
2, via the (1) load
2, via the (1) NAME and (2) COMMENTS parameters.
2, via the (1) LOCATION and (2) URL parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the ublock parameter
2, via the user_id parameter in the Your_Home functionality.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) date_from
2, via the (1) position and (2) id parameter.
2, via the (1) level
2, via the (1) action parameter to members_only/index.cgi and (2) page parameter customer_area/index.cgi
2, via the cname parameter.
2, via the (1) id parameter in (a) user.php
2, via the (1) Account Name and (2) Username field.  NOTE: the vendor has disputed this vulnerability
2," via unspecified actions related to an """"uninitialised return value"
0, via actions that cause lease_init to free a lock that might not have been allocated on the stack.
4," via """"..\\"""" sequences"
1, via crafted filenames that inject command line arguments when Beagle launches external helper applications while indexing.
2, via the VERIFY_LOG procedure of the DBMS_SNAPSHOT_UTL package
2, via the DELETE_FROM_TABLE function in the DBMS_LOGMNR_SESSION (Log Miner) package
2, via the page parameter.
4, via a direct request to index.php with the editwelcome parameter set to 1
2," via the """"Search for"""" item (keyword parameter)."
4, via a URL in the myevent_path parameter in (1) event.php and (2) initialize.php.  NOTE: vector 2 was later reported to affect 1.4 as well.
4, via a user's profile
4, via a symlink attack on the /tmp/_avast4_ temporary directory.
2, via the id parameter.
3," by modifying a template in a way that (1) bypasses a loose """".*"""" regular expression to match BEGIN and END statements in overall_header.tpl"
1, via crafted Font Colour 3 ($theme[fontcolor3] variable) and/or signature values
4," via (1) the uname parameter in a view action in profile.php and (2) a login name.  NOTE: the """"Access to hash password"""" issue is already covered by CVE-2006-0103."
2, via the (1) name and (2) website parameters.
0, via HTML with certain improperly nested elements.  NOTE: this might be the same issue as CVE-2006-1724.
0, via the referer parameter in sendMail
2, via the cat parameter.
0, via format string specifiers in a long filename on an EXTINFO line in a playlist file.
2, via the page parameter.
2, via the event_id parameter to (1) addevent.php or (2) del.php or (3) event_desc parameter to addevent.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via the event_desc parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .//./ (modified dot dot slash) in the file parameter
0, by editing values that are stored in config.php and later executed.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the attachment content disposition in an HTML attachment.
2, via an invalid (1) fcategoryid parameter to topics.php or (2) unavariabile
2, via the fcategoryid parameter.
2, via the (1) ulocation or (2) uhobbies parameters.
2, via the userID parameter.
0, via the menuid parameter to (1) index.php or (2) forum.php
4, via a URL in the page parameter.
2, via the order parameter in the include files (1) user.inc.php
3, via shell metacharacters in the host parameter.
4, via a URL in the inc_dir parameter.
5, via (1) RSS/RSS.php and (2) possibly other vectors.
3, via unknown vectors.
2, via the source parameter in the (1) editnews or (2) doeditnews action.  NOTE: this can also produce resultant XSS when the target file does not exist.
2, via the pagenum parameter.
4, via a URL in the include_path parameter.
2, via the (1) huserid
4, via a crafted Clock Synchronisation packet that triggers an access violation.
2, via the (1) url parameter in addlink_lwp.cgi and the (2) id
4, via (1) the list_id parameter in mailadmin.cgi and (2) the form_id parameter in templates.cgi.
2, via the config parameter.  NOTE: this might be the same core issue as CVE-2005-2732.
4, via (1) the keyval parameter in pbpgst.cgi
2, via the (1) pagesize
2, via the catid parameter.
2, via the (1) aff and (2) cat parameters.
4," via a crafted GET request including """"....//"""" sequences"
5," via """"..."""" (triple dot) sequences in a GET request."
4," via a """"C:%5C"""" (encoded drive letter) in a URL."
2, via an invalid feed parameter
2, via multiple requests with different values of the feed parameter.
4, via (1) the forumreferrer cookie to register.php and (2) the messages parameter in message_list.php.
2, via the username field (login parameter) to main.php.
4," via a """".."""" (dot dot) in a language cookie"
2, via the id parameter.
2, via the (1) onuser
2, via the action parameter.
2, via the ordner parameter.
4, via malformed Session Initiation Protocol (SIP) messages.
2, via the referrer parameter.
2, via the Kommentar field.
2, via the Request field.
2, via the (1) name and (2) message parameters.
2, via the flexbb_username COOKIE parameter.
2, via the homepage parameter.
2, via the (1) query string
3, via the (1) PredictorVSetField function for TIFF or (2) CFAllocatorAllocate function for GIF
4, via a large CELLSPACING attribute in a TABLE tag
2, via an invalid FRAME tag
2, via an HTML LI tag with a large VALUE attribute (list item number)
2, via long HTTP headers.
2, via certain long arguments that cause a small buffer to be allocated
4, via an out-of-bounds offset argument.
4, via a URL in the DFORUM_PATH parameter to (1) about.php
4," via """".."""" sequences in the p parameter"
2, via an invalid p parameter
2, via unknown attack vectors.
4, via a large invalid error number
5, via a UDP packet with an incorrect size
2, via the kwd parameter.
2, via the p parameter.  NOTE: this is a different vulnerability than the directory traversal vector.
4, via a URL in the dir[base] parameter.
0, by signing the guestbook
2, via the (1) username or (2) password fields.
1, via PHP code in the page parameter
4, via a ..\ (dot dot backslash) in a (1) .rar
2, via long strings to certain commands sent to the file transfer port.
4, via a URL in the full_path parameter.
4, via a URL in the rootagenda parameter.
2, via the (1) acc_name and (2) password parameter.
2, via the nickname
2, via the version string.
2, via the id_page parameter. NOTE: this issue could be used to produce resultant XSS from an error message.
4," via """".."""" sequences in the rep parameter"
2, via the recherche parameter in recherche.php.  NOTE: other XSS vectors
3, via the (1) dn parameter in (a) compare_form.php
4, via a DHCP client broadcast reply request.
3, via the eventid parameter.  NOTE: the affected version has been disputed by the vendor.  It appears that this is the same issue as CVE-2004-0036
4, via a long URL.
4, via a large HTTP Content-Length value
4," via a TIFF image that triggers errors in (1) the TIFFFetchAnyArray function in (a) tif_dirread.c; (2) certain """"codec cleanup methods"""" in (b) tif_lzw.c"
4, via a crafted TIFF image.
4," via a crafted TIFF image that triggers errors related to """"setfield/getfield methods in cleanup functions."""""
2, via the imagedir parameter.  NOTE: this issue might be resultant from directory traversal.
2, via the (1) tid parameter in (a) preview.php; the (2) cid
4, via a large amount of UDP data to the switch
2, via the (1) icon_id and (2) userid parameters in preview.php.
2, via the show parameter.  NOTE: this is a different vector than CVE-2006-1212
2, via the navpath parameter.
4, via the (1) RecordID parameter in (a) Customeraddresses_RecordAction.cfm and (b) youraccount.cfm; (2) solus parameter in (c) detail.cfm; and (3) cat parameter in (d) category.cfm.
4, via unknown vectors.
2, via the (1) cat
4, via a request to picture.php without specifying the cat parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4," via """"`"""" (backtick) characters in the appliance's command line interface (CLI)."
3, via the (1) category and (2) keywords parameters in (a) Results.cfm
2, via an invalid (1) secondary
2, via the (1) port
2, via the az parameter.
2, via the az parameter.
2, via the (1) username and (2) password parameters.
0, via the member parameter in a viewpro action in member.php. NOTE: the original report may be inaccurate
4, via (1) the OrderID parameter in (a) shipping.cfm and (b) checkout.cfm
2, via long DHCP packets.
4," via """" (double quote) characters in a mailto: scheme handler"
4," via """" (double quote) characters in a mailto: scheme handler"
4," via """" (double quote) characters in a mailto: scheme handler"
4," via """" (double quote) characters in a mailto: scheme handler"
4, via a search with a crafted value of the lastdate parameter
4, via a .. (dot dot) in the name parameter
2, via the ck parameter
0, via unknown attack vectors that involve the getpwnam family of non-reentrant functions.
2, via the surveyid cookie.  NOTE: this issue could be leveraged to execute arbitrary PHP code
1, via unexpected requests or data.
4, via malformed EDNS0 packets.
0, via the member parameter in a viewpro action.
3, by using mprotect to give write permission to the attachment.  NOTE: some original raw sources combined this issue with CVE-2006-1524
1, via crafted DNS responses messages that cause (1) a buffer over-read or (2) infinite recursion
4," via a crafted DNS message with a """"broken"""" TSIG"
4, via a crafted DNS message
4, via a DNS query with an unsupported (1) QTYPE or (2) QCLASS
2, via the id parameter
2, via the GET_DOMAIN_INDEX_METADATA function in the DBMS_EXPORT_EXTENSION package. NOTE: this issue was originally linked to DB05 (CVE-2006-1870)
2, via the (1) month and (2) year parameters in (a) index.php
2, via an attachment with an MS-DOS device filename.
4, via (1) the FID parameter in board.php and (2) the TID parameter in read.php.  NOTE: the SQL injection issues are already covered by CVE-2005-1612 (read.php) and CVE-2005-2566 (board.php).
2, via the (1) id and (2) username parameters.
2, via the (1) id and (2) username parameters.
2, via an invalid vwar_root parameter
4, via unknown vectors.
1, by initiating multiple chat requests to a single user and then logging off.
2, via an invalid (1) month or (2) year parameter
2, via the from_contact field in a private message (PM).
5, via (1) README.html or (2) HEADER.html.
4, via a .. (dot dot) in a filename in an ISO image.
5, via a .. (dot dot) in a filename in an ISO image.
4, via a .. (dot dot) in a filename in an ISO image.
4, via a .. (dot dot) in a filename in an ISO image.
2, via the (1) query string ($querystring variable) in (a) admin/adminlogs.php
2, via the (1) d parameter to main.php
4," via """".."""" sequences terminated by a %00 (null) character in the n parameter."
2," via unknown attack vectors related to a """"wiki macro."""""
5, via a long argument to the (1) EHLO
4, via a long request
0, via redirections with the mhtml: URI handler
4, via a long request.
1, via unspecified vectors that are not properly handled in a syslog function call.
4, via a direct request to admin/gallery_admin.php.
2, via the search page.
4, via a direct request to admin_gallery.php3
4, via a URL in the page parameter.
4, via a URL in the include_path parameter.  NOTE: this is a different vector
4, via a URL in the page parameter.  NOTE: the original report for this issue is probably erroneous
3, via unknown vectors.
2, via the (1) prevaction
2, via the (1) categori and (2) stranica parameters.
2, via the r parameter.
2, via the (1) email and (2) password parameter to (a) admin/login.php
0, by editing certain settings
3, via the User-Agent HTTP header.
2, via the iPro parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) link_dir_target and (2) link_id_target parameter
4, via a URL in the module_root_path parameter.
2, via the username parameter.
2, via the ID parameter.
4, via a URL in the root_path parameter.
2, via the sessionid parameter.
2, via the (1) name parameter to (a) deltables.php
2, via the (1) referral parameter to signup.php or (2) id parameter to members.php.
2, via the pos argument.
4, via a URL in the classes_dir parameter.
0," via Javascript events such as """"onmouseover"""" in the (1) color"
5, via a URL in the rootdir parameter.
2, via the (1) topic or (2) id parameter.
2, via the (1) poster_name
5, via (1) cookies or (2) the query string.
2, via the returnpath parameter.
2, via the domain parameter.
4, via .. (dot dot) sequences in the help_file parameter.
0, via the id parameter
4, via CRLF sequences in the email address.
2, via the username field when registering.
4, via a negative content length (Content-Length) HTTP header.
2, via the setbackurl parameter.
2, via the (1) category_id parameter in (a) store_special_offers.php and (b) store.php
2, via the (1) category_id parameter in (a) store_special_offers.php and (b) store.php and (2) prod_id parameter in (c) product_info.php.  NOTE: this issue might be resultant from SQL injection.
4, via a cookie with an Admin value of 1.
0, via the Rows parameter in Dist/Display.html
0, via Unicode in the RNTO command
2, via unspecified arguments
4, via a long argument to (1) MKD or (2) XMKD
4, via a long (1) PORT or (2) PASS followed by the MLSD command
2, via the (1) day
4, via a URL in the path parameter to (1) show.php or (2) top.php.
2, via the (1) new_input
2, via the cat parameter.
2, via the (1) SessionID parameter to login.asp
2, via the (1) SessionID parameter to login.asp or (2) ProductIndex parameter to browse0.htm.
4, via a long argument to the (1) NLST or (2) APPE commands
2, via the (1) cid parameter to dlisting.php or (2) preloadSlideShow parameter to showpic.php.
2, via the searchkeyword parameter.  NOTE: the issue was originally disputed by the vendor
4, via a direct request for the (1) /photos/themes/default/ and (2) /photos/themes/testing/ URIs
2, via the (1) a parameter in i.php
4, via (1) the Body field of a private message (PM)
2, via the keyword parameter.  NOTE: this issue can be used to trigger path disclosure.  In addition
2, via the sessionid parameter in (1) openwebmail-send.pl
5, via unspecified vectors. NOTE: the vendor has disputed this vulnerability
4, via a TIFF file with a DocumentName tag that contains UTF-8 characters
4, via (1) templates/problem/problem.inc and (2) test.php.
2, via unknown attack vectors that cause pinball to load plugins from an attacker-controlled directory while operating at raised privileges.
4, via a crafted Microsoft Word document.
2, via an OpenOffice document with a malicious BASIC macro
2, via certain applets in OpenOffice documents.
2, via the album parameter.
0, via the selectedpids parameter
2, by using the audiosetinfo ioctl to change the sample rate of an audio device.
2, via the (1) hash and (2) page parameters.
4, via (1) the transtype parameter in an add action or (2) entry parameter in an edit action.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the path parameter.  NOTE: this issue might be resultant from the directory traversal vulnerability.
2, via the path parameter.
4, via a long (1) USER or (2) PASS command.
2, via an unspecified value in the key_data_length field of an EAPoL frame.
0, via the sessionid parameter in (1) top.php and (2) member.php.  NOTE: this issue has also been reported to affect 1.7.2.
2, via an invalid pforums parameter to (1) misc.php and (2) member.php.
0, via the pid parameter in a reputation action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via """"exceptional conditions"""" that trigger memory corruption"
4, via a long argument to the PORT command.
0, via the req_message parameter
4, via a post with a BBCode tag that contains a JavaScript event name followed by whitespace before the '=' (equals) character
0, via format string specifiers in an MP3 filename specified on the command line. NOTE: this is a different vulnerability than CVE-2006-1905.  In addition
2, via the (1) mail
2, via the Comments field when signing the guestbook.
4, via (1) a javascript URI in an img BBCode tag
5, via a crafted BMP file that triggers the overflow in the ReadBMP function.  NOTE: this issue was originally included as item 3 in CVE-2006-1983
2, via the nid parameter.
2, via certain DNS packets
4, via a URL in the path parameter.  NOTE: This is a different vulnerability than CVE-2006-2175.
4," via a long string with """"{"""" (brace) characters to the USER command."
0, via the ID parameter to (1) comentarii.php or (2) view.php.  NOTE: this issue might be resultant from SQL injection.
0, via the ID parameter to (1) comentarii.php or (2) view.php.
5, via a URL in the phpbb_root_path parameter.
2, via text fields when adding a blog entry.
1, via crafted requests containing dot
4, via a direct request to (1) /inc/show.inc.php or (2) /inc/functions.inc.php
2, via the selectedbids parameter.
2, via the q parameter.
4, via a URL in the statitpath parameter.
4, via a username with a large number of newline characters.
2, via the (1) article_id parameter to (a) ArticleView.php
4, via a URL in the eqdkp_root_path parameter.
2, via the curr_year parameter.
2, via the Error parameter.
2, via the txtLogon parameter.
2, via unknown attack vectors.
4, via a URL in the path parameter.
2, via the image parameter.
2, via the cid parameter.
2, via the (1) date parameter to admin/main.asp
2, via the date parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via unspecified parameters.
1," via unknown vectors in the """"email protocol inspectors"
2, via the admin and ordinary user interface
5, via a JavaScript event in a BBCode img tag.
4, via a URL in the relative_script_path parameter.
2, via an unexpected chunk when the session is in CLOSED state.
1, via incoming IP fragmented (1) COOKIE_ECHO and (2) HEARTBEAT SCTP control chunks.
5, via a packet that contains two or more DATA fragments
4, via a large number of small messages to a receiver application that cannot process the messages quickly enough
5, via a certain sh ip bgp command entered in the telnet interface.
4, via a crafted OpenEXR (.exr) image file
4, via (1) the Find parameter in (a) search.php
4, via a .. (dot dot) in the template parameter.
3, by using admin/images/add.php to upload a PHP file
4, via a javascript URI in the URL of an avatar
4, via a URL in the phpbb_root_path parameter in (1) auth.php and (2) auth_phpbb when the phpBB portal is enabled
5, via a URL in the (1) clarolineRepositorySys parameter in ldap.inc.php and the (2) claro_CasLibPath parameter in casProcess.inc.php.
4, via a URL in the includePath parameter.
2, via the fields in a user's profile.
4, via unspecified mDNS name conflicts.
3, via unknown vectors.
2, via the (1) id
2, via the TypeName1 parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) type parameter in (a) calendar_new.asp and (b) default.asp
2, via the calsids parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
0, via the pfad parameter in (1) index.php and (2) galerie.php.  NOTE: this issue might be resultant from directory traversal.
2, via an absolute path in the pfad parameter to (1) index.php and (2) galerie.php.
2, via the keyword parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a crafted CHM / ITS file that triggers the overflow while decompiling.
1, via crafted IKE packets
2, via the (1) CatID parameter to subList.asp
2, via the (1) Login or (2) password fields.
2, via the (1) Login or (2) password field.
4, via a banner
2, via the (1) forename
2, via the title parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a user display name.
1, via crafted HTTP requests containing dot
4, via a request for a .cfm file whose name contains an MS-DOS device name such as (1) con
2, via the filename in a request to a (1) .cfm or (2) .cfml file
4, via a URL that contains certain command-line switches.
4, via a URL in the go_info[server][classes_root] parameter.  NOTE: the vendor has disputed this vulnerability
2, via unspecified attack vectors related to the OpenTextFile method in Scripting.FileSystemObject.
4," via a """".asa"""" file"
0, via multiple unspecified vectors related to stored procedure calls.  NOTE: due to lack of details from the researcher
3, via unknown vectors.  NOTE: due to lack of details from the researcher
4, via a URL in the returnpath parameter in (1) editsite.php
2, via the read parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  Also
2, via directory traversal sequences in the read parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the query string.
4, via a direct request for (1) adodb-access.inc.php
4, via (1) a .. (dot dot) in the settings[locale] parameter in infusions/last_seen_users_panel/last_seen_users_panel.php
4, via a web page with a large number of IMG elements in which the SRC attribute is a mailto URI.  NOTE: another researcher found that the web page caused a temporary browser slowdown instead of a crash.
2, via the e-mail address when registering for a forum that requires e-mail verification
3, by uploading a CSS file that contains PHP code
2, via the comma parameter.
2, via an absolute path in the getpage parameter.
4, via the (1) cat_id and (2) id parameters.
2, via the (1) username
4, via a request to the default context root.
2, via the searchTerm parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the ubild parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.  NOTE: this issue might be resultant from SQL injection.
4," via """"'"""" characters"
2, via the id parameter.  NOTE: this issue might be resultant from SQL injection.
2, via the (1) sDeviceView or (2) nDeviceID parameter to (a) NmConsole/Navigation.asp or (3) sHostname parameter to (b) NmConsole/ToolResults.asp.
2, via unknown vectors in (1) NmConsole/Tools.asp and (2) NmConsole/DeviceSelection.asp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) sCancelURL and possibly (2) sRedirectUrl parameters.
4, via 404 error messages.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a modified nDeviceGroupID parameter.
4, via a trailing dot in a request to NmConsole/Login.asp.
4, via (1) the search parameter and (2) unspecified fields related to e-mail alerts.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.  NOTE: this issue might be resultant from SQL injection.
2, via the id parameter.
2, via the catid parameter.
4," via a """"_required"""" field when the associated normal field is missing or empty"
2, via the message parameter.
0, via the func parameter in a search function.
2, via the page parameter.
4, via a Windows Metafile (WMF) or EMF image with a sum of entries in the vertext counts array and number of polygons that triggers a heap-based buffer overflow.
1, via crafted UTF-8 encoded HTML that results in size discrepancies during conversion to Unicode
4," via """"unexpected data"""" related to """"parameter validation"""" in the DXImageTransform.Microsoft.Light ActiveX control"
3, by using a modal browser window in a way that preserves the original address bar and trusted UI of a trusted site
5, via a crafted web page that triggers memory corruption when it is saved as a multipart HTML (.mht) file.
5, via a crafted contact record in a Windows Address Book (WAB) file.
1, via malformed cell comments
2, via the vname parameter in the comments functionality.
4, via a crafted packet to port 497.
5, via a URL in the vsDragonRootPath parameter.
0, by causing long text strings to be appended to the player->client buffer
2, via the PHPSESSID parameter.
4," via a URL in the include_path parameter (cfg['popphoto_base_path'] variable).  NOTE: Pixaria has notified CVE that """"PopPhoto is NOT a product of Pixaria.  It was a product of PopSoft Digital and is only hosted by Pixaria as a courtesy... The vulnerability listed was patched by the previous vendor and all previous users have received this update."""""
2, via the browse parameter.
2, via the (1) rep parameter to (a) index.php or (b) diapo.php or (2) image parameter to (c) affich.php.  NOTE: item 1a might be resultant from directory traversal.
4, via a .. (dot dot) in the rep parameter.
5, via a data_file_request command with a long (1) type or (2) name string.
2, via large packets
0, via packets with incorrect message sizes
4, via a long string.
2, via unknown attack vectors.
5, via a .. (dot dot) in the read parameter.
4, via a large packet when logged via (1) the raydium_log function in log.c or (2) the raydium_console_line_add function in console.c
2, via format string specifiers in the format parameter
4, via a packet of type 0xFF
2, by sending packets with long global variables to the client.
4, via a large ID
2, via an empty UDP datagram
5," via """".."""" sequences in the (1) LIST or (2) DELETE IMAP command."
2, via the (1) username and (2) CFTOKEN parameter in (a) index.cfm and (3) CFTOKEN and (4) CFID parameter in (b) chat.cfm.
4, via a cookie as defined in $pref['cookie_name'].
2, via the theme parameter in unknown scripts.  NOTE: the lang parameter is already covered by CVE-2006-2031.
0, via the db parameter in unknown scripts.
2, via the dir parameter.
3, via long SSH_MSG_KEXINIT messages
2, via the login parameter.
1, by uploading files with arbitrary extensions
2, via the trace.
2, via the file parameter.
2, via the contextpath parameter.  NOTE: this issue can produce resultant path disclosure when the parameter is invalid.
4, via a ZIP archive containing a long filename.
2, via an image index array that triggers the overflow during filename glob expansion by the ExpandFilenames function.
2, via unspecified remote attack vectors that cause failures in snmp_trap_decode that trigger (1) frees of random memory or (2) frees of previously-freed memory (double-free) by snmp_trap_decode as well as its calling function
0, by causing one CPU to attach a timer to a process that is exiting.
5," via a request in which the client specifies an insecure security type such as """"Type 1 - None"""""
4, via (1) the asf_read_header function in the ASF plugin (plugins/asfextractor.c)
2, via the srch_where parameter.
4, via a certain request
4, via a long command line argument.  NOTE: if mp3info is not installed setuid or setgid in any reasonable context
2," via the p parameter.  NOTE: this issue has been disputed by the vendor and a third party who is affiliated with the product.  The vendor states """"You cannot insert code in a wikipage or via URL parameters as they are all escaped before usage"
2, via the artnum parameter.
4," via """".."""" sequences in the file parameter."
4, via unspecified inputs.
4," via a modified back_url during a HTTP POST request. NOTE: this issue has been referred to as """"cross-site scripting"
2, by triggering errors or warnings
4, via a URL in the cart_isp_root parameter.
2, via the PHPSESSID parameter.
2, via the userID parameter.
4, via a URL in the CONFIG[main_path] parameter in (1) functions.php
2, via the (1) del_folder
4, via a content length (Content-Length) HTTP header.  NOTE: this is a different vulnerability than CVE-2006-2162.
2, via the query string
4, via a crafted .map file.
4, via a link or IMG tag.
2, via unknown attack vectors.
2, via the (1) action parameter to default.asp or (2) get parameter to profile.asp.
1, via attack vectors involving (1) the post_icon variable in classes/post/class_post.php and (2) the df value in action_public/moderate.php.
2, via the password field.
2, via the Headline field.  NOTE: if this issue is limited to administrators
2, via the name parameter.
2, via the (1) search and (2) cate parameters to (a) list.asp
4, via a reference to a malicious package in the TYPE_NAME argument in the (1) GET_DOMAIN_INDEX_TABLES or (2) GET_V2_DOMAIN_INDEX_TABLES function in the DBMS_EXPORT_EXTENSION package.
4, via (1) the PATH_INFO and (2) the category parameter.
0, via the id parameter
2, via the id parameter.
2, via an unspecified form for submitting URLs.
3, by uploading a file with an extension that is not associated with an application
2, via the input forms for signing the guestbook.
0, via the BL[be_cnt_plainhtml] parameter to include/inc_tmpl/content/cnt6.inc.php.
4, via .. (dot dot) sequences in the spaw_root parameter.  NOTE: CVE analysis suggests that this issue is actually in SPAW Editor PHP Edition.
4, via a ..  (dot dot) in the filename of a file that is stored in a (1) RAR (.rar)
4, via a URL in the ROOT_PATH parameter.
2, via unspecified vectors when processing the user date format.
2, via the member list search module.
4, via a URL in the includepath parameter.
0, by setting the action parameter to edit_member and the value parameter to 1.
4, via a URL in the language_dir parameter.
2, via an invalid s parameter
2, via an invalid show parameter referencing a non-existent file
2," via the (1) """"Search"""" (term parameter in index.php) and (2) """"Add a Site"""" (add.php) fields."
0, via the layid parameter to (1) login.asp and (2) main.asp.
1, via unspecified vectors in join.php.
2, via the (1) id parameter in stats.php and (2) unspecified inputs in lostid.php
2, via long field names.
4, via shell metacharacters in the URL of a podcast
4, via unknown vectors.
4, via an invalid dcid parameter to dc.php
0, via the dcid parameter to dc.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. This issue appears to be independent from a different issue that involves the same vector.
3, via long arguments.
4," via a command with a missing """":"""" (colon) separator"
2, via the User-Agent (useragent) header in an HTTP request
4, via a UPnP request with a modified InternalClient parameter
5, via a UPnP request with a modified InternalClient parameter
4, via a UPnP request with a modified InternalClient parameter (possibly within NewInternalClient)
4, via a UPnP request with a modified InternalClient parameter
4, via a file:// request containing null characters.
4, via (1) the author_id parameter in profile.php and (2) the aut_id parameter in userarticles.php.  NOTE: the aut_id vector can produce resultant path disclosure if the SQL manipulation is invalid.
5, via (1) a quote character or possibly an invalid value in the action parameter in a request to mrarticles.php or (2) a login QUERY_STRING to admin.php without any additional parameters
4, via a URL in the thispath parameter.
4," via a URL in the GLOBALS[""""CLPath""""] parameter to (1) reconfig.php and (2) srxclr.php. NOTE: this might be due to a globals overwrite issue."
2, via the (1) name
4, via a client flag (frameNum) that is greater than 41
3, via unknown vectors.
2, via unknown attack vectors.
2, via unknown attack vectors.
4, via a URL in the GLOBALS[DIR_LIBS] parameter.
2, via the (1) name or (2) message parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information
2, via the ID parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the HTTP_REFERER header in an HTTP request.
3, by uploading a file with a .gif extension.  NOTE: due to lack of specific information about attack vectors do not depend on the existence of another vulnerability
2, via the comma parameter.  NOTE: it is not clear from the original report how this attack can succeed
2, via unknown attack vectors.
2, via the Nickname field
2, via the chatbox
2, via the (1) URL query string and the (2) Sort parameter.
1, via unspecified vectors
4, via shell metacharacters in the domain parameter.
2, via unknown attack vectors.
4, via a modified NATIO cookie value
4, via file descriptions.
0, by specifying the absolute path of the directory in the infolder parameter and simultaneously specifying the filename in the filepath parameter.
2, via an HTTP Referer field.
0," via malformed nested HTML tags such as """"<scr<script>ipt>"""" in (1) offset and (2) days parameters in (a) tiki-lastchanges.php"
1," by setting the loggedIn cookie to """"xY1zZoPQ""""."
2, via the uName parameter.
4, via a javascript URI in the SRC attribute of an IMG element.
2, via the WCE parameter.
4," via """"any of its input.""""  NOTE: the original disclosure is based on vague researcher claims without vendor acknowledgement; therefore this identifier cannot be linked with any future identifier that identifies more specific vectors.  Perhaps this should not be included in CVE."
4," via """"any of its input.""""  NOTE: the original disclosure is based on vague researcher claims without vendor acknowledgement; therefore this identifier cannot be linked with any future identifier that identifies more specific vectors.  Perhaps this should not be included in CVE."
2, via the user_error_message parameter.
4, via a URL in the _PX_config[manager_path] parameter.  NOTE: this is a different executable and affected version than CVE-2006-0725.
2, via the search parameter.
2, via the max parameter.
2, via the obj parameter.
3, by editing a Wiki page to contain the script.
2, via an encoded uname parameter.
4," via """"..\\"""" sequences.  NOTE: this is similar to CVE-2006-1864"
1," via unknown vectors involving usernames that contain the """"="""" (equals) character"
4, via a pathname argument longer than MAXPATHLEN
5, via a crafted font file that triggers a null dereference.
2, via certain inputs to (1) acc_verify.php or (2) project.php.
2, via the (1) username
4, via a URL in the CONFIG[pear_dir] parameter.
4, via a URL in the CONFIG[pear_dir] parameter.
5, by inserting a carriage return and PHP code when updating a profile
4, via a URL in the lang parameter to (1) modules/credits/business.php
2," via the (1) search parameter in search.php (the """"search box"""")"
4, via a chat message in (1) fastchat.php and (2) fastshow.php.
2, via the nickname field.
2, via the (1) listingid parameter to (a) images.php
2, via the search box.
2, via the (1) frm_id parameter to (a) show_forum.asp
4, via a URL in the (1) thispath or (2) configdir parameters.
2, via the (1) id parameter to (a) index.php
4, via the gazpart parameter.
4, via a URL in the _PSL[classdir] parameter.
4, via a URL in the REDSYS[MYPATH][TEMPLATES] parameter.
2, via the searchstring parameter.
4, via a URL in the GLOBALS[AA_INC_PATH] parameter in (1) cached.php3
2, via the email address (useremail parameter).
2, via the atkselector parameter.
2, via the (1) debut_image parameter in (a) article-album.php3
4, via a URL in the path parameter to (1) form.php
2, by uploading scripts with arbitrary extensions to the img directory.
2, via the (1) startletter parameter in userview.asp and the (2) catid parameter in topics.asp.
2, via the (1) startletter parameter in userview.asp and the (2) forumname parameter in topics.asp.
4, via a direct request and possibly invalid arguments to (1) layout/professional/functions.php or (2) getimage.php.
2, via the image argument in a show action.
3, via the loginname parameter.
2, via unknown vectors related to story submission.
4, via a large number of forged client registration messages.
3," via forged """"session start"""" messages that cause AVR to connect to arbitrary hosts."
5, via a modified size for (1) EM_GET_CE_PARAMETER and (2) EM_SET_CE_PARAMETER messages
4, via modified pathnames
2, via the subcat parameter.
2, via the subcat parameter.  NOTE: this issue might be resultant from SQL injection.
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party sources.
5, via a web page that contains a large number of nested marquee tags.  NOTE: a followup post indicated that the initial report could not be verified.
2," via the """"Admin note"""" feature"
2, via the id parameter.
2, via the config[fsBase] parameter in (1) drucken.php
4, via a modified username parameter.
2, via the pic parameter.
2, via the gal parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) id parameter in (a) e_mesaj_yas.asp
2, via the (1) yas_1
2, via the (1) q parameter in (a) forgot.php
0, via the q parameter in forgot.php
2, via the (1) count and (2) from variables to (a) database.mysql.inc
4, via a URL in the l parameter.
2, via the (1) lang parameter in index.php
4, via a .. (dot dot) sequence and trailing null (%00) byte in the subsite parameter in a showsubsite todo.
2, via multiple vectors
2, via the (1) txtCustomField and (2) CustomFieldID array parameters.
2, via failed SQL queries
0, via the item_list parameter in search.php.
4, via a long hostname.
2, via the debug parameter
4, via a long GET request.  NOTE: CVE analysis suggests that this is a different product
2, via the (1) start parameter in (a) index.php; (2) forumID parameter in index.php
4, via a %2e%2e%5c (encoded ../) in the URL.  NOTE: this might be the same issue as CVE-2005-3747.
4, via a capital P in the .jsp extension
2, via the tid parameter.
4, via a URL in the includedir parameter
2, via the (1) id parameter to (a) index.php
4, via a javascript URI in an IMG tag in a comment field to (1) guestwrite.php or (2) guestbook.php.
2, via the flag parameter.
4, via a carriage return (\r) after the URL and before the HTTP declaration.
2, via the (1) name
2, via the search_phrase parameter.
1, by using the nsISelectionPrivate interface of the Selection object to add a SelectionListener and create notifications that are executed in a privileged context.
2, via certain optional Certificate Authority name arguments
4, via (1) nested <option> tags in a select tag
4," via """"jsstr tagify"
5, via a VCard that contains invalid base64 characters.
5," by tricking a user into installing missing plugins and selecting the """"Manual Install"""" button"
3," by tricking a user into (1) performing a """"View Image"""" on a broken image in which the SRC attribute contains a Javascript URL"
1, via javascript that calls the valueOf method on objects that were created outside of the sandbox.
2, via certain Javascript code.
4," via """".."""" sequences in the function parameter."
2, via the sid parameter.
2, via the hid parameter.
0, via a modified id parameter.
4, via (1) the xtref parameter in xiti.js and (2) an HTTP Referer header field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the page parameter
2, via the (1) CalendarDetailsID parameter in (a) month.php
2, via the (1) LoName parameter in (a) week.php and (b) month.php and (2) AddressLink parameter in (c) event.php.
4, via the print_url variable.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party sources.
2, via the (1) u_a or (2) u_s parameters.  NOTE: this might be resultant from SQL injection.
2, via the (1) u_a or (2) u_s parameters.
4, via a long reply from an HTTP server
2, via the (1) id parameter to index.php
2, via the keyword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party sources.
2, via the featureid parameter.
4, via a long argument to the MAIL command.
4, via a modified account id and possibly arbitrary values of the name
4," via a guestbook post containing a javascript URI in the SRC attribute of the BR element after an extra """"iframe"""" tagname within that element"
4, via the (1) count parameter
2, via the page parameter in (1) toprated.php and (2) newcards.php.  NOTE: the card_id vector is already covered by CVE-2006-1230.
4, via a URL in the babInstallPath parameter in (1) index.php
4, via a javascript URI in the SRC attribute of an IMG element in the (1) name (aka nick)
4, via a .. (dot dot) in the query string.
5," by sending a large amount of data containing """"Submit"""" in an sslinvoice action"
2, via the (1) op and (2) nick parameters
2, via the id parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the CONF[local_path] parameter.
4, via a URL in the c_node[class_path] parameter.
4, via a comment
2, via the (1) artid parameter in art.php and the (2) catname parameter in cat.php.
2, via the password parameter.
2, via the id variable
5, via a modified phpbb_root_path parameter to the admin scripts (1) index.php
2, via the configuration for tibhawkhma.
2, via the uploaded filename.
1, via inputs that are not properly validated when the page title is output
4, via a URL in the root_path parameter.
2, via the (1) forumid parameter in add.php and (2) lessid parameter in show.php.
2, via the article_id parameter.
2," via certain comment fields in the """"Sign Our GuestBook"""" page"
4, via unspecified parameters.
5, via a URL in the root_path parameter to (1) menu.php
5, via a URL in the (1) REX[INCLUDE_PATH] parameter in (a) addons/import_export/pages/index.inc.php and (b) pages/community.inc.php.
4, via a URL in the REX[INCLUDE_PATH] parameter to (1) simple_user/pages/index.inc.php and (2) stats/pages/index.inc.php.
4, via a URL in the REX[INCLUDE_PATH] parameter to image_resize/pages/index.inc.php.
4, via unspecified parameters.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the linkID parameter.
5, via a URL in the bhconfig[bhfilepath] parameter.
2, via the help parameter.
2, via unspecified parameters
2, via the cat parameter.
2, via the offset parameter.
2, via the start parameter.
2, via the articleId parameter in a ViewArticle action (viewarticleaction.class.php).
2, via the msgid parameter.
4, via a URL in the mybloggie_root_path parameter to (1) admin.php or (2) scode.php. NOTE: this issue has been disputed in multiple third party followups
4, via a URL in the path parameter to (1) inc/logincheck.inc.php
2, via the version parameter.
2, via the imageid parameter.
5, via a URL in the classes_dir parameter.
4, via a URL in the (1) APP[path][applications] parameter to (a) Bs_Faq.class.php
4, via a URL in the page parameter.  NOTE: followup posts have disputed this issue
4, via a FTP URL in the blog_dc_path parameter
2, via the post parameter.
4, via a URL in the includePath cookie to (1) auth/extauth/drivers/mambo.inc.php or (2) auth/extauth/drivers/postnuke.inc.php.
2, via the search variable.
5, via a URL in the script_path parameter.  NOTE: CVE disputes this issue
4, via a URL in the configArr[pathtodir] parameter.
2, via the il parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the catname parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the include_prefix parameter in (1) inc/dbase.php
4," via """"complex curly syntax"""" that is inserted into a regular expression that is processed by preg_replace with the /e (executable) modifier."
2, via the newsid parameter.
2, via the Comments plugin in the (1) url and (2) author fields.
2, via the (1) GBOOK_UNAME
2, via the q parameter.
2, via the catid parameter.
2, via the (1) fDocumentId parameter in view.php and the (2) fSearchableText parameter in /search/simpleSearch.php.
4, via a crafted fDocumentId parameter
0, via the UserName parameter in (1) validatelogin.asp or (2) adminlogin.asp.
4, via a URL in the WK[wkPath] parameter.
2, via the loginmessage parameter.
0, via the message parameter in a login action.
2, via an invalid lang parameter in an authenticate action.
2, via the edit form.
0, via a modified uid hidden form field in an Edit Profile action.
4, via unspecified vectors.
1, via truncated IAX 2 (IAX2) video frames
5, by tricking a user into typing the characters of the target filename in a text box and using the OnKeyDown
4, via a request to an arbitrary .cfg file
4," via """".."""" sequences in an HTTP request.  NOTE: it is not clear whether this issue is legitimate"
2, via the username parameter.
2, via the topic parameter.
4, via a direct request to (1) page_footer.php and (2) page_header.php
1, via malformed GIF data that causes an infinite loop.
0, via a long filename in an (1) ACE
2, via the username parameter.
2, via the (1) albumID parameter to (a) view_album.php or (b) index.php
0, via the albumID parameter to (1) popup.php and (2) view_album.php.
4, via a URL in the templatefolder parameter to (1) postreply.php
3, via the (1) hideemail
1, via crafted inputs that trigger memory corruption.
5, via a URI that begins with a space character.
4, via a URL in the (1) g_pcltar_lib_dir parameter in (a) pcltar.lib.php when register_globals is enabled
4, via a long URL HTTP request.
2, via the (1) msg_subject and (2) msg_body parameters.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a direct request to pops/edit.php with a modified membre parameter.
2, via the do parameter.
4, via a direct request to (1) header.php
2, via the (1) Titlesitename or (2) sitename parameter to (a) header.php
4, via a .. (dot dot) sequence and trailing null (%00) byte in the (1) Default_Theme parameter to header.php or (2) ModPath parameter to modules/cluster-paradise/cluster-E.php.
2, via the sqlType parameter.
2, via the Project parameter.
2, via the (1) New Category (newcategory) or (2) apage parameter to (a) edtalbum.asp
2, via the (1) searchword parameter to search.php or (2) siteurl parameter to add.php.
2, via the banurl parameter to add.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a .. (dot dot) in a (1) .rar
2, via the %strCookieURL%.GROUP parameter in a cookie.
4, via a URL in the includepath parameter.
4, via a long MKD command.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the phormationdir parameter.
4, via the suchtext parameter.
4, via a URL in the root parameter in (1) download.php
4," via (1) the target parameter in index.php and (2) the """"input box."""""
4," via a BR element with an extraneous IMG tag and a STYLE attribute that contains """"/**/"""" comment sequences"
2, by editing the policy.dat file.
2, via the search input box (query parameter).
4, via a javascript URI in the SRC attribute of an IMG element in the input box in quickchat.php
4, via a certain id parameter
4, via a UDP packet with fewer than 12 bytes
2, via the ID parameter.
2, via the (1) catid and (2) cid parameter.  NOTE: this might be a duplicate of CVE-2005-4009.c.
2, via the (1) errCode and (2) uid parameter in (a) default.asp and (3) dname parameter in (b) /admin/dns.asp and (c) /additional/regdomain_done.asp.
0, via javascript in the SRC attribute of IMG tags in the (1) name
2, via the img parameter.
4, via a direct request to (1) big.php and (2) upgrade.php.
2, via unknown vectors
4, via a URL in the absolutepath parameter in (1) footer.php and (2) admin/footer.php.
4, via a URL in the absolutepath parameter in cal.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the STYLE_URL parameter.  NOTE: it is possible that this issue is resultant from SQL injection.
4," via double-encoded """"'"""" characters in the STYLE_URL parameter."
2, via the (1) lid parameter in index.php and the (2) title parameter in myslideshow.php.
2, via the (1) id
2, via the keyword parameter in a browse action.
2, via the info parameter.
2, via the username parameter.
4, via a JavaScript URI in the SRC attribute of an IMG element
2, via the key_m parameter.
0, via the key parameter in (1) Displayview.asp and (2) Details_Photo_bv.asp.
2, via the (1) name
4, via a URL in the INCDIR parameter in (1) include/nav.php and (2) include/lang.php.
4, via a URL in the dir[data] parameter.
4, via a URL in the qb_path parameter.
2, via the q parameter.
2, via the q parameter.
2, via the page parameter.  NOTE: this might be resultant from another vulnerability
0, via the mbid parameter
2, via an invalid mbid parameter
2, via the (1) id parameter in player.php and (2) keyword parameter when performing a search.
2, via the DJ fields (1) Description
2, via the (1) tf_lang
2, via the (1) new_order and (2) order_dir parameters to (a) index.php
5," via a """"php://"""" or other scheme in the third argument"
2, via the (1) login parameter in (a) client/stats.php and (b) admin/stats.php
0, via an email parameter containing a null (%00) character after a valid e-mail address
2, via an Excel spreadsheet with an embedded Shockwave Flash Player ActiveX Object
1, via encoded spaces and double-quote characters in a scp or sftp URI.
4, via a URL in the PHPCMS_INCLUDEPATH parameter to files in parser/include/ including (1) class.parser_phpcms.php
2, via the (1) image and (2) PublisedDate parameters.
3, via the (1) n and (2) d parameters in (a) login.asp and the d parameter in (b) igallery.asp.
2, via the path parameter.
2, via the (1) s and (2) block parameters.
2, via the page parameter in (1) monthly.php and (2) daily.php.
4, via unspecified parameters.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) gallery_id parameter in gallery.asp and (2) parentcurrentpage parameter in view_gallery.asp.
2, via the (1) CAT_ID parameter in (a) subphotos.asp and (b) subLevel2.asp
4, via a URL in the phpbb_root_path parameter.
2, via the cat parameter.
2, via the (1) ToCategory and (2) FromCategory parameters to (a) ProductDetailsForm.asp and (3) UserName and (4) Password parameters to (b) LogIn/VerifyUserLog.asp.
2, via the (1) w
2, via the input box in singlepage.php when submitting scrapbook pages.
4, via a direct request to files in the txt-db-api directory such as txt-db-api/sql.php
2, via the (1) name and (2) comment parameters.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) imgdir parameter in (a) index.php
2, via the (1) title
2," via the sel_menu parameter.  NOTE: the vendor notified CVE on 20060823 that """"All issues concerning this script and others at cescripts.com have been addressed and fixed."""""
2," via the sel_menu parameter.  NOTE: the vendor notified CVE on 20060823 that """"All issues concerning this script and others at cescripts.com have been addressed and fixed."""""
4, via a URL in the direct parameter.  NOTE: this issue has been disputed by CVE
4, via a URL in the ltw_config[include_dir] parameter. NOTE: CVE disputes this claim
4, via a URL in the (1) go_info[isp][classes_root] parameter in (a) server.inc.php
2, via the voltext_suche parameter.
2, via the URL
4, via a URL in the foing_root_path parameter.
2, via unknown attack vectors.
2, via unknown attack vectors.
2, via the (1) name
2, via the (1) event_id parameter to view-event-details.php or (2) select_events parameter to event-registration.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the PHORUM[http_path] parameter.  NOTE: this issue has been disputed by the vendor
2, via the (1) sobjectID or (2) MAINID parameters to (a) show.php or (3) MainID parameter to (b) subject.php.
2, via the (1) QuranID
2, via the Action parameter.
0, via certain invalid DHCP responses that trigger memory corruption.
5, via unspecified vectors.  NOTE: this is a different vulnerability than CVE-2006-3086.
2, via the (1) read parameter in index.php
2, via the (1) sort parameter in index2.php
2, via the lang parameter.
2, via the (1) comment
0, via the ID parameter in a proc_reply action in the blog shard.  NOTE: This is a similar vulnerability to CVE-2006-1763
4, via a long MGRLVLLS message inside of an EXCSAT message when establishing a connection.
4," via a (1) """"long column list"""" in the (a) REPLACE INTO and (b) INSERT INTO portions of the LOAD command or a (2) large number of values in an IN clause"
5," by sending """"incorrect information ... regarding the package name/creator"
2, via the (1) keywords parameter
1," via crafted """"rule definitions"""""
4, via a URL in the lang parameter to files in photoalbum/ including (1) thumstbl.php
4, via a URL in the vsDragonRootPath parameter.
2, via the startrow parameter.
3, via the (1) PHPSESSID parameter in board.php and (2) viewcatmod parameter in main.php.
2, via the message parameter.
2, via the startrow parameter.
2, via an SCTP chunk with a 0 length.
4, via a long hyperlink
2, via the (1) pUserID
2, via the make_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
1, via direct requests with modified parameters to (1) /tva/ajouter_tva.php
2, via the RETURNURL parameter in (1) userlogin.cfm and (2) account.cfm.
2, via the (1) forum parameter in messagepost.cfm and (2) topic parameter in topics.cfm.  NOTE: this item was created based on information in a blog entry that was apparently removed after CVE analysis.  As of 20060619
2, via the (1) error
2, via the (1) error parameter in users/login.php and the (2) feedback parameter in articles/index.php.
2, via an invalid sort_mode parameter
5, via CRLF sequences in multiple unspecified parameters that are injected into HTTP headers
2, via the subsite parameter in the subsite todo.
2, via an HTML div tag with a carriage return between the onmouseover attribute and its value
2, via the (1) name
2, via multiple parameters
4, via a direct request to php.php
5, via a URL in the phpraid_dir parameter to (1) configuration.php
5, via a crafted OpenOffice XML document that is not properly handled by (1) Calc
2, via unspecified attack vectors related to the logging functions.
4, via a DHCPDISCOVER packet with a 32 byte client-identifier
1, by appending data to a file that is larger than 2 Gb.
1, via crafted HTTP headers.
4, via a packet specifying a negative number of players
4, via null (\0) and shell metacharacters in the TSI string
2, via the (1) cat and (2) view parameters.
2, via the category parameter.
2, via the (1) news_archive
0, via the msg parameter
4, via a URL the DIR_LIBS parameter in (1) path/action.php
2, via the cart_id parameter.
2, via the (1) PIC parameter in offers-pix.php
2, via the (1) s
2, via the id parameter.
2, via the image parameter.
2, via the MainID parameter.
2, via the error_msg parameter.
4, via a URL in the microcms_path parameter.  NOTE: it was later reported that this can also be leveraged to include and execute arbitrary local files via .. (dot dot) sequences.
4, via a L2CAP echo request that triggers an out-of-bounds memory access
2, via the highlight parameter.
2, via the page parameter.
2, via the menu parameter.
2, via the (1) sectio parameter in (a) login.php
2, via the cat parameter.
2, via the id parameter.
2, via the (1) item parameter in (a) emailtofriend.pl or (b) violation.pl
2, via the subid parameter.
2, via the REQ parameter.
4, via a symlink attack on msg.conf in a directory identified by the CONFIGROOT environment variable
2, via the msg parameter.
2, via the action parameter.
4, via a URL in the root parameter.
2, via the (1) start or (2) sort parameters.
2, via the first_row parameter.
2, via the sort parameter.
2, via the sort parameter.
2, via unspecified manipulations that produce an error message.
5, via the (1) id and (2) debut parameters in (a) read.php
2, via the (1) msg_result and (2) rep_titre parameters in (a) read.php; and the (3) id and (4) parent parameters and (5) CSForum_nom
2, via unspecified manipulations
4, via a newline character in the email parameter to ajouter.php.
4, via a URL with a trailing slash (/) character in the (1) lang_path parameter to (a) cms/plugins/col_man/column.inc.php
5, via a URL in the (1) path[cb] parameter to (a) libraries/comment/postComment.php and (b) modules/poll/poll.php
4, via a URL in the lang parameter to (1) admin.php
2, via the id parameter.
4, via a URL in the destination parameter.
4, via a CHM archive containing files with a .. (dot dot) in their filename.
2, via the account parameter.
2, via the path parameter.
2, via the browse parameter.
4, via a ..  (dot dot) in the uid parameter in the rss page.
2, via the (1) browse parameter
2, via the strAsgSknPageBgColour parameter to settings_skin.asp
4, via a URL in the mainpath parameter.
0, via the mainpath parameter to (1) data/footer.php and (2) admin/header.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via the (1) maingroup and (2) secondgroup parameters to (a) search_prod_list.asp
2, via the (1) maingroup and (2) secondgroup parameters to (a) search_prod_list.asp
2, via the msg parameter.
2, via the (1) username and (2) password parameters.
2, via the pageid parameter.
4, via a URL in the (1) ipath parameter in common.php and (2) unspecified vectors in ad.php.
4, via a .. (dot dot) sequence and trailing null (%00) byte in the (1) gallery and (2) template parameter.
2, via the template parameter.
2, via an invalid template parameter
4, via a POST that contains hexadecimal-encoded HTML.
4, via a JPEG image with large height and width values
0, via an A tag with an href attribute with a URL containing a long hostname
2," via an IFRAME with a src tag containing a """"File://"""" URI followed by an 8-bit character.  NOTE: some third parties were unable to verify this issue."
3, via modified user_env
2," via the """"[NR]"""" sequence in the signature field"
4, via a .. (dot dot) sequence and trailing null (%00) byte in the id parameter
2," via multiple unspecified """"configuration fields"""" in (1) admin_chatconfig.php"
5, via a javascript URI in an img bbcode tag in the comments parameter.
2, via the (1) name
0, via the id parameter to an unspecified script
4, via (1) non-ASCII characters in a reverse DNS lookup result from a Received header
2, via the userid parameter.
2, via the threadid parameter.
2, via the sid parameter.
4, via double-encoded values in the user parameter in a userinfo subaction.
2, via the Enhanced Passive (EPSV) FTP mode.
0, via Javascript with an infinite for loop.  NOTE: it could be argued that this is not a vulnerability
2, via the search parameter.
2, via the (1) produkt
2, via the (1) promocja
2, via the (1) id parameter in (a) index.php or (b) printarticle.php
2, via the module parameter.
2, via the (1) MemberID parameter to rank.php
2, via the UserID parameter.
2, via the login parameter.
2, via the tid parameter.
2, via long namespaces received from the IMAP server.
2, via the showcodebuttons parameter.
2, via the (1) order parameter in buglist.php and the (2) bug parameter in query.php.
2, via the (1) member and (2) activatecode parameters.
2, via the sort parameter.
2, via the (1) search
2, via the page parameter.  NOTE: the vendor has disputed this report
4, via a crafted Contact List (.ctt) file
1, via crafted entries.
4, via a long GET request.
2, via the u parameter.  NOTE: the vendor has disputed this report
2, via the boardid parameter.
2, via the boardid parameter.
2, via the postid parameter.
0, via unspecified attack vectors
2, via the (1) filter or (2) sort parameters.
2, via the (1) ep parameter to search.php and the (2) subject parameter in comment.php (aka the Subject field when posting a comment).
2, via the message parameter.
2, via the username field on the login page
2, via the title parameter.
2, via the catid parameter.
2, via the p parameter.
2, via the post parameter.
2, via the phpbb_root_path parameter.
0, via multiple unspecified parameters
3, via the (1) country and (2) sort_by parameters in (a) search_results.php; (3) browse parameter in (b) featured_photos.php; (4) cid parameter in (c) products.php
0," via the user parameter (""""New Name"""" field)."
4, via a double-encoded user parameter in a viewprofile action.
4," via (1) a long User-Agent HTTP header in the RTSP service and (2) unspecified vectors involving the """"parsing of HTTP URL schemes""""."
2, via the (1) next_template
2, via the (1) Sex parameter in index.php
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
4, via a direct request
2, via the (1) pid parameter in picture.php
0, via the login parameter in (1) webmaster/index.php and (2) search.php.
2," via unspecified vectors involving a """"malicious URL""""."
0," via queries with the """"LIKE"""" keyword in the searchdata parameter (search field)."
2, via empty IRC CTCP NOTICE messages.
2, via the title parameter.
2, via the offset parameter.
4, via the icq parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via messages that contain non-ASCII characters
2, via the group parameter.
4, via a URL in the ROOT_PATH parameter.
2, via the domain parameter in (1) user_add.php or (2) unit_add.php.
2, via the (1) subject or (2) to parameters.
2, via the xmsn parameter.
0, via (1) unspecified parameters in the php/comment.php and (2) the getpartialmatches method in php/aolbonics.php.
2, via the forumid parameter.
2, via the (1) link_print
2, via the keyWord parameter.
4, via a URL in the phpraid_dir parameter to (1) logs.php and (2) users.php
5, via a URL in the phpraid_dir parameter to (1) announcements.php and (2) rss.php
2, via the cal parameter.
2, via the command parameter.
2, via the (1) ofdisp and (2) ofmsgid parameters.
2, via the page parameter.  NOTE: the same vector can be used for cross-site scripting
4, via a long string of filenames
4, via .. (dot dot) sequences in filenames within (1) TAR
2," via the (1) sn20_special_cases parameter (""""Special Cases"""" field) in profile/mini.php"
2," via an IMG tag in the desc parameter (""""Ticket Description"""" field) that points to a URL that captures referer URLs"
2, via the rate parameter.
2," via the (1) ProductName (""""Title"""" field)"
2, via the (1) offset
2, via the multiple unspecified parameters
2," via unspecified vectors related to """"chunk error processing"
0," via filenames with double extensions such as """".php.en"""""
2, via the file parameter.
1, via unspecified vectors in a direct request to secure/ConfigureReleaseNote.jspa
2, via unspecified manipulations of the projectId parameter
2, via the lid parameter.
2, via the query parameter in a search cmd.
4, via a URL in the crisoftricette parameter.
0, by using the Universal Plug and Play UPnP/1.0 component.
2, via the grp_id parameter.
2, via the id parameter.
3, via the (1) type parameter in report.php and (2) level parameter in custom_buttons.php.
2, via the CatID parameter in (1) cat.php and (2) add.php.
4, via a long filename in a (1) ARJ
5," via a .url file with an InternetShortcut tag containing a long URL and a large number of """"file:"""" specifiers."
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
4, via a crafted web page that triggers an out-of-bounds memory access
1, by setting the Filter property of an ADODB.Recordset ActiveX object to certain values multiple times
4, via a long URL
2, via an invalid tag value in a TIFF image
2, via the (1) words
2, via the (1) words
4, via a .. (dot dot) sequence and a trailing null (%00) byte in the lng parameter
4, via a URL in the pa parameter.
2, via the id parameter.
4, via (1) an invalid id parameter to mail/index.php or (2) membername parameter to messenger/online.php
1, via crafted HTML tags
4, via a DHTML setAttributeNode function call with zero arguments
2, via the dateiPfad parameter.
3, by performing a diff between large
3, by performing a diff between large
5, by uploading a file with a .php extension
2," via the """"search string""""."
0, via Javascript events such as onmouseover within a URL.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party reports.
2, via the (1) id and (2) texte parameters.
2, via the (1) id and (2) disabled parameters.
2, via the table parameter.
4, via a direct request to various files
2, via the file URI handler.
0, via the where parameter in a view action.
4, via a URL in the admindir parameter.
4, via a URL in the mosConfig_absolute_path parameter.
0, via multiple unspecified parameters
2, via the URL
5, by sending a long command from the server.
3, via long CS_ITEMS values.
2, via the password parameter when logging in.
4, via a large number of share connection requests.
5, via an XCF file with a large num_axes value in the VECTORS property.
2, via the (1) delete
4, via a .. (dot dot) sequence in the edit parameter.
1, via strings with non-printable characters.
3, via unknown vectors.
1, via crafted large inputs
4, via a bbcode IMG tag with a modified delete parameter in a deletepost action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the config[template_path] parameter in user_bottom.php
4, via a .. (dot dot) sequence in the (1) action
1, by declaring the sourceURL attribute on an uninitialized DirectAnimation.StructuredGraphicsControl ActiveX Object
2, via the year parameter in (1) loan.php and (2) mortgage.php.
2, via the currency parameter in (1) loan.php and (2) mortgage.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via a crafted STYLE record in a spreadsheet that triggers the overflow when the user attempts to repair the document or selects the """"Style"""" option"
1," via unspecified vectors involving """"ASP.NET controls that set the AutoPostBack property to true""""."
4, via a crafted multicast message.
1, by using the document.getElementByID Javascript function to access crafted Cascading Style Sheet (CSS) elements
1, via unknown vectors in a document that triggers the overflow when it is distilled to PDF.
2, via an encoded JPEG stream that is longer than the scan line size (TiffScanLineSize).
4, via unknown vectors.
2, via unknown vectors involving decoding large RLE images.
4, via unknown vectors.
4, via a format string instead of a date as the first parameter to the date_format function
4, via a table with a frameset as a child
2, via an HTML page with an A tag containing a long title attribute.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) cat_id parameter to (a) gbrowse.php
4, via a URL in the qb_path parameter to (1) index.php
2, via unspecified vectors involving opening an empty inbox.
5, via a link with a modified bid parameter in a del_block op on the block page in index.php.
2, via unspecified parameters involving the (1) getUserStateFromRequest function
1," via unspecified parameters involving the (1) """"Remember Me"""" function"
2, via the email parameter.
2, via the (1) show_courses or (2) current_cat parameters to (a) admin/create_course.php
1, via unspecified vectors
1, via unspecified vectors
2, via an absolute path with Windows drive letter in the Pasta parameter when link=util
4, via a long nickname.
5," via a message with an incorrect """"object key"""""
3, via the (1) cat_id parameter to (a) view_classifieds.php; (2) id parameter in (b) view_ad.php; (3) event_id parameter in (c) view_event.php
2, via an invalid AFP request that triggers an unchecked error condition.
4, via a crafted Zip archive.
4, via a crafted BOOTP request.
0, via unspecified dynamic linker options that affect the use of standard error (stderr) by privileged applications.
4," via an """"improperly handled condition"""" that leads to use of """"dangerous paths"
4, via a crafted Radiance image.
5, via a crafted GIF image that triggers a memory allocation failure that is not properly handled.
4, via a malformed GIF image.
4, via a crafted HTML document that causes WebKit to access an object that has already been deallocated.
2, by injecting crafted frames into a wireless network.
2, uses the API via crafted frames.
4, via a series of operations that result in an invalid length calculation when using SysAllocStringLen
0, by setting the fonts property of the HtmlDlgSafeHelper object
0, by setting the Enabled property of a DXTFilter ActiveX object to true
0, by accessing the Data property of a DirectAnimation DAUserData object before it is initialized
2, via the (1) username or (2) password parameters.
0, via (1) readme parameter to FreeHost/misc.php or (2) index parameter to FreeHost/news.php.
2, via the ID parameter.
2, via the (1) text parameter in a search action to (a) top.php
2, via the (1) _status
2, via the URL
2, via an encrypted archived .RAR file
4, via a long CSeq field value in an INVITE message.
2, via the id parameter.
4, via (1) name and (2) form parameters.
4, via a URL in the insPath parameter to (1) index.php
4, via a URL in the sbp parameter to (1) image_upload.php and (2) file_upload.php.
2," via unspecified vectors that are a """"slight variation"""" of CVE-2006-3534."
0, via parameters such as (1) descripcion and (2) pais
0, via the dateiPfad parameter
2," via the SRC attribute of a SCRIPT element in the (1) """"Your name"""" field and (2) """"Enter Prayer Request here"""" field."
4, via a javascript URI in the SRC attribute of an IMG element in the (1) Subject and (2) Message fields in a do=write (aka Send Mail Message) action in gamemail.php; the (3) Gender
4," via unspecified """"textboxes."""""
2, via the (1) shop name field in (a) editshop.php
2, via the (1) idcat and (2) code parameters in a ketqua action in index.php; the id parameter in a (3) Attach and (4) ref action in index.php; the CODE parameter in a (5) Profile
2, via the CODE parameter in a (1) Stats
4, via a web page with multiple empty APPLET start tags.  NOTE: a third party has disputed this issue
4, via a long HTTP POST request.  NOTE: this might be the same issue as CVE-2004-2463.
5, via a long value of the ide1:0.fileName parameter in the .vmx file of a virtual machine.  NOTE: third parties have disputed this issue
4, via a (1) javascript URI or an external (2) http
4," via unspecified """"writable form fields and hidden fields"
4, via a direct request to news/admin/planetnews.php.
2, via directory traversal sequences in the language cookie
3, by using edit_profile.php to upload a (1) avatar or (2) forum image attachment that has a .gif or .jpg extension
4, via a URL in the mosConfig_absolute_path parameter.
4, via (1) the judul_artikel parameter in teman.php and (2) the title of an article sent to admin
3, via the (1) name and (2) pesan parameters.
2, via the f parameter.
5, via a URL in the _PX_config[manager_path] parameter to (1) index.php
2, via the image parameter.
4, via (1) the email
2, via the fields[] parameter.
2, via certain manipulations related to the (1) searchdate and (2) folderids parameters.
2, via the (1) titel or (2) ausgabe parameters.
2, via the msgid parameter.
0, via format string specifiers in a player nickname.
5," via a long string in the (1) """"Process name"""""
2, via the Date parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
0, via the Date parameter in a Default op.
3, via unspecified vectors.
3, via unspecified vectors.
2, via the order parameter.
3, via large (1) DTM and (2) S3M files.
2, via the size specified in the package header of (1) CFF
4, via a crafted link and the administrator section.
1, via URL parameters
2, via the (1) login parameter in admin/cms/index.php
2, via the (1) frontsession COOKIE parameter and (2) view parameter in index.php
4," via a malformed .swf file that results in """"multiple improper memory access"""" errors."
4, via a malformed
0, by accessing the URL property of a TriEditDocument.TriEditDocument object before it has been initialized
2, via unspecified vectors
5, by redirecting a command's output to a file or folder
4, via a long hostname in a SIP request
2, via the artid parameter in a viewarticle op.
2, via the id_ads parameter in an EditAds op.
4, via a long (1) Album release date (MBE_ReleaseGetDate)
1, via unspecified vectors
4, via a .. (dot dot) sequence and trailing null (%00) byte in the language parameter in the advanced theme.
2, via the URL.
4, via a .. (dot dot) and encoded / (%2f) sequence in the URL.
0, by setting the Transition property on an uninitialized DXImageTransform.Microsoft.RevealTrans.1 ActiveX Object
2, use the library.
4, via (1) the city parameter in (a) insertmember.php
0, via the page_name parameter with an IMG tag containing a javascript URI in the SRC attribute.
4, via a modified page_name parameter
2, via directory traversal sequences in the GLOBALS[template] parameter
3, via unspecified vectors.
2," via the (1) itemfor (aka """"Who is this item for?"""") and (2) special (aka """"Special Instructions"""") parameters to item.php"
0, via the page_name parameter
4, via (1) the show parameter in codes-english.php and (2) the img parameter in picture.php
2, via the (1) name
2, via the (1) name
2, via the toid parameter.
2, via the toid parameter.
5, via a ' (single quote) in the p parameter
4, via a .. (dot dot) in the directory and filename in a PropsResponse (PackageType) request.
2, via the url parameter to (1) player.php or (2) popup.php.
4, via (1) a direct request to paginate.php or (2) an invalid p parameter to player.php
5, by using prctl with PR_SET_DUMPABLE in a way that causes /proc/self/environ to become setuid root.
4, via shell metacharacters in a filename that is committed.
4, via a crafted application that leverages the mishandling of invalid Register Stack Engine (RSE) state.
4," via a request with a trailing """"#"""" character.  NOTE: as of 20060715"
4, via crafted (1) Works
1, via crafted Excel files.
4, via a crafted PowerPoint file.  NOTE: due to the lack of available details as of 20060717
4, via a crafted PowerPoint file
4, via a DXImageTransform.Microsoft.Gradient ActiveX object with a long (1) StartColorStr or (2) EndColorStr property.
0, by accessing the object references of a FolderItem ActiveX object
0, by setting the location or URL property of a MHTMLFile ActiveX object.
3, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the fid parameter. NOTE: this issue has been disputed by the vendor
5, via a long string in a request to TCP port 515.
4, via unknown vectors.
2, by calling the replaceChild method on a DOM object
5, via a large owner value
4, via a large number handled by the id_req_handler function.
1, by uploading files with a double extension and directly accessing the file in the images directory
2, by changing certain properties of the window navigator object (window.navigator) that are accessed when Java starts up
2, via unspecified attack vectors in the authentication process.
2, via the phpage parameter.
2, via the (1) refererpagesfilter
2, via the (1) year
4, via a URL in the root_path parameter.
4, via a URL in the path_to_calendar parameter
4, via a URL in the tpath parameter to cn_config.php.  NOTE: the news.php vector is already covered by CVE-2005-0859.
2, via the id parameter.
5," via a URL in the myadmindir parameter.  NOTE: this issue has been disputed by a third party that claims that """" the myadmindir variable is set before any GET variables are processed."""""
4, via a URL in the absolute_path parameter to (1) components/com_minibb.php or (2) components/minibb/index.php.
2, via the UserID parameter to (1) ignore-pm.php
4, via a URL in the lm_path parameter.  NOTE: the vendor has disputed this issue to SecurityTracker
0, via commands enclosed with escaped backticks (\`) in an argument to the (1) mount-loop (mount-loop.c) or (2) umount-loop (umount-loop.c) command
2," via unspecified vectors involving (1) the alias function and (2) """"directory operations""""."
2, via long arguments to mshta.exe.
3, via certain RegSaveKey
2, via the (1) gr_1_id
2," via unspecified vectors that lead to """"kernel data structure corruption"""" that can trigger a system panic"
4, via a large negative integer argument to the getDataMemberName method of a OWC11.DataSourceControl.11 object
4, via a 0x7fffffff argument to the setSlice method on a WebViewFolderIcon ActiveX object
4, via a form with a multipart/form-data encoding and a user-uploaded file.  NOTE: a third party has claimed that this issue might be related to the LiveHTTPHeaders extension.
4, via a URL in the m2f_root_path parameter to (1) m2f/m2f_phpbb204.php
4, via a URL in the mosConfig_absolute_path parameter.
2, via the file parameter.
4, via a crafted message.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the (1) hidemail
4, via a URL in the class_path parameter.
5, via a URL in the class_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
3, via empty (1) _GET[]
3, via unspecified vectors.
4, via a javascript URI with an SGML numeric character reference in the url BBCode tag
5," via a """"file///"""" URI in the sPath parameter to the Execute function."
2, via the id parameter.
4, via a direct request to phpPollAdmin.php3 with the poll_action parameter set to create.
2, via unspecified vectors
4, via a txtrating parameter with a score greater than the intended maximum of 10.
3, via the onerror attribute in an HTML IMG tag with a non-existent source file in txtcomment parameter
4, via a long argument to the (1) CWD
3, via the (1) pass and (2) pass2 parameters in (a) add.php or the (3) id parameter in (b) members/index.php.
2, via the (1) i_cat or (2) method parameters.
4, via a URL in the absolute_path parameter to (1) articles.php
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
3, via the CLIENT-IP HTTP header ($_SERVER['HTTP_CLIENT_IP'] variable)
4, via a URL in the page parameter.
5, via a URL in the page parameter.
2, via unspecified vectors involving the event port API.
1," via unspecified vectors involving (1) the /net mount point and (2) the """"-hosts"""" map in a mount point."
4, via (1) a long unit name in Net::recv_add_unit
5, via a keysize or valsize that is inconsistent with the packet size
4, via a large keysize or valsize
2, via unspecified vectors involving the packet.c_str function.
5, via a URL in the SD_DIR parameter.
2, via the search field.  NOTE: the vendor has disputed this issue
2, via the (1) membercookie cookie in header.php and the (2) redirect parameter in misc.php.
2, via the login variable and certain other variables
2," via the """"new review"""" text box."
5, via a VCard attachment with a malformed base64 field
4, via a PAC script that sets the FindProxyForURL function to an eval method on a privileged object.
4, via a crafted file with a large amount of extra data.
2, via an encoded SCRIPT element in an e-mail message with the UTF-7 character set
2, via the GWAP.version parameter.
2," via an HTTP POST request containing a parameter name starting with """"TYPEOF""""."
2, via the page parameter.
2, via the (1) lang parameter in (a) index_list.php and (2) year
2, via the d parameter.
2, via the b parameter.
4, via a 0 variable count argument to the sysinfo system call
2, via the (1) user_login
2, via the blog parameter.
1, by using commas
4, via a delete_user action.
2,upload files with arbitrary extensions to
2, via the id parameter.
4, via a URL with a modified entry ID.
5, via a semicolon (;) preceding a filename with a mapped extension
2, via an HTML message.
5, via a URL in the absolute_path parameter.
4, via a long argument to the LIST command
4, via a long filename in a LHA archive.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the URI (REQUEST_URI environment variable)
4, via a (1) long message handled by the recvTextMessage function in multiplay.c or a (2) long filename handled by NETrecvFile function in netplay/netplay.c.
2, via the old_prefix parameter.
2," via the (1) name or (2) comment (""""text"""") fields."
2, via the DllMain or _init function in a library
4, via unspecified vectors.
4, via (1) the getname function
2, via the (1) LOTOFILE and (2) trl_tracefile_set functions
2," via the (1) """"SET DEBUG FILE"""" SQL command"
2, via the SQLIDEBUG environment variable (envariable).
4, via a malformed Smart Tag.
4, via a GRAOUMF TRACKER (GT2) module file with a large (0xffffffff) comment length value in an XCOM chunk.
0, via the id parameter in a request for the top-level URI.  NOTE: the id parameter in index.php
4, via a direct request to phpinfo.php
4, via (1) the tablewidth parameter in (a) counter.php; (2) the newdays parameter in (b) links.php; and the (3) tableborder
2, via the (1) offset and (2) limit parameters
2, via an encoded .. (dot dot) in the URL on TCP port 18264.
2, via the page parameter in a viewgallery action in a request for the top-level URI. NOTE: the start parameter/search action is already covered by CVE-2006-1807
4, via unspecified vectors.
1, by creating an NMSA.ASFSourceMediaDescription.1 ActiveX object with a long dispValue property.
0, by calling the Click method of the Internet.HHCtrl.1 ActiveX object before initializing the URL
1, by calling the stringToBinary function of the CEnroll.CEnroll.2 ActiveX object with a long second argument
2, via the name parameter.
2, via an email attachment with an LHA archive that contains a (1) file or (2) directory with a long LHA extended header
2, via the i_cat parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a cookie.
2, via the (1) post_id parameter in index.php and (2) search function.
5, by sending a crafted packet to the web administrative interface.
0, via format string specifiers in unspecified vectors involving output to the gout console.
2, via the week parameter.
4, via a URL in the css_path parameter in (1) help.php and (2) setup/header.php.
5, by bypassing client-side validation through disabling JavaScript when submitting an essay response
0, by iterating over any native function
4, via the search_query parameter.
4, via a URL in the cfg_racine parameter.
2, via the (1) news_id
4, via a direct request using a UTF-8 encoded URI.
4, via a URL in the chemin parameter.
4, via unspecified vectors.
4, via a long argument to the Files method.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) view or (2) start parameters to (a) viewfeedback.php or the (3) orderType parameter to (b) categories.php.
2, via the advsrc parameter.
4, via a URL in the base_datapath parameter.
4, via hex-encoded values in the a parameter.
4, via a URL in the mosConfig_live_site parameter.
4, via a long command line argument (filename).  NOTE: This may not be a vulnerability if Midirecord is not installed setuid.
2, via the cat parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the message body.
2, via an absolute pathname in the filePath parameter.
2, by specifying the file in the resource parameter
4, via a request without the (1) user
4, via a direct request for (1) edit_cat.php
4," via (1) the ar parameter in auction_room.php and (2) the u parameter in auction_store.php. NOTE: the auction_rating.php vector is already covered by CVE-2005-1234.  NOTE: the original disclosure states that the product name is """"PHP-Auction"""""
2, via unknown vectors that cause (1) qmaster or (2) execd to terminate.
3, via long (1) RGBExtraColor
4, via a (1) Forms.ListBox.1 or (2) Forms.ListBox.1 object with the ListWidth property set to (a) 0x7fffffff
0, by setting the background property of a DHTML element to a long http or https URL
1," via crafted HTML that triggers a """"memory management error"""" in WebKit"
4, via a URL in the mosConfig_absolute_path parameter.
2, via the query parameter.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the User-Agent HTTP header.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a long argument to the PASS command.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the gallery parameter.
4, via a .. (dot dot) in the gallery parameter in a (1) avatar or (2) do_avatar action.
5, via a URL in the absolute_path parameter to (1) news.php
2, via the (1) Name
4, via a URL in the insPath parameter.
4, via (1) the Search Tasks system
4, via a URL in the mosConfig_absolute_path parameter.
2, via the (1) site_name parameter to (a) signup.php
4, via a URL in the cfg_root parameter.
4, via a URL in the myng_root parameter.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the tk parameter.
5," by using """"programmatic access"""" to the adminAPI instead of the ColdFusion Administrator."
4, via a URL in the mosConfig_absolute_path parameter.
5, via a URL in the mosConfig_absolute_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the pathtohomedir parameter.
4, by adding a new file to a crafted ZIP archive that already contains a file with a long name.
4, via a URL in the NL_PATH parameter.
4, via a URL in the (1) dwl_download_path or (2) dwl_include_path parameters.
4, via a URL in the news_include_path parameter.
5, via a URL in the sb_include_path parameter.
4, via a URL in the file_path parameter.
4, via a URL in the tsep_config[absPath] parameter.
0, via the u2uid parameter to u2u.php
2, via the (1) desc or (2) asc parameters.
4, via a URL in the subdir parameter.
4, via a URL in the subdir parameter.
4, via a .. (dot dot) in the file parameter.
5, via (1) a certain malformed PKGF_ackreq packet
4, via a URL in the GB_PATH parameter.
4, via a URL in the faq_path parameter.
2, via the page parameter.
2, via the page parameter.  NOTE: other vectors are covered by CVE-2006-3139.
4, via a URL in the SITE_Path parameter to (1) poll/poll.php or (2) poll/view_polls.php.  NOTE: the menu_dx.php vector is already covered by CVE-2005-2687.
2, via the search_string parameter.
4, via a crafted UPX packed file containing sections with large rsize values.
0, by identifying collisions using a birthday attack on the custom padding mechanism for ECB mode encryption.
4," via """"requests for capabilities from higher-level protocol drivers or user-level applications"""" involving crafted frames"
4, via a negative LoadAddr value in a HES file
2, via the (1) bday_day
5," via a URL in the (1) root_path parameter in usr/extensions/get_infochannel.inc.php and the (2) GLOBALS[""""root_path""""] parameter in usr/extensions/get_tree.inc.php."
4, via a crafted UDP SIP packet.
2, via unspecified attack vectors
2, via certain SIP messages
4, via a URL in the DIR parameter.
2, via the Referer HTTP header.
5, via a URL in the phpbb_root_path parameter.
4, via a crafted packet.
2, via the (1) gastname or (2) gastwohnort parameters.
2, via the (1) gastname
5, via a URL in the myevent_path parameter.
2, via the (1) title
4, via a query that only specifies the viewdate mode
4, via a URL in the BEAUT_PATH parameter.
4, via a URL in the pfad parameter.
2, via the username parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via unknown attack vectors.
4, via a URL in the installed_config_file parameter.
4, via a URL in the abs_path parameter.
5, via a URL in the abs_path parameter to (1) admin/index.php
4, via a URL in the Vb8878b936c2bd8ae0cab parameter.
4, via a URL in the (1) Vb8878b936c2bd8ae0cab parameter to (a) inc/sett_style.php or (b) inc/sett_smilies.php; or the (2) Vb6c4d0e18a204a63b38f
4, via a URL in the tsep_config[absPath] parameter to (1) include/colorswitch.php
2, via the (1) username or (2) password parameters.  NOTE: portions of these details are obtained from third party information.
2, via the keyw parameter when performing a search.  NOTE: some details are obtained from third party information.
4, via a URL in the cfg_dir parameter.
4, via a URL in the GLOBALS[root_path] parameter.
5, via a URL in the (1) root_path parameter to (a) usr/extensions/get_blog_infochannel.inc.php
2, via the id parameter.  NOTE: it was later reported reported that 2.0 is also affected.
4, via a URL in the (1) root_path parameter to (a) usr/extensions/get_calendar.inc.php or the (2) GLOBALS[root_path] parameter to (b) usr/extensions/get_tree.inc.php.
2, via certain images that trigger a divide-by-zero error
2, via the URL
2, via the (1) m and (2) c parameters in index.php
0, via format string specifiers in a filename.
2, via the (1) haber_id parameter to haber_detay.asp
4, via a URL in the base_dir parameter to (1) login.php
4, via a URL in the INIT_PATH parameter to (1) lib/folder.class.php
4, via a URL in the INIT_PATH parameter to (1) lib/access.inc.php
4," via shell metacharacters (""""|"""" pipe symbol) in the file parameter.  NOTE: the attack can be extended to arbitrary commands by the presence of CVE-2006-4000."
4, via a URL in the myevent_path parameter
4, via a URL in the tsep_config[absPath] parameter to pagenavigation.php
2, via the keywords parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the username parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) Subject
2," via the """"From: part of the comment post"
2, via the (1) Name or (2) Comment section.
2, via certain SIG queries
4, via a flood of recursive queries
4, via a crafted RADIUS Access-Request packet.  NOTE: it has been reported that at least one issue is a heap-based buffer overflow involving the Tunnel-Password attribute.
4, via a crafted RADIUS Accounting-Request packet.
4, via a URL in the conf[classpath] parameter.
4, via a URL in the file_newsportal parameter.
4," via """"password input."""""
2, via the (1) search field or (2) an e-mail message.
4, via a comment title.
5, via a job or resume search.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a File Upload request with an HTTP header that modifies the LOAD_PATH variable
5, via a URL that is not properly handled in the routing code
2, via the REP_INC parameter.
2, via the idsite parameter.
4, via a long filename in (1) an LHZ archive
2, via the (1) Temp_entered_login or (2) Temp_entered_email parameters to (a) gc.php
2, via the Temp_entered_password parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via unspecified vectors.
4, via a URL in the path parameter.
4, via a modified id parameter to guestbook.php.
4, via a URL in the url_index parameter.
2, via the DEBUG_FILE environment variable
4, via a large nickname
5, by sending a client message before providing the nickname
2, via format string specifiers that are not properly handled when calling the (1) privmsg() or (2) pubmsg functions from (a) cmd.user.c
4, via a URL in the component_dir parameter.
2, via certain HTTP requests.  NOTE: This information is based upon a vague initial disclosure. Details will be updated after the grace period has ended.
4, via a URL in the calpath parameter.  NOTE: this issue has been disputed by a third party
2, via unspecified vectors related to (1) the log file
1, via crafted HLP files.
0, via unspecified vectors related to ifconfig and either netstat or SNMP queries.
4, via modified .. (dot dot) sequences in the URL
2, via the (1) sortby and (2) sortorder parameters.
2, via the n parameter.
1, via TCP packets with bad checksums.
3, via large (1) bytes_per_pixel
2, via certain operations involving truncated files
0, via format string specifiers that are not properly handled in a set_var function call in (1) tcl_cmds.c and (2) tcl_core.c.
4, via a URL in the pathtotemplate parameter.  NOTE: a third party claims that the researcher is incorrect
2, via the categories parameter.
4, via a URL in the page parameter.
4, via a URL in the _BASE parameter to scripts in Classes/ including (1) Evenement.php
4, via a URL in the glConf[path_library] parameter to (1) BaseCommand.php
4, via a .. (dot dot) in the category parameter.
2, via the search field.
4, via a URL in the fname parameter.  NOTE: another researcher was unable to find a way to execute code after including it via a URL.  CVE analysis as of 20060816 was inconclusive.
4, via a URL in the ficStyle parameter.
5, via unspecified vectors.
4, via a URL in the image parameter to (1) image.php or (2) image.php2.
2, via an image with many EXIF components
1, via malformed queries
4, via a crafted NCP over IP packet that causes NCP to read more data than intended.
3, via unknown vectors.
2, via unspecified vectors
4, via a URL in the dir[inc] parameter in (1) index.php
4, via a .. (dot dot) in the name parameter for a modload operation.
2, via directory traversal sequences in the langfilenew parameter
0, by instantiating COM objects as ActiveX controls
2, via unspecified vectors involving Session Initiation Protocol (SIP) fixup commands
4, via a URL in the templates_dir parameter.
2, via the URL
1, via unspecified vectors related to request processing.
2, via unspecified vectors related to authentication and input validation.
2, via the pid parameter.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the (1) path_pre parameter in lib/specialdays.php and the (2) lib_path parameter in lib/dbman_filter.inc.php.
4, via a URL in the rootdir parameter to /classes/ scripts including (1) Cache.class.php
4, via a URL in the fileloc parameter to (1) content/content.php or (2) /inc/indexhead.php.
4, via a .. (dot dot) in the backup parameter to edit.php.
4, via a URL in the cabsolute_path parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the root_path parameter.
4, via (1) GPC data to the ipn_get_stored_session function in ipn_main_handler.php
4, via a URL in the module_dir parameter
2, via directory traversal sequences in the typefilter parameter.
0, by instantiating it as an ActiveX object in Internet Explorer 6.0 SP1 on Microsoft Windows 2003 EE SP1 CN.
2, via the (1) User.html
4, via a long filename parameter to the RunEgatherer method.
1," via unspecified vectors related to """"JSP source code exposure"""" (PK23475)"
2, via the year parameter.  NOTE: The page parameter vector is covered by CVE-2006-4009.
2, via unknown attack vectors in the management interface.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the (1) lizge or (2) bade parameters.
4, via a crafted CUR image file.
4, via a URL in the baseDir parameter.
4, via a crafted SMP file.
4, via a URL in the (1) shopid parameter to (a) s01.php
4, via a URL in the _sysSessionPath parameter.
0, via the cat parameter in category mode.
4, via a URL in the CRM_inc parameter.
4, via a URL in the fpath parameter.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
1, via crafted arguments to the -H flag.
4, via a malformed TCP DNS query that prevents Recursor from properly calculating the TCP DNS query length.
4, via a CNAME record with a zero TTL
2, via multiple Javascript timed events that load a deeply nested XML file
4, via unspecified vectors.
0, via multiple unspecified vectors related to folder names
4, via (1) C:\ (Windows drive letter)
2, via the path parameter.  NOTE: this might be resultant from a directory traversal vulnerability.
4, via a .. (dot dot) in the path parameter.
3, via multiple vectors including (1) a long pathname that is not properly handled during file list parsing
4, via a URL in the mosConfig_absolute_path parameter in (1) mod_phpshop.php
4, via a URL in the mosConfig_absolute_path parameter in (1) install.lmtg_homepage.php and (2) mtg_homepage.php.  NOTE: this issue has been disputed by a third party
2, via the (1) oid parameter in modules/gateway/Protx/confirmed.php and the (2) x_invoice_num parameter in modules/gateway/Authorize/confirmed.php.
2, via the (1) file
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: this issue has been disputed by third party researchers
4, via a URL in the mosConfig_absolute_path parameter.
5, via a URL in the step parameter.  NOTE: the vendor has disputed this vulnerability
4, via a large number of requests to register.php.  NOTE: the vendor has disputed this vulnerability
0, by uploading an attachment with a .pdf extension that contains JavaScript
5, via a crafted PPT document
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the TNLIB_DIR parameter to novalib/class.novaEdit.mysql.php.
4, via a URL in the TNLIB_DIR parameter to (1) include/novalib/class.novaAdmin.mysql.php and (2) novalib/class.novaRead.mysql.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the mainnav parameter.
2, via the icon_topic parameter.
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: this issue has been disputed by a third party
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the IP parameter.
4, via a URL in the spaw_dir parameter in dialogs/ scripts including (1) a.php
2, via the id parameter.
4, via a URL in the CONFIG[script_path] parameter.  NOTE: it was later reported that 2.1.5 is also affected.
5, via a URL in the mosConfig_absolute_path parameter.  NOTE: this issue has been disputed by third parties who state that contentpublisher.php protects against direct request in the most recent version.  The original researcher is known to be frequently inaccurate.
5, via a URL in the (1) phphtmllib parameter to (a) phphtmllib/includes.php; tag_utils/ scripts including (b) divtag_utils.php
4, via a URL in the mosConfig_live_site parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the _PM_[path][handler] parameter.
2, via certain Address Resolution Protocol (ARP) packets.
2, via the (1) dir parameter in dohtaccess.html
4, via a .. (dot dot) in the filename parameter.
2, via the email parameter.
2, via the mosConfig_absolute_path parameter.
1, via id array parameters.
4, via a .. (dot dot) in unspecified parameters in the (1) tep_cache_also_purchased
2, via the highlight parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the id parameter.
5, via a long Color attribute in multiple DirectX Media Image DirectX Transforms ActiveX COM Objects from (a) dxtmsft.dll and (b) dxtmsft3.dll
1, via unknown vectors related to TCP fusion (do_tcp_fusion).
4, via a long database name when connecting via a WebDBM client.
2, via unspecified vectors
1, via unspecified vectors involving profiles that permit running format with elevated privileges
4, via a crafted FTP response
2, via the folder parameter in multiple files in the plugins directory
4, via a malformed ESM agent request.
5, by running a program called sshd
4, via a GIF image that contains URL-encoded Javascript.
2, via long SIZE commands.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the url parameter.
2, via the (1) title
4, via a URL in the CONFIG[gameroot] parameter to (1) core/includes/security.inc.php
2, via unspecified vectors in (1) mail.cgi and (2) query.cgi.
4, via a crafted audit endpoint (AUEP) response.
4, via a URL in the mosConfig_absolute_path parameter.
5, via a URL in the tcms_administer_site parameter to an unspecified script
2, via the id parameter.
2, via the id parameter.
4, via a URL in the check_path parameter.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the src parameter.
2, via the read parameter.
5, via a ZIP archive containing a long filename.
4, via unspecified vectors.
2, via the (1) uname or (2) SEmail parameters.
2, via the ps parameter.
4, via a URL in the cropimagedir parameter.
2, via long strings that contain '@' characters in the (1) USER and (2) APOP commands.
4, via a URL in the phpbb_root_path parameter in (1) includes/functions_mod_user.php or (2) includes/functions_portal.php.
5, via a URL in the root_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the start parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the lm_absolute_path parameter.
4, via a URL in the lvc_include_dir parameter.
4, via a crafted ANI image file
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: another researcher has disputed this issue
2, via unspecified vectors
1, via unspecified vectors
4, via a query with multiupdate and subselects.
4, via a crafted H.264 movie.
4, via a crafted QuickTime movie.
2, via the COLOR_64 chunk in a FLIC (FLC) movie.
4, via a crafted SGI image.
4, via a crafted H.264 movie
4, via a crafted FlashPix file.
4, via a crafted FlashPix (FPX) file
1, by using encryption without authentication
4, via a malformed JPEG2000 image.
4," via a crafted PICT image that is not properly handled by a certain """"unsupported QuickDraw operation."""""
1, via crafted service requests.
1, via crafted font files.
4, via a crafted FTP URI.
0, by browsing directories containing crafted .DS_Store files.
0, via certain public key values in an X.509 certificate that requires extra resources during signature verification.  NOTE: this issue may be similar to CVE-2006-2940.
4, via a crafted HTML file
0, by modifying the path to point to a malicious (1) chdev
2, via the user_avatar parameter.
0, via the lng parameter
2, via the note_id parameter.
4," via """".."""" sequences in the lang parameter."
2, via the D_REFRESH_URL parameter.
4, via a URL in the relative_script_path parameter
5, via a URL in the (1) GLOBALS[_BIGACE][DIR][admin] parameter in (a) system/command/admin.cmd.php
2, via the _CCFG[_PKG_PATH_INCL] parameter.
2, via the _CCFG[_PKG_PATH_INCL] parameter in coin_includes scripts including (1) api.php
4, via a URL in the PSA_PATH parameter.
2, by setting the (1) adminloggedin
4, via a URL in the template parameter.  NOTE: CVE disputes this claim
5, via a URL in the _PM_[path][handler] parameter
5, by modifying (1) the HTTP User-Agent header or (2) the behavior of the TCP/IP stack.  NOTE: the vendor has disputed the severity of this issue
5, via a (1) empty or (2) crafted PHP session identifier (PHPSESSID).
4, via a .. (dot dot) sequence in the final component of the PHP session identifier (PHPSESSID).  NOTE: in some cases
4," via a long """"header line"""""
2, via the query string in (1) tags.php
4, via a URL in the path[ShowProcessHandle] parameter.
4, via a URL in the path[ShowProcessHandle] parameter to (1) home.php or (2) impressum.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the cat_name parameter
4, via a URL in the config[BASE_DIR] parameter.
2, via the (1) tid parameter in the (a) todo/view (aka TODO List View)
4, via a URL in the cutepath parameter to (1) show_news.php or (2) search.php.  NOTE: CVE analysis as of 20060829 has not identified any scenarios in which these vectors could result in remote file inclusion.
0, via a Spline function call whose first argument specifies a large number of points.
4, via a GIF image that contains URL-encoded Javascript
2, via the (1) User-Agent HTTP header in tag.php
2," via unspecified vectors involving """"table markups""""."
2, via the q parameter.
1, via unspecified vectors involving the PRIVMSG command.  NOTE: the vendor has disputed this vulnerability
4, via a URL in the include_path parameter.
5, via a URL in the include_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a .. (dot dot) sequence and trailing null (%00) byte in the GLOBALS[phpgw_info][user][preferences][common][country] parameter.
4, via a 1 byte header size specified in the USB string descriptor.
4, via unspecified vectors.
0, via the pwd parameter (aka the Password field).
3, via unspecified vectors.
1, via unknown vectors involving the (1) do_pdf command and the (2) emailform com_content task.
2, via unspecified parameters in (1) Admin Module Manager
2, via an empty GLOBALS[rootdp] parameter and an ftps URL in the (1) GLOBALS[admin_home] parameter in (a) diary/event_list.php
2, via the groupname parameter.
2, via the subgroupname parameter.
2, via JavaScript in an attribute value that is not in the blacklist
4, via a GIF file with input_code_size greater than MAX_LWZ_BITS
5, via (1) a URL in the config[include_dir] parameter in actions/ipn.php or (2) an FTP path in the config[plugin_dir] parameter in include/initPlugins.php.
5, via a .. (dot dot) sequence via the id parameter in (1) scripts/cbag/ag.exe or (2) scripts/s360v2/s360.exe.
0, by instantiating certain Visual Studio 6.0 ActiveX COM Objects in Internet Explorer
0, by instantiating certain Windows 2000 ActiveX COM Objects including (1) ciodm.dll
2, via the comment parameter.
2, via the id parameter.
5, via a URL in the chemin parameter
2, via the (1) about
2, via the (1) about
4," via a direct request to the """"Administration Area"""" script."
2, via the logo parameter.
2, via the (1) c and (2) l parameters.
4, via a CRLF sequence in the url parameter.
2, via unspecified vectors
1, via crafted TIFF images. NOTE: due to lack of details
4, via a crafted request.
4, via a crafted request containing a value that is larger than the number of objects transmitted
4, via a crafted HTTP POST request to TCP port 8300 with a modified val parameter
5, via a PT_LWPINFO ptrace command with a large negative data value that satisfies a signed maximum value check but is used in an unsigned copyout function call.
5, via a long TREE parameter in an HTTP POST
4, via a DNS request with a self-referencing compressed name pointer
1, via crafted length values in (1) DICOM
4, via unspecified vectors.
2, via the (1) login or (2) password parameters.  NOTE: some of these details are obtained from third party information.
2, via the (1) recherche parameter in recherchemembre.php and the (2) email parameter in test.php.
2, via the recherche parameter.
0, via the aifon parameter
4, via a URL in the lpref parameter.
4, via a URL in the context[path_to_root] parameter.
2, via the _PX_config[manager_path] parameter to (1) articles.php
2, via an SCTP socket with a certain SO_LINGER value
2, via the podpis parameter.
2, via the id parameter.
2, via the (1) game parameter in players mode
2, via the _SERVER parameter in (1) admin/avatar.php
4, by attempting to add a user with a ' (single quote) character in the name
2, via the showsource function.  NOTE: this issue is not a vulnerability in standard distributions
5," via .. (dot dot) sequences in the format parameter with a leading """"."""""
4, via (1) the file specified as the value of the format parameter
2, via the RSS feed.
5, via a URL in the mosConfig_absolute_path parameter.
2, via unspecified vectors involving an HTML document that references the CLSID of the control.
4, via a URL in the mosConfig_absolute_path parameter. NOTE: another researcher has stated that the product distribution does not include an index.php file.  Also
4, via a URL in the type parameter.  NOTE: another researcher has stated that an attacker cannot control the type parameter.  As of 20060901
4, via a URL in the context[path_to_root] parameter in (1) articles/populate.php
0, via the myh_op parameter to modules.php.
2, via the cur_cat parameter.
2, via certain UTF8 sequences.
2, via the (1) lastname
0, by uploading the HTML file with a GIF or JPG extension
1, via Javascript events in the (1) email
4, via a .. (dot dot) in the language parameter.
0," by setting the mode parameter to """"confirm""""."
2, via unspecified vectors
5, via a URL in the dir[inc] parameter in (1) inc/cmses/aedatingCMS.php
2, via the login and password parameters to admin/insert_admin.php.
2, via the id2 parameter.  NOTE: this can be leveraged with other Tr Forum vulnerabilities to allow unauthenticated attackers to gain privileges.
4, via a URL in the x_admindir parameter.
0, via the uid parameter
4," via """">"""" characters in the id parameter"
2, via the page parameter.
4, via a URL in the include_location parameter in (1) confirm.php or (2) login.php.  NOTE: the include_location parameter to index.php is already covered by CVE-2005-1681.
2, via the YID parameter.
2, via the (1) go parameter and (2) id parameter in a rate action.
2, via the user parameter.
2, via the id parameter.
4, via a filepath parameter that contains a filename with a .php extension
4, via a null password.
2, via the _incMgr parameter.
2, via the adodb parameter.
2, via the (1) id_temas parameter in busqueda_tema.php
2, by setting the ID_ADMIN and SUPER_ADMIN parameters to 1.
2, via the (1) cadena parameter in busqueda.php and the (2) email parameter in lista.php.
2, via unspecified vectors
2, via the RepId parameter.
1, via unspecified vectors involving (1) IPSec replay windows and (2) the use of vulnerable versions of ClamAV before 0.88.4.  NOTE: it is possible that vector 2 is related to CVE-2006-4018.
4," via a """"Shatter"""" style attack on the (1) IParam parameter"
4, via a URL in the page parameter.
4, via an SNDU length of 0 in a ULE packet.
4, via CRLF sequences in the URI.
4, via a crafted LHA file that contains extended headers with file and directory names whose concatenation triggers the overflow.
1, via unspecified vectors when handling comments.
4, via a URL in the path parameter.
0, via the UserID parameter
2, via directory traversal sequences in the Directory parameter
4, via a URL in the PathNews parameter in (1) header.php or (2) news.php.  NOTE: portions of these details are obtained from third party information.
4, via a URL in the PathNews parameter.
4, via unspecified vectors.
2, via the kat parameter.
2, via the id_joueur parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
5, via a URL in the repmod parameter.
4, via unspecified vectors.
4, via a URL in the sndir parameter.
4, via a URL in the bnrep parameter.
4, via a URL in the bnrep parameter.
1, via encoded format string specifiers in the query string.
4, via a URL in the spaw_root parameter.  NOTE: CVE analysis suggests that this issue is actually in a third party product
4, via the (1) title and (2) description elements within an item element in an RSS feed.
2, via an inconsistent length field of a Message in a 0x2711 Type-Length-Value (TLV) type.
5, via a URL in the phpbb_root_path parameter.
0, via the ind parameter
4, via a URL in the (1) ide parameter in (a) article.php; or the (2) pwfile parameter in (b) delete.php
2, via the (1) uid parameter in (a) class/sessions.class.php
0, via the task_id parameter in an edit_task command.
4, via a URL in the dir_path parameter in (1) includes/cart.inc.php or (2) extras/ext_cats.php.
2, via the X-FORWARDED-FOR HTTP header
4, via unspecified vectors.
2, via the sourcedir parameter.  NOTE: this issue was disputed by a third-party researcher who stated that the _REQUEST parameters were dynamically unset at the beginning of the file.  Another researcher noted
2, via the _NE[AbsPath] parameter in (1) install.php and (2) migrateNE2toNE3.php.
4, via a .. (dot dot) sequence in the file parameter.
1, via unspecified vectors involving (1) malformed WMI CIM server requests and (2) malformed packets.
4, via HTTP TRACE.
4, via a crafted Web page.
1, via crafted layout combinations involving DIV tags and HTML CSS float properties that trigger memory corruption
4, via NetrJoinDomain2 RPC messages with a long hostname.
5," via a crafted file with a """"/"""" (slash) character in the filename of the Command Line property"
5, via a crafted string in a Word file
4, via a crafted URL
0, by instantiating dangerous objects
2, via the username parameter.
4, via a url BBCode tag that contains a javascript URI with an SGML numeric character reference and an embedded space
2, via the query string ($_SERVER[PHP_SELF]).
2, via the (1) act parameter in (a) help.php and (b) search.php
2, via the s parameter.
2, via an Atom 1.0 feed
2, via an Atom 1.0 feed
3, via JavaScript in a content:encoded element within an item element in an RSS feed
4, via a URL in the fpath parameter.
2, via the id parameter.
4, via a URL in the racine parameter.
4, via unspecified vectors.
2, via the (1) prenom
4, via a URL in the path_to_folder parameter.
4, via a .. (dot dot) sequence and trailing null (%00) byte in the language Cookie parameter
4, via a URL in the root_path parameter to (1) index.php and possibly (2) collector.php.
2, via unspecified vectors involving a crafted command.
1, via unspecified vectors involving a ColdFusion error page.
2, via an unspecified terminal parameter value containing ../ (dot dot slash).
2, via the (1) pid and (2) where parameters.
4, via a direct request for (1) rss_fetch.inc.php or (2) rss_parse.inc.php
2, via the (1) adminname and (2) adminpass parameters.  NOTE: some of these details are obtained from third party information.
2, via the item parameter.  NOTE: The view vector is already covered by CVE-2006-3586.2.
4, via a URL in the includes_path parameter.  NOTE: The relative_script_path vector is already covered by CVE-2006-2270.
4, via a direct request for certain files
2, via the svr_rootPhpStart parameter.
2, via the msg parameter.
4, via a direct request for (1) 404.php
4, via a URL in the l parameter.
4, via (1) the id parameter in delete.php and (2) the error parameter in error.php.
2, via the (1) xagent
2, via the include_location parameter in (1) activate.php
2, via the errcode parameter.
4, via a query to the engine module
4, via a .. (dot dot) in the lang parameter.
2, via the album parameter
2, via the letter parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the letter parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) linkopentype
4, via a web feed
4, via a web feed
4, via a web feed
4, via a URL in the include_path parameter.
5, via a long string in the username field in the login window.
4, via a .. (dot dot) in the ide parameter.
5, via a .. (dot dot) sequence in the ide parameter in modify.php and (2) write to arbitrary local files via a .. sequence in the var parameter in add_go.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) description
4, via a URL in the abs_pfad parameter.
4, via a URL in the skiny parameter.
2, via the nb_connecte parameter.
4, via a flood of traffic on the LAN.
5, by sending a VTP version 1 summary frame with a VTP version field value of 2.
5, by sending a VTP update with a revision value of 0x7FFFFFFF
4, via a long VLAN name in a VTP type 2 summary advertisement.
4, via a crafted URL
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
5, by sending a crafted packet to port 69/UDP
2, via unspecified parameters to (1) doc/index.php or (2) files/index.php.
2, via the format parameter as stored in the $blogEntry variable
4, via (1) help.php and (2) other unspecified vectors involving scheduled backups.
2, via the logging functionality
4, via a long project name in an open_movie_editor_project XML tag.
2, via the query string (PATH_INFO) in (1) contact.php
4, via unspecified vectors.
0, via the sortorder parameter (strtopicsortord variable).
4, via a JavaScript event in a url BBcode tag in the cjmsg parameter.
4," via a crafted AVI file and """"bad indexes"""""
0, via multiple unspecified vectors in (1) dtsdec.c
1," via unspecified vectors involving certain environment variables and """"code injection."""""
4, via a crafted (1) ARGB (loader_argb.c)
4, via a long URL in a tag (long link address).
4, via unspecified vectors.
2, via the (1) query or (2) page parameters.
4, via a URL in the script_path parameter.
4, via a URL in the set[include_path] parameter.
4, via a URL in the root parameter.
4, via a URL in the art parameter to (1) admin.php
4, via a URL in the PP_PATH parameter.
2, via the (1) blog-category-description
0, by sending an HTTP request with a certain value of blogTemplate.
4, via a URL in the pagename parameter.
4, via a direct request to (1) footer.php
2, via the username parameter.  NOTE: The lostpassword.php and calendar.php vectors are already covered by CVE-2005-3365
4, via a URL in the root parameter in (1) library/lib.php and (2) library/editor/editor.php.  NOTE: the same primary issue can be used for full path disclosure with an invalid parameter that reveals the installation path in an error message.
2, via the (1) root_url and (2) dcp_version parameters in (a) admin/inc/footer.inc.php
5, via a file that is compressed with Petite and contains a large number of sections.
5," via unspecified """"code sequences"""" that bypass the protection scheme."
4, via a URL in the tc_config[app_root] parameter.
4, via long (1) XCRC
5, via a URL in the REP_CLASS parameter to (1) index.php
4, via a URL in the abspath parameter.
4, via a URL in the gBRootPath parameter.
5, via a URL in the gBRootPath parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the OrderBy parameter.
0, via the id parameter in kategorihaberx.asp.
4, via a crafted PPT document
3, via the (1) name
2, via the (1) username and (2) form_codeword (aka the Password field) parameters.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a filename with a double extension in the contact_attach parameter in a contact option in index.php
2, via the (1) TxtUser (aka Username) and (2) TxtPass (aka Password) parameters in login.asp.
2, via the srch parameter in the Search page.
4, via a URL in the langfile parameter in (1) login.php
4, via a URL in the RP_PATH parameter.
4, via a direct request to cfgphpquiz/install.php and other unspecified vectors.
2," via the t_id parameter when the go parameter is """"Forum."""""
4, via a URL in the gallery_path parameter.
2, via the order parameter.
2, via the keyword parameter.
4, via a direct request for (1) includes/functions.php
2, via the (1) language[Admin name] and (2) language[Admin back] parameters in (a) modules/blocks.php; the (3) language[Register title] and (4) language[Register title2] parameters in (b) modules/register.php; the (5) language[Mass-Email form title]
0, via (1) the user name during login
2, via multiple vectors that use the extract function
4, via a .. (dot dot) sequence in the template parameter.  NOTE: this was later reported to affect 1.0.1
2, via the user parameter.
4, via a direct request for (1) footer.php
4, via (1) the replyuser parameter in (a) pm.php; (2) the txt_jumpto parameter in (b) dropdown.php; the (3) txt_error and (4) txt_templatenotexist parameters in (c) template.php; the (5) split parameter in certain files
2, via the ProductID parameter.
0, via (1) the stylesheet parameter in Feed.php or (2) the message parameter in status.php.
4, via (1) the suser parameter in support/rightbar.php
4, via a URL in the root parameter in (1) footer.php and (2) header.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information. The bottom.php parameter is already covered by CVE-2006-4826.
0, by opening the program via the task bar and quickly clicking the Disable button
4, via a CSS-formatted HTML INPUT element within a DIV element that has a larger size than the INPUT.
4, via a URL in the dirroot parameter to (1) fckeditor/editor/filemanager/browser/default/connectors/php/connector.php or (2) fckeditor/editor/dialog/fck_link.php.
2, via the key parameter.
2, via the key parameter.
4, via a URL in the phpbb_root_path parameter
2, via the error parameter.
4, via a modified id parameter to delete.php.
5, via a URL in the appconf[rootpath] parameter.
4, via a URL in the id parameter
2, via the new_calendarid parameter.
5, via a URL to a non-existent file
4, via a URL containing an * (asterisk) wildcard
4, via a URL in the script parameter.
4, via a .. (dot dot) sequence and trailing null (%00) byte in the lang parameter
4," via """".."""" sequences in the ze_langue_02 cookie"
2, via the content parameter.
2, via the uye_id parameter.
2, via the pgname parameter.
5, via a URL in the (1) env_dir parameter to (a) blank.php
4, via a .. (dot dot) in the dir parameter.
5, via a URL in the cmsdir parameter to (1) starnet/modules/sn_allbum/slideshow.php
4, via a URL in the cmsdir parameter to starnet/modules/include/include.php. NOTE: some of these details are obtained from third party information.
2, via the what parameter.
2, by sending an invalid protocol sequence with USERAUTH_SUCCESS before NEWKEYS
4, via a find action.
4, via (1) the choose parameter in files/index.php and (2) the sub parameter in doc/index.php.
4, via a URL in the phpdns_basedir parameter.
4, via a URL in the _PHPLIB[libdir] parameter to (1) rechnung.php or (2) prepend.php.
1," via unspecified vectors related to """"lack of validation on output."""""
4, via a long file name. NOTE: the provenance of this information is unknown; the details are obtained from third party information.
1," via unspecified vectors related to """"lack of validation on output"
1, by sending an e-mail message with a JSP file attachment
4, via the (1) adr_sortkey and (2) adr_sortkey_desc parameters in the (a) addrlist servlet
4, via a .. (dot dot) sequence in the (1) savefolder and (2) savefilename parameters.
0, via the in_name parameter
2, via the email parameter to Admin.php.
2, via the m parameter
0, via the m parameter to index.php.
4, via a .. (dot dot) sequence via the phpExt parameter
4, via a .. (dot dot) sequence in the view parameter in the show_view action in the calendarmodule module
4, via (1) vectors that bypass the XSS protection mechanisms of the pnVarCleanFromInput function
4, via a QuickTime Media Link (QTL) file with an embed XML element and a qtnext parameter that identifies resources outside of the original domain.  NOTE: as of 20070912
4, via a URL in the GLOBALS[phpQRootDir] parameter.
4, via (1) the CatId parameter in a product category action in index.php or (2) the SearchWd parameter in an index search action in index.php.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the Inc_Dir parameter in (1) affiliates.php
4, via a URL in the Home_Path parameter.
4, via a direct request for inc/plugins/hello.php
2, via the navbits[][name] parameter.
4, via a long response to a PASV command.
4, via a direct request for (1) server.php
2, via the (a) upload
4, via (1) the univers parameter in score.php and (2) the quiz_id parameter in home.php
1, via modified configuration settings.
1, via crafted wide character UTF-32/UCS-4 strings to certain scripts.
4, by selecting a forged MAC address associated with an exception rule that (1) permits all non-Windows devices or (2) whitelists certain sets of Organizationally Unique Identifiers (OUIs).
4, via a URL in the GLOBALS[root_path] parameter in (1) adminpanel/includes/mailinglist/mlist_xls.php and (2) adminpanel/includes/add_forms/addmp3.php.  NOTE: the other vectors from the original disclosure are already covered by CVE-2006-3193.
4, via (1) the max_file_size_purdy parameter in adminpanel/includes/helpfiles/help_mp3.php
4, via a direct request for (1) certain files in the includes/content directory
4, via a URL in the globals[content_dir] parameter in (1) example-view/templates/article.php
4, via (1) the query string to relocate.php
4, via a direct request for (1) thumbnail.php
4, via a URL in the PP_PATH parameter in (1) addfav.php
2, by modifying CA auditor logs without detection by (1) modifying or deleting a <LOG BLOCK> and its signature from the XML log in a way that is not detected by the integrity check function that operates on the entire pool
4, via a URL in the mosConfig_absolute_path parameter in (1) wp-comments-post.php
4, via a URL in the _AMGconfig[cfg_serverpath] parameter in (1) modules/AllMyGuests/signin.php (aka the Nuke module) and (2) AllMyGuests/signin.php (aka the standalone).
4, via a malicious program file in %SYSTEMDRIVE%
4, via a URL in the mosConfig_absolute_path parameter.
2, via unknown vectors that cause the ATM subsystem to access the memory of socket buffers after they are freed (freed pointer dereference).
5, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
2, via unspecified vectors involving /etc/slip.login.
4, via a long directory path argument.
4, via a Trojan horse program involving uux.
4, via unspecified vectors.
2, via unspecified vectors
0, by modifying the path to point to a malicious mkdir program.
4, via a Trojan horse program
2, via unspecified vectors in (1) mysqladmin and (2) hooksadmin.
2, via an FTP URL in the url_hit parameter.
5, via a direct request for /search with an invalid client parameter
4, via a URL in the base_path parameter in manager/pages/ scripts including (1) AccountsPage.class.php
4, via a URL in (1) the root parameter in imgen.php
4, via a URL in the nbs parameter.
2, via the kategori parameter.
4, via a ../ (dot dot slash) in the file parameter in a chdir action.
2, via the sort parameter.
4, via a .. (dot dot) in the file parameter
5, via a URL in the url_phpartenaire parameter.
2, via the session parameter
4, via a .. (dot dot) in the URI.
4, via (1) the statusmsg parameter in RegisterPage.cgi or (2) a URI corresponding to a nonexistent file. NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4," via a MIME encoded URL in the sq_content_src parameter to access arbitrary sites with the server's IP address and conduct cross-site scripting (XSS) attacks.  NOTE: the researcher reports that """"The vendor does not consider this a vulnerability."""""
4, via a URL in the sbp parameter to (1) file_upload.php or (2) image_upload.php
4, via a URL in the mosConfig_absolute_path parameter in (1) configinsert.php
4," via URL-encoded """"%2e%2e/"""" sequences in the URI."
4, via a URL in the content_page parameter.
2, via the uye_nu parameter.
4, via a URL in the init_path parameter.
2, via the destination parameter in the Login view.
2, via the (1) gid parameter in details.php
0, via the Cat parameter to (1) dosearch.php
2, via the forgot parameter in the forgot mode.
4, via a URL in the content parameter.
4, via a URL in the temppath parameter.
0, by editing log entries in HTML mode.
2, via the (1) entryid parameter in comment.php
4, via a URL in the GLOBALS[config] parameter.  NOTE: this issue is disputed by CVE; analysis shows that the GLOBALS[config] variable is initialized before being used.
4, via a URL in the o parameter.
2, via the search parameter.
5, via a URL in the GLOBALS[fsinit][objpath] parameter.
1, via unspecified vectors involving (1) eyeNav and (2) system/baixar.php.
2, via the alert parameter.
2, via unspecified vectors related to an SSL client.
4, via a URL in the includes_path parameter in (1) admin/index.php
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the _SESSION[dirMain] parameter.
4, via a URL in the path_to_bt_dir parameter.
5, via a URL in the page parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a malformed Skype URL
2, via the nom_blog parameter
4, via a direct request to insere_base.php with modified (1) login and (2) pass parameters.  NOTE: this issue was claimed to be SQL injection by the original researcher
4, via a URL in the path parameter in (1) track.php or (2) connect.php.
4, via a URL in the ChatPath parameter.
5, via a URL in the file parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information. CVE disputes this vulnerability because the file variable is defined before use in a way that prevents arbitrary inclusion.
2, via the (1) mod or (2) action parameters in index.php
4, via unspecified vectors.
4, via a URL in the navigation_start parameter.
4, via a URL in the page parameter.
5, via a URL in the phpbb_root_path parameter
2, via the includesdir parameter.  NOTE: this issue is disputed by CVE on 20060927
2, via large w and h parameters
4, via a URL in the WN_BASEDIR parameter.
4, via a URL in the NWCONF_SYSTEM[server_path] parameter.
4," via a URL in the """"right"""" parameter."
2, via the templatesused parameter.
4, via a URL in (1) the init_path parameter to admin/testing/tests/0030_init_syntax.php
4, via (1) the user_name parameter in admin/forgot_pass.php
0, via the order_id parameter in (1) admin/print_order.php and (2) view_order.php; the (3) site_url and (4) la_search_home parameters and (5) certain language parameters in admin/nav.php; the (6) image parameter in admin/image.php; the (7) site_name
4, via a direct request for (1) link_navi.php or (2) spotlight.php
0, via the msg parameter
4, via a long HTTP GET request.
4, via a .. (dot dot) in the lan parameter to includes.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) ~urlmime or (2) ~command parameter
4, via a .. (dot dot) in the engine parameter
2, via the _REQUEST array
4, via a URL in the Application_Root parameter.
2, via the (1) admin_name or (2) admin_pass parameter in (a) admin/login.php
1, via unspecified vectors related to (1) index.php and (2) process_login.php.
2, via the hits parameter.
4," via (1) """"any field create name field"""" except """"create new group name"""" or (2) any description field."
4, via a URL in the (1) lib_path or (2) lang_path parameter in unspecified files
4, via a URL in the (1) target and (2) action parameters in window.php
5, via a URL in the file_name[] parameter.
4, via (1) the nr parameter in detail.php
2, via the nr parameter.
4, via (1) the message parameter
2, via the (1) name
4, via a URL in the rootagenda parameter to (1) agendaplace.php3
2," via attempted HTML injection into the """"new monitor description"""" field."
4, via a URL in the (1) open_box
4, via a URL in the (1) GLOBALS[thispath] or (2) GLOBALS[configdir] parameter.
4, via a theme[] array parameter to admin/doedittheme.php
4, via a direct request for cron/php/subscriptions.php
2, via the id parameter.
5, via a URL in the anp_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via long messages to the CheyenneDS Mailslot.
2, via the description_small parameter.
2, via the (1) page parameter in details.php or the (2) query parameter in search.php.
2, via the (1) id parameter in (a) funk.php
4, via a URL in the no_url parameter.
4, via a URL in the repertorylevel parameter including scripts in /forum/ including (1) search.php
4, via a .. (dot dot) in (1) the page parameter to shared/help.php or (2) the tab parameter to shared/header.php.
4, via unspecified vectors.
5, via a UTF-7 encoded URL that is returned in a large HTTP 404 error message without an explicit charset
4, via a URL in the templatefolder parameter.
2, via the config[pdf_module] parameter.
4, via a request to /spipe/pkg/ with a long source header.
0," via format string identifiers in the """"Management Console's Remote Client Install name search""""."
2, via unspecified vectors that trigger a kernel oops (null dereference) and a deadlock.
2, via unspecified vectors involving JavaScript.  NOTE: the vendor and original researchers have released a follow-up comment disputing the severity of this issue
4, via a long Content-Type header
2, via the (1) sortBy or (2) search parameters.
4, via a URL in the config[ppa_root_path] parameter.
4, via a URL in the s[phppath] parameter.
5, via a URL in the (1) BSX_LIBDIR parameter in scripts in /files/ including (a) abook.php3
2, via the query string.
2, via unspecified vectors
5, via unspecified vectors.
4," via """"the signature field of NTLM Type 1 messages""""."
1, via unspecified vectors involving crafted base64 encoded NTLM Type 3 messages
3, by using a combination of symlink
0," via parasitic public keys with large (1) """"public exponent"""" or (2) """"public modulus"""" values in X.509 certificates that require extra time to process when using RSA signature verification"
4, via a URL in the NWCONF_SYSTEM[server_path] parameter
4, via a URL in the target parameter in (1) change_preferences2.php
4, via a URL in the setup_folder parameter.
4, via a URL in the slogin parameter in the (1) adminlog.php
2, via the key parameter
5, via a modified query string
4, via a URL in the phpbb_root_path parameter.
4, via unspecified vectors.
4, via a URL in the appl[APPL] parameter.
2, via the (1) page parameter in the (a) banner_manager.php
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the PHPGREETZ_INCLUDE_DIR parameter.
4, via a URL in the includeDir parameter.
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a request with MfcISAPICommand set to SecretProc and a long string in the Secret parameter.
4," via unspecified """"unsafe methods."""""
2," via unknown vectors related to """"URL parsing."""""
4, via a reference to a script in the avatar setting
4, via a .. (dot dot) sequence in the dir parameter in (1) index.php and (2) forum/index.php
2, via the album parameter in (1) index.php and (2) forum/index.php
4, via (1) the catid_search parameter in search.php and (2) the catid parameter in index.php.
4," via a GET request to the IM_FILE identifier with double-url-encoded """"../"""" sequences (""""%252e%252e/"""")."
3, by creating a raw socket on a link aggregation (network device aggregation).
4, via a long URI.
4, via a double-encoded tag parameter.
2, via the (1) matiere_ID parameter in lire.php or the (2) classe_ID parameter in lire_a_faire.php.
4, via a URL in the phpbb_root_path parameter in (1) includes/themen_portal_mitte.php or (2) includes/logger_engine.php.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
3, via unspecified vectors.
4, via a URL in the chemin parameter.
4, via (1) the $user_agent variable
2, via the (1) up_login
5, via a URL in the fpath parameter.
5, via a URL in the isearch_path parameter in (1) index.php
4, via a URL in the PHPWS_SOURCE_DIR parameter in (1) init.php
4, via a URL in the phpbb_root_path parameter. NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the search_user parameter.
3, via unspecified vectors.
4, via (1) the query string (PHP_SELF) in kalender.php or (2) the captcha_session_code parameter in pre_details.php.
4, via unspecified vectors.
4, via a direct request for admin/home/index.php
2, via unspecified vectors to easycart.php
4, via easycart.php
4, via a URL in the configpath parameter.
4, via a URL in the APP[path][lib] parameter
5, via a URL in the ConfigDir parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the path_include parameter.
4, via a URL in the LangFile parameter.
4, via a URL in the languagefile parameter.  NOTE: another researcher has observed that languageFile is defined before use.  CVE analysis as of 20061012 concurs with the dispute.
4, via a URL in the includePath parameter.
5, via a URL in the module_cache_path parameter.
4, via a URL in the folder parameter.
5, via a URL in the cp parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the cfg_include_dir parameter in (1) disp_form.php3
4, via a CRLF sequence in a mailbox name.  NOTE: the attack crosses privilege boundaries if the IMAP server configuration prevents a user from establishing a direct IMAP session.
4, via a .. (dot dot) in the language parameter
2, via the db parameter.
2, via an invalid magic number in a Distributed Process Server (DPS) message.
4, via (1) a crafted Distributed Process Manager (DPM) message to the (a) DPM component
5," via vectors related to obtaining """"administrative access to the RPC interface."""""
1, via unknown vectors
4, via a URL in the cp_root_path parameter.
4, via a URL in the skin parameter.
4, via a URL in the scriptpath parameter to (1) report.php
4, via a URL in the mostrar parameter.
4, via a URL in the CFG[auth_phpbb_path] parameter.
2," via unknown attack vectors related to """"VPN issues"""" for certain """"IKE and IPsec settings."""""
4, via (1) the User-Agent HTTP header
4, via a URL in the calpath parameter to (1) modules/Calendar/admin/update.php
4, via a URL in the spaw_root parameter.  NOTE: CVE analysis suggests that this issue is actually in a third party product
4, via a URL in the toroot parameter.
2, via the frommethod parameter.
2, via the unsubscribeemail parameter.
4," via a crafted Compressed HTML Help (CHM) file that causes ClamAV to """"read an invalid memory location."""""
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the (1) lang_prefix parameter to (a) conn.php
4, via a URL in the inc_dir parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter in (1) includes/journals_delete.php
4, via a URL in the Htmls parameter in (1) add.php
4, via a URL in the fullpath parameter in (1) include/theme.inc.php or (2) include/footer.inc.php.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
2, by placing them after a CRLF.CRLF sequence in the smtp_message parameter.  NOTE: this crosses privilege boundaries if the SMTP server configuration prevents a user from establishing a direct SMTP session.  NOTE: this is a different type of issue than CVE-2006-5262.
4, via a URL in the mostrar parameter.
4, via an ftp:// URL in the page parameter.
4, via a URL in the contentSpecial parameter.
2, via an FTP URL in the section parameter.
4, via a .. (dot dot) in the foaf parameter.
2, via the img parameter.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a URL in the phpbb_root_path parameter in (1) mkb.php
5, via a URL in the phpbb_root_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the contenido_path parameter to (1) cms/dbfs.php or (2) cms/front_content.php.  NOTE: CVE disputes this issue for version 4.6.15
2, via the article parameter.
4, via a URL in the AGE parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
2, via the getsquad parameter
2, via an invalid lang parameter
4, via a URL in the phpbb_root_path parameter.
4, via a long string to UDP port 25777.
4, via a URL in the doc_directory parameter in (1) sw/index_sw.php; (2) cart.php
4, via a long string.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the cid parameter.
4, via a URL in the templatePath parameter.
4, via a URL in the (1) class_path
4, via a URL in the include_dir parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the dir[inc] parameter.  NOTE: it is possible that this issue overlaps CVE-2006-4189.
4, via a URL in the sourcedir parameter to (1) Offline.php
4, via a modified URL.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
1, via malformed DNS responses.
0, via a modified pathname in the pathtoconfig parameter that points to an avatar image that contains PHP code
4, via a URL in the home parameter.
2, via an Open Shortest Path First (OSPF) Link State Advertisement (LSA) with an invalid LSA length field.
4, via a URL in the renderer parameter in template.tpl.php in (1) templates/barrel/
2, via the needle parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the appDirName parameter.
5, via a URL in the CONFIG[local_root] parameter.
4, via a URL in the pn_lang parameter.
4, via a URL in the phpbb_root_path parameter.  NOTE: CVE and the vendor dispute this vulnerability because $phpbb_root_path is defined before use.
4, via a URL in the faqpath parameter.
4, via a .. (dot dot) in the phpAds_config[language] parameter.  NOTE: this issue could not be reproduced by a third party.
2," via unspecified vectors involving """"variable rights."""""
2," via unspecified vectors that result in the creation of """"a real pvt structure"""" that uses more resources than necessary."
2, via the cfam parameter.
2, via the action parameter.
0, via a long parameter to the StoreLicense function
4, via shell metacharacters in the mailbox destination of a filter rule.
2, via the (1) txtUsername (user) or (2) txtPassword (pass) parameters.
2, via the (1) action
4, via a long -a (aka attachment) argument.
4, via (1) a DCM image that is not properly handled by the ReadDCMImage function in coders/dcm.c
3, via the (1) name or (2) surname field.
4, via a URL in the phpht_real_path parameter.
4, via a URL in the (1) $_ENGINE[eng_dir] and possibly (2) spaw_root parameters in admin/includes/spaw/spaw_script.js.php
4, via a URL in the phpht_real_path parameter to (1) index.php
1, via crafted UTF-8 inputs to the (1) htmlentities or (2) htmlspecialchars functions.
4, via a URL in the (1) cfg_dir and (2) lib_dir parameters.
4, via a URL in the lib_dir parameter in (1) lib/registry.lib.php
2, via the lib_dir parameter.  NOTE: this issue is disputed by CVE as of 20061023
4, via a crafted RSS feed.
4, via unspecified vectors.
4," via a certain """"NCP Fragment."""""
2, via the rootpath parameter.
0, via the rootpath parameter in (1) lib/code.php
2, by calling the ftruncate function on a file type that is not VREG
5, by setting a scheduler policy
4, via a URL in the SPEEDBERG_PATH parameter to (1) entrancePage.tpl.php
1, via crafted messages.
4, via a deleted recurrent meeting instance when changing the attendee's calendar meeting time.
4, via unspecified vectors.
2, via the (1) username or (2) password parameters.
0," via unspecified attack vectors related to """"grants."""""
4, via a URL in the page parameter.
4, via a URL in the (1) adminpath or (2) basepath parameters.  NOTE: this issue might overlap CVE-2006-6795.
4, via a URL in the (1) path_red2 parameter to (a) _msdazu_pdata/redaktion/artikel/up/index.php; (b) addtort.php
2, via unspecified parameters to (1) index.php
4, via a .. (dot dot) in the theme parameter.
2, via unspecified vectors in the media manager administration page.
2, via the downloadFileDirectory property
2, via the AddPictureNoAlbum method
2, via the action parameter.
4, via a base64 encoded params value in the action parameter.
0, via the lang parameter to (1) admin/configuration.inc.php
0, via the path parameter in (1) inc/prepend.inc.php
4, via a URL in the cfg_dedi[dedi_path] parameter in (1) find.php
4, via (1) the n parameter and (2) the User-Agent HTTP header.
1, via crafted POST requests that store PHP code in a database that is later processed by eval
4," via """".."""" sequences in the Language cookie"
2, via the cat parameter.
2, via the qzid parameter.
2, via unspecified vectors
2, via the (1) name and (2) email parameters to wakka.php.
4, via a URL in the PROJECT_ROOT parameter to (1) editmeetings/session.php
4, via a URL in the PROJECT_ROOT parameter to (1) xml2rss.php
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the set_path parameter.
4, via a URL in the phpdns_basedir parameter.
4, via a URL in the config parameter in (1) main.php or (2) user/account/main.php.
4, via a URL in the ezt_root_path parameter.
2, via the p parameter.  NOTE: This issue might overlap CVE-2006-5321.
4," via (1) """"/**/UNION """" or (2) """" UNION/**/"""" sequences"
4, via a URL in the sys_path parameter.
4, via a .. (dot dot) in the mod parameter.  NOTE: some of these details are obtained from third party information.
0, via the query parameter in a search operation in the katalog module.  NOTE: some of these details are obtained from third party information.
2, via unspecified parameters to (1) admin/index.php
4, via a URL in the CONFIG[path] parameter.
2, via the kw parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) theme parameter to scripts/dosetmytheme and the (2) template parameter to scripts2/editzonetemplate.
4, via a .. (dot dot) in the getpage parameter.
2, via the (1) upnp:settings/state or (2) upnp:settings/connection parameters.
1, via unspecified vectors
4, via a URL in the cfg[homepath] parameter.
2, via certain aggregate functions in an UPDATE statement
4, via a malicious URL containing non-breaking spaces (%A0)
4, via a URL in the GLOBALS[config][otscms][directories][classes] parameter.
4, via a URL in the GLOBALS[config][otscms][directories][includes] parameter.
4, via a URL in the GLOBALS[config][directories][classes] parameter.
2, via the AMFPHP_BASE parameter.  NOTE: this issue has been disputed by a third-party researcher who states that AMFPHP_BASE is a constant.
1, via unspecified vectors involving certain ioctl requests to /dev/crypto.
4, via a long argument to the RCPT TO command.
4, via a long argument to the (1) MAIL FROM or (2) RCPT TO command.
4, via a .. (dot dot) in the user_settings cookie
2, via the langage parameter.
4, via a long -S argument.  NOTE: this might be a duplicate of CVE-2006-2574
0, via format string specifiers in the -s argument.  NOTE: this might be a duplicate of CVE-2006-2574
2, via the PATH_INFO to admin/index.php
2, via the cdb_auth cookie.
2, via the sys_dbtype parameter.
4, via a crafted room name in a Conference Invite.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the op parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a CRLF sequence in the (1) name
4, via CRLF sequences in the (1) links_exchange
4, via a crafted (1) ultravox-max-msg header to the Ultravox protocol handler or (2) unspecified Lyrics3 tags.
4, via a long MKD command.
4, via a .. (dot dot) in the doc parameter.
5, via a long string in the doc parameter.
2, via unspecified uses of the OBJECT HTML tag
2, via unspecified vectors involving certain drag and drop operations
2, by using JavaScript to cause certain errors simultaneously
2, via certain DHTML script functions
4, via a crafted file manifest within an application
4," via """"invalid application window sizes"""" in layered application windows"
4, via a URL in the chemin_appli parameter in (1) admin/inc/organisations/form_org.inc.php and (2) admin/inc/organisations/country_insert.php.
1, via unspecified vectors in (1) OE.pm
4, via a URL in the page parameter.
2, via the (1) uid and (2) pwd parameters.
2," by setting the polllog cookie value to """"xx""""."
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via ..\ (dot dot backslash) sequences in an HTTP GET request.
3, via modified (1) frmMailBox and (2) frmUserPass parameters.
2, via the WWV_FLOW_ITEM_HELP package.  NOTE: it is likely that this issue overlaps one of the Oracle VulnIDs covered by CVE-2006-5351. Oracle has not publicly disputed claims by a reliable researcher that this has been fixed by the October 2006 CPU.
2, via the RC parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a .. (dot dot) in the CardLanguageFile parameter.
0, via the CardFontFace parameter and other unspecified parameters.
2, via the username ($User variable) to login/doLogin.php and other unspecified vectors.
5," via a """"/./."""" (modified dot dot) sequences in the getpage parameter."
2," via unspecified vectors related to """"parameters from URLs."""""
4," via """"\.\./"""" sequences in the dir parameter."
4, via a base64-encoded file path containing a .. (dot dot) sequence in the file parameter.
4, via a .. (dot dot) sequence in the ad_direct parameter.
2, via unspecified manipulations that trigger an infinite loop while searching for flowlabels.
2, via the aid parameter.
4, via a URL in the cgipath parameter.
4, via a URL in the path parameter to (1) include.php or (2) functions.php.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
4, via a URL in the c[path] parameter.
4, via a URL in the adminfolderpath parameter to (1) headerscripts.php
2, via the (1) user or (2) pass fields.
0, via the ForumID parameter in (1) DisableForum.asp and (2) enableForum.asp.  NOTE: it was later reported that the vulnerability is present in 6.1 Hotfix 3.3 and earlier.
5, via a modified ForumID parameter in a disableforum action in DisableForum.asp and (2) create an arbitrary forum virtual directory via an empty ForumID parameter in an enableforum action in EnableForum.asp.
0," via arbitrary query strings when the action parameter is not """"1"""""
0, via the id parameter
4, via a URL in the (1) reqpath parameter to (a) body.inc.php and (b) body_blog.inc.php in users/include/; or the (2) usrinc parameter in users/include/upload_ht.inc.php.
2, via the KW parameter.
4, via a URL in the SWSDIR parameter.
4, via a URL in the email parameter.
2, via the (1) limite and (2) mots parameters.
1," via vectors related to """"local or HTTP Digest authentication."""""
2, via the key parameter.
2, via the key parameter.
2, via the query parameter.
2, by using the (1) sys_get_robust_list and (2) sys_set_robust_list functions to create processes that cannot be killed.
2, via the DownloadAgent function
4, via a non-numeric page parameter
2, via the expression Cascading Style Sheets (CSS) function
2, via the error parameter.  NOTE: this issue might be related to CVE-2006-5486
2, via the username parameter.
2, via unspecified vectors related to the tmp_align variable.  NOTE: it is not clear whether this is a vulnerability
5, via a URL in the bstrUrl parameter to the BW_DownloadFile method
2, via the User-Agent HTTP header.
4," via (1) the username parameter in login.php and (2) a search on the """"search page."""""
4, via a URL in the phpbb_root_path parameter.
2, via the login parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the pb_lang parameter to (1) admin.php and (2) pbook.php.
5, via a URL in the AD_BODY_TEMP parameter.
5, via a URL in the AD_BODY_TEMP parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the INCLUDE_PATH parameter.
2, via the champ parameter.
4, via a symlink attack on (1) a job output file in /usr/spool/PBS/spool and possibly (2) a job file in /usr/spool/PBS/mom_priv/jobs.
5, via a crafted UFS filesystem that causes invalid or large size parameters to be provided to the kmem_alloc function. NOTE: a third party states that this issue does not cross privilege boundaries in FreeBSD because only root may mount a filesystem.
4, via a malformed archive that causes libarchive to skip a region past the actual end of the archive
2, via an empty sort_mode parameter in (1) tiki-listpages.php
0, via a url parameter that evades filtering
0, via directory traversal sequences in the (1) backup and (2) fragment parameters in a GET request.
2, via the cat parameter.
2, via unspecified vectors resulting in memory leaks.
0, via a certain HTTP request
2, via the expression Cascading Style Sheets (CSS) function
2, via the (1) author
4, via a .. (dot dot) sequence in the chemin parameter
2, via unspecified parameters in (1) basedemo.php and (2) calenderdemo.php in samples/
4, via UTF-7 or US-ASCII encoded characters
1, via unspecified parameters
2, via the forwhat parameter.
2, via an invalid argument to the DeviceIoControl function that triggers an invalid memory operation.
4, via a malformed hostname in a URL.
4," via a long string in the """"AwayMsg Presets"""" value in the ICQ\ICQPro\DefaultPrefs\Presets registry key."
4, via a direct request for a directory URI
2, by mounting crafted UFS filesystems with malformed data structures.
2, via the (1) _saz[settings][shippingfolder] and (2) _saz[settings][taxfolder] parameters.
4, via a long argument to the NLST command
4, via a URL in the base_path parameter.  NOTE: it is possible that this is a vulnerability in FCKeditor.
4, via a .. (dot dot) in the siteconf[curl] parameter
2, via the myauthorid cookie.
4, via a .. (dot dot) in the PNSVlang (PNSV lang) cookie
4, via a URL in the (1) section parameter in (a) documentation/common/frame_toc.php and (b) documentation/common/search.php
4, via a .. (dot dot) in the language parameter
4, via unspecified vectors.
4, via a URL in the cp_root_path parameter
4, via a crafted LDAP packet.
4, via (1) the 404 error page of the Smart Sensor Edge Sensor; (2) the user name for a failed logon
4, via (1) an Access Point with a crafted SSID
2, via an Access Point with a crafted SSID
4, via a large maxnum value in an ioctl request.
3, by mounting a crafted ISO9660 filesystem containing malformed data structures.
4, via a URL in the racine parameter to (1) function_log.php
2, via the rns parameter.
4," via a URL in the AD_BODY_TEMP parameter.  NOTE: this issue was later reported for the """"File Upload System"""" which is a component of Free File Hosting.  This also affects Free Image Hosting 2.0"
4," via a URL in the AD_BODY_TEMP parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this issue was later reported for the """"File Upload System"""" which is a component of Free File Hosting."
2, via the category parameter.
4, via a URL in the config[public_dir] parameter.
4, via a URL in the d_root parameter.
2, via the (1) fSid or (2) fSrcBegriffe parameters in unspecified vectors.
4, via (1) Bloks
4, via unspecified vectors.
2, via the (1) password and (2) prod parameter.
4, via a .. (dot dot) in the action parameter.
3, via unknown vectors.
0, via the ariadne parameter in (1) ftp/loader.php and (2) lib/includes/loader.cmd.php.  NOTE: this issue is disputed by CVE
4, via a non-empty finame parameter to (1) addnewcont.php
2, via LDAP BIND requests with long authcid names
4, via a crafted TCP packet to port 2049 (nfsd)
4, via a crafted DNS response.
4, via a long URL in an A tag.  NOTE: this issue has been disputed by several vendors
1," via crafted data on a """"3200+SYSNR"""" TCP port"
5, via a 0x72F2 sequence on UDP port 64999.
4," via """".."""" sequences in the e107language_e107cookie cookie to gsitemap.php."
4, via a direct request
4, via a URL in the p parameter.
4," via a large number of """"%s"""" format strings in (1) CWD"
4, via (1) an entry with an attachment whose name contains format string specifiers (el_submit function)
0, via (1) the filename for downloading
2, via unspecified vectors
2, via the (1) nav
2, via the contid parameter.
2, via the (1) contid or (2) search parameters.
2, via the nav parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the module_root_path parameter.
4, via a URL in the include_path parameter.
4, via a link to res://ieframe.dll/invalidcert.htm with the target site as an argument
0, by using certain applications that switch to the default desktop
2, via the newdownloadshowdays parameter.
4, via a URL in the root_path_admin parameter to (1) /include/startup.inc.php
4, via unspecified vectors.
4, via a direct request to the highlight/index.html script.
5, via a malformed filesystem that uses zlib compression that triggers memory corruption
4, via a crafted UFS filesystem
2, via the query string.
1," via crafted APPE commands that contain """"/"""" (slash) or """"\"""" (backslash) characters."
2, via the (1) username or (2) password parameters.
2, via the user_id parameter.
2, via the (1) choosed_language parameter to (a) cp_dpage.php
2, via the (1) topid
4, via a URL in the load_page parameter.
1, via certain requests to (1) public/code/cp_dpage.php
4, via a .. (dot dot) sequence in the sLanguage Cookie parameter.
4, via a file descriptor with an unrecognized file type.
2, via the msg parameter.
4, via a URL in the _mygamefile parameter.
2, via the (1) neid parameter to newsdetails.php
2, via the showRevisions parameter.
4, via the (1) showRevisions[] and (2) searchText[] parameters in (a) index.php
0, by setting the upload parameter to 1.
5, via a .. (dot dot) in the page parameter
2, via the cat parameter.
4, via a URL in the irayodirhack parameter.
4, via a long URI
4, via a symlink attack on the /tmp/output file
4, via a modified PATH that references a malicious helper binary
2, via the lang parameter
5, via a long argument to the (1) EnumPrinters and (2) OpenPrinter functions.
4, via a long string in (1) the language field at logon that begins with a 0x18 byte
4, via a long section name in the dm.ini file
4, via a crafted PDF file that triggers memory corruption and overwrites a subroutine pointer during rendering.
2, via unknown attack vectors.
4, via a URL in the lang parameter.
4, via a URL in the langs_dir parameter.
4," via """".."""" sequences in the file parameter."
4, via shell metacharacters in a file name.
2," via the """"-e"""" flag in the script parameter"
4, via a large heartbeat packet.
4, via a malformed base64-encoded MIME attachment that triggers a null pointer dereference.
4," via shell metacharacters in an """"SMTP level e-mail address""""."
1, via malformed HTTP headers
3, via unknown vectors.
2, via the Poll_ID parameter
2, via the catid parameter.
2, via the cl_cat_ID parameter.
2, via the (1) dir parameter in (a) seldir.html
2, via the SubCatagoryID parameter.
2, via the PropID parameter.
2, via the NewsID parameter.
2, via the ID parameter.
2, via the id parameter.
2, via the id parameter.
2, via the ID parameter.
2, via the id parameter.
4, via a URL in the baseDir parameter to (1) mysql.php and (2) mysqli.php in include/classes/pear/DB/.
4, via a URL in the root parameter.
2, via an incorrect Tonnage parameter to calculate.php that triggers a divide-by-zero error
4, via a .. (dot dot) in the ChatPath parameter to (1) avatar.php
4, via a .. (dot dot) in the ChatPath parameter.
4, via a URL in the repertoire parameter.  NOTE: this issue has been disputed by a third party
5, via arbitrary parameters.
4, via e-mail messages with certain subject lines
4, via e-mail messages with certain subject lines
5, via a URL in the CONFIG[MWCHAT_Libs] parameter to (1) about.php
4, via a direct request to admin/backup_db.php or (2) modify configuration via a direct request to admin/options.php.
4, via a URL in the chemin parameter.  NOTE: the issue is disputed by other researchers
2, via the id parameter.
2, via the (1) username or (2) password parameter.
4, via a URL in the g_documentRoot parameter to (1) bugreporter/thankyou.php and (2) feedback/thankyou.php in implementation/management/priv/.
4, via a URL in the g_documentRoot parameter to (1) Alias.php
4, via a link to res://ieframe.dll/sslnavcancel.htm with the target site in the anchor identifier
2, via the infield parameter.  NOTE: the start
2, via the (1) start
2, via the (1) article_id parameter in (a) articles/comments.php and (b) articles/article.php
4, via a URL in the visEdit_root parameter
4, via a URL in the lan parameter.  NOTE: SecurityFocus disputes this issue
2, via the (1) Name
2, via certain values of the postPtr[] and next parameters
4, via a URL in the custom parameter.
4, via the errmsg parameter.  NOTE: the provenance of this information is unknown; details are obtained from third party sources.
2, via the (1) id or (2) to parameters.  NOTE: some of these details are obtained from third party information.
2, via the Password parameter.
4, via a URL in the installed_config_file parameter to (1) add-modify.php
5, via a URL in the installed_config_file parameter.  NOTE: the provenance of this information is unknown; details are obtained from third party sources.
5, via a URL in the DIR parameter to (1) _basicfunctions.php
2, via the id parameter.
2, via the UserName field.
2, via the sessid parameter.
2, via the id parameter.
1, via crafted (1) CAB or (2) RAR archives that trigger a heap-based buffer overflow.  NOTE: some of these details are obtained from third party information.
5, via a crafted DOC file that triggers a divide-by-zero error.  NOTE: some of these details are obtained from third party information.
2, via the category parameter.
2, via the (1) pictable
2, via the s parameter.
2, via the (1) p parameter to (a) csm/asp/detail.asp
2, via the alpha parameter.
4, via a URL in the Include parameter.
4, via a URL in the lang_file parameter.
2, via the Username field.
2, via the zoneid parameter.
2, via the NewsID parameter.
2, via the itemID parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) groupid parameter in (a) browse_group.asp
2, via the (1) username and (2) password fields in (a) login.asp
2, via the ParentID parameter.
2, via the (1) username (txtUserName) and (2) password (txtPassword) parameters.  NOTE: portions of these details are obtained from third party information.
3, via the (1) Username and (2) Password fields in the (a) login screen
4, via a ../ (dot dot slash) in a filename.
4, via carriage returns in a directory name
4," via direct requests with (1) a null (""""%00"""") terminated url parameter to help/urlstatusgo.html; or missing parameters to (2) help/header.html"
2, via the name variable.
4, via a long 802.11 beacon request.
2, via the (1) Name
3, via the (1) Username or (2) Password field.  NOTE: some of these details are obtained from third party information.
2, via the (1) M or (2) Y parameter to rss_out.asp
3, via the (1) user parameter to (a) CMD_SHOW_RESELLER or (b) CMD_SHOW_USER in the Admin level; the (2) TYPE parameter to (c) CMD_TICKET_CREATE or (d) CMD_TICKET
2, via the (1) txtCompanyName
1, via unknown vectors
2, via the (1) prodtype parameter in prodtype.asp and the (2) product parameter in product.asp.
2, via unknown attack vectors
4, via an RFC_SYSTEM_INFO RfcCallReceive request
0, via a certain UDP packet to port 64999
2, via the p parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a long argument to the exec method of a regular expression.
4, via a modified user_id parameter.
5, via a URL in the INC_PATH parameter
2, via the lang parameter.
2, via the left parameter.
2, via the (1) username and (2) passwd parameters.
2, via the msg parameter.
4, via a URL in the descriptorFileList parameter.  NOTE: this issue is disputed by CVE since $descriptorFileList is used in a function definition within phoo.base.php.
4, via a long argument string to the LoadFile method in an AcroPDF ActiveX control.
4, via a .. (dot dot) sequence or absolute file path in the file parameter.
2, via the UserName field.
2, via the (1) username and (2) passwd (Password) fields in (a) admin/default.asp; or the (3) Event Title
4, via (1) the prodid parameter in (a) prodetails.asp; (2) the page parameter in (b) display.asp; the (3) custid
2, via the (1) keyword or (2) cid parameter in (a) catalogue.asp
2, via the FADDR parameter.
4, via unspecified vectors.
4, via (1) page
2, via the id parameter.
2, via the edit parameter.
4, via (1) the prefs parameter in a buildnavprefs action or (2) the navprefs parameter in a savenavprefs action.
4, via a URL in the textFile parameter.
4, via a URL in the path[skin] parameter to (1) adminfoot.php
2, via the (1) edit parameter to (a) admin/articles.php or (b) admin/comments.php
4, via a .. (dot dot) in the f parameter
4, via a URL in the mosConfig_absolute_path parameter.
2, via the (1) selPlayer parameter to player.asp or the (2) tournament_id parameter to tournaments.asp.
4, via a URL in the mosConfig_absolute_path parameter.
2, via an ext3 stream with malformed data structures.
2, via an ext2 stream with malformed data structures that triggers an error in the ext2_check_page due to a length that is smaller than the minimum.
4, via a 802.11 beacon request with a long Rates information element (IE).
4," via (1) beacon or (2) probe 802.11 frame responses with an long supported rates information element.  NOTE: this issue was reported as a """"memory corruption"""" error"
5, via a M3U file containing a long (1) FileName
1, via crafted messages.
4, via a URL in the module_root_path parameter.
2, via the (1) username or (2) password parameter to (a) admin_login.asp
2, via the (1) itemID parameter to (a) f-email.asp
4, via a .. (dot dot) in the gal parameter to index.php.
2, via an invalid gal parameter.
2, via the StateCode parameter.
4, via the vjob parameter.  NOTE: the provenance of this information is unknown; the details are obtained from third party information.
2, via the (1) ProductID parameter in productdetail.asp or the (2) categoryid parameter in products.asp.
4, via (1) the ProductID parameter in (a) reviews.asp
2, via the name parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via certain RPC requests to TCP port 6502.
4, via a URL in the cm_basedir parameter.
4, via a URL in the mainframe parameter to (1) admin.loudmouth.php or (2) toolbar.loudmouth.php.
2, via the (1) catID or (2) editorID parameter.
4, via a URL in the plugin_file parameter.
3, via the (1) cat parameter to addlisting.asp or the (2) search parameter to search.asp.
2, via the category parameter.
5, via a .. (dot dot) in the f parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the cfg_pear_path parameter.
2, via the action parameter.
2, via the (1) n or (2) d parameter in igallery.asp
2, via the (1) title (Subject)
2, via the (1) password parameter to (a) adminlogin.asp
3, via unspecified vectors.
2, via the (1) vehicleID
4, via a URL in the (1) admin_folder and (2) path parameters.
2, via the (1) catID parameter to activeNews_categories.asp
3, via the (1) articleID parameter to activenews_view.asp or the (2) page parameter to default.asp.  NOTE: the activeNews_categories.asp and activeNews_comments.asp vectors are already covered by CVE-2006-6094.
2, via the query parameter.
0, via format string specifiers in a hostname
2, via unknown attack vectors.
2, via the (1) policy parameter in openPolicy.asp or the (2) brand parameter in prodList.asp.
2, via the (1) vjob parameter in publications_list.asp or (2) InfoID parameter in publication_view.asp.
2, via the (1) productid parameter in product.asp or (2) search parameter in search.asp.  NOTE: the category.asp vector is already covered by CVE-2004-1873.
1, via direct requests to (1) include/admin_auth.inc.php and (2) include/engine/class.compiler.php
2, via the fid parameter.
2, via the kat parameter.
2, via the which parameter.
2, via the page parameter.
4, via a direct request for thumbs.php
4, via a crafted PPT file
0, by calling the Run method.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via an 802.11 management frame with a long SSID.
5, via a crafted Mach-O binary with a malformed load_command data structure.
4, via a process that uses kevent to register a queue and an event
4, via a crafted Mach-O Universal program that triggers memory corruption.
1, by calling the AIOCREGLOCALZN ioctl command with a crafted data structure on an AppleTalk socket.
4, via a malicious libucache.dylib helper library in the current working directory.
4, via (1) the search engine field to search.asp and (2) psearch parameter to linkslist.asp.
5, via a URL in the (1) exec parameter to index.php or (2) print parameter to print.php
2, via an absolute pathname in the dir parameter.
2, via the fn parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the slnt parameter to (1) index.php and (2) print.php.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long GET or PUT request
2, via the (1) mailto parameter in (a) webmail.php
2, via the (1) LinkID parameter to openlink.asp or the (2) CategoryID parameter to viewlinks.asp.
2, via the (1) lName
2, via the tID parameter.
4, via a URL in the OWLLIB_ROOT parameter.
4, via a URL in the page parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) cat parameter to (a) cat.asp
4, via (1) catname parameter to cat.asp or the (2) minprice parameter to search.asp.
4, via a URL in the hm parameter.
4, via the (1) ipadd or (2) url parameter. NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the query string (PHP_SELF).  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the pageid parameter.  NOTE: this issue can be leveraged for path disclosure with an invalid pageid parameter.
2, via the (1) message or (2) subject parameter.
2, via the id parameter.
2, via the (1) id and (2) uid parameter to (a) inout/status.asp
5, via the pageAlias parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified parameters.
4, via a URL in the APB_SETTINGS['apb_path'] parameter in (1) apb_common.php or (2) apb.php.  NOTE: CVE and another third party dispute this vulnerability because these PHP scripts exit if the attack vectors are present in GPC variables.
2, via certain vectors such as a comma-separated list of addresses in the email field
4, via (1) a small range count
0, via the conf parameter in (1) tdiary.rb and (2) skel/conf.rhtml.
4, via a .. (dot dot) sequence in the view parameter.
3, via unspecified parameters.
4, via a double-url-encoded id parameter to users.php that begins with a valid filename
2, via unknown attack vectors.
2, via unknown attack vectors.
2, via the hl parameter. NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) AlphaSort
4, via a .. (dot dot) in the dir parameter to index.php.
4, via a .. (dot dot) in the dir parameter to (1) config.php
2, via the (1) currentpage or (2) gallery_id parameter to (a) view_gallery.asp
3, via the txtKeyWord parameter.  NOTE: some of these details are obtained from third party information.
2, via the date parameter.
3, via unspecified vectors.  NOTE: it is possible that there are multiple issues.
2, via the id parameter.
2, via the id parameter.
2, via the (1) cat or (2) did parameter.
2, via the (1) show_id or (2) parentid parameter to (a) filelist.asp
4, via a search field (txtsearchtext parameter).
2, via the (1) app_name parameter in (a) _404_not_found.page.php
2, via the (1) email parameter to (a) scripts2/dochangeemail
4, via a .. (dot dot) in the file parameter.
2, via the (1) cid parameter to (a) dircat.asp; the (2) sid parameter to (b) dirSub.asp; the (3) TYPE_ID parameter to (c) types.asp; the (4) AD_ID parameter to (d) homeDetail.asp; the (5) cat parameter to (e) result.asp; the (6) compare
2, via the (1) city or (2) State parameter.
2, via the ItemID parameter.
2, via the partno parameter.  NOTE: the vendor disputes this issue
2, via the (1) AD_ID
2, via the (1) id2006quant parameter to (a) item_show.asp
2, via the ID parameter.
2, via the (1) msg parameter to (a) admin/admincore.php
2, via the wallpaperid parameter.
2, via the (1) login or (2) password parameter to (a) process.php
2, via the hack_id parameter.
4, via a URL in the module_name parameter.
2, via the (1) seite_id
2, via the (1) user_name
2, via the (1) recipeid parameter to recipe.php or the (2) categoryid parameter to list.php.
4, via a replay attack using the initial account creation request.
4, via a UTF-7 encoded q parameter.
2, via the GLOBALS array.
4, via a URL in the _CONF[path] parameter to (1) links/functions.inc
3, via unknown vectors.
0, via the user parameter in a register action to index.php
4, via a direct request to includes/vubb.php
4, via a URL in the path parameter.
0, via the lid parameter in a viewdownloaddetails operation. NOTE: this issue might have been in the viewdownloaddetails function in dl-downloaddetails.php
5, via a long argument string to the (1) src
2, via the threadvisit Cookie parameter.
4, via a .. (dot dot) sequence in an FTP command argument
4, via consecutive RETR commands.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) sequence in the serendipity[charset] parameter in (1) include/lang.inc.php; or to plugins/ scripts (2) serendipity_event_bbcode/serendipity_event_bbcode.php
2, via the (1) cat or (2) did parameter.
3, via shell metacharacters in (1) CALLERID(name) or (2) CALLERID(number).
4, via unspecified vectors.
0, via the ci parameter to (1) slideshow.asp or (2) thumbnails.asp.
2, via an invalid rep parameter
4, via unspecified vectors.
2, via an M3U Playlist file containing extended ASCII
4, via a long string in an M3U file
0, via the chemin parameter
4, via a folder name.
4," via a .. (dot dot) in the """"create name"""" field and (2) read arbitrary files via a .. (dot dot) in the """"web root"""" field when configuring a subdomain."
2, via the username parameter.
4, via a crafted (1) M3u or (2) M3u-8 file; or a (3) crafted PLS file with a long value in the (a) NumberofEntries
4, via a .. (dot dot) in the orig_id parameter.
4, via a url-encoded id parameter to users.php that begins with a valid filename
4, via (1) the id parameter in rating.asp
4, via (1) the soruid parameter in forum2.asp
0, via the language parameter to (1) index.php
2, via the dir parameter.
2, via an invalid dir parameter
2, via unspecified vectors
5, via a .. (dot dot) in the src parameter
2, via the skin parameter.
0, via a skin parameter referencing a nonexistent skin
0, via the pid parameter
4, via a URL in the dicshunary_root_path parameter.
2, via an invalid s parameter
2, via the subject field of (1) a private message (PM) or (2) a bulletin board post.
4, via a .. (dot dot) sequence in the act parameter.
4, via a URL in the externalConfig parameter.  NOTE: CVE and other third parties dispute this vulnerability because $externalConfig is defined before use.
4, via a long pathname in an M3U file.
5, via (1) a playlist file with long song names
5, via a crafted CHM file. NOTE: this issue has at least a partial overlap with CVE-2006-6294.
4, via a URL in the module_root_path parameter.
2, via the (1) kullanici_ismi and (2) sifre parameters.
1, via crafted packets
2, via the result parameter.
0, via format string specifiers in the Username field of the logon window.
4, via a crafted packet to port 427 that triggers an access of pageable or invalid addresses using a higher interrupt request level (IRQL) than necessary.
2," by stopping the shstart.exe process and open """"Web Self-Service"""" from the system tray icon"
4, via a large index value in unspecified messages
0," via an invalid src attribute value (""""?"""") in an HTML frame tag that is in a frameset tag with a large rows attribute.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information."
4, via a style attribute in an HTML table tag with a width value that is dynamically calculated using JavaScript.
4," by attempting to access a logbook whose name begins with """"global"
0, via sequences in the alias_file parameter.
0, by specifying the target filename in the delfile parameter.
4, via shell metacharacters in the kill parameter.
2, via unspecified vectors
5, via a DataSize parameter that is less than the length of the Data buffer.
4, via (1) a SIT archive with a long filename that is not null-terminated
4, via a crafted request containing successive delimiters.
2, via the (1) kullanici or (2) parola parameter.
2, by embedding PHP code in a JPEG or GIF file that is uploaded to inc/images/uploads/userpics/.
2, via the show element in a GET request.
4, via a long command line argument.  NOTE: it is not clear whether this issue crosses security boundaries. If not
4, via a URL in the apx_root_path parameter to (1) act/act_check_access.php
2, via the (1) category and (2) agent parameters in (a) search_listing.asp
2, via the id parameter.
2, via the forum_name[] parameter.
4, via (1) the main parameter in a view action (includes/mainpage/view.asp) in default.asp or (2) a query in the search engine.
4, via a crafted ACE file.  NOTE: this issue has at least a partial overlap with CVE-2006-6294.
2, via unspecified vectors related to (1) certain KERN_PROTECTION_FAILURE thread crashes and (2) certain KERN_INVALID_ADDRESS thread crashes
2, via the (1) iNews
2, via the iCity parameter.  NOTE: the iState parameter is already covered by CVE-2005-2049.
2, via the (1) url
4, via unspecified vectors.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) username and possibly the (2) password parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
4, via a URL in the footerpage parameter.
1, via crafted HTTP POST fileupload requests.
2, via the error parameter.
4, via a URL in the toroot parameter to search.php.
0, via the eid parameter
2, via the author parameter.
2, via the (1) topic or (2) message parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a direct request for libraries/common.lib.php
4, via CRLF sequences in a phpMyAdmin cookie in (1) css/phpmyadmin.css.php
2, via the contents of a file that is uploaded with the image parameter set
2, via the filename parameter in a download action
2, via the keyword parameter.
4, via a .. (dot dot) in the filename parameter.
4," via a malicious path and a null byte before a """";"""" in a session_save_path argument"
0, via an absolute pathname in the Filename text window (f parameter)
2, via the (1) IDMeniGlavni parameter to navigacija.php
4, via the txtPretraga parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) Taaa parameter to (a) up.php
2, via unspecified vectors related to the InputFilter::getString function.
5, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors in (a) sendarticle.asp and (b) printarticle.asp
2, via the Username parameter in login.asp.  NOTE: the provenance of this information is unknown; details are obtained from third party sources.
2, via the (1) connexion
2, via the details parameter.
4, via (1) details and (2) by array parameters
4, via a sequence of TCP SYN packets to many ports
1, by inserting invalid characters into base64 encoded content in a multipart/mixed MIME file
1, by inserting invalid characters into base64 encoded content in a multipart/mixed MIME file
0, by inserting invalid characters into base64 encoded content in a multipart/mixed MIME file
1, by inserting invalid characters into base64 encoded content in a multipart/mixed MIME file
4, via a long VmdbDb parameter to the Initialize function.
4, via a TCP SYN scan
4, via unspecified vectors.
2, via the (1) id_doc or (2) id_aut parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the phpAds_path parameter
4, via a URL in the cheminmini parameter to (1) consult/miniseul.php or (2) config.php.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the inc_path parameter.
2, via the (1) plugin or (2) file parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
3, via the (1) img
2," via the """"Message body"""" field in a message to a non-existent user."
1, by appending literals to certain IMAP verbs when specifying command continuation requests to IMAPD
2, via unspecified vectors involving the APPEND command.
4, via a .. (dot dot) in the PNSVlang (PNSV lang) parameter
4, via (1) the StrMes parameter in vf_info.asp and possibly (2) a URL in the SRC attribute of an IFRAME element that is submitted to vf_newtopic.asp.
0, via the user parameter to vf_memberdetail.asp
2, via the (1) agentid and (2) pass parameters.
1, via unspecified parameters to (1) get_password.php or (2) login_up.php3.
4, via a URL in the link parameter.
3, via shell metacharacters to the (1) exe and (2) args parameters
2, via the (1) Name and (2) Information fields when adding a new site (toplistnew action).
2, via an invalid id parameter to login.php
2, via an invalid id parameter
4, via a URL in the addpath parameter.
2, via directory traversal sequences in the l parameter.  NOTE: CVE disputes this vulnerability because l is validated by ctype_alpha before use.
2, via the (1) key
2, via the (1) id parameter in (a) email.php
2, via the email parameter in (1) erreurinscription.php
0, via the idmembre parameter
1, by wrapping many layers of multipart/mixed content around a document
4, via a URL request (1) for a non-existent (a) JWS
0, via the prevlocation parameter in shopper/sc/registration.cgi and other unspecified vectors.
1, via unspecified vectors in sptrees/default.aspx
5, via (1) external message modies with long Content-Type headers or (2) long RFC2047-encoded (MIME non-ASCII) headers.
1, via vectors related to a Function.prototype regression error.
4, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via an ABOUT: URI
1," via URL encoded backslashes (""""%2F"""") in the path parameter."
4," via a trailing """"."""" (dot) in a filename in the file parameter"
4, via a URL in the (1) page parameter to (a) index.php3
2, via the (1) categories parameter to (a) index.php3 or (b) galeries.inc.php3.
2, via the (1) pseudo
2, via the aa parameter.
2, via the (1) pseudo parameter to (a) existepseudo.php
2, via the aa parameter.
1, via unspecified vectors in the (1) forum module and (2) event descriptions.  NOTE: some of these details are obtained from third party information.
2, via the account parameter.
2, via the Uname (UserName) parameter.
2, via the password parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the basePath parameter.
5, via a URL in the basePath parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
2, via the (1) StrMsg or (2) Topic_ID parameter to (a) vf_info.asp
4, via a .. (dot dot) in the filter parameter.  NOTE: this issue can be leveraged to obtain full path information in error messages.
2, via the (1) set parameter to admin/modules.php
2, via the hata parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a flood of ARP replies on the wired or wireless (radio) link and (2) a denial of service (device crash) via a flood of ARP requests on the wireless link.
4, via an (a) long username or a (b) crafted packet to the FindBasicAuth function in security.cpp
4, via a URL in the smiley parameter.  NOTE: the vendor disputes this issue
2, via the id parameter.
2, via the (1) login (UserName) and possibly (2) password parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the module_root_path parameter.
4, via a URL in the cutepath parameter.
4, via a long tag in an audible.com audiobook (aa) file.
0, via the domain parameter to (1) scripts2/changeemail
4," via a URL in the save_path parameter.  NOTE: CVE disputes this vulnerability because save_path is originally defined as """""""" before use"
4, via a URL in the db_file parameter.  NOTE: CVE disputes this vulnerability because db_file is defined before use.
4, via a URL in the _ENV[TCA_HOME] parameter.
4, via a URL in the DIR_ADMIN parameter.
4, via a URL in the mx_root_path parameter.
0, via certain long LDAP queries
4, via unspecified vectors.
2, via dangerous file extensions that are not all lowercase
4," via a long series of """"?A"""" sequences in the (1) LIST and possibly (2) NLST command."
2, via the PID parameter.
4, via a URL in the module_root_path parameter.
5, via a large reqarglen length value.
4, via a malformed argument to the STOR command
4, via a wildcard argument to the (1) LIST or (2) NLST commands
4, via a URL in the module_root_path parameter.
4, via a URL in the module_root_path parameter.
4, via a .. (dot dot) sequence in the phpEx parameter.
2," via the (1) do and (2) chem parameters with a """"modfich"""" floap parameter."
2, via unspecified vectors
2, via the (1) cuve
4, via a URL in the LOGIN_style parameter.
4, via a long PASS command. NOTE: it was later reported that 4.70 is also affected.  NOTE: the USER vector is already covered by CVE-2005-0634.
2, via the id parameter.
4, via a URL in the debugClassLocation parameter.
2, via the (1) members_username (user) and (2) members_password (password) fields in a login action in members/default.asp
1, via unspecified vectors related to (1) the Logins box and (2) the Search box.
4, via unspecified vectors.
3, by posting a message.
0, via the SEARCH_STRING parameter
4, via a URL in the script_folder parameter.
4, via a URL in the repphp parameter.
4, via a URL in the page[path] parameter to (1) index.php
4, via a URL in the phpbb_root_path parameter.
2, via the mesid parameter.
4," via """"Manage Resources"""" and possibly other unspecified components."
4, via a session (HAW) file
2, via the /r option in a telnet:// URI
4, via .. (dot dot) sequences in the path parameter
4," via shell metacharacters ("""";"""" semicolon) in the announce parameter."
4, via a .MID (MIDI) file with a malformed header chunk without any track chunks
4, via a crafted WMV file.
4, via a crafted HTML document.  NOTE: some details were obtained from third party information.
4, via .. (dot dot) sequences in the alias parameter
4, via unspecified vectors.
1," via unspecified vectors related to """"fake players."""" NOTE: some of these details are obtained from third party information."
4, via a URL in the basepath parameter.
4, via a URL in the basepath_start parameter.
4, via a URL in the module_root_path parameter.
4, via a GetInitializationData request
5," via a long series of """"./"""" sequences in the SIZE command."
3, via the navtail parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a javascript URI in the SRC attribute of an IMG element. NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: It is unclear whether this candidate overlaps CVE-2006-4784 or CVE-2006-4941.
4, via a crafted DOC file
4, via a URL in the lib_dir parameter.
5, via a URL in the lib_dir parameter.
5, via a URL in the topdir parameter.
4, via a URL in the GLOBALS[include_Bit] parameter.
5, via a URL in (1) the CONFIG_EXT[LANGUAGES_DIR] parameter to admin_events.php
4, via a URL in the jcms_root_path parameter.
4, via a crafted SQLJRA packet
1, via unspecified vectors related to executing (1) the cp program
2, via the (1) ss parameter in (a) search.asp and the (2) company and (3) username fields on (b) the web login page.  NOTE: some details were obtained from third party information.
2, via the id parameter.
3, via multiple RETR commands with long arguments.
5, via a URL in the module_root_path parameter.
4, via a URL in the mx_root_path parameter.
2, via the Title field when editing a page.  NOTE: some details were obtained from third party information.
5, via a URL in the pathtoscript parameter.
2, via an encoded frm_action parameter.  NOTE: the vendor disputes this issue
4, via a URL in the module_root_path parameter.
4, via a series of crafted beacon frames.  NOTE: some details are obtained solely from third party information.
1, via direct requests with missing parameters to (1) help/header.html
1, via crafted HTML.
2, via multiple vectors that use the extract function
2," via unspecified vectors related to """"gathering net games."""""
2, via format string specifiers in the TopLevelLogger::logMessageV function in Misc/Logging.cpp.  NOTE: some details were obtained from third party information.
4, via a long file name tag in a dbr file.
4, via a URL in the q parameter.
2, via the (1) nick_mod or (2) nick parameter to (a) repass.php or (b) verify.php. NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the format parameter.
2, via the id parameter.
3, via the (1) kid or possibly (2) id parameter to (a) HABERLER.ASP and (b) ASPKAT.ASP.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
3, via long (1) PASV
1, via unspecified parameters in Welcome web-app.
4, via a crafted (1) .DOC or (2) .CAB file that triggers a heap-based buffer overflow.
4, via a crafted .CHM file that triggers a divide-by-zero error.
5, via a long X-Forwarded-For HTTP header.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long REMOTE_ADDR environment variable.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the ROOT_PATH parameter.
4, via a URL in the SERVER_DIRECTORY parameter to unspecified scripts
5, via a URL in the commonIncludePath parameter to (1) admin/include/common.php
0, via format string specifiers in information that would be recorded in the system log using (1) zabbix_log or (2) zabbix_syslog.
2, via long strings to the (1) zabbix_log and (2) zabbix_syslog functions.
4, via a .. (dot dot) in the language parameter
2, via the (1) error or (2) success parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via CRLF sequences in the enc parameter to (1) calendarDialog.jsp or (2) fred.jsp.  NOTE: the calendar.jsp vector is covered by CVE-2006-6697.
3, via unspecified vectors.  NOTE: This information is based upon a vague initial disclosure. Details will be updated after the grace period has ended.
1, via crafted e-mail messages.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
0, via the tc parameter in webapp/jsp/container_tabs.jsp
2," via unspecified vectors involving """"unescaped data in the database."""""
4, via a long argument string to the TraceTarget method.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the s parameter.
2, via the (1) p parameter to (a) detail.asp; the (2) l
5, via a URL in the (1) lang parameter to (a) index.php
4, via a URL in the chemin parameter.
2, via unspecified vectors in crafted email messages.
2, via the id_user parameter.
4, via a malicious FTP server with a large number of blank 220 responses to the SYST command.
4, via a URL in the _VIEW parameter.
2, via the (1) sbNick or (2) sbKommentar parameter.
4, via a direct request to admin.php with the Login parameter set to 1.
4, via a large maxlen value in an NetrWkstaUserEnum RPC request.
5, via a .. (dot dot) in the filename parameter to (1) lib/htm2php.php and (2) sitetools/htm2php.php.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the inews_path parameter.
4, via a URL in the DOCUMENT_ROOT parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the abs parameter.
2, via the e parameter.
2, via the catname parameter.
5, via a request with an arbitrary catname parameter but no itemsdb parameter
4, via a URL in the path parameter.
4, via a URL in the HTTP_DOCUMENT_ROOT parameter
4, via a URL in the menu parameter to (1) include/body.inc.php or (2) include/body_admin.inc.php; or a URL in the incpath parameter to (3) index.inc.php
4, via a delete operation in an img BBcode tag.
0, via the id_news parameter to (1) add_comment.php or (2) show_news.php.
2, via the id_news parameter.
4, via a URL in the chemin parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long str parameter.
0, via format string specifiers in a long PORT command.  NOTE: this issue might be related to CVE-2006-2226.
2, via format string specifiers in the USER command or certain other available or nonexistent commands.  NOTE: It was later reported that 5.3.0 is also vulnerable.
4, via a long Host field.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information. Also
2, via the story_id parameter to ixm_ixpnews.php
4, via a direct request for kernel/plugins/fckeditor2/ixprim_api.php
4, via a .. (dot dot) sequence in the URI.
1, by invoking the RealPlayer.Initialize method with certain arguments.
4, via a URL in the (1) actionsPage or (2) formPage parameter.
4, via a long argument to the SUBSCRIBE command.
3," via an APPEND command with a single """"("""" (parenthesis) in the argument."
4, via a URL in the (1) path_to_themes parameter in (a) authenticate.php
4, via (1) a local filename or FTP/share URI in the config_file parameter or (2) a URL in the ptconf[src] parameter.
4, via unspecified vectors.  NOTE: The provenance of this information is unknown; details are obtained solely from third party information.
4, via a (1) LPRT or (2) LPASV command with an unsupported address family
2, via the (1) cat or (2) main parameter.
2, via the (1) search_string parameter in (a) setup/transcripts.php
1, by setting the is_admin HTTP POST parameter to 1.
2, via the path parameter.  NOTE: some of these details are obtained from third party information.
4, via a crafted argument to the (1) REST or (2) PBSZ command.
2, via the (1) newsId or (2) categoryid parameter in a Portal.Showpage action in index.cfm
0, via the categoryId parameter in a Portal.ShowPage action.
2, via the nid parameter.
2, via an SWF file that uses ActionScript to trigger execution of JavaScript.
2, via the killLimit parameter.
4, via playinfo mode
4, via unspecified vectors.
1, via unspecified vectors related to plugins/widged/_widged.php (aka the WidgEd plugin)
2, via the user name in the login form.
0, by inserting the code into the email parameter to (1) subscribe.php or (2) unsubscribe.php.
2, via the ID parameter.
4, via a URL in the dir parameter to (1) run.php or (2) ircbot.class.php.
4, via a URL in the phpbb_root_path parameter.
2, via the username parameter
2, via the (1) txtUse and (2) txtPas parameters.
2, via the ID parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the page parameter.
2, via the grup parameter.
5, via a URL in the basepath parameter.
4, via a URL in the ins_file parameter.
1, via crafted arguments to the NtRaiseHardError function with status 0x50000018
4, via a URL in the lm_absolute_path parameter.
2, via the Biz_ID parameter.
2, via the Type_id parameter.
2, via the ID parameter.
2, via the ID parameter.
2, via the ID parameter.
2, via the agent parameter.
2, via the file parameter.  NOTE: some sources have reported this as a vulnerability in the get_file_description function in wp-admin/admin-functions.php.
4, via a URL in the (1) bu_dir or (2) bu_config[dir] parameter.
1, via crafted network traffic
5, via a long PRIVMSG string when connecting to an Internet Relay Chat (IRC) server
5, via a URL in the cal_dir parameter to (1) admin.php
2, via the ID parameter.
2, via unspecified parameters to (1) set_preferences.asp
2, via unspecified parameters to (1) set_preferences.asp
0, by requesting any invalid URI
4, via a direct request to admin/config.
4, via a URL in the path parameter.
2, via the (1) getdate parameter in (a) day.php
4, via a long string in the Flash8b.AllowScriptAccess method.
4, via (1) the grup parameter in admin.asp
4, via a URL in the index parameter.
4, via the catcode parameter.
2, via unspecified vectors
0, via the w parameter to journal.php.
2, via the id parameter.
5, via unspecified vectors.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the user comment form.
2, via the cntnt01searchinput parameter in a Search action.
4, via (1) the num parameter in (a) phonemessage.asp
1, by invoking the RealPlayer.OpenURLInPlayerBrowser method with a long second argument.
2, via the PATH_INFO
4, via a URL in the mod_root parameter.
2, via the (1) email or (2) errr parameter.
2, via unspecified vectors
5, via a long string in a crafted packet to TCP port 4002.
4, via a flood of HTTP GET requests
0, via the im parameter during a profile edit (edycja) operation
2, via the lang parameter.
2, via the key parameter.
5, via a crafted sendStr string to the Bluetooth interface.  NOTE: some of these details are obtained from third party information.
4, via (1) the UserUpdate parameter to login/register.asp or (2) unspecified parameters to includes/a_register.asp.
2, via unspecified parameters to (1) login/login.asp or (2) login/register.asp.
4, via a URL in the boarddir parameter.  NOTE: CVE disputes this issue
4, via a URL in the boarddir parameter.
4, via a %c0%ae. (Unicode dot dot) in the path parameter
4, via a URL in the bu_dir parameter to (1) bu/bu_claro.php
4, via unspecified vectors.
4, via a crafted compressed DNS response with a label that points to itself.
4, via (1) the mod parameter in a viewlink operation in mod.php
4, via a .. (dot dot) in the mod parameter.
4, via (1) the did parameter in a (a) viewdisk operation (diskusi mod)
2, via the (1) Message or (2) Your Name field.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted OSP header.
4, via a crafted SMS message
1, by setting the rights[7] parameter to 1 during a login action.
2, via the userfile parameter.
2, via the (1) newmessage
5, via a long name argument.
3, via unspecified vectors.
4, via a URL in the dir parameter.  NOTE: this issue is disputed by CVE
4, via a long argument to the CreateNewFolderFromName method
4, via a long string in the swURL attribute.
4, via a direct request for (1) files.public-userroot.inc.php or (2) files.private.additions.inc.php in include/inc_lib/
2, via unspecified vectors related to plugins/widged/_widged.php (aka the WidgEd plugin)
2, via the aRequest variable.
0, by accessing this service at a high rate
4, via a .. (dot dot) in an unspecified parameter.
0, via a certain configuration of two HID (PSM) endpoints
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, by operating an FTP server that sends directory listings with (1) long user names or (2) long group names.
2, via the ordernum parameter.
2, via unspecified vectors
4, via unspecified vectors.
3, via unspecified vectors. NOTE: some details were obtained from third party sources.
2," via unknown vectors related to """"crafted input."""""
4, via a crafted RPC request with (1) opnum 38
2," via an RSS feed with an img tag containing the script followed by an extra trailing """">"""""
1, via unknown vectors
4, via a program with certain instructions that prevent init from properly reaping a child whose parent has died.
4, via unspecified vectors.
2, via the tk parameter.
4, via a sort_mode=-98 query string to (1) blogs/list_blogs.php
4, via (1) the message title field when submitting an article to articles/edit.php
4, via (1) the uname (username) and (2) pword (passwd) fields in (a) admin/default.asp; the (3) ID parameter to (b) listfull.asp or (c) printmain.asp; the (4) cat parameter to (d) listmain.asp
2, via the (1) cat parameter to (a) listmain.asp or (b) searchmain.asp
2, via the (1) id parameter to (a) reply.asp or (b) view_print.asp
2, via the id parameter.
4, via (1) the id parameter to (a) dispimage.asp
2, via the (1) titre or (2) auteur field in a forum post.
2, via the username and passwd (password) fields.
4, via (1) the catname parameter to displaypic.asp or (2) the search field. NOTE: vector 1 likely overlaps CVE-2006-3032.
2, via the sortorder parameter.
4, via a symlink attack on temporary files
4, via a long header in an e-mail message.
2, via an invalid action parameter in an info operation
4, via (1) a comment for a table name
2, via direct requests to (a) scripts/check_lang.php and (b) themes/darkblue_orange/layout.inc.php; and via the (1) lang[]
1, use IP addresses via false headers.
2, via unspecified vectors
3, via unspecified vectors.
2, via the PORT command
4, via a .. (dot dot) in a filename argument.
2, via the page parameter.
0, by using certain privileged IOCTLs to modify callback function pointers.
4, via a web page that contains a large number of nested marquee tags
4, via a web page that contains a large number of nested marquee tags
4, via a web page that contains a large number of nested marquee tags
4, via a URL in the vsDragonRootPath parameter to (1) team_admin.php
0, by modifying certain registry keys.
4, via the mosConfig_absolute_path parameter.  NOTE: this issue may overlap CVE-2006-5047.
4, via a URL in the GLOBALS[where_lms] parameter to (1) class.module/class.definition.php and (2) modules/scorm/scorm_utils.php.  NOTE: this issue may overlap CVE-2006-2577.
4, via unspecified vectors.
0, by adding certain characters to the end of a domain name
2, via the (1) by and (2) order parameters.  NOTE: it is not clear whether this issue is exploitable.
4, via a URL in the class_pwd parameter.  NOTE: this issue has been disputed by CVE and multiple third parties
4, via a URL in the absolute_path parameter.
2, via the javascript: URI in the (1) href or (2) onmouseover attribute of the A HTML tag.
2, via the javascript: URI in the (1) href or (2) onmouseover attribute of the A HTML tag.
4, via unspecified vectors.
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via an object tag with a data parameter that references a link on the attacker's originating site that specifies a Location HTTP header that references the target site
2, via the (1) commentname
4, via a modified membername parameter.
2, via the (1) title and (2) newspost parameters to (a) newsadd.php
4, via a q=phpinfo QUERY_STRING
0, by providing the file number in a modified id parameter.
2, via direct requests to (1) email/mail.php
4, via a .. (dot dot) in the L parameter
2, via the Email field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this issue may overlap CVE-2006-5195.
4, via a URL in the xtrphome parameter.
4, via the user_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the checkauth parameter.  NOTE: CVE disputes this vulnerability because the checkauth parameter is only used in conditionals.
4, via a long USER command
4, via a URL in the banned_file parameter.  NOTE: CVE disputes this vulnerability because banned_file is set to a constant value.
4, via shell metacharacters in the page parameter of a show_text action.
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: CVE disputes this issue because the script is protected against direct requests.
4, via a direct request to admin.php with adminop=job-edit.
4, via a URL in the admin_template_path parameter to admin/ scripts (1) app_change_email.php
5, via a URL in the _PX_config[manager_path] parameter.
2, via an arbitrary URL in the url parameter to a showhtml action for index.php
4, via (1) the search box
4, via a URL in the (1) func_prog parameter to (a) preload.php and (b) index.php; (2) header_prog parameter to (c) missing.php and (d) email.php
2, via the sqlcmd parameter.
4, via a frameset with only one frame that calls resizeTo with certain arguments.  NOTE: this issue might be related to CVE-2006-3637.
0, via certain malformed HTML
4, via a table element with a CSS attribute that sets the position
4, via a URL in the phpbb_root_path parameter.
1, via IMG tags in the search box.
2, via the cat parameter.
4," via """".."""" sequences in the imgpath parameter."
2, via the action parameter.  NOTE: this issue was announced by an unreliable researcher
4," via (1) """"long command lines at port 32000"""" and (2) certain name service queries that are not properly handled by the SMTP service."
4, via a message with a long subject field.
5, via a TOP command to the POP3 service.
4, via a message in which neither the originator nor recipient address is known.
2, via the start parameter.
1, via script tags in (1) posts and (2) profile names; and (3) a javascript URI in a URL argument in the photo gallery.
5, via a URL in the sitepath parameter.
4, via a URL in the (1) rootpath and possibly (2) sitepath parameters to (a) cmpro.ext/comment.core.inc.php and (b) cmpro.intern/comment.core.inc.php.  NOTE: the provenance of this information is unknown; details are obtained from third party sources.
4, via a URL in the rootpath parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the path parameter that points to an alternate bannedips.php file.  NOTE: this issue was originally reported as remote file inclusion
4, via a URL in the (1) clarolineRepositorySys parameter to (a) atutor.inc.php (b) db-generic.inc.php (c) docebo.inc.php (d) dokeos.1.6.inc.php (e) dokeos.inc.php (f) ganesha.inc.php (g) mambo.inc.php (h) moodle.inc.php (i) phpnuke.inc.php (j) postnuke.inc.php and (k) spip.inc.php in claroline/auth/extauth/drivers/; (2) includePath parameter in mambo.inc.php
4, via (1) events in forced links (url parameter) that are not properly handled in formatters/wakka.php
3, by creating a large number of posix timers
4, via a URL in the (1) file_path parameter to (a) index.php
5, via a URL in the inc_dir parameter
4, via a URL in the path parameter to (1) functions.php and (2) members.php.  NOTE: the index.php vector is covered by CVE-2006-0791.
2, via the category parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. NOTE: this issue might be primary to CVE-2006-2506.2.
2, via the catid parameter to (1) templates/standard/search_form.html and (2) templates/dark/search_form.html.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via encoded entities (&#0000039) in IMG tags to (1) messages
0, via an invalid id parameter in a dologin action
2, via an invalid d parameter
4," via """".."""" sequences in the uname parameter."
2, via the phpinfo parameter.
2, via an IFRAME with a certain XML file and XSL stylesheet that triggers a crash in mshtml.dll when a refresh is called
0, by creating an object inside an iframe
4, via a URL in the cl_headers parameter to (1) menu.php3 and (2) login.php3.
2, via the root_dir parameter.
3, via an nfile[] parameter with a filename that contains a .php extension followed by a valid image extension such as .gif or .jpg
2, via the CLIENT_IP parameter.
2, via the (1) b[username] and (2) c parameters to (a) index.php
2, via unknown vectors related to the uploaded attachments form.  NOTE: some details were obtained from third party information.
1, by setting the userName cookie.
2, via the entry parameter.  NOTE: this issue might be resultant from SQL injection.
2, via the entry parameter.
2, by modifying the $xoopsOption['pagetype'] variable.
4," via """".."""" sequences in the old_avatar parameter."
0, via the Include parameter to (1) Include/lib.inc.php3 and (2) Include/variables.php3.
4, via a direct request with a modified dl parameter.
4, via CRLF sequences in the query string
0, via the username parameter to (1) logon_user.php and (2) update_profile.php.
2, via the id parameter.
4, via a URL in the php_root_path parameter.
5, via a URL in the fullpath parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the usercookie[password] cookie parameter.
4, via unspecified vectors.
4, via a large data_len value
4, via a long nickname.
4, via a .. (dot dot) in the read parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the phpbb_root_path parameter.
2, via the AdminUser cookie.
4, via a URL in the filename parameter.  NOTE: in the original disclosure
4, via a URL in the rel_path parameter.
4, via a URL in the amp_conf[AMPWEBROOT] parameter.
4, via unspecified vectors.
2, via the PNSVlang cookie
2, via an avatar file. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the catid parameter to include.php when the path parameter is set to faq/faq.php
0, via the member_id parameter ($id variable) to index.php.
4," via """".."""" sequences in the theme cookie to index.php"
2, via the mid parameter.
5, via a URL in the phphtmllib parameter.  NOTE: this issue might be in phpHtmlLib.  NOTE: CVE disputes this issue for proper installations of maintain
5, via (1) a long URL
2, via the HTTP Referer header
2, via the query string
4, via a URL in the main_dir parameter to (1) forum/main.php and (2) forum/headlines.php.
4, via a URL in the website parameter.
4, via a URL in the include_path parameter
2, via the web_root parameter.
0, via the pmdlang parameter to viewticket.php.
5," via (1) """".."""" sequences or (2) absolute pathnames in the filename parameter."
4, via a URL in the relativer_pfad parameter
5, via a URL in the relativer_pfad parameter to (1) poll.php
2, via the shoutbox.
2, by modifying the P_LOV parameter and calculating a matching MD5 checksum for the P_LOV_CHECKSUM parameter.  NOTE: it is likely that this issue is subsumed by CVE-2006-5351
2, via the problem description field.
2, via the user name in the login page.
4, via a modified user_id parameter.
4, via a URL in the cp_root_path parameter
4, via a URL in the phpbb_root_path parameter.
2, via the phpbb_root_path parameter.  NOTE: this might be the same issues as CVE-2006-4893.
4, via (1) the query string to (a) index.php
0, via the mcname parameter to (1) moscomment.php and (2) com_comment.php.
4, via a malicious library in the (1) hwcap
2, by setting certain pseudo cookie values.
4, via a URL in the pathToFiles parameter.
2, via certain requests to (1) templates/iono/admin/denied.tpl.php
4, via a KML or KMZ file with a long href element.
4," via """".."""" sequences in the TORRENTSDIR parameter in a prune action."
2, via the (1) k_a class or (2) sifre parameter.
4," via certain """"special URIs."""""
0," via """"a specific JSP URL."""""
4, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the _CONFIG[skin_dir] parameter.
2, via the (1) t
5, via a request with an empty value of the x[] parameter.
5, via a leading dotted-quad IP address string in the (1) PC-REMOTE-ADDR HTTP header
5, via a crafted option_new[report_w_day] parameter in a preferenze action
4, via a URL in the phpbb_root_path parameter.  NOTE: this may be the same issue as CVE-2006-5235.
5, via a URL in the (1) fichero parameter to morcegoCMS.php or the (2) path parameter to adodb/adodb.inc.php.  NOTE: vector 1 has been disputed by a third party who shows that $fichero can not be controlled by an attacker.
4, via a URL in the inc parameter.
4, via a URL in the toroot parameter.
4, via a URL in the relative_root parameter.
2, via the srch variable.
2, via certain requests
1, via unspecified vectors related to the Statistics Log Viewer.
2, via unspecified vectors in the viewnews function
4, via a modified PATH that points to a malicious rm program.
4, via a URL in the SMARTY_DIR parameter.  NOTE: this issue is disputed by CVE and a third party because SMARTY_DIR is a constant.
5, via a man-in-the-middle (MITM) attack in which an attacker-controlled server proxies authentication data to and from a legitimate SiteKey server.  NOTE: the vendor disputes the severity of the issue
3," by mounting a smbfs file system in compatibility mode (""""mount -t smbfs"""")."
4, via a large num value.
4, by creating a ADODB.Recordset object and making a series of calls to the NextRecordset method with a long string argument
3, via unspecified vectors.
4, via a URL in the phpbb_root_path parameter.
1, via unspecified vectors related to keywords results in the (1) main
3, by creating a database.
2, by sending many remote protocol versions; and (2) cause a denial of service (connection drop) via certain network traffic
5, via a certain print job request.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified vectors involving the (1) name and (2) d_name entry attributes.
4, via a crafted FLI file.
2, via the Entry parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an EXPLAIN SELECT FROM on the INFORMATION_SCHEMA table
4, via (1) multiple STOR (aka PUT) commands
4, via a URL in an unspecified parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
2, via an APX file that lacks NULL termination.
2, via the title parameter.
4, via a crafted S/MIME message.
4, via a crafted WordPerfect file in which values to loop counters are not properly handled in the (1) WP3TablesGroup::_readContents and (2) WP5DefinitionGroup_DefineTablesSubGroup::WP5DefinitionGroup_DefineTablesSubGroup functions.  NOTE: the integer overflow has been split into CVE-2007-1466.
4, via a symlink attack on the (1) gnucash.trace
2, via an object tag with an encoded applet and an undefined name attribute
4, via a Java class loader with a modified defineClass method that saves the bytecode to a file before it is passed to the JVM.
4, via a long rtsp:// URI.
0, via a long filename in a LST file.
4, via a long LIST command and other unspecified requests to the FTP service
4, via a long ftps:// URL.
0, via format string specifiers in an aim:// URI.
5, via a modified PATH that points to a malicious launchctl program.
5, via a malformed VEVENT record in an .iCal meeting request or ICS file.
4, via a large length value in the second (or later) anih block of a RIFF .ANI
0, via an Add action with a modified GroupID in a direct request to Customize.asp.
4, via a URL in the language parameter.  NOTE: this issue has been disputed by the developer and a third party
2, via the id parameter.
2, via the iPro parameter.
2, via the sortby parameter.
2, via directory traversal sequences in the Name parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) cat parameter to (a) ashop/catalogue.php and (b) ashop/basket.php
0, by guessing the snapshot filename using brute force
4, via a QuickTime movie (.MOV) with an HREF Track (HREFTrack) that contains an automatic action tag with a local URI
2, via unknown vectors
1, via unknown vectors
1, via unknown vectors
4, via a javascript: URI in a getURL statement in a .swf file
4, via a long MC-filename.  NOTE: this issue has been disputed by a reliable third party who states that the compiler is not a privileged program
5, via a .. (dot dot) in the (1) src parameter to page.php or the (2) format parameter to search_form.php.
4, via the product_id parameter.
2, via the id parameter.
4, via a direct request for themes/darkblue_orange/layout.inc.php
4, via a crafted ISO file containing a file within several nested directories.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a crafted HTTP GET request.
4, via a CSRF attack with an invalid token and quote characters or HTML tags in URL variable names
2, via the IssueInstant parameter
2, via the catid parameter.
4," via (1) a long traffic class argument to the """"class show"""" command or (2) a long POLICY parameter value in clastree.htm."
4, via unspecified vectors.
2, via the Username to login.php
0, via an absolute pathname in the file parameter to (1) edittag.cgi
0, via the plain parameter to (1) mkpw_mp.cgi
2, via multiple HTTP requests containing invalid Content-Length values.
2, via the q parameter.
4, via (1) the cat parameter to albmgr.php
0, by naming them with a .phtml extension
4, via a JPEG file with an invalid number of index bytes in the Define Huffman Table (DHT) marker.
2, via the book_id parameter.
2, via the subcatID parameter.
2, via the id parameter.
2, via the id parameter.
2, via the (1) id or (2) user_login_cookie parameter.
0, via the action parameter
2, via the id parameter.
2, via the search parameter.
2, via the CatID parameter.
4, via a URL in the custom_admin_path parameter to (1) index.php or (2) archives.php.
2, via the ordernum parameter.
4, via a URL in the bnrep parameter
2, via the (1) id parameter in (a) delete-announce.php; the (2) Announcement form field in (b) staff.php; the (3) Client Name
0, via format string specifiers in the Javascript alert function.
4, via a URL in the (1) page
4, via a .. (dot dot) in the database filename
1, via malformed RPC requests that trigger a crash in rpcbind.
4, via a URL in the AMV_serverpath parameter.
4, via a URL in the AML_opensite parameter.
4, via a URL in the AMG_serverpath parameter to (1) comments.php and (2) signin.php; and possibly via a URL in unspecified parameters to (3) include/submit.inc.php
4, via a long string in the (1) astrVerion parameter to the SendChatRoomOpt function or (2) the astrDownDir parameter to the SendDownLoadFile function.
1, via scriptable attributes in the redirect_to parameter.
2, via the words parameter.
5, via a URL in the s[phppath] parameter.
2, via the subid parameter.
4, via a crafted ISO file containing a file within several nested directories
4, via a URL in the _config[site_path] parameter.
4, via a URL in the _config[site_path] parameter to (1) admin_password.php
3, via the NS-max-records parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted request that bypasses the include/exclude checks.
1, via unknown vectors related to a large number of calls in a batch.
4, via (1) the xcho parameter to my.logon.php3; the (2) topblue
4, via (1) a trailing null byte
4, via a URL in the action parameter.  NOTE: CVE disputes this issue
4, via a URL in the include_dir parameter.
0, via two certain fields in a contents_new operation in the ad_contents section.
4, via a direct request with an MK_PATH=1 query string
2, via the username field (txtUserName parameter) and possibly other parameters.  NOTE: some details were obtained from third party information.
5, via a long volume name in a DMG disk image
4," via """"an invalid value in a DLSw message... during the capabilities exchange."""""
4, via a URL in the baseAxiomPath parameter.
4, via a long destination hostname (dest).
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4," via """".."""" sequences in the (1) aj_skin and (2) skin_edit parameters.  NOTE: this can be leveraged for file inclusion by creating a skin file in the lang directory"
1," via unspecified vectors involving an """"unchecked buffer"
2, via an FTP server response of a specific length that causes a terminating null byte to be written outside of a buffer
0, by instantiating certain COM objects from Urlmon.dll
1, via crafted literals in an IMAP command
2, via unknown vectors
2, via the download_category parameter.
2, via the LoginLastname parameter.
2, via the msg parameter.
2," via the """"by User"""" field (aka the TXbyuser parameter)."
4, via a (1) &CONNECTSERVER& (2) &ADDENTRY& (3) &FIN& (4) &START& (5) &LOGPATH& (6) &FWADELTA& (7) &FWALOG& (8) &SETSYNCHRONOUS& (9) &SETPRGFILE&
5," via a crafted DMG image that causes """"allocation of a negative size buffer"""" leading to a heap-based buffer overflow"
4, via a URL in the install_dir parameter.  NOTE: CVE and third parties dispute this vulnerability because install_dir is defined before use.
4, via a URL in the jssShopFileSystem parameter.
4, via a process with a long filename that is mapped in its address space
4, via a symlink attack on temporary files.
4, via shell metacharacters in a prepared link in a crafted document.
1, via unspecified vectors in a HTTP GET request.
4, via (1) GRE packets with out-of-order sequence numbers or (2) certain GRE packets that are processed using a wrong pointer and improperly dequeued.
4, via a RTF file with a crafted prtdata tag with a length parameter inconsistency
1, via crafted FTP directory listing responses
2, by causing an external_acl queue overload
2, via the o parameter.
5, via a ' (quote) character in the o parameter
1, via crafted GRE packets
4, via unspecified vectors.
4, via unknown vectors.
0, via a certain M3U file that contains a long #EXTINF line and contains format string specifiers in an invalid udp:// URI
4, via a crafted .wmv file.
3, via unspecified vectors. NOTE: the grsecurity developer has disputed this issue
2, via the p parameter.  NOTE: some of these details are obtained from third party information.
2, via an invalid cat parameter to boxx/knowledgebase.asp
4, via a URL in the this_path parameter.  NOTE: a reliable third party disputes this vulnerability because this_path is defined before use.
4, via a crafted RAR file.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long command line argument.  NOTE: this issue may cross privilege boundaries if an application automatically invokes Winzip32.exe for untrusted input filenames
4, via (1) the pic parameter to custom/piczoom.asp
2, via the iid parameter.
3, by mounting a crafted UNIX File System (UFS) DMG image that contains a corrupted directory entry (struct direct)
2, via the GET_PROPERTY function in SYS.DBMS_DRS
5, by mounting a crafted Unix File System (UFS) DMG image
4, via a URL in the chemin parameter.
4, via a URL in the path parameter.
2, via the (1) SessionID parameter to (a) Logon.aspx
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
4, via a URL in the env[rootPath] parameter.
2, via Wiki Page titles.
4, via a long SITE ADMIN command.
4, via a URL in the INCLUDE_DIR parameter to (1) forms.php
2, via unspecified vectors related to (1) Options.cpp when storing settings in the registry
1, via crafted arguments.  NOTE: some of these details are obtained from third party information.
4, via a crafted HFS+ filesystem in a DMG image
4, via unspecified vectors.
1, via crafted HTML documents.
2, via the Download method.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via (1) the Execute method
4, via a relative pathname in the file parameter
2, by using the ajouter=1 query string and the add menu.
0, by creating links using FileLinkInformation requests with the ZwSetInformationFile function
4, via unknown vectors.
4, via a .. (dot dot) in the languagepack parameter to (1) jax_petitionbook.php or (2) smileys.php.
4, via a .. (dot dot) in the skinnn parameter
4, via a USER command with a large number of format string specifiers
2, via the Password field (ps parameter).  NOTE: some of these details are obtained from third party information.
2, via the board[styleid] parameter to index.php.
4, via a TD element with a large number in the ROWSPAN attribute
2, via certain IPv6 ICMP (aka ICMP6) echo request packets.
2, via format string specifiers in the channel name of an INVITE request
2, via the us parameter.
4, via a .. (dot dot) in the gateway parameter.
3, via the (1) ps
4, via a crafted .cnt file composed of lines that begin with an integer followed by a space and a long string.
2, via the PATH_INFO string.
2, via the id parameter.
4, via a long CCRP.RootFolder property value.
4, via ..%5C (URL-encoded dot dot backslash) sequences in a URI requested from the AR7 webserver.
3, via unknown vectors.
4, via a URL in the setup_folder parameter.
4, via a URL in the file parameter.
4, via a URL in the chem parameter.
2, via unspecified vectors
3, via unspecified parameters.
2, via the (1) error_msg parameter to (a) suggest_category.php; the (2) u parameter to (b) user_detail.php; the (3) friend_name
5, via unspecified vectors.  NOTE: this is probably a different vulnerability than CVE-2006-5830.
4, via a modified PATH that points to a malicious ipfw program.
4, via a long string in the MBSE_ROOT environment variable.
2, via the comment forum.
4, via a banners add operation that uploads the PHP code through an image_form parameter specifying a multiple-extension filename such as .jpg.vil.gif.php
4, via a long CCRP_BDc.SelectedFolder property value.
4, via (1) the active parameter in admin/modules/modules.php; the (2) ad_class
5, via (1) the searchword parameter in certain files; the where parameter in (2) plugins/search/content.php or (3) plugins/search/weblinks.php; the text parameter in (4) plugins/search/contacts.php
4, via a direct request for (1) plugins/user/example.php; (2) gmail.php
4, via unspecified vectors.
4, via (1) the id parameter in kernel/group.php in core
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified parameters.  NOTE: CVE analysis suggests that the vendor fixed these issues.
0, via the id parameter
4, via unspecified vectors.
4," via """"unvalidated output"""" in FAQ/index.php"
4, via the catid parameter.
2, via the tag parameter.
2, via certain scan job settings.
5, via a URL in the inc_dir parameter.
2, via the (1) Sujet or (2) Pseudo field.
2, via the (1) recipient or (2) BCC field when selecting send in a pm action.
2, via the keyword parameter.
2, via the init_row parameter.
2, via the username parameter.
2, via the keyword parameter.
2, via the username parameter during anonymous registration
3, via certain requests that trigger errors that lead to a server being marked as unavailable
4, via a help project (.HPJ) file with a long HLP field in the OPTIONS section.
4, via a crafted FTP command
4, via a large mappingCount value.
4, via a LOGINKEY=TECOM cookie value.
4, via (1) the TO parameter to loop.csp
2, via long values for certain Proxy configuration parameters.
2, via multiple crafted CAB archives.
0, via format string specifiers in a filename on an AFS file system
3, via unspecified vectors.
3, via unspecified vectors.
2, via unspecified vectors
2, via fragmented HTTP packets.
3, via unknown vectors.
0, via format string specifiers in (1) SWUTMP or (2) SUCATALOG filenames
4, via a crafted HTTP 301 response
2, via format string specifiers in a (1) PKG
4, via a crafted ASF_File_Properties_Object size field in a WMV file
4, via a symlink attack on application logs in /Library/Logs/CrashReporter/.
4," via a long file path in the """"1 TYPELIB MOVEABLE PURE"""" option in an RC file."
2, via unspecified manipulations of Smb4K's lock file
4, via a crafted IPv6 Type 0 Routing header.
3, by reading a web server's log file
2, via the URI for (1) show_owned.php or (2) show_joined.php.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
0, via the cat parameter to (1) show_owned.php
5, via a URL in the WEBCHATPATH parameter.
4, via a URL in the (1) phpAds_geoPlugin parameter to libraries/lib-remotehost.inc
4, via a URL in the fpath parameter. NOTE: this issue has been disputed by third party researchers
4, via a URL in the mosConfig_absolute_path parameter.
2, via an invalid listingID parameter in a listingview action.
4, via a URL in the my_ms[root] parameter
2, via the (1) id or (2) galleryID parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the racine parameter.
4, via a URL in the g_strRootDir parameter.
4, via a URL in the my[root] parameter.
4, via a URL in the env[inc_path] parameter.
4, via a URL in the include_path parameter.
4, via a URL in the gen parameter.
0, via the picID parameter
4, via unknown vectors.
0, by guessing the filename
4, via a URL in the BBC_LANGUAGE_PATH parameter.
4, via a URL in the path parameter to (1) dom.php
5, via unspecified vectors.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the recipient field.
2, via the bid parameter.
2, via the URL (PATH_INFO) to (1) articles/edit.php
3, via the REMEMBER_KEY cookie parameter. NOTE: some of these details are obtained from third party information.
4, via a crafted link
4, via a URL in the include_path parameter to (1) index.php
4, via a URL in the lang_file parameter.
4," via (a) certain """"fields on project nodes"""" or (b) """"certain project-specific settings regarding issue tracking."""""
4, via pingback service calls with a source URI that corresponds to (1) a large file
4, via pingback service calls with a source URI that corresponds to a large file
4, via pingback service calls with a source URI that corresponds to a file with a binary content type
2, via the user parameter.
2, via the Subject field
4, via unspecified vectors.
4, via a large number of requests for nonexistent objects.
2, via the user parameter.
3, via keyword parameter.
4, via a URL in the (1) pth[file][config] and (2) pth[file][image] parameters.
4, via the error_url parameter.
3, via the (1) data[realm] and (2) _url parameters
2, via the id parameter.
5, via a URL in the MODULES_DIR parameter.
4, via a URL in the sql_language parameter.
2, via the user parameter.
4, via a URL in the phpbb_root_path parameter to (1) admin_linkdb.php
4, via a crafted .avi file
0, via unspecified vectors related to (1) error messages and (2) blocked page messages produced by SWS.
5, by submitting a large file.
5, via unspecified vectors.
2, via the id parameter.
2, via the _p parameter.
4, via a URL in the gl_root parameter.
0, via the id parameter in a shownews action.
4, via a URL in the ains_path parameter.
4, via a URL in the cfgPathModule parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the racineTBS parameter.
0, via the wcHeadlines parameter
2, via the (1) Userid and (2) Password fields.
4, via a URL in the server_base_dir parameter.
4, via a URL in the path parameter.
0, by closing the HTTP connection early.
4, via a URL in the sesion_idioma parameter.
4, via a URL in the phpbb_root_path parameter.
2, via the User (username) field.
4, via a URL in the include_path parameter.
0, via the user parameter to info_user.asp.
4, via a URL in the phpbb_root_path parameter.
1, via unspecified vectors related to admin/login.php and the Admin Panel Database.
0, via the q parameter (aka the search box).
4, via a URL in the PF[top_url] parameter.
4, via a direct request to forum.php with the fid=XD query string
2, via the fid cookie to forum.php.
2, via the uid parameter.
5, by sending a cookie
2, via unspecified vectors related to the MTCommentPreviewIsStatic tag
2, via the picture parameter.
2, via the (1) bn[] array parameter to index.php
2, via an invalid (1) GB_TBL parameter to (a) lang/codes-english.php or (b) image.php
2, via the sender parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified vectors in (1) inc.page.php and (2) inc.text.php.
3, via unexpected data.
4," via """".."""" sequences in the album parameter to index.php."
4, via a crafted page block length in a CHM file
4,send messages to
2, via the startrow parameter.
4, via a ' (quote) character
2, via the (1) id
2, via the catid parameter.
4, via a username cookie
4, via a URL in the myNewsConf[path][sys][index] parameter.
1, via certain ICMP packets.
4, via a URL in the (1) config[path] parameter to (a) common_foot.php or (b) blogs.php
4, via a .. (dot dot) in the galeria parameter
4, via a % (percent) character in the dbfieldv parameter.
4, via (1) a REMOTE_ADDR cookie or (2) a cookie specifying an element of the msg array with an error number in the first dimension and 0 in the second dimension
4, via a long argument
3, via the (1) id and (2) pass to user_confirm.asp.
5, via a long line in a .cpp file.
0, via format string specifiers in filenames that are not properly handled when calling the (1) NSLog and (2) NSBeginAlertSheet Apple AppKit functions.
0, via format string specifiers in a filename
0, via format string specifiers in a filename
4, via a long filename.  NOTE: other overflows exist but might not be exploitable
4, via (1) e-mail messages and (2) the ID parameter to (a) right.asp
4, via a link or IMG tag.
1, via crafted header information in a skin bitmap image
4, via a URL in the phpbb_root_path parameter.
2, via the gamedir command.
2, via an empty captcha element in $_SESSION.
2," via unspecified vectors related to """"Pass through values."""""
4, via a URL in the phpbb_root_path parameter.
0, via the qid parameter
0, via format string specifiers in the filename
4, via a long input string to the (1) iFTPAddU or (2) iFTPAddH file
4, via redirects
1, via unknown vectors related to CGI session files.
4," via the """"r-commands"""""
4, via a value of 0xFFFFFF7F at a certain point in an authentication negotiation packet
4, via a value of 0xFFFFFFFF at a certain point in an authentication negotiation packet
4, via a malformed JPEG file.
2, via the id parameter.
4, via a URL in the GLOBALS[config][framework_path] parameter.
2, via the kategori_id parameter.
4, via a URL in the fichier parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the galleryfilesdir parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the phpbb_root_path parameter.
1, via unspecified vectors
1, via crafted disassociation packets
2, via the itemid parameter.
2, via the id parameter.
2, via the (1) action[] parameter to member.php
4, via (1) a Log In action without a password to login.php
5, via a fullnews request to news.php with an invalid newsid parameter
0, via the catid parameter in a newslist action.  NOTE: this issue can produce resultant cross-site scripting (XSS).
2, via the copyright parameter.
4, via unspecified vectors.  NOTE: some sources mention the escape_sqlData
2, via unspecified parameters
4, via a modified id parameter
0, via the id_mod parameter to templates/modif.html
4, via a URL in the inc_path parameter.
4, via a URL in the level parameter to (1) Shared/controller/text.ctrl.php or (2) UserMan/controller/common.function.php.
4, via a URL in the GLOBALS[core][module_path] parameter.
5, via a URL in the skindir parameter
4," via a .ASX file with a long URI in the """"ref href"""" tag.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information."
1, via unspecified vectors
4, via a crafted MIDI file.
4, via a crafted QuickTime movie file.
5, via a crafted QuickTime movie with a User Data Atom (UDTA) with an Atom size field with a large value.
4, via a crafted PICT file.
4, via a crafted QTIF file.
4, via a crafted QTIF file.
4, via a QTIF file with a Video Sample Description containing a Color table ID of 0
2, via an image with a crafted ColorSync profile.
4," via a """"partially-negotiated"""" SSL connection"
4, via a crafted compressed disk image that triggers memory corruption.
4, via a crafted AppleSingleEncoding disk image.
3, via unknown vectors.
3, by connecting to the server before SSH has finished creating keys
4, via a long ACL.
1," via unspecified vectors involving """"obtaining a send right to [the] Mach task port."""""
4, via a crafted RAW image that triggers memory corruption.
1, via unspecified vectors involving crafted web pages that trigger certain error conditions that are not properly reported in certain circumstances
1, via crafted requests to portmap.
4," via a """"crafted SIP packet when initializing an audio/video conference""""."
4, via a crafted PDF file.
2, via the -i parameter.
4, via a crafted Sample Table Sample Descriptor (STSD) atom size in a QuickTime movie.
4, via a large computer-name size value in a ServerInit packet
5, via a URL in the rootpath parameter.
5, via a URL in the SRC attribute of an HTML element in the lang parameter.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) i or (2) post_id parameter to add_comment.php
4, via a URL in the ezconvert_dir parameter.
4, via a URL in the phpbb_root_path parameter.
2, via the Autor field.
4, via GIF86 header in a file in the uplf parameter
2, via the c_id parameter.
4, via a long line in a .cpp file.
3, via unspecified vectors.
4, via a javascript: URI in the SRC attribute of an IMG element to the (1) First Name
5, via unspecified vectors.  NOTE: the vendor disputes this vulnerability
4, via a PALM image that is not properly handled by the ReadPALMImage function in coders/palm.c. NOTE: this issue is due to an incomplete patch for CVE-2006-5456.
4, via a crafted NFSACL 2 ACCESS request that triggers a free of an incorrect pointer.
4, via fput in a 32-bit ioctl on 64-bit x86 systems
2, via the (1) User and (2) Password parameters.
4, via a URL in the inc_path parameter.
2, via the id parameter.
4, via a URL in the (1) module or (2) view parameter.  NOTE: some of these details are obtained from third party information.
1," via unspecified vectors related to """"sortable tables JavaScript."""""
1, via unspecified vectors in cancel edit functions
4, via a large banner.
4, via a URL in the config parameter.
2, via the user parameter.  NOTE: this issue has been disputed by a reliable third party
5, via a URL in the language parameter to (1) index.php and (2) admin/index.php.
4, via a URL in the pfad_z parameter.
2, via unspecified parameters to (1) login.asp; and allow remote authenticated users to inject arbitrary web script or HTML via unspecified parameters to (2) badword.asp
4, via unspecified vectors.
0, by adding certain characters to the end of the domain name
2," via unspecified vectors relating to (1) """"print floats"""" and (2) a missing null termination in the """"rope constructor."""""
4," via """".."""" sequences in the subpageName parameter"
4, via a direct request for adminews/index_fr.php3
4," via a channel title (aka room name) that is not properly handled by the """"who's online"""" feature."
4, via a URL in the syf parameter to an unspecified PHP script.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the glConf[path_libraries] parameter.  NOTE: this might be a vulnerability in MVCnPHP rather than a vulnerability in GeekLog.
3, via the pmid[0] parameter.
4, via unspecified vectors.
2, via the psuedo (pseudo) field or (2) during chat.
2, via the s parameter.  NOTE: the thumbnails.asp vector is already covered by CVE-2006-3023.
4, via a crafted TADDR2UADDR that triggers a null pointer dereference in catirpc.dll
2, via the User-Agent HTTP header
4, via a URL in the chemin parameter to (1) mod_news/index.php
4, via a .. (dot dot) in the chemin parameter to (1) mod_news/index.php or (2) mod_news/goodies.php.  NOTE: The provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the dateien[news] parameter.
4, via a response to a PWD command that contains a long string with deeply nested directory structure
2, via the forumid parameter.
4, via a JavaScript function that invokes the Remove method with an invalid index argument
4, via a URL in the newsenginedir parameter.
2, via unspecified vectors related to the (1) User Group Manager
4, via a URL in the CONF[path] parameter to (1) index.php
2, via the user name field when the user joins a chat room
4, via a URL in the rootdir parameter.
4, via a HOST: header with a hostname and port number that refers to the server itself.
4, via a URL in the (1) P_LIB and (2) P_INDEX parameters.
2, via unspecified vectors in the search class.  NOTE: it is possible that this issue overlaps CVE-2006-4543.3 or CVE-2006-4454.
5, by obtaining a valid session identifier and setting the uid parameter to 1.
2, via the name parameter.
2, via the id parameter to priv.php.
4, via a URL in the path_to_folder parameter.
2," via the """"Keyword search"""" form field and unspecified other form fields that populate a public saved query.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
2, via the Username form field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the obj parameter.  NOTE: a third party claims that this issue is not file inclusion because the contents are not parsed
4, via (1) the page info
5, via a URL in the (1) TEMPLATE_DIR parameter to (a) showinvoices.php
4, via a URL in the _CCFG['_PKG_PATH_MDLS'] parameter.  NOTE: this issue has been disputed by a reliable third party
2, via the GNP_REAL_PATH parameter.  NOTE: CVE and a third party dispute this issue
0, via the tc_config[rootdir] parameter to (1) upgrade.php
2, via the id parameter.
2, via the id parameter.
4, via a URL in the paths[version] parameter.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Extension field.  NOTE: this might be a duplicate of CVE-2007-0830.5.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unknown vectors
4, via a filename with a double extension such as (1) .rar.php or (2) .zip.php.
4, via a .. (dot dot) in the URI.
4, via a direct request for (1) config_edit.php
4, via a direct request for (1) admin_ajouter.php or (2) admin_supprimer.php.  NOTE: this could be leveraged to conduct cross-site scripting (XSS) attacks.
5, via unspecified vectors. NOTE: this issue has been disputed by a third party
2, via the Qwd parameter to the top-level URI.
4, via a malformed WML page
2, via certain executable files in PE format.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the (1) config[oi_dir] and possibly (2) config[openi_dir] parameters to open-admin/plugins/site_protection/index.php.  NOTE: vector 2 might be the same as CVE-2006-4750.
4, via a .. (dot dot) in the filename parameter.
4, via unspecified vectors.
2, via the id parameter.
3, via certain base64-encoded data on the pop3 port (110/tcp)
2, via the password parameter.
2, via the query string.
4, via CRLF sequences in the url parameter
3," via leading """".."""" sequences on the pmv_ck_view COOKIE parameter"
4, via a direct request to (1) Simple.deps.php
5, by moving a low-level directory to a higher level as it is being deleted
4, via a .. (dot dot) in the id MIME header parameter in a multi-part message.
2, via the (1) hitcounts and (2) general parameters
2, via the ID parameter to index.php.
1, via unspecified vectors in the session extension.  NOTE: it is possible that this issue is a duplicate of CVE-2006-6383.
4, via unspecified vectors in the (1) session
2, via unspecified vectors involving the sapi_header_op function.
0, via format string specifiers to (1) all of the *print functions on 64-bit systems
4, via unspecified vectors.
0, via unknown attack vectors
3, via unknown vectors.
4, via a crafted RPC request.
3, via unknown vectors.
2, use regular expressions via fragmented packets.
4, via a ..%00 sequence in the URI.
2, via the forumid parameter.
2, by placing the URL in the query string to the top-level URI.
2, via the query string.
5, via a query string composed of a search for certain characters.
4, via a direct request to phpPollAdmin.php3.  NOTE: this issue might subsume CVE-2006-3764.
2, via the q parameter.
4, via a torrent file with a crafted announce header.
4," via """".."""" sequences in the p parameter."
1, via unknown vectors involving the use of PHP's extract function.
4, via a beacon frame with a long TIM Information Element.
4, via a Visio (.VSD
4, via a Visio (.VSD
1, via unspecified vectors involving HTML redirection queries
2, via unspecified vectors
1, via crafted Cascading Style Sheets (CSS) strings that trigger memory corruption during parsing
2, via the cat parameter.
2, via the cat parameter.
2, via the (1) t and (2) yr parameters
2, via the keywords parameter.
3, via certain base64-encoded data following an AUTHENTICATE NTLM command to the imap port (143/tcp)
4, via a username beginning with a '-' character
1, by using the interpreter (PT_INTERP) functionality and triggering a core dump
1, via malformed SNMP requests.
1, via unspecified vectors related to POST parameters to multiple files.
0, via the testID parameter to directions.php
4, via the Client-IP HTTP header and certain other HTTP headers
0, by modifying the HTTP request to send an image content type
2, via the Referer HTTP header and certain other HTTP headers
4, via a long DVD_TOOLS.OpenDVD property value.
1, via long input data.
4, via the tznMessage parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a URL in the Root_To_Script parameter.
0, via the id parameter to pollmentorres.asp.
2, via the npid parameter in a sign_gb action.
4, via a .. (dot dot)
5, by writing to an about:blank tab and overlaying the location bar.
4, via a long key length value to the remote administration port (9191/tcp).
4, via a crafted XML list of radio stations
4, via a URL in the gb_pfad parameter.
2, via the article parameter.
4, via a URL in the ht_pfad parameter.
4, via a long CWD command.
2, via the id parameter.
2, via certain vectors related to the HaberDetay.asp and rss.asp components
4, via a URL in the newsordner parameter.
2, via the hier parameter.
2, via the CAT_ID parameter.
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.
4, via a URL in the _SERVER[DOCUMENT_ROOT] parameter.
4, via a URL in the gb_pfad
2, via the album parameter in view mode.  NOTE: some of these details are obtained from third party information.
5, via a symlink attack on the DB2DIAG.LOG temporary file.
0, via unspecified vectors related to HTML entities and the IMG element.
4, via a long host name.
4, via a DNS response containing a label pointer that references its own offset.
2, via the root parameter.
4, via a crafted URL.
3, via the category_id parameter.
4, via a .nzb file with a long subject field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the xnews-template parameter.
5, via a .nzb file with a long (1) group or (2) subject string.
4," via a URI composed of the admin/ directory name and an arbitrary filename ending in """".js.""""  NOTE: it was later reported that this issue had been addressed by 5.1.2."
5, via a direct request for /anc_sit.txt.
4, via a URL in the phpbb_root_path parameter.
0, via the file parameter to wp-admin/templates.php
4, via (1) the go parameter
5, via a URL in the dbpath parameter
4, via a URL in the tcmdp parameter to (1) phpxmmsb.php or (2) phpxmmst.php.  NOTE: this issue has been disputed by a reliable third party
2, via the art_id parameter.
4," via a URL in the gbpfad parameter.  NOTE: some sources mention """"Ultimate Fun Board"
0, by triggering certain general protection faults (GPF).
5, via a crafted GIF image that triggers the overflow during decompression.  NOTE: this is a different issue than CVE-2006-3502 and CVE-2006-3503.
0, via the bgcolor parameter
4, via a long (1) DataPath or (2) DownloadPath attributed in a (a) NBI file
4, via a response with a large number of newline characters.
2, via the art_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the func parameter.
0, via (1) long filename in a response to a LIST command
0," via unspecified environment variables related to """"unsafe file access."""""
4, via a long string in unspecified environment variables.
3, via unknown vectors.
4, via a malformed WMF file
3, via JavaScript onUnload handlers that modify the structure of a document.
4, via unspecified vectors.  NOTE: this issue might overlap CVE-2007-0376.
1, via unspecified vectors related to filename validation.  NOTE: some details were obtained from third party information.
5, via a .. (dot dot) in the file parameter.
2," via the (1) message (""""comment"""") or (2) name field"
4, via a ' (quote) character in (1) a PHPSESSID cookie or (2) the id parameter in an article action in index.php
4, via a URL in the laypath parameter.
4, via a URL in the phpbb_root_path parameter.
5, via a URL in the phpbb_root_path parameter.
4, via a cpg131_fav cookie.  NOTE: it was later reported that 1.4.10
4, via a URL in the album parameter during a securealbum todo action.
2, via the (1) login or (2) mail_address field in Register.php
4, via a .. (dot dot) in the page parameter.
2, via the css parameter to (1) flatevents.php
1, via unspecified vectors
4, via a URL in the path_to_smf parameter to (1) bridges/SMF/logout.php or (2) get_session_vars.php.
4, via unspecified vectors.
2, via the id parameter to the (1) updateRow and (2) deleteRow functions in functions.php.  NOTE: some of these details are obtained from third party information.
0, via the id parameter to the (1) updateRow and (2) deleteRow functions in functions.php
4, via a URL in (1) the body parameter to templates/ZPanelV2/template.php or (2) the page parameter to zpanel.php.  NOTE: the zpanel.php vector may overlap CVE-2005-0793.2.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the f parameter.
2, via the f parameter.
4, via a .. (dot dot) in the template parameter.
4, via a .. (dot dot) in the changetheme parameter.
4, via a request to (1) events.php with a curmonth[]=01 query string or (2) enc/stylecss.php with a changetheme[]= query string
4, via (1) an avatar upload in an add_down action
4, via a URL in the fuss parameter.
4, via a URL in the fuss parameter.
2, via the (1) message and (2) title fields.
4, via a URL in the s_fuss parameter.
2, via the (1) strid parameter to index.php and the (2) id[0] or other id array index parameter to filecheck.php.
3, via shell metacharacters in an exec function call.  NOTE: some sources have referred to this as eval injection in the param parameter
4, via a filename with a double extension.
4, via a .. (dot dot) in the filename parameter.
4, via a URL in the php_script_path parameter.  NOTE: This issue may overlap CVE-2006-0723.
2, via the link_parameters parameter in (1) news.php and (2) n_layouts.php.
4, via a .. (dot dot) in the dir parameter.
4, via a .. (dot dot) in the dir parameter.
1, via unspecified vectors related to a (1) lostpassword or (2) register action in index.php
4, via a URL in the adminfolder parameter.
4, via a URL in the hbmpath parameter.
5, via a URL in the step parameter.
4, via a .. (dot dot) in (1) the step parameter to install/index.php or (2) the load parameter to the top-level URI.
3,upload arbitrary files to
2, via the id parameter to the top-level URI
4, via a .. (dot dot) in the (1) act or (2) pid parameter to the top-level URI (index.php)
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. NOTE: issue might overlap CVE-2004-1660 or CVE-2006-4445.
4, via a ws_auth cookie
2, via the add squad feature.  NOTE: this issue may be an administrative feature
4, via a direct request for _admin/.
3, via certain MBean operations
4, via a .. (dot dot) in the id parameter.
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long (1) IsFolderAvailable or (2) RootFolder property value
2, via the topic parameter
4, via a URL in the donsimg_base_path parameter to (1) attributes.php
4, via a URL in the dbs_base_path parameter to (1) utils.php
2, via the surv parameter.
2, via the inc/mysql.php value of the file parameter.
2, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors related to (1) Gallery Comments pages
3, via whitespace
4, via a large n argument
4, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via unspecified vectors. NOTE: this issue might overlap CVE-2006-2225
2, via unspecified vectors
2, via unspecified vectors
5, via a file:// URI in a PDF document
1, via vectors related to DataSource that trigger memory corruption
1, via crafted HTTP headers in request or notification messages
1, via crafted TrueType fonts
4, via a crafted 802.11 frame.  NOTE: this was originally referred to as heap-based
5, via a URL in the include_path parameter.
5," by sending """"data unexpectedly through the port""""."
4," via a request that omits """"http://"""" from the URL and specifies the destination port (:80)."
4, via a symlink attack on /Library/Application Support/Virex/VShieldExclude.txt
2, via the top-level URI on the Incoming interface (port 8001/tcp)
4, via (1) the Referer HTTP header or (2) the URI
2, via the (1) database name
4, via a .. (dot dot) in a SQLiteManager_currentTheme cookie.
4, via a URL in the stwc_counter_verzeichniss parameter.
4, via (1) the sxYear parameter to calendar.php
0, via an avatar filename with a double extension such as .php.jpg
4, via a request with a numerical value for the (1) sxMonth[] or (2) sxYear[] parameter to calendar.php
5, via a ' (quote) value for certain parameters
4, by attempting to insert a corrupted WMF file.
4, via (1) the searchkey parameter to index.php
2, via the PATH_INFO.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the PHPSESSID cookie.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a malformed WMF file.
4, via a URL in the path_to_news parameter to (1) listing.php or (2) visview.php.
2, via the (1) cid
2, via the id parameter.
1, via crafted headers in an e-mail message.  NOTE: some information was obtained from third party sources.
2, via the p_skin parameter to index.php.
3, by uploading a crafted GIF smiley image with a .php extension via the uploadimage parameter to admin.php
4, via a long string in the Content-Length HTTP header.
5, via unspecified vectors.
4, via the (1) data: URI in an HTML e-mail attachment or (2) various non-ASCII character sets that are not properly filtered when viewed with Microsoft Internet Explorer.
3, via unspecified vectors.
4, via a crafted filename.
4, via a crafted UPX compressed file with a negative offset
5, via a long string to the unserialize function
4, via a URL in the config[installdir] parameter to (1) comment.php
2, via the s parameter.
2, via the bug parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the PATH_INFO to (1) Login.php and (2) Register.php.
2, via the td_id parameter.
2, via the postingid parameter.
2, via the user_id parameter.
2, via the cate_id parameter.
4, via a URL in the ipath parameter.
4, via a long argument to the APPEND command.  NOTE: this is probably different than CVE-2006-6423.
5, via a .. (dot dot) in the file parameter.
3, via the (1) name
5, by sending a Session Initiation Protocol (SIP) packet without a URI and SIP-version header
3, by making policy.txt read-only
2, via unspecified vectors involving access to arbitrary memory. NOTE: this issue affects the (1) HIDIC
1, by executing the icebp instruction.
2, via the serendipity[multiCat][] parameter.
4, via a request without a cipher algorithm and an invalid HMAC algorithm.
0, via an unspecified parameter related to the add link menu.
0, by guessing the name of a named pipe under \Device\NamedPipe\OLE and attempting to open it multiple times.
2, via unspecified vectors that bypass the client-side protection scheme
2, by bypassing the client-side protection scheme.
2, via the lcnt parameter.
4, via a URL in the sqllog parameter.
2, via the add rss url form.
4, via a crafted XML configuration file processed by the (1) urlParse function
2, via the password reset interface.
4, via a long username during HTTP Basic authentication.
1, via crafted BDF fonts
4, via a long first line in the fonts.dir file
1, via unspecified vectors involving the copy_from_user function accessing an uninitialized stack buffer.
1," via crafted """"Accept-Language headers that do not conform to RFC 2616""""."
4, via application/x-www-form-urlencoded POST data that contains an ASCIIZ (0x00) byte
2, via unspecified URL parameters.
4, via unspecified vectors.  NOTE: this issue is probably different than CVE-2007-0376.
3, via the (1) id parameter in the delete action in (a) search.php or (b) search-pda.php
1," via fragmented IPv6 packets due to """"incorrect mbuf handling for ICMP6 packets.""""  NOTE: this was originally reported as a denial of service."
2, via the divisor operand to the aam instruction
5, by editing a copy of php.ini file using the -f parameter
5, by querying a metaserver that sends a long server entry processed by metaGetServerList and allow remote metaservers to execute arbitrary code via a long server entry processed by metaGetServerList; (2) allow attackers to have an unknown impact by exceeding the configured number of metaservers; and allow remote attackers to corrupt memory via a SP_CLIENTSTAT packet with certain values of (3) unum or (4) snum
4, via a URL in the tpl_pgb_moddir parameter.
4, via a long LOGIN command.  NOTE: this might be the same issue as CVE-2006-5961.
2, via the MSN parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a large value in the length argument
2, via the result_id and length arguments.
4, via a WScript.Shell COM object
0, by overflowing this counter
4," via """".."""" sequences in a torrent filename."
4, via a negative or large idx value.
4, via a direct request for (1) validlien.php3 (2) supprlien.php3 (3) supprub.php3 (4) validlien.php3 (5) confsuppr.php3 (6) modiflien.php3
2, via unspecified parameters to (1) recherche.php3 or (2) ajouter.php3.
4, via a URL in the baseDir parameter.
4, via a .. (dot dot) in the file_to_download parameter.
4, via a URL in the file parameter.
2, via the Chat Name field
0, by injecting arbitrary JavaScript or HTML in a (1) db or (2) table parameter value followed by an uppercase </SCRIPT> end tag
3, via long strings.
2, via unspecified manipulations
4, via a long (1) BGCOLOR
4, via a long UDP packet that is not properly handled in a recv_from call.  NOTE: this issue might be related to CVE-2006-4948.
4, via a direct request for wp-admin/admin-functions.php
2, via the kategori parameter.
4, via a long string in the second argument.
4, via a URL in the (1) cmd parameter to (a) image_processor.php or (b) picmgmt.inc.php
4, via a URL in the (1) class_path parameter to (a) includes/resa_func.inc.php (b) admin/notices/perso.inc.php
4, via a URL in the formurl parameter.
0, via the ID parameter in a komm aktion.
2, via the message parameter.
3, by performing information_schema table subselects and using ORDER BY to sort a single-row result
4, via a URL in the phpbb_root_path parameter to (1) functions_kb.php
2, via the id parameter
5, via a URL in the g_include parameter to include/include_top.php and certain other PHP scripts.
4, via a URL in the root_dir parameter to (1) init.php and (2) Ajax/editnews.php.  NOTE: some of these details are obtained from third party information.
0, via the list parameter in an archive action.
0," via requests that contain a large amount of data in the """"a"""" variable"
4, via a .. (dot dot) in the pdf_file parameter.
2, via the salary parameter.
4, via a URL in the cmd parameter to (1) admin/utfdbmigrate.php or (2) filter.php.
4, via a URL in the cmd parameter.
4, via a long (1) GET or (2) PUT request
2, via unknown vectors that prevents a password check from occurring.
2, via the id parameter.
2, via the author parameter.
4, via a long href attribute in a link in a WML page.
2, via the (1) r_username
4, via a symlink attack on /tmp/netperf.debug.
2, via the layout parameter.
4, via a URL in the CONF_INCLUDE_PATH parameter to (1) lib-account.inc.php
2, via certain RPC procedure arguments
2, by calling an unspecified RPC function.
4, via a .. (dot dot) in the lang parameter.
2, via the lang parameter.
4, via a direct request to install/install.php
5, by calling filter_var with certain modes such as FILTER_VALIDATE_INT
4, via a URL in the db_file parameter.  NOTE: CVE disputes this vulnerability
4, via a URL in the root_path parameter to (1) inc_checkdate_lang.php
4, via a URL in the moddir parameter to (1) content/load.inc.php
0, via format string specifiers in a URI
4, via unspecified vectors.
4, via a long DNS query packet to UDP port 53.
4, via a crafted WordPerfect file
2, via an attachment to a defect log entry.
2, via the categoryid parameter in a viewimage action.
2, via certain long arguments to the (1) FtpArchie
4, via a direct URL request for admin/AdminBlogNewsEdit.asp.
0, via arguments that are written to $_GLOBALS
4, via multiple space-delimited pathnames.
4, via a long argument.
4, via a .. (dot dot) in the cfg_language parameter. NOTE: this issue has been disputed by CVE
2, via the filename parameter.
2, via an unspecified parameter.
4, via a direct request to createadmin.php with Name
0, via the e_id parameter in a viewentry cmd.
0, via the e_id parameter in a viewentry cmd.
5, via a URL in the includedir parameter to (1) login.php
4, via a long -m argument. NOTE: CVE disputes this issue because QFTP is not setuid
4, via a URL in the include_path parameter to admin.php
4, via a .. (dot dot) in the file parameter in a showarticles action.
1," by modifying cookies and performing """"certain consecutive actions"
4, via a large cch argument value to the mmioRead function
2," via unspecified vectors related to the """"filters for https:// and http://""""."
2, via unspecified vectors involving the (1) nfulnl_recv_config function
4, via a long argument to the (1) ExportSiteList and (2) VerifyPackageCatalog functions
4, via a res: URI to navcancl.htm with an arbitrary URL as an argument
4, via a symlink attack on temporary files
4, via a long Content-Type HTTP header.
4, via a (1) long command
0, via format string specifiers to the create_ctcp_message function using the message argument to the (1) me or (2) ctcp commands
1, via unspecified vectors
2, via the (1) p_oldurl and (2) p_newurl parameters.
0, via the RESULT parameter
4, via a .. (dot dot) in the datei parameter.
2, via the postid parameter.
4, via a URL in the modpath parameter.
4, via a URL in the functions_dir parameter.
2, via the id parameter.
2, via the array index of the applicationids array.
2, via the query parameter in a search operation in the Downloads module
2, via illegal characters in a session identifier
4, via a .. (dot dot) in the settings[skin] parameter
0, via the cat parameter
4, via unspecified vectors.
2, by sending spoofed Neighbor Advertisements or (2) blindly sending Neighbor Advertisements.
4, via a file that triggers a heap-based buffer overflow.
4, via a .. (dot dot) sequence in the module_name parameter
2, via the Remote-Party-ID sipURI field in a SIP INVITE request. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long path slave name in a USL socket connection.
4, via a large max_samples value.
4, via a nonexistent client ID.
4, via (1) large num_action values in the ProcAuSetElements function in server/dia/audispatch.c or (2) a large inputNum parameter to the compileInputs function in server/dia/auutil.c.
1, via multiple simultaneous connections
4, via an addImage action
2, via the (1) image_id or (2) cat_id parameter to (a) gallery.php; the (3) news_id parameter to (b) news.php or (c) print.php; (4) the news_cat_id parameter to news.php; the (5) cat_id
4," via (1) the signature in """"dans profile"
2, via the (1) admin_mail
2, via the c parameter.
2, via the dlid parameter.
0, via format string specifiers in the Management Server name field on the Communication settings page.
4, via man-in-the-middle (MITM) attacks that use crafted message IDs and MD5 collisions.  NOTE: this design-level issue potentially affects all products that use APOP
4, via (1) unspecified long property values to SonicMediaPlayer.dll or (2) long arguments to unspecified methods in SonicMediaPlayer.dll.
4, via a SIP INVITE message with an SDP containing one valid and one invalid IP address.
2, by using JavaScript to read a child iframe having an ftp:// URI.
2, via the NewsID parameter.  NOTE: this issue might be the same as CVE-2006-5954.
5, via a yEnc (yEncode) encoded article with a long filename.
4, via a yEnc (yEncode) encoded article with a long filename
2, via the title parameter
2," via the """"Attached Before"""" field."
4, via a .. (dot dot) in the GLOBALS[tplname] parameter
4, via a certain SUBSCRIBE command.
4, via a LIST command for a Windows drive letter
1, by interrupting the hash_update_file function via a userspace (1) error or (2) stream handler
0, by interrupting certain functions in the GD (ext/gd) extension and unspecified other extensions via a userspace error handler
1, by passing an all-whitespace string to this function
5, by sending a request for the name \M via the SMB Mail Slot Protocol.
0, by specifying the program name in the qshapeLocation parameter.
4, via a SIP Response code 0 in a SIP packet.
5, via a URL in the mosConfig_absolute_path parameter to (1) components/com_nfn_addressbook/nfnaddressbook.php or (2) administrator/components/com_nfn_addressbook/nfnaddressbook.php.
2, via unspecified vectors
2, via the redirect_to parameter.
4, via a URL in the menu parameter.
4, via a .. (dot dot) in the order parameter.  NOTE: another researcher disputes this vulnerability
2, via the order parameter.
4, via a forum message with an attached file
4, via a request to rss.php with an invalid (1) site or (2) bn parameter
4, via (1) the showuser parameter to profile.php
4, via a ' (quote) value followed by certain SQL sequences in the (1) search_forum or (2) search_user parameter
5, via a single CRLF sequence in a context that is not a valid multi-line header.
2, via the table parameter.  NOTE: This may be related to CVE-2002-0563.
4, via a feed.
2, via the kolumna parameter.
4, via a .. (dot dot) in the logi parameter.
4, via a long filename.
2, via the catid parameter.
2, via the recid parameter.
2, via the catid parameter.
2, via the catid parameter.
2, via the phid parameter.
4, via a URL in the (1) _SESSION[SITE_PATH] parameter to (a) wind/help.php or (b) wind/about.php
4, via a URL in the APB_SETTINGS[template_path] parameter.  NOTE: this issue might be related to CVE-2003-1254.
2, via the (1) name
0, via the homepage parameter
4, via a URL in the file parameter.
2, via the catid parameter.
2, via the catid parameter.
4, via a URL in the header parameter.  NOTE: this issue has been disputed by a reliable third party
4, via a .. (dot dot) in the name parameter
2, via the _FILES[DB][tmp_name] parameter to print.php
2," via the xtop parameter in a """"ConfigSave"""" op to admin.php"
4, via a .. (dot dot) sequence in the op parameter
2, via the (1) WebConnect and (2) Connect members in the (a) IMailServer control; (3) Sync3 and (4) Init3 members in the (b) IMailLDAPService control; and the (5) SetReplyTo member in the (c) IMailUserCollection control.
4, via a URL in the BASE parameter to (1) language.php and (2) phpadmin/survey.php.
2, via the idnews parameter.
4, via a direct URL request.
4, via a URL in (1) the CONFIG[directories][userpanel_dir] parameter to userpanel.php or the (2) _LIB_DIR parameter to welcome.php.
4, via a long request on UDP port 69.  NOTE: this issue might overlap CVE-2006-4781 or CVE-2005-1812.
4, via (1) the searchtext parameter to (a) /search
0, by operating an IRC server that sends a long string to a client
0, by executing certain scripts with a serialized data input string beginning with S:
4, via a malformed SIP packet
2, via unspecified vectors related to an arbitrary remote web site and cached tokens
2, via certain DNS responses that trigger infinite recursion in TrueDNS packet parsing
1, via multiple file transfers
1, via unspecified vectors related to lists of numbers.
2, via the (1) fraza and (2) litera parameters
4, via a long file argument.
4, via a link to a (1) local file or (2) UNC share pathname in which there is a directory with the same base name as an executable program at the same level
0," via regex patterns containing unmatched """"\Q\E"""" sequences with orphan """"\E"""" codes."
4, via a vector related to the token OCR functionality.
5, via a ZOO archive with a direntry structure that points to a previous file.
5, via a ZOO archive with a direntry structure that points to a previous file.
5, via a ZOO archive with a direntry structure that points to a previous file.
4, via a crafted packet to port 65535/UDP.
4, via a long username.
2, via RSS feeds
4, via unspecified vectors in (1) imp/search.php and (2) ingo/rule.php. NOTE: this issue has been disputed by the vendor
4, via long (1) socksHostname and (2) hostname properties.
1, via unspecified calls to the (1) BuildPath
4, via unspecified vectors.
4, via the (1) installerpath and (2) applicationarguments arguments.
4, via unspecified vectors.
2, via the FileVersionof property.
2, via long arguments to the (1) Get and (2) Set functions.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the phpbb_root_path parameter.  NOTE: this issue has been disputed by third-party researchers
2, via the NewsPaperID parameter.
5, via a URL in the CssFile parameter.
4, via a URL in the mosConfig_absolute_path parameter to ImageManager/Classes/ImageManager.php under the (1) components/ or (2) administrator/components/ directory trees.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the category_id parameter.
2, via the id parameter.
2, via the catid parameter.
2, via the QuizID parameter.
4, via a URL in the cms parameter.
4, via a URL in the lib_path parameter.
4, via a long argument string.
1, by overwriting variables pointing to (1) the GLOBALS array or (2) the session data in _SESSION.  NOTE: this issue was introduced when attempting to patch CVE-2007-1701 (MOPB-31-2007).
2, via the catid parameter.
3, via dir parameter.
4, via a URL in the AD_BODY_TEMP parameter.  NOTE: the forgot_pass.php vector is already covered by CVE-2006-5670
4, via a control character immediately following folding of the (1) Subject or (2) To parameter
4, via a .. (dot dot) in the module_name parameter
4, via a URL in the root_path parameter to (1) Richtxt_functions.inc.php
4, via a long pszUserID argument.
2, via the (1) network
2, via the filename of an uploaded file to the avatar function
2, via the avatar function
4, via a flood of UDP packets.
2, via the flexbb_lang_id COOKIE parameter to index.php.
4, via a negative optlen value.
2, via long arguments to the (1) USER
2, via the demo parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. NOTE: another researcher disputes this issue
4, via a long (1) /cgi-bin/ or (2) /cgi/ pathname in an HTTP GET request
4, via a long printer selection (PRS) name in a Wordperfect document.
4, via a long
5, via a crafted Cascading Style Sheets (CSS) tag that triggers memory corruption.
4, via a crafted JPG image
4, via a crafted JPG image.
4, via a malformed ANI file
4, via a URL in the root parameter.
3, via unknown vectors.
2, via the author name field in a comment.
4, via a URL in the path[JavascriptEdit] parameter.
4, via a RETR command with a long pathname.
4, via a .. (dot dot) in the d parameter to (1) whizzery/whizzypic.php or (2) whizzery/whizzylink.php
0, via the d parameter to (1) whizzery/whizzypic.php or (2) whizzery/whizzylink.php.
4, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the article parameter in a read action.
4, via a ZIP archive that contains an entry with a length value of 0xffffffff
4, via a URL in the phpbb_root_path parameter.
2, via unspecified parameters
1, via arbitrary arguments to the loadLibrary function.
1, via crafted xdr_handle_t data in RPC packets
3, via direct requests.
5, via a URL in the install_root parameter to (1) support.inc.php
2, via the cat parameter.
4, via a crafted executable attachment in an e-mail
2, via the email address field in an HTML link.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) a crafted DCM image
4, via a long path name.
4, via a .. (dot dot) in the conf_lang_default parameter
4, via unspecified vectors.
5,send e-mail to
4, via (1) a PA_PSTREAM_DESCRIPTOR_LENGTH value of FRAME_SIZE_MAX_ALLOW sent on TCP port 9875
2, via the genreid parameter.
2, via the idcat parameter.
2, via the cid parameter.
2, via the camid parameter in a showcam action.
4, via a URL in the INCLUDE_PATH parameter to (1) cls_headline_prod.php
2, via the id parameter.
0, via the id parameter in a show action.
4, via a URL in the repertoire_visiteur parameter.
2, via the katid parameter.
0, via the cid parameter
2, via the cid parameter.
2, via the cid parameter.
0, via the uid parameter in a u action.
4, via a URL in the phpbb_root_path parameter.
4, via a php://filter/ URL that has a name ending in the '.' character.
4," via a """"specific UDP packet"""" to UDP port 8500"
5, via (1) the QUERY_STRING corresponding to drop downs or (2) various forms.
2, via unknown vectors
4, via a crafted QUERY_STRING.
0," via a crafted filename or (2) by """"using percent encoding in forms."""""
4, via a flood of ICMP echo requests
4, via shell metacharacters in certain arguments to various commands
4, via a URL in the Site_Path parameter to (1) boxes/quotes.php or (2) templates/mangobery/footer.sample.php.
2, via the id parameter.
4, via a URL in the phpbb_root_path parameter to (1) pass_code.php or (2) lang_select.
1, via crafted (1) DELETE (ISAKMP_NPTYPE_D) and (2) NOTIFY (ISAKMP_NPTYPE_N) messages.
4, via a .. (dot dot) in the table parameter
4, via a URL in the path parameter to (1) button/settings_sql.php
2, via the m_month parameter.
0, via the cid parameter
2, via the cid parameter.
4, via the desc[][title] field.  NOTE: Drake CMS has only a beta version available
5, via a .. (dot dot) in the d_private parameter.  NOTE: some of these details are obtained from third party information.  NOTE: Drake CMS has only a beta version available
4, via a .. (dot dot) in the __class parameter to (1) Controller_v4.php or (2) Controller_v5.php.
4, via a URL in the lang_filename parameter to (1) index.php or (2) backupdb.inc.php in admin/
4, via a URL in the (1) _smarty_compile_path
4, via NETLINK_FIB_LOOKUP replies
4, via a negative value of the len parameter.  NOTE: this issue has been disputed in a bug comment
5, by sending a crafted packet to port 53/udp
4, via a crafted animated cursor (ANI) file.
0, by disconnecting while lighttpd is parsing CRLF sequences
4, via a request to a file whose mtime is 0
0, via the login_name parameter to /stats/.
0, via the searchword parameter in a search id.
0, via the q parameter to the search script.
0, by causing the virtual machine process (VMX) to store malformed configuration information.
0, by triggering an outbound anonymous FTP session that invokes the PUT command.  NOTE: this issue might be related to CVE-2007-1112.
2, via the RunQuery method.
2, via an interruption that triggers a user space error handler that changes a parameter to an arbitrary pointer
4, via (1) certain negative argument numbers that arise in the php_formatted_print function because of 64 to 32 bit truncation
4, via a single character search string in conjunction with a long replacement string
4, via a single character search string in conjunction with a single character replacement string
2, via an empty value of the in parameter
4, via a large emalloc request
1, via unspecified vectors
2, via the year parameter in the wp_title function.
4, via a .. (dot dot) and trailing %00 (NULL) in a my_ms[root] cookie.
1, via modified recipient
4, via (1) the user_id parameter in a viewuser action to index.php
4, via an e-mail address with a '\n' character
2, via the (1) by[] parameter to search.php
2, via the (1) part and (2) by parameters to (a) search.php
2, via the part parameter.
0, via encoded special characters in the forward_to parameter
4, via a URL in the file parameter.
4, via a UNC share pathname or a local file pathname in the php121dir parameter
2, via the (1) user or (2) pass parameter.
4, via a crafted document
1, via crafted documents
4, via a crafted .HLP file.
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.  NOTE: This information is based upon a vague initial disclosure. Details will be updated after the grace period has ended.
4, via unspecified vectors.  NOTE: This information is based upon a vague initial disclosure. Details will be updated after the grace period has ended.
4, via unspecified vectors.  NOTE: This information is based upon a vague initial disclosure. Details will be updated after the grace period has ended.
2, via the page parameter.
0, via the zoom parameter
5, via a crafted (1) .IT or (2) .S3M file containing integer values that are used as memory offsets
5, via a URL in the include_path parameter to (1) contact_business.php or (2) contact_person.php.  NOTE: this issue is disputed by CVE and a reliable third party
2, via the POP3Mail parameter.
4, via a .. (dot dot) in the menu parameter.
2, via the ssid parameter.
4, via a .. (dot dot) in the sn_admin_dir parameter.
4, via a .. (dot dot) in the lang parameter to (1) index.php
4, via a .. (dot dot) in the GLOBALS[name] parameter.
4, via a UNC share pathname or a local file pathname in the site parameter
4, via a URL in the sac_config_dir parameter.
4, via a URL in the config parameter.
2, via unspecified vectors involving an error message
4, via a multipart/related e-mail message
4, via a crafted BMP image
2, via large width image sizes in a crafted BMP image
2," via unknown vectors involving the """"double release [of] a bytebuffer input stream"
4, via a large width dimension in a crafted BMP image
2, via the (1) xoffset or (2) yoffset RLE command
4, by setting a PHPSESSID cookie.
2, via the Suchzeile parameter.
3, by setting a PHPSESSID cookie.
4, by setting a PHPSESSID cookie.
5, by setting a PHPSESSID cookie.
4, via a .. (dot dot) in a (1) .gz
5, via a long string in unspecified arguments to the (1) DownloadCert
2, via the C parameter.
0," via unspecified vectors related to """"too many substring matches in a regexp $-command."""" NOTE: some of these details are obtained from third party information."
4, via a URL in the phpbb_root_path parameter.
0, via the c parameter in a cat action.
2, via the Client-IP HTTP header
0, via the set_lang parameter to (1) archive.php
1, by setting the PHPSESSID cookie.
4, via a URL in the langpath parameter.  NOTE: this issue was published by an unreliable researcher
2, via the query string.
2, via the temporary \Device\PhysicalMemory section handle
5, via a URL in the (1) path parameter to admin/admin.php or the (2) modpath parameter to index.php.
5, via a URL in the xoopsConfig[root_path] parameter. NOTE: the issue has been disputed by a reliable third party
3, via the acuparam parameter.
0, via the cid parameter in a view_game_list action.
0, via the postid parameter
2, via the cid parameter.
4, via a long meta list command.
5, via a URL in the (1) __IncludeFilePHPClass
4, via a URL in the script_path parameter
4, via a URL in the inc parameter.
4, via a URL in the (1) cmd or (2) lang_path parameter.
4, via a URL in the (1) language_path_core parameter to inc/core_profile.header.php
5, via a URL in the (1) _plugin_file parameter to smarty/internals/core.load_pulgins.php or the (2) root_path parameter to index.php.  NOTE: CVE disputes (1) because the inclusion occurs within a function that is not called during a direct request. CVE disputes (2) because root_path is defined in config.php before use.
2, via the id parameter.
2, via the (1) post_id parameter to ecrire/trackback.php or the (2) tool_url parameter to tools/thememng/index.php.  NOTE: some of these details are obtained from third party information.
4, via a URL in the mosConfig_absolute_path parameter to (1) EXIF_Makernote.php or (2) EXIF.php in classes/iptc/.
4, via unknown vectors.  NOTE: due to lack of vendor details
5, via a crafted CHM file that contains a negative integer
2, via the Email field
2, via the (1) pseudo or (2) passe parameter.
2," via the """"Fond de la page"""" (background color) field and other unspecified fields"
0, via the id parameter to changename.php and other unspecified vectors.
4, via a URL in the mosConfig_absolute_path parameter to (1) contact_type.php
2, via the (1) login or (2) pass parameter.
1, by setting the is_admin parameter to 1.
4, via a .. (dot dot) in the lang parameter.
4, via a URL in the site parameter.
4, via a (1) get or (2) mget command.
2, via the username parameter.
4, via a .. (dot dot) in a (1) .rar
2, via the msg parameter.
4, via a URL in the myNewsConf[path][sys][index] parameter
4, via a URL in the id parameter.
2, via the lang[] parameter.
2, via the id parameter.
4, via a URL in the include_class parameter.
2, via the cmd parameter. NOTE: CVE disputes this vulnerability because administration.php does not use the cmd parameter for inclusion.
4, via a URL in the (1) lang_path parameter to third_party/phpmailer/class.phpmailer.php or the (2) get_plugin_file_path parameter to third_party/smarty/libs/plugins/function.html_checkboxes.php.  NOTE: the affected files might be from other software packages
4, via a crafted document with a large number of line feed characters
2," use an untrusted gettext message catalog (.po file) in a """"../po"""" directory"
5, via a crafted PDF file.
2, by changing the group membership of user accounts
4, via a URL in the mosConfig_absolute_path parameter to (1) support.html.php or (2) info.html.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the mosConfig_absolute_path parameter to (1) media.tab.php or (2) media.divs.php.
4, via a URL in the absolute_path parameter.
1, via crafted IP packets
4, via CRLF sequences in (1) the dest parameter and (2) the Referer HTTP header.  NOTE: some of these details are obtained from third party information.
5, via a .. (dot dot) in the resource parameter.
4, via a URL in the absolute_path parameter to (1) com_calendar.php or (2) mod_calendar.php.
4, via a .. (dot dot) in (1) a lang cookie or (2) the language parameter.
4, via (1) a long LastModified value in an S3 XML response in lib/s3.cpp; (2) a long (a) path or (b) bucket in an S3 URL in lib/vnode_s3.cpp; or (3) a long (c) EFW
2, via certain command line parameters
3, via shell metacharacters involving (1) certain command line parameters in tools/afconvert.cpp and (2) arguments to the get_parameter function in aimage/ident.cpp.  NOTE: it is unknown if the get_parameter vector (2) is ever called.
4," via a symlink attack on temporary lock files (aka """"time-of-check-time-of-use file race""""). NOTE: the researcher has retracted the original advisory"
1, via crafted 802.11 authentication packets.
4, via a .. (dot dot) sequence in the file path in an (1) GZ
0, via a long parameter to the (1) DELETESEARCHFOLDER
2, via the RSS feed DOM.
2, via the username parameter.
4, via a long FILE argument in a CUE file.
4, via a URL in the CONFIG_DATAREADERWRITER parameter
4, via a request with unspecified GET or POST parameters to an unspecified script
4, via a URL in the path parameter to (1) index.php
4, via a URL in the GALLERY_BASEDIR parameter to (1) mods/business_functions.php or (2) mods/ui_functions.php.
4, via a .. (dot dot) in the dsn[phptype] parameter.
5, via a URL in the abs_path parameter to (1) index.php or (2) checkout.php.
4, via a URL in the dir parameter.  NOTE: this issue has been disputed by third party researchers for 0.3
4, via a URL in the gallery parameter in a new session.
4, via a URL in the path_to_folder parameter.  NOTE: this issue was disputed by a third party researcher
4, via a URL in the path_to_folder parameter.  NOTE: this issue was disputed by a third party researcher
4, via a URL in the path_to_folder parameter.  NOTE: this issue was disputed by a third party researcher
1, via unspecified vectors in certain test scripts.
2, via the admin cookie parameter to certain admin files
0, via the content parameter
4, via a URL in the auth_method parameter to (1) index.php
2, via the q parameter.
4, via a URL in the bj parameter to (1) who_r.php or (2) who_s.php in reports/.
4, via a URL in the (1) writerFile parameter to index.php and the (2) file parameter to Integrator.php.
5, via a URL in the absolute_path parameter to com_articles.php in (1) components/ or (2) classes/html/.
2, via the msg parameter.
2, via the name parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the message parameter.
4, via a URL in the ads_file parameter.
4, via a URL in the my[root] parameter
4, via a URL in the phphd_real_path parameter. NOTE: this issue may be present in versions from 2006.
4, via a URL in the includes_path parameter to (1) click.php or (2) pollcollector.php in htdocs/; or (3) index.php
2, via the (1) pic and (2) gal parameters.
2, via the page[] parameter.
0, via the id parameter
5, via a URL in the lang parameter to (1) admin.php and (2) timedifference.php.
4, via a .. (dot dot) in the theme_url parameter to (1) index.php
4, via a .. (dot dot) in the admin_skin parameter.
4, via a .. (dot dot) in the current_theme parameter.
0, via the cid parameter
1, via unknown vectors
2, via the ADI_DISPLAY_REPORT function
3, by connecting to TCP port 10128 and sending certain XDR data
4, via a URL in the incpath parameter.
2, via the shout parameter.
5, via a URL in the PagePrefix parameter to (1) begin.inc.php
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the input parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) name or (2) email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the html parameter
2, via the PORT command
5, via a large length value in a malformed authentication packet
0, via a long filename containing multi-byte (Unicode) characters.
2, via the username parameter.
4, via a URL in the CabronServiceFolder parameter.
4, via a .. (dot dot) in the modify parameter in a template action to admin/index.php.
4, via a URL in the root parameter to (1) datumVonDatumBis.inc.php
4, via a .. (dot dot) in the file parameter.
4, via a URL in the G_JGALL[inc_path] parameter.
0, via JavaScript that matches a regular expression against a long string
0, via JavaScript that matches a regular expression against a long string
0, via JavaScript that matches a regular expression against a long string
0, via JavaScript that matches a regular expression against a long string
4, via a URL in the cfgPathToProjectAdmin parameter.
2, via the number parameter in an update action.
4, via the databasehost parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) Sub-name or (2) Sub-url field.  NOTE: an earlier report indicated that the add action can be reached through a request to index.php.
3, via long base64 content in an HTTP Basic Authentication request.
3, via certain IOCTL lrp parameter addresses.
1, via unspecified vectors involving Javascript errors.  NOTE: this might be the same issue as CVE-2007-2175.
4, via unspecified vectors.
2, via unspecified vectors involving the (1) CalculateCrc
4, via a crafted WMV file.
4, via a URL in the absolute_path parameter
4, via a trailing %00 in a filename in the page parameter.
2, via the ring parameter.
4, via a .. (dot dot) in the acc parameter.
4, via a URL in the supa[db_path] parameter to (1) common_functions.php
4, via a crafted PDF document.
4, via a long DNS response. NOTE: this might be related to CVE-2006-6926.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the filename parameter.
2, via the (1) From
4, via a crafted .tif file.
5, via a crafted XPM file with a long section string.  NOTE: some of these details are obtained from third party information.
2, by sending invalid data to TCP port 31337.
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: this issue has been disputed by a reliable third party because the jambook.php protects against direct request.
2, via unspecified vectors
4, via a .. (dot dot) in the asolute parameter.
4, via a URL in the dir parameter to (1) common.php or (2) themes/default/preview_post_completo.php.
4, via a URL in the CheminInclude parameter.
2, via the message field in the guestbook entry submission form.
4, via a URL in the root_path parameter to (1) db.mysql.inc.php or (2) gpb.inc.php in include/
4," via a leading """"&lt;&quot;&lt;"""" in the ripeformpost parameter."
2, via the ripeformpost parameter.
4, via a URL in the phpbb_root_path parameter to (1) functions.php or (2) functions_portal.php in includes/.
4, via a long AddAllowed property value
2, via the day parameter in a dayview action.
2, via the (1) year or (2) month parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2," via unspecified vectors related to """"improper arguments."""""
3, by placing a script's contents in both the File2 and File3 parameters
3, via the substringData method on a (1) TextNode or (2) XMLDOM object
4, via (1) the ofinterest parameter in a light search query
3, via CR (\r) sequences in the cosign cookie parameter.
1, by using CR (\r) sequences in the service parameter to inject LOGIN and REGISTER commands with the desired username.
2, via the (1) Referer HTTP header to misc.php or the (2) category name when deleting a category in admin_categories.php.
4, via a cross-site scripting (XSS) attack
1, via crafted IPv6 type 0 route headers (IPV6_RTHDR_TYPE_0) that create network amplification between two routers.
4, via (1) the fieldkey parameter to browse_foreigners.php or (2) certain input to the PMA_sanitize function.
2, via the item_id parameter.
2, via the (1) group_id parameter in the groups module or (2) the smiley_id parameter in the smileys modsettings module.
4, via a modified (1) user_ids POST parameter or (2) userdata array.
2, via the module[] parameter.
2, via unspecified vectors
4, via a .. (dot dot) in the icodir parameter.
4, via a direct request for (1) sdk/blanks/formcontrol.php and (2) sdk/blanks/file_modules.php.
4, via a URL in the (1) eng_dir parameter to addmember.php
2, via the user parameter.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the base_path parameter.
2, via the idsalon parameter.
4, via a URL in the bibtexrootrel parameter to (1) unavailable.php
4, via a URL in the root_path parameter
4," via a URL in the (1) relPath and (2) folder parameters.  NOTE: this product was originally reported as """"File117""""."
2, via the City field in a sign action in index.php.
4, via a .. (dot dot) in the locale_id parameter.
4, via a 0377 (0xff) character in the From header
4, via a .. (dot dot) in the dnld parameter.
4, via a URL in the workdir parameter.
4, via a URL in the path_include parameter.
4, via a malformed torrent file.  NOTE: the original disclosure refers to this as a memory leak
5, via a flood of packets on TCP port 80 with sequentially increasing source ports
2, by setting the PHPSESSID parameter.
5, via a URL in (1) the path parameter to library/adodb/adodb.inc.php
2, via certain requests to the service socket that create (1) PreScript or (2) PostScript registry values under Veritas\VxSvc\CurrentVersion\Schedules specifying future command execution.
4, via an MSG_PROTOCOL command with long arguments
5, via a large value in the size parameter.
4, via a crafted .PSP file.
4, via a crafted .PSP file.
4, via a .. (dot dot) in the feed parameter.  NOTE: analysis by third party researchers indicates that this issue might be platform dependent.
4, via a URL in the full_path_to_db parameter.
4, via a URL in the DOCUMENT_ROOT parameter.
4, via a URL in the file parameter.
5, via a URL in the spaw_root parameter
4, via a URL in the b2inc parameter to (1) b2archives.php
4, via a LF (%0a) in the username attribute.
5, via LF (%0a) bytes in the username attribute.
4, via a long (1) T38FaxRateManagement or (2) T38FaxUdpEC SDP parameter in an SIP message
1, by using MD5 authentication to authenticate a user that does not have a password defined in manager.conf
4, via a crafted H.264 MOV file.
4, via a URL in the repertoire_config parameter to index.php in (1) cpe/
2, via the (1) dzial parameter to (a) katalog.php
0, via the m_txt parameter to (1) iklan.php
4, via a URL in the arashlib_dir parameter to (1) edit.inc.php and (2) list_features.inc.php in arash_lib/include
4, via a URL in the cfg_file parameter.
4, via a .. (dot dot) in the template parameter.
4, via a URL in the absolute_path parameter.
2, via the rok parameter.
2, via the den parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the img_url parameter.
4, via a URL in the content_php parameter.  NOTE: this issue has been disputed by a reliable third party
0, via the n parameter to extra/online.php and other unspecified scripts in extra/.  NOTE: this might be same vulnerability as CVE-2006-4142; however
4, via a URL in the mx_root_path parameter.
0," by calling the script """"in txt mode from a browser."""""
0, via format string specifiers in (1) FTP server responses or (2) data sent by an FTP server.  NOTE: some of these details are obtained from third party information.
4, via a URL in the mosConfig_absolute_path parameter to mod_as_category.php in (1) modules/mod_as_category/ or (2) modules/.
2, via the menuid parameter
4, via a crafted packet that contains two CRLF sequences.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long string argument to the (1) GetDiscType or (2) AddFileList method.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the file parameter.
5, via a URL in the myng_root parameter.
4, via a URL in the plugin_file parameter to (1) Smarty.class.php and (2) Smarty_Compiler.class.php in inc/libs/; (3) core.display_debug_console.php
4, via a URL in the settings[app_dir] parameter.
4, via a URL in the msetstr[PROGSDIR] parameter.
4, via a URL in the path parameter.
4, via a URL in the base_path parameter.
5, via a URL in the lang_list parameter.
4, via unspecified vectors.
1, via crafted HTTP requests
2, via the (1) url parameter to (a) magpie_debug.php and (b) magpie_simple.php in external/magpierss/scripts/
2, via the delete parameter.
4," via (1) a modified recipients parameter name in (a) pm.php; (2) the curr parameter to the (b) badwords (aka censorlist) or (c) banlist module in admin.php; or (3) the """"Edit groups / Add group"""" field in the (d) groups module in admin.php."
4, via a URL in the (1) page_dir or (2) inc_dir parameters.
4, via a URL in the pg parameter.
2, via the id parameter
4, via a URL in the include_path parameter.
4, via a URL in the _APP_RELATIVE_PATH parameter to (1) include.php
4, via a URL in the site_path parameter.
2, by uploading crafted images or PDF files.
3, via shell metacharacters in the del parameter.
4, via unspecified vectors.
2, via certain command line parameters
5, by requesting a non-existent WSDL file
5," via a WService parameter containing """"wsbroker1/webutil/about.r"""""
4, via shell metacharacters in a URL.
4, via a crafted RAS file.
2, via the stringa parameter.
4, via a URL in the (1) inc_path parameter to (a) a_noskin.php
4, via a certain update
4, via a crafted .IFF file.
4, via a URL in the root parameter to (1) mysql.class.php or (2) postgres.class.php in lib/db/; or (3) authuser.php
4, via a crafted .PNG file.
4, via a long directory name in the URI.
2, via the file parameter.
2, via the cid parameter in a jobsview action. NOTE: the module name was originally reported as Job Listings.
2, via the cid parameter.
4, via a crafted UPnP Internet Gateway Device (IGD) packet.
4, via a crafted UPnP Internet Gateway Device (IGD) packet.
5, via a web page that includes a windows.setTimeout function that is activated after the user has moved from the current page.
5, via a crafted movie file that triggers memory corruption.
2, via Java applets
4, via crafted (1) title and (2) author fields in an SMIL file
5, via a crafted image description atom in a movie file
0, by setting the location bar and using setTimeout() to create an event that modifies the window content
4, via CRLF sequences in an unspecified context.  NOTE: this can be leveraged for cross-site scripting (XSS) attacks.
4, via a crafted PDF file.
4, via a popup window
4, via a URL in the include_dir parameter.  NOTE: a third party disputes this vulnerability
4, via a .. (dot dot) in the a[filepath] parameter.  NOTE: a third party has disputed this issue because the a array is populated by a database query before use.
4, via unspecified vectors.
4, via a long URI.  NOTE: this issue was originally reported as a crash
2, via the a parameter.
4, via a message that triggers the overflow from expansion that occurs during encoding.
2, via the (1) the second parameter to the DownloadAndExecute method and (2) third parameter to the AddFileEx method
2, via the id parameter.
5, via a URL in the path[docroot] parameter to (1) config-bak.php or (2) config.php.  NOTE: CVE disputes this vulnerability because the unmodified scripts set the applicable variable to the empty string; reasonable modified copies would use a fixed pathname string.
0, via the do parameter in an AttachFile action
4, via a URL in the show parameter.
4, via a .. (dot dot) in the album parameter.
4, via a URL in the myPath parameter.
2, via the cid parameter.
4, via a URL in the (1) fp or (2) sc parameter.
3, by injecting a certain command line for the mysql program
1, by placing file contents and directory traversal manipulations into a SessionUserLang cookie to public/code/index.php.
0, by modifying critical variables such as $_SERVER
2, via the terms parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the ARLogin parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a malformed DNS query.
4, via a DOS device name with an arbitrary extension.
5," via a .. (dot dot) in a URI containing a """"\web-inf"""" sequence."
2, via certain URLs associated with (1) deploying web applications or (2) displaying .xtp files.
4, via a zero-length RPC credential
4, via a negative length value.
2, via unspecified vectors that cause the daemon to transition to the root user.
4, via a grayscale PNG image with a bad tRNS chunk CRC value.
1, via crafted MS-RPC requests involving (1) DFSEnum (netdfs_io_dfs_EnumInfo_d)
4, via shell metacharacters involving the (1) SamrChangePassword function
4, via unspecified vectors.
0, via a long pathname in a locate database that has the old format
4, via (1) certain INT instructions
4, via a URL in the doc_root parameter to (1) localize.php or (2) config.php in modules/admin/include/.
4, via a URL in the cfg[sys][base_path] parameter.
4, via a URL in the cfg[sys][base_path] parameter to psg.smarty.lib.php and certain include and library scripts
3, via crafted 8-bit/pixel compressed BMP files.
5, via a URL in the DOCUMENT_ROOT parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a DHCPREQUEST or DHCPINFORM message that causes multiple DHCPACK messages to be sent from DHCP servers to the agent
1, via unknown vectors related to VPN connection termination and password expiry.
4," via """"Program actions relating to exceptions."""""
2, via the fid parameter.
3, via the (1) page
0, via a full pathname in the form parameter.
2, via the form parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the templateid parameter.
4, via a URL in the abs_path parameter to (1) include/payment/payflow_pro.php
4, via a URL in the {ChatPath} parameter.  NOTE: this has been disputed by multiple third parties and CVE because $ChatPath is set to a constant value.
4, via (1) a URL with a long UTF-8 string
0, via long CTCP PING messages that contain UTF-8 characters
4, via a URL in the wpPATH parameter.
4, via a .. (dot dot) in the File parameter.
0, via a long filename in an MP3 file
1, via crafted Connection-Oriented Transport Protocol (COTP) packets.
4, via a crafted poke to I/O port 0x1004
2, via the id parameter in a journal_comment action.
4, via a URL in the module_root_path parameter.
4, via a long (1) DoOleCommand
4, via a long (1) DoOleCommand
4, via a long (1) DoOleCommand
4," via a certain .ra file.  NOTE: this issue was referred to as a """"memory leak"
4, via a certain .MP4 file.  NOTE: some of these details are obtained from third party information.
4, via (1) the movieid parameter to loan.php or (2) the s parameter to listmovies.php.
4, via a large number of SHOWFRAME elements within a DEFINESPRITE element
2, via certain input that is used in an eval function call.
2, via unknown vectors
4, via a .. (dot dot) in the GLOBALS[tcore] parameter.  NOTE: this vulnerability is disputed by CVE and a reliable third party because a direct request to user/turbulence.php triggers a fatal error before inclusion.
4, via a URL in the GLOBALS[tcore] parameter.  NOTE: this vulnerability is disputed by CVE and a reliable third party because a direct request to user/turbulence.php triggers a fatal error before inclusion.
4, via a long command line argument
4, via a .. (dot dot) in the item parameter.
1, via crafted data to (1) TCP port 5168
5, via a .. (dot dot) sequence in the (1) install-as attribute in the file element in package.xml 1.0 or the (2) as attribute in the install element in package.xml 2.0.  NOTE: it could be argued that this does not cross privilege boundaries in typical installations
5, via a URL in the locale parameter.
0, via the Subaction parameter in an AgentTicketMailbox Action.  NOTE: DEBIAN:DSA-1299 originally used this identifier for an ipsec-tools issue
3, by creating a socket using connect
4, via a long argument.
4, via a URL in the HomeDir parameter to (1) dp_logs.php or (2) index.php.
2, via unknown vectors related to RPC requests. NOTE: this is probably a different vulnerability than CVE-2007-2508.
4, via a certain argument
4, via a URL in the RESPATH parameter to (1) dosearch.php or (2) printfriendly.php.
4, via a URL in the beryliumroot parameter.
2, via the PATH_INFO (query string) to (1) sendmail.php or (2) order_form.php
4, via a crafted RPC message processed by the (1) the RPCFN_ActiveRollback function in (a) stcommon.dll
2, via the (1) ADMIN_USER (USER) and (2) ADMIN_PASS (PASS) parameters during a login. NOTE: CVE disputes this vulnerability
5, via a ZOO archive with a direntry structure that points to a previous file.
4, via a ZOO archive with a direntry structure that points to a previous file.
4, via a (1) nickname or (2) Id in a cookie
2, via the executed_queries array parameter.
4, via unspecified vectors.
5, via a URL in the config[pathMod] parameter to index.php in (1) mod/image/
4, via a URL in the urlModulo parameter.
4, via a URL in the path parameter.
2, via the lid parameter.
4, via a URL in the right_file parameter.
4, via a URL in the system[path] parameter to (1) blocks/headerfile.php
2, by setting the PHPSESSID parameter.
2, via the l parameter.
2, via the (1) c or (2) quantity parameter.
4," via CRLF sequences in a cookie name beginning with """"ccSID"""" to (1) cart.php or (2) index.php."
2, via the name parameter.
2, via the X-Forwarded-For (X_FORWARDED_FOR) HTTP header
4, via a URL in the repinc parameter.  NOTE: CVE disputes this issue since $repinc is set to a constant value before use.
5, via a URL in the abs_path parameter to (1) index.php
4, via a .. (dot dot) in the rubrik parameter.
0, via the pid parameter
2, via the _m parameter.
4, via a long argument.
4, via a long argument to the (1) LockModules or (2) UnlockModule function.
4, via a crafted BMP file.
0, by uploading multiple bar codes
4, via unspecified vectors.
5, via a long (1) tag or (2) track type in a CUE file.
4, via a URL in the friendly_path parameter to (1) core/data/yaml.inc.php
4, via a URL in the sous_rep parameter.
0, via the c parameter in a cat action.
4, via a URL in the s_dir parameter.
4, via a .. (dot dot) in the index parameter.
4, via a URL in the GALLERY_BASEDIR parameter.
4, via a long OpenDVD property value.  NOTE: this issue might be related to CVE-2007-0976.
4, via (1) the mode parameter to feeds.php
4, via (1) the form[mail] parameter to contact/contact/index.php; the (2) form[mods][] or (3) form[search_term] parameter to search/list/action_search/index.php; (4) the id parameter to modules/dl/download.php; (5) the form[cat] parameter to news/list/index.php; the (6) form[cat]
2, via the document.loginform.password.value JavaScript parameter loaded from an AppleScript script.
2," via the PATH_INFO (query string) in """"every main page"
4," via a crafted packet to the DB2JDS service on tcp/6789; and cause a denial of service via (2) an invalid LANG parameter or (2) a long packet that generates a """"MemTree overflow."""""
4, via a crafted argument.
4, via a long argument.
2, via unspecified vectors involving transferring files (aka bug ID CSCse29244).
4, via a long argument to the (1) HttpDownloadFile
1, via certain data in the SRC attribute of an IMG element.
4, via a URL in the GLOBALS[CHEMINMODULES] parameter.
4, via a direct request for the activation URL that is provided at the time of account registration. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the CommonAbsDir parameter.
4, via a URL in the (1) ordnertiefe parameter to site_conf.php; or the (2) tt_docroot parameter to (a) class.csv.php
2, via the news_id parameter.
2, via the (1) catFile parameter to (a) browseCat.php or (b) browseSubCat.php; the (2) id parameter to (c) openTutorial.php
3, via the (1) catFile parameter to (a) browseCat.php or (b) browseSubCat.php; the (2) id parameter to (c) openTutorial.php
4, via a long SetInputFile property value.
4, via a long MIB filename argument.  NOTE: If there is not a common scenario under which MIBEXTRA.EXE is called with attacker-controlled command line arguments
4, via unspecified vectors.
0, via an improper initialization
3, via certain arguments.
2, via certain input processed by (1) config\ConfigFile.cpp or (2) msgs\check_msgs.epp.  NOTE: if ConfigFile.cpp reads a configuration file with restrictive permissions
4, via a URL in the views_path parameter.
4, via a URL in the system[smarty][dir] parameter.
4, via a URL in the (a) ETCDIR parameter to (1) libs/lom.php; (2) lom_update.php
5, via a URL in the pathCGX parameter to (1) mtdialogo.php
2," via the limit parameter.  NOTE: this issue only applies to a """"modified installation."""""
1, by modifying the WAKKA_CONFIG environment variable.
4, via a URL in the phphtmllib parameter.
4, via a URL in the path_local parameter to (1) ftp.php
4, via a crafted request.
4, via CRLF sequences in the lang parameter. NOTE: Drake CMS has only a beta version available
4, via a URL in the x[1] parameter.
2, via the eid parameter.
4, via (1) the username parameter to login.php or (2) the taskid parameter to notes.php.
4, via (1) a long first argument to the connect function or (2) a long InternalServer property value
2, via the SERVER superglobal array.  NOTE: some of these details are obtained from third party information.
4, via unspecified parameters.  NOTE: some of these details are obtained from third party information.
2, via the (1) username and (2) password parameters.  NOTE: CVE disputes this issue
3, via unspecified vectors.  NOTE: this issue might overlap CVE-2007-2589 or CVE-2002-1648.
4, via (1) the edit_plugin parameter to configure_plugin.tpl.php
1, via crafted HTTP requests.
4, via newlines in regular expressions to (1) index.php
2, via an invalid filecabinetnumber
4, via unspecified vectors.
2, via the forumid parameter
4, via a .. (dot dot) in the lang2 parameter.
4, via a .. (dot dot) in the src parameter.
0, by calling the Save method with an arbitrary filename.
1, via crafted EXIF data
0, via a long filename in an NTX file.
2, via the (1) gadm_pass
4, via a long argument to the ConnectToDatabase function.
3, via an OLE2 file with (1) a large property size or (2) a loop in the FAT file block chain that triggers an infinite loop
4, via a (1) DNS name response of the exact length as a buffer; or a long (2) channel name
1, via unspecified vectors involving certain (1) sprintf and (2) vsprintf calls in (a) r_index.c
4, via a long argument to the DeleteProfile method.
4, via a long argument to the SaveBarCode method.
5, via a long argument to the SaveEnhWMF method.
4, via a .. (dot dot) in the directory parameter in a downloadfile action.
0, via the var parameter
0, via the id parameter to the top-level URI.
4, via a URL in the languagePath parameter.
4, via a URL in the root_path parameter
4, via a URL in the Include parameter.
4, via a long LogFile parameter.
4, via a long URL
0, via the catid parameter to (1) settings.php or (2) cat.php.  NOTE: certain parameter values also trigger path disclosure.
2, via invalid values of the catid parameter to (1) settings.php or (2) cat.php
4, via a long hostname in an HREF attribute in an A element
0, via the bus parameter in a viewbus page.
2, via the prodid parameter.
2, via the category parameter.
5, via a URL in the ote_home parameter.
5, via a URL in (1) the config parameter to includes/language.php
5, via unspecified vectors.
4, via a UNC share pathname or a local file pathname in the gallery parameter
4, via a .. (dot dot) in the core_subdir parameter.
4," via """"&"""" characters in the GECOS field"
4, via (1) a direct request to (a) main_page.php
2, via the (1) view or (2) login parameter.
2, via the login parameter in a sendpwd task.
4, via a long command.
2, via an ALTER TABLE statement.
1, via unspecified vectors related to the rich text editor.
3, by accessing a half-closed SSL socket.
4, via a URL in the _MG_CONF[path_html] parameter.
4, via a URL in the dirpath_linksnet_newsfeed parameter.
4, via a URL in the action parameter.
4, via a URL in the SETS[path][physical] parameter.
4, via a URL in the SETS[path][IT] parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long string to TCP port 113.
2, via the (1) username
2, via the show parameter to (1) listmembers.php and (2) stats.php. NOTE: some of these details are obtained from third party information.
0, via the type_id[] parameter
2, by setting the JSESSIONID cookie.
1, via malformed image files
2, via certain invalid strings in the URL attribute of an ENCLOSURE element
4," via an """"empty"""" .MPA file"
2, via the user parameter.
2, via the SaveToFile function.
2, via an RSS 2.0 feed item with certain invalid strings in a pubDate element
4, via LF (%0A) sequences in the subject parameter
2, via the (1) path parameter to view/search/; or the (2) companyname
2, via unspecified vectors
2, via the id_reserv parameter.
5, via a URL in the config_atkroot parameter.
2, via the cid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sid parameter in an ImprDef action.
3, via unspecified vectors.
4, via a crafted ICC profile in a JPG file.
4, via a filename with a double extension such as .php.jpg.
4, via a URL in the sys[path_addon] parameter.
2, via the type parameter.
4, via a .. (dot dot) in the path parameter to the /browse URI.
2, via unspecified vectors
2, via the questionref parameter in a display action.
2, via the newsnr parameter.
4, via a URL in the format_menue parameter to (1) admin/inc/change_action.php or (2) admin/inc/add.php.
2, via the id parameter.
4, via a crafted PNG image with truncated data
0, via the s parameter to (1) wp-content/themes/redoable/searchloop.php or (2) wp-content/themes/redoable/header.php.
4, via a FAT image that contains long directory names in a deeply nested directory structure
2, via the (1) m_Attribute or (2) m_Value parameter.  NOTE: some of these details are obtained from third party information.
0, via a long filename in a .cue file.
4, via a URL in (1) the pear_dir parameter to Base/Application.php
4, via a long string in the second argument
4, via unknown vectors.
4, via a long BitmapDataPath property.
4, via a crafted RPC packet.
2, via the speler parameter.
4, via a URL in the root parameter to (1) _connect.php or (2) modules/startup.php.
2, via an arbitrary .php filename in the zip parameter
4, via a .. (dot dot) in the lang parameter to index.php and other unspecified PHP scripts.
5, via a URL in the rInfo[content] parameter.
4, via a request for server.php with a missing or invalid newtheme parameter
4, via unspecified vectors.  NOTE: this issue has no actionable information
2, via certain requests to temporary TCP ports for a GRAM2 job or its MPICH-G2 applications.
2, by making many requests from a single client.
4, via a long argument.
2, via unspecified vectors
0, via the listid parameter to index.php. NOTE: some of these details are obtained from third party information.
4, via a URL in the glConf[path_system] parameter.
4, via (1) the authentication feature in IMailsec.dll
4, via a malformed IP packet with an invalid IP option.
2, via the (1) name[]
2, via the d parameter.
0, via the id parameter in a haberdetay action.
2, via the (1) brand and (2) Msg parameters.
2, via the (1) galix_cat_detail
2, via the database parameter.
4, via a crafted torrent file.  NOTE: due to the lack of details
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
4, via (1) a long FileName parameter
4, via a URL in the root parameter to (1) test1.php
2, via the id parameter.
2, via the strJobIDs parameter.
2, via the projId parameter.
2, via long arguments to the (1) SWAT_Init
2, via the cookie parameter.
1, via unspecified vectors
2, via the pack parameter in a paypal action for index.php.
2, via unspecified vectors involving (1) links and (2) images.
4, via a URL in the GLOBALS[basedir] parameter.
4, via a long DriverName property.
4, via unspecified vectors.
4, via a crafted length field in nested 802.3 Ethernet frames in Fast Frame packets
1, via crafted beacon interval information when scanning for access points
2, via certain crafted images
2, via directory traversal sequences in the session ID
4, via a symlink attack on the /tmp/fireflier.rules temporary file.
5, via a symlink attack on the /tmp/gsambadtmp temporary file.
3, via Javascript
4, via a crafted CAB archive
4, via a crafted SIS archive
4, via a long argument.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the WriteDataToFile method.
4, via a crafted directory name.
4, via a command line in the first argument to the VCDLaunchAndWait function.
2, via the (1) style or (2) langue parameter.
4, via a long first argument to the QuickZip function
4, via a URL in the parser_path parameter.
2, via the Search Query field.
4, via a URL in the path_simpgb parameter to (1) guestbook.php
4, via a modified id parameter
4, via a URL in the template parameter to (1) news.php
0, via an unspecified parameter to cart.inc.php and certain other files in an include directory
4, via a long filename in a .CAB file.
4, via a large invalid value of the coffFiles field in a .CAB file.
2, via the server parameter.
0, via the id parameter and possibly other parameters.  NOTE: some of these details are obtained from third party information.
4, via malformed frames on a WPA2 network.  NOTE: some of these details are obtained from third party information.
2, via long registry key paths.
2, via the month parameter.
2, via the (1) Room_name parameter to room/info_book.asp or the (2) curYear parameter to room/week.asp.
1, via crafted packets during protocol negotiation.
4, via a Visual Basic Project (vbp) file with a long (1) Description or (2) Company Name (VersionCompanyName) field.
4, via a long argument.
0, via the No parameter in the Sayfa page.
4, via a long FILE string (filename) in a .cue file
3, via the scormcontopen parameter.
2, via the id_category parameter.
4, via a URL in the (1) bank_data[root] parameter to modules/bank/includes/design/main.inc.php
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via vectors that cause TXCNT register values to exceed the device memory size
2, via unspecified vectors
5, via a long Directory property value.
2, via certain network scans to ESM ports.
0, via the rating parameter to index.php.
2, via multiple parameters
5, via a URL in the path parameter to template.php in (1) skin/dark/
0, via the img parameter to main/inc/lib/fckeditor/editor/plugins/ImageManager/editor.php and other unspecified vectors.
2, via the course parameter.
4, via a long first argument.  NOTE: it is not clear whether this issue crosses privilege boundaries.
4, via the post_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a Thread subclass that calls super.run from its run method.
0, via an unspecified vector
2, via the title field in a single add action.
1, via unspecified vectors
2, via unspecified vectors
2," via the """"Attached After"""" field (GPC['search']['datelineafter'] variable)"
2, via the query parameter.
2, via the PATH_INFO to (1) awards.php
2, via the title field in an email.
2, via the st parameter.
4, via unspecified vectors.
4, via long (1) UID
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
2, via the blog parameter in a content search action.
3, via the form_id parameter.
4, via a .. (dot dot) in the skin parameter.
4, via shell metacharacters in the dict parameter.
4, via a URL in the securelib parameter to (1) conf.php or (2) cp2.php.
4, via a URL in the site_url parameter.
4, via a URL in the basepath parameter to (1) ITX.php
4, via a URL in the pachtofile parameter to (1) skin/html/table.php or (2) login.php.
4, via a URL in the base parameter to (1) vbgsitemap/vbgsitemap-config.php or (2) vbgsitemap/vbgsitemap-vbseo.php.
2, via the id parameter.
4, via a URL in the root parameter.
4, via a long DestinationPath property value.
4, via a URL in the root_prefix parameter to (1) index.php
4, via a CDDB entry with a long (1) album title or (2) category.
4, via a crafted PSD file that contains a large (1) width or (2) height value.
4, via shell metacharacters in an (1) irc:// or (2) irc6:// URI.
4, via a long HTTP Referer header to the K9 Web Protection Administration interface and (2) man-in-the-middle attackers to execute arbitrary code via an HTTP response with a long HTTP version field.
2, via certain long arguments to the (1) RpcAddPrinterDriver
4, via a crafted Radiance RGBE (.hdr) file.
2, via the id_manufacturer parameter.
4, via a .. (dot dot) in the skin_name parameter to template.php in (1) skin/dark/
3, via unspecified vectors.
2, via the order parameter.
0, via NTFS reserved words in filenames in URLs.
4, via a crafted LHA archive
2, via certain crafted (1) ARJ archives or (2) FSG packed files.
2, via the name parameter (Full Name field).
4, via a URL in the waroot parameter.
2, via the (1) URL
2, via the newsid parameter.
4, via a crafted UPX compressed file
4, via a malformed TAR archive.
4, via a crafted LZH archive file
2, by setting the PHPSESSID parameter.
4, via a long DriverName property
4, via a long DictionaryFileName property.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
5, by setting a pheap_login cookie value to the administrator's username
4, via a URL in the ROOT parameter.
2, via unspecified vectors
2, via unspecified manipulations of the /var/run/.inetd.uds Unix domain socket file.
2, via the PATH_INFO.
4, via (1) user-created text fields; the (2) F05003
4, via (1) user-created text fields; the (2) F05003
2, via the newsid parameter in a fullnews action
2, via the password field and other unspecified vectors. NOTE: the vendor disputes this issue
4, via (1) the iCategoryUnq parameter to G_Display.php or (2) the iSearchID parameter to Search/DisplayResults.php.
4, via (1) the sUName parameter to UserArea/Authenticate.php
4, via (1) a request to index.php with an invalid value of the iParentUnq[] parameter
2, via the (1) cat_id or (2) year parameter to index.php in a viewuser action
4, via a .asx playlist file with a REF element containing a long string in the HREF attribute. NOTE: it was later claimed that 4.51 Build 147 is also affected.
4, via shell metacharacters in the user parameter during a ping action.
4, via shell metacharacters in the Servername subparameter of the ParameterList parameter.
0, by canceling the authentication dialog when accessing a sub-page
0, via the id parameter to admin/picture/picture_real_edit.asp
0, via the msg parameter to (1) errors/rights.asp or (2) errors/transaction.asp
1, via crafted packets with modified length values to TCP ports 19226 or 19227
4, via a malformed Excel file containing multiple active worksheets
1, via crafted contact information that is not properly handled when it is imported.
2, via an RSS feed with crafted HTML attributes
4, via a crafted URL to the Agent (Agent.Control) ActiveX control
4, via unspecified vectors.
2, via unspecified vectors related to the select I/O implementation and the file set buffer.  NOTE: some of these details are obtained from third party information.
5, via a CTRL-C sequence at the password prompt.  NOTE: multiple third parties report inability to reproduce this issue.
2, via the title parameter.
2, by setting the PHPSESSID parameter.
2, via the revokebb_user cookie.
2, via the c parameter.
2, by setting the PHPSESSID parameter.
2, via the kword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cat parameter.
4, via a URL in the spaw_root parameter.  NOTE: this issue is probably a duplicate of CVE-2006-4656.
4, via a URL in the GLOBALS[basedir] parameter to (1) calendar.php
2, via an invalid sc_language parameter to sendcard.php
2, via the (1) sid parameter to (a) chat.php
3, via unspecified vectors.
2, via the delete parameter.
2, via the year parameter.
0, via the editcomment parameter
4, via a URL in the pathtohomedir parameter to (1) view.inc.php
1, via unspecified vectors
4, via a PLF playlist containing a long filename.
2, via the pageid parameter.
4, via a long first argument.
4, via ..%5C (dot dot encoded backslash) sequences in a resource:// URI.
4, via ..%2F (dot dot encoded slash) sequences in a resource:// URI.
4, via a resource:// URI.
1, via directory traversal sequences in a URI with a certain scheme
2, via the DownloadFile function.
2, via the rank parameter.
2, via the title parameter (Authors and Publication titles) to (1) authoractions.php or (2) publicationactions.php.
2, via an invalid compare parameter
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a URL in the path[docroot] parameter.
4, via a .. (dot dot) in the sc_language parameter.
4, via a URL in the path[docroot] parameter
4, via a URL in the (1) dbpath parameter to (a) useronline.php
2, by capturing the outpost_ipc_hdr mutex.
2, via the epi parameter.
2, via unspecified vectors
2, via unspecified vectors
4, via shell metacharacters in the username parameter.
4, via a crafted packet to port 165/TCP.
0, via the autoscroll parameter
2, via an RSS feed.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via unspecified vectors
1, via unspecified vectors related to HTTP headers.
5, via a URL in the scdir parameter to (1) action.php
2, via the news_id parameter.
3, via the aiocp_dp parameter.  NOTE: some of these details are obtained from third party information.
1, via long data during a reception error.  NOTE: some of these details are obtained from third party information.
4, via a RAR file with a header flag value of 10
4, via a crafted RAR file with a modified vm_codesize value
4," via a long string in response to an """"extract [ny]"""" prompt."
2, via an ICO file with an InfoHeader containing a Height of zero
2, via the password parameter.
2, via the id parameter.
2, via the id parameter.
2, via the (1) Your Name
2, via the tag parameter.
5, via a URL in the newsSync_NUKE_PATH parameter.
2, via the (1) sbl
4, via a .. (dot dot) in an sLanguage cookie
4, via a parameter value in an XML RPC wp.suggestCategories methodCall
4, via a URL in the editor_insert_top parameter.  NOTE: the editor_insert_bottom vector is already covered by CVE-2006-6042.
4, via a long hostname
4, via a long hostname
4, via a long hostname
4, via a long hostname
4, via a long server property value to the send method.  NOTE: some of these details are obtained from third party information.
4, via a long server property value to the receive method.
4, via a man-in-the-middle attack that injects JavaScript
4, via a request with empty values of the OP.MEAS.DATAQUERY and MEAS.TYPE parameters.
2, via the (1) cid
4, via a filename in the file parameter.
4, via a negative value in the Content-Length HTTP header.
4, via a URL in the loc parameter.
4, via a long argument.
2, via an alternate data stream syntax
4, via a long PtzUrl property value.
4, via (1) the PATH_INFO to redirect.php or (2) the selected_theme parameter to demo/pop3/error.php.
4, via a request to demo/pop3/error.php with an invalid value of the (1) smarty or (2) selected_theme parameter
0, via an absolute pathname and .. (dot dot) in the selected_theme parameter.
4, via an activateorder request to index.php with an invalid orderid parameter
0, via the adtype parameter
4, via (1) the draft parameter to mailer.w2b or (2) the listDocPay parameter to DocPay.w2b.
4, via a certain maddr parameter.
2, via the (1) id or (2) pass parameter to (a) mezungiris.asp or (b) ogretmenkontrol.asp.
0, via the month parameter and other unspecified vectors.
4, via unknown vectors.
4, via a large p_cnct_count value in a p_cnct structure in a connect (0x01) request to port 3050/tcp
2, via unspecified DHTML manipulations that trigger memory corruption
4, via shell metacharacters in a URI in the SRC of an IFRAME
2, via the id parameter.
2, via the user parameter.
4, via a direct request to admin/adm/test.php
4, via a direct request.
4, via a URL in the bloggie_root_path parameter to (1) config.php; (2) db.php
2, via the title parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the ticketid parameter in a showticket action.
3, via unspecified vectors.
3, by uploading a file with a .php extension and an image content type
5, via URL-encoded HTML composed of a frameset in which a frame has a SRC attribute pointing to a JavaScript document.
5, via an e-mail message with a long address. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the pass parameter.  NOTE: this issue reportedly exists because of an initial incomplete fix for CVE-2007-3190. The provenance of this information is unknown; the details are obtained solely from third party information.
4, via requests to (1) register.pl or (2) profile.pl that write CRLF sequences to a .vars file.  NOTE: this can be leveraged to execute arbitrary code.
4, via a long string argument to the RemoveChr method.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the PATH_INFO (REQUEST_URI). NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via the (1) viewmode
2, via the (1) view and (2) mode parameters.
1, via crafted arguments to the (1) rxsAddNewUser
4, via a URL in the path_inc parameter to (1) index.php in gestion/; (2) identification.php
4, via the pagex parameter.
4, via a URL in the spaw_root parameter.  NOTE: this may be a duplicate of CVE-2006-4656.
4, via a URL in the spaw_root parameter.  NOTE: this issue is probably a duplicate of CVE-2006-4656.
4, via a URL in the dir_module parameter.
2, via certain XDR data in NFS requests
1, via unspecified vectors
2, via the input values.
4, via a URL in the FORUM[LIB] parameter. NOTE: by default
4, via a request with a non-directory gallery parameter
4, via a URL in the htmlclass_path parameter.
2, via the SaveImage method.
2, via the topic parameter.
2, via the topic parameter.  NOTE: this might be resultant from SQL injection.
4, via a URL in the xoopsConfig[root_path] parameter.
4, via a URL in the spaw_root parameter.  NOTE: this issue is probably a duplicate of CVE-2006-4656.
2, via the PATH_INFO (REQUEST_URI) to wp-admin/themes.php
3, via the PHP_SELF portion of a URI to index.php.  NOTE: this can be leveraged for PHP code execution in an administrative session.
2, via the URI (REQUEST_URI) that accesses index.php.  NOTE: this can be leveraged for PHP code execution in an administrative session.
2, via the PHP_SELF portion of a URI.
2, via the re parameter.  NOTE: exploitation may require forcing the client to send a certain Referer header.
2, via unspecified vectors to forums/bb-edit.php
1, via unspecified parameters
2, via the Itemid parameter.
3, via the mb_tracker cookie.  NOTE: the product was patched without updating the version number; later downloads of 2006.4 are not affected.
5, via a .. (dot dot) in the adminlang cookie to admin/functions.php or (2) read arbitrary local files via the img parameter to admin/show_img.php.
5, via (1) certain email
2, via large values to the (1) year and (2) month parameters
4, via (1) an invalid month[] parameter to calendar.php
2, via the PATH_INFO (PHP_SELF).
4, via unspecified vectors.
2, via the fromaction parameter in a log action
4, via a read (RRQ) request with an invalid blksize (blocksize)
4, via (1) the URI in a GET request or (2) the Title field of a visitor comment
4, via a URL in the strIncludePrefix parameter.
4, via a URL in the serverPath parameter.
4, via a .. (dot dot) in the language parameter in a register action.
4, via unspecified vectors. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via JavaScript that sets the document.location variable
2, via the q parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via unknown vectors.
2, via the PATH_INFO.
4, via a long argument to the DeleteRecordSourceIfUnused method.
2, via certain forms that trigger errors related to History
2, via the HTTP Referer field.
4, via a URL in the spaw_root parameter.  NOTE: this issue is probably a duplicate of CVE-2006-4656.
4, via a ' (quote) character in the cid parameter
2, via an article name
3," by specifying a PHP file type in a parameter intended for """"a small image"""" associated with an article."
2, via the cid parameter.
4, via a .. (dot dot) in the userlanguage profile setting
2, by invoking dangerous methods.
4, via a URL in the GLOBALS[ini_array][EXTLIB_PATH] parameter to (1) msDb.php
1, via unspecified vectors related to MessageProcessor.cc and possibly other components.
4, via a crafted header in a (1) LHA or (2) RAR archive.
2, via the errorcode parameter.  NOTE: a patch may have been released privately between April and June 2007.  NOTE: this issue may overlap CVE-2007-3273.
4, via a message sent through the MSN protocol
4, via a URL in the config[include_dir] parameter
2, via the User-Agent HTTP header.
2, via the ara parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.
4, via (1) the login_username parameter to login.php or (2) the item parameter to news.php.
0, via format string specifiers in (1) an Ogg/Vorbis file
4, via a malformed SIP message.
4, via a malformed SIP message.
4, via a flood of packets to the BOOTP port (68/udp).
2, via the idProduct parameter.  NOTE: this might be the same as CVE-2005-2190.2.
0, via the redirectUrl parameter to (1) comersus_customerAuthenticateForm.asp or (2) comersus_message.asp
5, via a URL in the _LIB_DIR parameter
4, via a .. (dot dot) in (1) the loc parameter to admincp/index.php and (2) the Hyperlink information URl field for post Topic in showthread.php
4, via a URI with a trailing %20 (encoded space).
2, via the (1) module_key parameter to (a) kb/kb.php
4, via a news post
4, via (1) a certain HTML form that is posted automatically by JavaScript or (2) a news post.
4, via a .. (dot dot) sequence in the name parameter in a modload action.
4, via a large number of terminal control sequences.
4, via unspecified vectors.
4, via a large number of requests for nonexistent pages.
2, via unspecified vectors
0, via comments that have (1) a malformed SGML numeric character reference with a '\0' (0x00) character in a javascript: URI or (2) an attribute in an element that lacks the '>' character at the end of the start tag
4, via unspecified vectors.
2, via the (1) album_id
2, via the (1) Outgoing_Type_ID
2, via unspecified manipulations of the page parameter.
4, via a malformed SDP header in a SIP INVITE message.
4, via a malformed SIP message of a certain length or (2) cause a denial of service (continuous ring) via a malformed SIP message of a certain other length.
4, via a flood of spoofed SIP INVITE requests.
2, via unspecified vectors that contain an apostrophe.
4, via a URL in the myevent_path parameter.  NOTE: a reliable third party disputes this issue
0, via the s_user_id parameter to ViewCat.php and other unspecified vectors. NOTE: the CatID/ViewCat.php
4, via unspecified vectors.
2, via certain requests that reveal the path in an error message
4, via a URL in the _SERWEB[serwebdir] parameter.
4, via a URL in the _SERWEB[serwebdir] parameter to (1) html/load_apu.php or (2) html/mail_prepend.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, by sending a client certain data containing NICK and EXEC strings
5, via a SIP message with a malformed header.
1, via malformed SIP packets.
2, via the body content.
4, via a malformed CGI parameter.
2, via an INVITE message with a long Via header.
4, via a URL in (1) the sunPath parameter to include.php or (2) the dir parameter to skin/board/default/doctype.php.
4, via a URL in the _POWL[installPath] parameter.
2, via empty TXT data over D-Bus
2, via long client messages.
4, via a crafted LZH archive
5, via a long value in the title HTML tag
2, via the From field and possibly other fields
2, via the (1) Name or (2) Value field
1, via crafted requests
4, via a crafted chunked encoding in an HTTP response
5, via a malformed DCP ETSI packet that triggers an infinite loop.
3, via malformed (1) SSL or (2) MMS packets that trigger an infinite loop.
1, via crafted DHCP-over-DOCSIS packets.
2, via the (1) artid parameter to mod.php in a viewarticle action (publisher mod) and the (2) bid parameter to banners.php in a click action.  NOTE: the mod.php viewdisk and viewlink vectors are already covered by CVE-2006-6873.
2, via the opsubmenu parameter.
4, via a large number of requests for nonexistent pages.
0, via the username parameter to login.php.
4, via a URL in the tfooter parameter.
2, via the news_id parameter in a pagetool_news action.
2, via the uploadedFile[] parameter.
4, via a .. (dot dot) in the name parameter.
2, via the (1) ad and (2) konu parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the file: URI in the (1) src attribute of a (a) bgsound
5, via a URL with a trailing encoded space (%20).
2, via the image_id parameter.
2, via the from parameter.
2, via the (1) GridSearch
3, via the (1) od and (2) search parameters to (a) suppliersList.asp and (b) contactsList.asp.
2, via the (1) id or (2) type parameter.
4, via a search string
0, via the lang parameter
2, via the lang parameter.
2, via the pageid parameter in a stats action.
2, via the file parameter to (1) plotStatBar.php or (2) plotStatPie.php
2, via the submit parameter in an email action.
4, via a URL in the dir_edge_lang parameter.
4, via a .jpg filename.
0, via the ID parameter in an add action.
5, via a ' (quote) character in the page parameter
4, via a long argument.
4, via a flood of SIP INVITE requests to the port specified for voice conversation.
5, via a malformed header value in a SIP INVITE message
4, via a malformed message
0, via format string specifiers in an SDP header value
2, via format string specifiers in an SIP INVITE message that lacks a host name in the Contact header.
4, via a malformed SIP invite message
4," via the """"basic search box.""""  NOTE: 4.0.2 and other versions might also be affected."
2, via the msgs parameter.  NOTE: 4.0.2 and other versions might also be affected.
2, via the newsid parameter.
2, via the member parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the pg parameter.
0, via the doc_id parameter in an inline action.
2, via long crafted requests
2, via an empty hash and empty encrypted password string
4, via a large length value for a (1) Long string or (2) XML variable type in a crafted (a) FLV or (b) SWF file
0, via a full pathname in the argument to the WriteMovie method.
4, via a URL in the (1) aide or (2) perso parameter.
2, via the pid parameter.
4, via a WAV file with a large sample rate.
5, via a crafted WAV file that causes an uninitialized i_nb_resamplers variable to be used.
4, via unspecified vectors.
1, via unspecified vectors involving a gdImageCreate failure.
4, via a GIF image that has no global color map.
0, via large color index values in crafted image data
4, via a large (1) start or (2) end angle degree value.
1, via unspecified vectors
4," via a long string in the """"used DLL"""" field in a WDP project file."
4, via a malformed WDP project file.
0, via JavaScript that overwrites the document variable and statically sets the document.domain attribute.  NOTE: this issue has been disputed by other researchers
0, via JavaScript that overwrites the document variable and statically sets the document.domain attribute.
2, via the q parameter.  NOTE: this issue is disputed by the Google Security Team
2, via the (1) query or (2) within parameter to the default URI.
2, via the text parameter to the default URI.
2, via the argument to the saveXMLAsFile method.
1, via unspecified vectors
4," via a certain string containing """"//A:"""" in the argument to the LIST command."
2, via the history.length JavaScript variable.
1," via unspecified vectors related to """"unescaped print_r output."""""
4, via a modified xeforum cookie.
0, via the domain parameter
4, via a .. (dot dot) sequence in the lang parameter to (1) qtf_checkname.php
1, via unspecified vectors involving bitmap fonts
4, via a large comment value_length.
4, via a large LD_HWCAP_MASK environment variable value.  NOTE: the glibc maintainers state that they do not believe that this issue is exploitable for code execution.
4," via a large LHA """"Extended Header Size"""" value in an LZH archive"
0, via JavaScript that overwrites the document variable and statically sets the document.domain attribute to a file:// location
2, via the id parameter.
2, via the (1) kullanici
2, via the PATH_INFO (PHP_SELF) to (1) index.php
2, via the id parameter.
2, via the id parameter.
2, via the CategoryID parameter.
4, via a usercookie cookie.
4, via a URL in the SpellIncPath parameter to (1) spellcheckpageinc.php
4, via a .. (dot dot) in the (1) Ent or (2) Lang parameter.
4, via a URL in the level parameter to (1) admin/includes/author_panel_header.php or (2) admin/includes/admin_header.php.
4, via a direct request to includes/phpinfo.php
4, via (1) the news_id parameter to view_news.php
2, via certain database operations with multi-byte character sets that trigger an attempt to use the value 65536 for a 16-bit integer
2, via an empty value of the id[] parameter
4, via a symlink attack on the /tmp/nvclock temporary file.
4, via a loopback packet with zero in the length field.
2, via the rid parameter.
4, via a .. (dot dot) in the (1) FORUM_LANGUAGE parameter to functions.php or the (2) style parameter to bottom.php.
3, via long (1) Host
2, via the id parameter.
5, via the (1) t and (2) f parameters in (a) qti_ind_post.php and (b) qti_ind_post_prt.php; (3) dir and (4) order parameters in qti_ind_member.php; (5) id parameter in qti_usr.php; and the (6) f parameter in qti_ind_topic.php.  NOTE: it was later reported that vector 5 also affects 1.4
2, via the (1) search
3, via unspecified vectors.
2, via the msg parameter.
5, by making a post that specifies a .php filename in the _wp_attached_file metadata field; and then sending this file's content
1, via unspecified vectors
4, via a long filename when setting background music.
4, via unspecified vectors.
3, by sending a large banner to a client that is sending a file.
2, via the cat_id parameter.
3, via JavaScript
5, by attempting to login as the Guest user when another Guest user is already logged in
2, via unspecified vectors
5," via a URL to the """"Secondary Login Page"""""
4, via a long argument to the queryHub function.
5, via a style expression in the search parameter
2, via an album password cookie to an unspecified component.
2, via the ara parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.
2, via the id parameter in a view_page action to index.php.
5, via a long size value in a create request to port 3050/tcp.
4, via a BMP image with a Bits Per Page (BPP) value of 0.
2, via the (1) updateform and (2) displayform parameter to (a) gateway/gateway.exe; the (3) TERMS
4, via Fullwidth/Halfwidth Unicode encoded data in a HTTP POST request.
4, via a certain directive to Apache that causes the HTTP-Header response to be modified
4, via shell metacharacters in the param parameter
2, via the (1) acparentid or (2) acitemid parameter to an unspecified component
2, via the (1) c4_trap_ip_
0, via the logindomain parameter to members.php.
2, via the o parameter.
2, via the idnew parameter.
2, via the order parameter.
4, via a URL in the id parameter.
2, via the score parameter
2, via the admin cookie parameter
0, via the UserID parameter to sub-join.php.  NOTE: this may be the same as CVE-2006-3691.4.
0, via the id parameter to (1) showthread.php or (2) showboard.php.
2, via the user parameter.
2," via unspecified vectors related to """"a remote form"
1, via modified id fields.
2, via the (1) alpha parameter in (a) netflow/jspui/applicationList.jsp
2, via the (1) name parameter in (a) ping.do and (b) traceRoute.do in map/; the (2) reportName
0, by setting the Cookie parameter.
0, via the assigned_user_id parameter in a Potentials ListView action to index.php.
5, via a long argument to the PrepareToPostHTML function.
4, via unspecified vectors.
4, via unspecified vectors.
0, via the id parameter to (1) b.php and (2) account/gallery.php
2, via the cat parameter.
4, via a long response to a JOIN command.
2, via the PARAMS parameter.
4, via a certain profilePrivileges action in the Users module.
5," via a (1) poll or (2) kill request with a """"long invalid subcmd."""""
4, via a .. (dot dot) in the lang parameter.
4, via a .. (dot dot) in the (1) prevlang and (2) super parameters to (a) php/login.php; the (3) charset parameter to (a) php/login.php
2, via the (1) IN and (2) OUT parameters.
4, via malformed messages.
4, via a long string in the group parameter to /msgserver/html/group.
4, via a certain request that uses content redirection and a long pathname.
4, via a certain request.
2, via the cid parameter to (1) login.php
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the params parameter
4, via a URL in the homedir parameter to (1) OLE/PPS/File.php
0, via a full pathname in the argument to the (1) SaveLastError method and probably the (2) WriteExe method.
2, via unspecified vectors
5, via unspecified vectors. NOTE: this might overlap CVE-2005-1924
5, via unspecified vectors.  NOTE: this information is based upon a vague pre-advisory from a reliable researcher.
1, via unspecified vectors
4, via (1) the _wp_http_referer parameter to wp-pass.php
4, via (1) an end-of-file condition within a pax extension header or (2) a malformed pax extension header in an (a) PAX or a (b) TAR archive.
4, via (1) an end-of-file condition within a tar header that follows a pax extension header or (2) a malformed pax extension header in an (a) PAX or a (b) TAR archive
2, via the user parameter in a member action.
0," by setting the username cookie to """"traffic."""" NOTE: some of these details are obtained from third party information."
2, via the second argument to the SaveToFile method.
5, via (1) an invalid year parameter to calendar.php
4, via a '; (quote semicolon) sequence in the id parameter
2, via the id parameter.  NOTE: this might be the same issue as CVE-2008-0328.
2, via the (1) key or (2) desc parameter to index.php
0, by opening multiple tabs in a popup window.  NOTE: this issue has been disputed by third party researchers
4, via a crafted DLL library.
4, via a crafted BROWSER environment variable.  NOTE: it is not clear whether this issue crosses privilege boundaries.
2, via an argument to the SaveBarcode function.
2, via certain function calls
4, via a crafted FLV file.
4, via a crafted MPA file.
2," via certain functions when """"improperly used"""""
2, via unspecified vectors involving the UpdateCatalog and other functions.
2, via the Connect function.
2, via the DDRow Height variable.
4," via """"improperly initialized"""" (1) LoadSegmentWord"
0, via unspecified form fields on the blogroll page.
0," via format string specifiers in """"various string formatting functions"
1, via modified pointer values in unspecified remote administration requests
0, via the id parameter to (1) idsp1.pl
4, via a long ODMPATH environment variable.
0, via malformed Interrupt Request Packet (Irp) parameters.
2, via the id parameter.
2, via the topic_id parameter.
4, via the (1) q and (2) t parameters in (a) db.php and (b) rpc.php.
2, via the q parameter.
4, via CRLF sequences in the HTTP_REFERER parameter.
2, via the (1) tool_url parameter to ecrire/tools.php and multiple fields on the (2) blogconf
4, via a .. (dot dot) in the name parameter.
2, via the username parameter.
4, via a long filename.  NOTE: the researcher does not suggest any circumstances in which the filename would come from an untrusted source
4, via a malformed .EXP database file and (2) cause a denial of service (aaplication crash) via a crafted .EXP database file
4, via a URL in the phpbb_root_path parameter.
4, via a certain value in the PACK_SIZE field of a RAR archive file header.
4, via a .. (dot dot) in the archives parameter in a Load action.
5, via a long argument to the Fill method.  NOTE: this is probably a different issue than CVE-2007-2987.
1," by setting the adminLogged cookie to """"Administrator."""""
2, via the FTVAR_SUBCAT (txForumID) parameter to forum/index.cfm and possibly other unspecified components
4, via (1) String.fromCharCode and (2) malformed nested tag manipulations in an unspecified component
4, via CRLF sequences in an unspecified parameter
4, via a URL in the projectPath parameter.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this might overlap CVE-2007-0160.
4, via a .. (dot dot) in the template parameter to the default URI.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this is probably a different issue than CVE-2004-2464.  NOTE: it was later reported that 0.6.21 and earlier is also affected.
5, via a crafted RAR archive
4," via """"NICK_CHANGE"""" notifications."
4, via a bookmark with a long title.
4, via a crafted packet.
4, via a crafted packet.
1, via crafted Sample Table Sample Descriptor (STSD) atoms in a movie file.
2, via untrusted Java applets that gain privileges via unspecified vectors.
1, via crafted album cover art in the covr atom of an MP4/AAC file.
4," via a """"tel:"""" link"
4," via a crafted """"tel:"""" link that causes iPhone to display a different number than the number that will be dialed."
2, by causing Javascript events to be applied to a frame in another domain.
3, via shell metacharacters in a crafted link
4, via a .. (dot dot) in the newspath parameter.
2,upload files with arbitrary file types to
5, via a malformed password packet in the connection protocol.
4, via a view that refers to this external table.
2, via the ID parameter in an article action.  NOTE: this is probably different from CVE-2005-1413.4.
4, via a hostname of a DHCP client.
0, via a full pathname in the argument to the SaveToFile method.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Password field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long argument.
1, via long SMTP commands.  NOTE: some of these details are obtained from third party information.
4, via a URL in the int_path parameter to (1) header.php
3, via unspecified vectors.
4, via a UserId variable with a large amount of trailing whitespace followed by a malicious value
1, via crafted TLVs in a BGP packet
2, via special characters in a cookie that is obtained from (1) PATH_INFO
4, via small files.
2, via an invalid value of the flags parameter
2, via the user name field in the login procedure
0, via the categories[] parameter in a search action to index.php
0, via the cat_id parameter in a list action to directory.php
2, via the categoryid parameter.
4, via (1) the id parameter to news.php or (2) the name parameter to page.php.
0, via the f parameter in a forums action to index.php.
4, via a URL in the MK_PATH parameter.
4, via (1) the idurlo field in the delete_urlo function in (a) index.php in the urlobox module; the iden field in the (2) update_file and (3) del_file functions in (b) index.php in the reviews module; the (4) idnews field in the delete_news function and the (5) idcomm field in the del_comment function in (c) index.php in the news module; the (6) idcomm field in the delete_comments function in (d) index.php in the gallery module; the iden field in the (7) edit_file
4, via a long search string in certain fields in the GUI.  NOTE: this may cross privilege boundaries if PIRS is used by data-entry workers who do not have full access to the underlying Windows environment.
3, via loops of references to external templates.  NOTE: this issue has been disputed by multiple third parties who state that only the application developer can trigger the issue
4," via """"the message displayed above the default user login block."""""
4, via a long URI with trailing whitespace
4, via a long URI with trailing whitespace
4, via unspecified vectors.
4, via (1) the who parameter to showuser; and other vectors involving (2) calendar mode
5, by sending a crafted packet containing a long string to port 5151/udp.
2, via the katID parameter.
1, via unspecified vectors
4, via a (1) long FailURL attribute in the IAMCE ActiveX Control (IAMCE.dll) or a (2) long URLCode attribute in the IAKey ActiveX Control (IAKey.dll).  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the reminder parameter.
4, via a URL in the page parameter.
4, via a malformed aim: URI
3, via certain aim: URIs
2, via unspecified vectors related to a URL that can be discovered through a keyword search.  NOTE: this may be related to the MetaLib XSS issue
1, via unspecified vectors related to a resource id that can be discovered through a search.
0, via format string specifiers in certain data related to failed DCC file transfer negotiation.
4, via a long CTCP request message containing '%' (percent) characters.
2, via the SRC attribute of a SCRIPT element in the avatar parameter.  NOTE: this may be related to the tracker program in the Janitor package.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a javascript: URI in the avatar parameter.  NOTE: this may be related to the tracker program in the Janitor package.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the offset parameter.
5, via unspecified vectors.  NOTE: this may be the same as CVE-2007-2970.
4, via (1) DBMS_JAVA_TEST in the JavaVM component (DB01)
4, via (a) the Oracle Text component
4, via (1) EXFSYS.DBMS_RLMGR_UTL in Rules Manager (DB11) and (2) Program Interface (DB13).
2, via unknown attack vectors
1, via custom applications that use JBO.KEY
0, via Oracle Single Sign On
4, via (a) Oracle Configurator (APPS02)
2, via unknown vectors
4, via unspecified vectors.
2," via an invalid """"previous listing chunk number"""" field in a CHM file."
4, via (1) a long workgroup (-W) option to mount_smbfs or (2) an unspecified manipulation of the command line to smbutil.
2, via the msgid parameter.
2, via the id parameter.
4, via a full pathname in (1) the second argument to the Save method
2, via the forumid parameter.  NOTE: it was later reported that 2.0.1 is also affected.
2, via the searchterms parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the s parameter in a search pID action.
2, via the (1) Isim
4, via (1) the search action
2, via the current_subsection parameter to index.php and other unspecified vectors.
1, via crafted HTML attributes.
2, via unspecified vectors
2, via unspecified vectors involving memory corruption from an unhandled error.
4, via a crafted (1) WAV or (2) AVI file.
4, via a crafted SAMI file.
1, by calling the setExpression method and then modifying the outerHTML property of an HTML element
0, via uninitialized or deleted objects used in repeated calls to the (1) cloneNode or (2) nodeValue JavaScript function
0, via the _order parameter to (1) photos.php and (2) edit_photos.php.
3, via unspecified vectors.  NOTE: it is not clear whether there is an attacker role.
1, via unspecified vectors involving a URL with a redirect parameter value
1, via unspecified vectors
2, via the (1) date and (2) limit parameters to index.php
5, via a Jabber resource name and possibly other data items
2, via long filename arguments in HTTP requests.
4, via shell metacharacters in the name of the executable file for a running process.
4, via unspecified vectors.
4, via a symlink attack on a skkdic$PID temporary file.
4, via a long message with multibyte characters that can produce an invalid UTF-8 string after it is truncated
2, via the confirm_hash parameter.
4, via a symlink attack on /tmp/xenq-shm.
4, via a symlink attack on temporary files.
2, via the (1) Search or (2) Search Charset command.
2," via unspecified vectors involving an """"overwritten destructor."""""
1," via unspecified vectors in Imailsec and (2) allow attackers to have an unknown impact via an unspecified vector related to """"subscribe."""""
5, via a long e-mail address in an address book entry.  NOTE: this might overlap CVE-2007-3638.
4, via a crafted header in a torrent file
2, via the spell_utf8test function in lib/exe/spellcheck.php
0, via the CFTOKEN parameter
4, via a URL in the p_mode parameter.
4, via a URL in the phpbb_root_path parameter.
4, via unspecified vectors.
2, via the topicid parameter in a view action in the Topics module
2, via the category parameter.
2, via the svalue parameter in a search action.  NOTE: some of these details are obtained from third party information.
2, via the profile_email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified vectors related to the sourcedir parameter or the actionArray hash.  NOTE: CVE and multiple third parties dispute this vulnerability because both sourcedir and actionArray are defined before use.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
1, via unspecified vectors involving (1) a memory leak
0, by sending an HTTP request with duplicate headers
4, via a crafted (1) ACE or (2) LZH file
4, via a crafted DOC file
4, via a crafted DOC file that triggers a divide-by-zero error.
5, via a long second argument (varBrowser argument) to the search method.  NOTE: some of these details are obtained from third party information.
4, via a POST request with a long URI.
4, via a certain GIF file
1, via certain data to TCP port 5179 that overwrites a destructor
4, via a directory entry whose length is exactly MAXNAMELEN
4, via (1) a long filename that is not properly handled by the fsp_readdir_native function when MAXNAMLEN is greater than 255
2, via the login field to /admin
4, via a .. (dot dot) in the folder parameter.
4, via a modified URL containing the folder name.
4, via a crafted EXE file
4, via a crafted CAB file
4, via a crafted ASPACK packed file
4, via a crafted (1) ASPACK or (2) FSG packed file
2, via the (1) id parameter to (a) index.php
0, via the title parameter in a ptopic action
2, via the newsID parameter.
4, via unspecified vectors.
2, by setting the PHPSESSID parameter.
2, via the news_id parameter.
4, via a URL in the id parameter.
0, via the catid parameter in a displaycat action.
0, via a full pathname in the first argument to the SaveLayout method.
0, via a full pathname in an argument to the SaveLayout method.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long argument to the Scan method.  NOTE: this is probably a different issue than CVE-2007-2987.
4, via a .. (dot dot) in the name parameter.
0, via a name parameter that specifies the eventcache directory and a non-GIF file
2, by setting the PHPSESSID parameter.
2, via the (1) Adiniz (Ady)
2, via the Password parameter.  NOTE: the Username parameter is covered by CVE-2006-6029.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a large (1) srcW or (2) srcH value to the (a) gdImageCopyResized function
3, by specifying a malicious library with the -R (ParseRoutine) command line argument.
2, via unspecified vectors that trigger the overflow in a gets function call.  NOTE: the client is setuid root on AIX
4, via a long string to the shell port (514/tcp).  NOTE: this might overlap CVE-2007-4006.
4, via a URL in the page parameter.
4, via a .. (dot dot) in the pagename parameter.
4, via a URL in the thisdir parameter.
3, via unspecified vectors.
4, via unknown vectors.
2, via the (1) user and (2) pwd parameters.
3, via the (1) user and (2) pwd parameters.
2, via the resname parameter.
4, via the searchterms parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
4, via a long argument.  NOTE: this program is not setuid by default
0, via a full pathname in the site parameter.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the argument to the deleteReport method
4, via a long string in a .mls Playlist file.
4, via a long FileName parameter.  NOTE: this issue was originally reported to be in the imagepsloadfont function in php_gd2.dll in the gd (PHP_GD2) extension in PHP 5.2.3.
4, via a long argument to the GetComponentVersion method.  NOTE: some of these details are obtained from third party information.
4, via (1) a corrupted Microsoft Exchange database
4, via a malformed NTFS filesystem containing a modified FILE record with a certain large offset. NOTE: the vendor disputes the significance of this issue
0, via a NULL byte (%00) and shell metacharacters in a (1) mailto
0, via a NULL byte (%00) and shell metacharacters in a (1) mailto
0," via a name parameter ending with a """"%00.gif"""" sequence. NOTE: a separate traversal vulnerability could be leveraged to download arbitrary files."
2, via the catid parameter.
2, via the PATH_INFO.
4, via unspecified vectors.
4, via a file with a long pathname.  NOTE: some of these details are obtained from third party information.
2, via the email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the order parameter to new_images.php.
2, via the cat parameter.
2, via the id parameter.  NOTE: this may be related to CVE-2006-4300.
0," via the cat_id parameter in a list action. NOTE: the original report indicated that this was the """"photo"""" SourceForge project (aka Maan Bsat Photo Collection)"
4, via a filename ending with (1) .php.gif
0, via a full pathname in the first argument to the StartProcess method.
0, via a full pathname in the argument to the SetLogFileName method.
5, via a long string in the (1) method name or (2) URI in an HTTP request.
4, via a .. (dot dot) in the argument to the saveNessusRC method
2, via unspecified vectors involving the deleteNessusRC method
0, via a full pathname in the second argument to the GetToFile method.  NOTE: some of these details are obtained from third party information.
4, via (1) the kat_id parameter to the default URI in a download action or (2) the id parameter to the default URI in a duyurular_detay action.
2, via the cat_id parameter.
3, via unknown vectors.
2, via the (1) page or (2) login parameter.
0, via the q parameter in a search mod action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) product_id or (2) cat_id parameter in a product mod action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) msg
2, via the (1) r parameter to (a) forgot_uid.php
2, via the (1) domain or (2) q parameter to (a) admin/membersearch.php
2, via the p_id parameter in a people_card action.  NOTE: this might overlap CVE-2006-2564.
3, via vectors in (a) merchants/index.php
2, via the userid parameter.
4, via (1) the cat_id parameter to search.php or the (2) typ parameter to register.php.
4, via (1) the pgmid parameter in an uploadProducts action to merchants/index.php and possibly (2) the rowid parameter to merchants/temp.php.
2, via the (1) que_id parameter to forum_answer.php or (2) the cat_id parameter to search.php.
4, via (1) the gid parameter to gmembers.php
4, via (1) a ' (quote) character in the category parameter to view_video.php
2, via the (1) id
2, via the debug parameter to (1) forum.php
4, via (1) the URI to inc/lib/screen.php or (2) the title parameter to post.php.  NOTE: vector 2 might overlap CVE-2006-6283.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via directory names that are not properly handled when calling the f_name function.
5, via a URL in the login_form parameter
4, via a Username field in an unspecified component
0, via the Madoa parameter to (1) index.php
4," via a leading '""""/></> sequence in the search string."
1, via unspecified vectors
4," via a request containing """"a link to download and a file to execute"
2, via the Password parameter.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
2, via the Password parameter.
2, via the Password parameter.
2, via the Password parameter.
4, via unspecified vectors.
2, via the (1) kadi or (2) email parameter.  NOTE: some of these details are obtained from third party information.
0, via the wndtitle parameter to (1) lang-en.php
2, via the forumid parameter.  NOTE: this might be related to CVE-2007-0920 or CVE-2007-3884.
4, via a URL in the PN_PathPrefix parameter.  NOTE: this issue is disputed by a reliable third party
4, via a URL in the sitepath parameter.
2, via the (1) user and (2) Pass fields.
5, via a URL in the (1) classfile parameter to includes/functions.php
3," via certain """"unexpected data."""""
1, via unspecified use of certain DTrace programs.
0, via the mapId parameter in a viewmap action.
4, via a .mpr file (replay file) that contains a long car name.
4, via a request containing an XSS sequence in the action parameter to index.php
1, via unspecified vectors involving a crafted Sametime meeting.
0, via the base_path parameter
4, via a long string in the second argument to the ConnecttoServer method.
2, via the cmd parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via a long filename in a """"LOG."""" command."
4, via (1) a LOG.ON command
3, by capturing and resending data from the DETAILS and PROCESS sections of a session that schedules an audit.
4, via (1) the Options Database Table in the Admin Panel
2, via the page_options parameter to (1) options-general.php
0, via a full pathname in the first two arguments to the (1) CreateProcess or (2) CreateProcessEx method.
4, via (1) the id parameter to member.php in a page action
2, via the (1) cat_id
0, via the s parameter
4, via a URL in the CatName parameter.
5, via a URL in the (1) dirpath parameter to _functions.php or the (2) lang parameter to index.php.  NOTE: CVE disputes vector 1 because the applicable include_once is located in a function that is not called on a direct request
4, via a URL in the (1) include parameter to (a) Main.php and (b) get.php and the (2) exec parameter to (c) count.php.
0, via the id parameter to the default URI.  NOTE: some of these details are obtained from third party information.
2, via the (1) searchtype
0, via the id parameter
2, via the (1) subaction and (2) action parameters.
3, via unspecified vectors.  NOTE: this might overlap CVE-2007-3328.
2, via the deslocal parameter.
3, via unknown vectors.  NOTE: this is probably different from CVE-2007-0916
2, via an upload action specifying a filename with a double extension such as .gif.php
2, via the cid parameter to index.php.
2, via the pollid parameter.
4, via a direct request for (1) Stat.php (2) OutputFilter.php
4, via a URL in the mosConfig_absolute_path parameter.
2, via PHP sequences in the searchword parameter
3, via unspecified vectors.
2, via unspecified vectors in the (1) com_search
4, via CRLF sequences in the url parameter.  NOTE: this can be leveraged for cross-site scripting (XSS) attacks.  NOTE: some of these details are obtained from third party information.
3, via unspecified vectors.  NOTE: it is not clear whether IDE Group updates all DRS installations in its role as an application service provider. If so
4, via a malformed file
4, via a malformed ext2fs image.
4, via a malformed NTFS image that triggers (1) dereference of a certain integer value by ntfs_dent.c in fls
1, by setting the Cookie parameter.
4, via a UDP packet to port 694.  NOTE: this may be the same as CVE-2006-3121.
3, via the (1) Username or (2) Password field.  NOTE: these fields might be associated with the txtUsername and txtPassword parameters.
2, via the (1) Users_Email or (2) Users_Password parameter in an ExecuteTheLogin action.
4, via unspecified vectors.
4, via (1) the mid parameter in an faqviewgroup action in the FAQ Modules
4, via a (1) COPY or (2) APPEND command.
4," via a trailing """"<"""" instead of a """">"""" in (1) the onerror attribute of an IMG element"
4, via a crafted Interrupt Request Packet (Irp) in a METHOD_NEITHER (1) IOCTL 0x8400000F or (2) IOCTL 0x84000013 request
0, via a long parameter to a macro
2, via certain RPC requests to certain TCP ports that are processed by the (1) RPCFN_ENG_NewManualScan
4, via a .. (dot dot) in a Send request
4, via (1) a long user name and (2) certain malformed requests; and (3) allow remote Timbuktu servers to have an unknown impact via a malformed HELLO response
5, via a crafted HTML email
5, by calling setInterval with a small interval and changing the window.location property.
0, via an http URI with a large amount of whitespace in the user/password portion.
4, via a certain JPG file
2, via long port logical name (-l) argument.
0, via certain malformed HTML
4," via a bellabiblio cookie with the value """"administrator."""" NOTE: this issue is disputed by CVE and multiple third parties because the cookie value must be an MD5 hash."
4, via a URL in the svr_rootscript parameter
4, via a URL in the format_menue parameter.
4, via unknown vectors.
2, via unspecified vectors associated with the names of the photos.  NOTE: some of these details are obtained from third party information.
4, via a URL in (1) the dirpath parameter to (a) _functions.php
2, via the loginID parameter.
4, via a long string to TCP port 17781.
2, via certain network traffic
4, via a search
4, via a malformed ICS file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, via a full pathname in the first argument to the SaveToFile method
0, via the topic parameter
4, via a long argument to the NotSafe method.  NOTE: this may overlap CVE-2007-2885 or CVE-2005-2127.
4, via a long first argument to the msql_connect function.
4, via a .. (dot dot) in the p parameter.
5, via (1) a .spr file (single player replay file) containing a long user name or (2) a .ply file containing a long number plate string
2, via the cat parameter.
4, via (1) a direct request for a URL under OnlineViewing/galleries/ or (2) navigation of the gallery user interface with JavaScript disabled.
2, via the (1) path and (2) download parameters.
2, via the (1) projectIssueId parameter in EditProjectIssue.do
5, via a crafted IOCTL request that adds an AppleTalk zone to a routing table.
4, via a crafted AppleTalk message with a negative value
4, via a crafted AppleTalk Session Protocol (ASP) message on an AppleTalk socket
4, via a symlink attack on certain files.
4, via a .. (dot dot) in an unspecified environment variable
4, via (1) unspecified vectors where an attacker's umask is honored
4," via a """"crafted localized message file"""" that enables a format string attack"
0, via certain vectors related to (1) DB2 instance or FMP startup on Linux and Solaris; (2) exec of executables while running as root on non-Windows systems
5, via a long DASPROF and possibly other environment variables
4, via a URL in the path_to_root parameter.
2, via the login field on the login page
4, via a certain request that modifies the password being checked.
4, via a URL in the sourcedir parameter.
2, via the (1) Success Template (STPL) and (2) Failure Template (FTPL) parameters
4, via a crafted NHRP packet.
4, via a URL in the docroot parameter.
4, via a crafted .au file that triggers a divide-by-zero error
4, via a URL in the script_root parameter to (1) delete.php
4, via (1) a malformed MGCP packet
4, via a malformed SIP packet
4," via (1) """"abnormal"""" MGCP messages"
5, via a malformed SIP packet
2, via the (1) yazan
4, via unspecified vectors.
4, via the (1) unlim_num_rows
0, via the next parameter to (1) addaddress.php
2, by setting the notes.ini (1) KFM_ShowEntropy and (2) Debug_Outfile debug variables
4, via a request composed of a single digit
0," via the article_id parameter in a """"print articles"""" action."
4, via a URL in the vsDragonRootPath parameter
4, via a URL in the root parameter.  NOTE: this can be leveraged for traffic amplification or other denial of service.
2, via the sysSystemName parameter.
1, via invalid configuration data.  NOTE: this issue might not cross privilege boundaries
4, via a URL in the adminfolder parameter.
5, via a URL in the config[root_ordner] parameter.
4, via a URL in the config[root_ordner] parameter to (1) gruppen.php
4, via a URL in the config[root_ordner] parameter to (1) index.php or (2) datei.php.
5, via a URL in the config[root_ordner] parameter to (1) index.php
4, via a URL in the config[root_ordner] parameter to (1) index.php
4, via a URL in the root parameter.
4, via a URL in the page parameter.
2, via the (1) f_emailaddress
2, via the IP parameter.
0, via format string specifiers in certain unexpected commands
3, via long (1) Location and (2) Server HTTP headers
1, by placing the account's name in the value of an fcms_login_id cookie.  NOTE: this can be leveraged for code execution via a POST with PHP code in the content parameter.
4, via a URL in the _SERVER[DOCUMENT_ROOT] parameter in (1) poll.php and (2) pollarchive.php.  NOTE: a reliable third party states that this issue is resultant from a variable extraction error in functions.php.
4, via a URL in the dvd_config_file parameter.
5, via a URL in the DOCUMENT_ROOT parameter.
4, via a URL in the _SERVER[DOCUMENT_ROOT] parameter.  NOTE: a third party disputes this vulnerability because of the special nature of the SERVER superglobal array.
4, via a crafted palette (.pal) file.
4, via a crafted packet to port 5633/tcp.
4, via a crafted packet to port 5633/tcp
1, via HTTP requests to port 1581
2, via an SNMP trap message.
4, via a crafted (1) textWithLanguage or (2) nameWithLanguage Internet Printing Protocol (IPP) tag
1, via unspecified vectors involving the (1) chpath
3, via unspecified vectors.
4, via unspecified vectors.
4, via a link to a data: URI containing an encoded URL.  NOTE: the severity of this issue has been disputed by a reliable third party
4, via a JOIN packet (aka connection packet) containing 0x69 in the ninth byte
4, via (1) the search form or (2) the jobid parameter to index.php in a showbyID action.
2, via certain network traffic
2, via the cat parameter.
4, via a set_lang cookie to an unspecified component.  NOTE: this may overlap CVE-2007-1965.
4, via a SIP INVITE message without a Content-Type header.
1," via crafted Javascript that triggers a """"virtual function call on an invalid pointer."""""
2, via the username parameter in a GenerateMainFrame command.
4, via a .. (dot dot) in the file parameter.
4, via a long string to UDP port 26000.
4, via a long argument to the SEARCH command.  NOTE: this might overlap CVE-2007-4372.
0, via format string specifiers in (1) a message or (2) certain data associated with an admin login.
4, via (1) a value greater than 0x27 for the (a) 0xca
2, via the Log File Viewer.
4, via a URL in the header parameter.  NOTE: CVE and a third party dispute this vulnerability because header is defined before use.  The researcher is known to be unreliable.
5, via a URL in the (1) NomVote and (2) FilePalHex parameters.
0, by using multipart encoded requests instead of form-urlencoded requests.  NOTE: this might be used to expose vulnerabilities in applications that would otherwise be protected by the validation routines.
2, via the query parameter.
4, via a certain length field in JPEG2000 data
2, via an M3U file that recursively includes itself.
3, via unknown vectors.
3, via that role.
4, via CRLF sequences in the name of the song in a .mp3 file.
4, via CRLF sequences in the name of the song in a .mp3 file.
4, via CRLF sequences in the name of the song in a .mp3 file.
4, via CRLF sequences in the name of the song in a .mp3 file.
2, via the '|' (pipe) shell metacharacter in the name of the song in a .mp3 file.
2, via the '|' (pipe) shell metacharacter in the name of the song in a .mp3 file.
0, by joining two channels with certain long names that differ in the final character
5, by creating a large number of unused channels (zannels).
0, by arranging for ops privilege to be granted before the mode arrives.
4, via a series of /silence commands with (1) CIDR mask arguments or (2) certain other arguments that represent groups of IP addresses
2, via unspecified parameters to (1) techs.php
4, via a new_entry value in the do parameter.
2," by enabling the """"Start Before Logon"""" (SBL) and Microsoft Dial-Up Networking options"
2, by sending the admin's username (admin_name) in a pheap_login cookie.  NOTE: the vendor disputes this vulnerability because authentication data is derived from the admin_pass and secret variables
0, via a full pathname in the second argument to the HttpDownloadFile method
4, via an OD3_AutoLogin cookie.
4, via a long argument.
4, via (1) a certain 0x00 byte in a pre-login ID 3 packet
1, via unknown vectors
1, via unknown vectors related to sending long URIs
2," via certain regular expressions in a """"show ip bgp regexp"""" command.  NOTE: unauthenticated remote attacks are possible in environments with anonymous telnet and Looking Glass access."
2, via the search field.
2, via the query parameter.
2, via unspecified parameters to (1) account-inbox.php
2, via the match parameter.  NOTE: some details are obtained from third party information.
3, via unspecified vectors.
4, via a URL in the site_isp_root parameter
4, via a long string in the filename argument to the win_browse_file function.
4, via a packet with ID (1) 0x80 or (2) 0x88 to UDP port 34297
4, via (1) an ID 0x30 packet
2, via format string specifiers in the NICK command (client nickname) when entering a game.
4, via a long game command in a replay (.rpl) file and (2) cause a denial of service (application crash) via a long SAY command that omits a required LF character; and allow remote Toribash servers to execute arbitrary code via (3) a long game command and (4) a long SAY command that omits a required LF character.
4, via a command without an LF character
2, via certain commands that contain many 0x07 or other invalid characters.
4, via a long (1) emote or (2) SPEC command.
2, via the (1) s parameter to index.php
4, via a crafted version string
2, via the aid parameter.  NOTE: it was later reported that 2.40 is also affected
4, via a .. (dot dot) in the chemin parameter.
4, via a URL in the cache_file parameter.
4, via a symlink attack on a temporary file whose name is constructed from the name of a file being tagged.
4, via a symlink attack on the gettextization.failed.po temporary file.
0, via an invalid RVA address function pointer in (1) an IMAGE_THUNK_DATA structure
3, via strings with CRLF sequences in the IMAGE_EXPORT_DIRECTORY array in a PE file
2, via unspecified methods and parameters.
2, via unspecified arguments to the (1) httpGETToFile
3, via unspecified vectors.
4, via a long argument to the SaveViewToSessionFile method.
2, via an HTTP request without a Host header.
4, via a URI
2, via the searWords parameter.
2, via the PATH_INFO (PHP_SELF).
3, via the PATH_INFO (PHP_SELF).
2, via the PATH_INFO (PHP_SELF).
2, via the PATH_INFO (PHP_SELF).
4, via a URL in the value parameter.
5, via a URL in the (1) styl[top]
4, via unspecified vectors.
2, via the portion of the URI immediately following the filename for (1) a GIF filename
4, via a long Username argument to the ReInit method.
0, via certain RPC function calls to (1) RPCFN_EVENTBACK_DoHotFix or (2) CMD_CHANGE_AGENT_REGISTER_INFO.
2, via the id parameter.
0, via an unspecified ioctl function
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unknown vectors
2, via the afilter parameter.
2, via the tagid parameter.
4, via a .. (dot dot) in the path parameter in a files.display action.
0, via the cat parameter in a selectcat action.
2, via the id parameter in an offer_view action.
2, via long arguments to the (1) ntuser_getuserlist
0, via the did parameter in a details action.
4, via an archive with a file that matches a virus signature and has a crafted filename that is not properly handled by the print function in SavMain.exe.
4," via a long argument to the (1) """"-p"""" option to lqueryvg or (2) the """"-V"""" option to lquerypv."
2, via unknown attack vectors.
2, via unspecified vectors involving arguments to the (1) fvCom and (2) info methods.  NOTE: some of these details are obtained from third party information.
3, via malformed packets.
4, via a long (1) OWNER or (2) NAME argument.
0, via one or more of the following vectors: the (1) id parameter to (a) pages/delete_page.php
0, via one or more of the following vectors: the (1) id parameter to (a) pages/delete_page.php
4, via a URL in the lang parameter.
4, via a URL in the squelette_cache parameter
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the error_text parameter to error_box.html or (2) the ok_title parameter to ok_box.html.
0, via format string specifiers in a chat message
4, via (1) a long string in a chat message and possibly (2) a long name field.
4, via a string with a negative NewLen value within a certain UDP packet that triggers an assertion error.
4, via a crafted UDP packet.
2, via the -f (From address) option to the Email::Send::Sendmail function
2, via the (1) HTTP_REFERER or (2) HTTP_USER_AGENT HTTP header.
4, via (1) the PHP_SELF variable in modules/core/uim.php and (2) [url] tags in a comment in modules/core/fldm.php.
2, via unspecified vectors involving the (1) processLine function in maptemplate.c and the (2) writeError function in mapserv.c in the mapserv CGI program.
2, via the weblog_id parameter (Username field).
4, via a .. (dot dot) in a filename within a (1) ZIP or (2) RAR archive.
5," via an ALPass DB (APW) file containing (1) a long file-key or (2) a """"Site Information and Folder entry"""" with a ciphertext_length value much larger than the plaintext_length value."
0, via format string specifiers in an fnm field in a folder-name record in an ALPASS DB (APW) file.
4, via a URL in the loadpage parameter.
2, via the blockpage parameter.  NOTE: as of 20070827
2, via an INVITE message with a Via header that contains a '/' (slash) instead of the required space following the SIP version number.
2, via the username parameter.  NOTE: this issue might be related to CVE-2006-2635.7.
3, via arguments to a valid command
3, via the User.Id parameter
4, via a .. (dot dot) sequence in filenames in a TAR archive
2, via an RSTP command containing multiple Require headers.
5," by sending """"data unexpectedly through a port."""""
0, by refusing certain warning messages that are sent over SMTP.
1, via crafted LDAP packets
4," via a malformed BZip file that results in the creation of multiple Engine temporary files (aka a """"BZip bomb"""")."
4, via a crafted UPX packed file
4, by sending a small buffer size value to the FsSetVolumeInformation IOCTL handler code with a FsSetDirectoryInformation subcode containing a large buffer.
2, via the show parameter.
4, via a long second argument to the SetText method.
0, via a full pathname in the first argument to the SaveXMLFile method or (2) delete arbitrary files via a full pathname in the argument to the DeleteXMLFile method.
4, via a long string in a MODE command
4, via a .. (dot dot) in the language parameter.
2, via unspecified vectors
2, via the PATH_INFO to index.php; and allow remote authenticated users to inject arbitrary web script or HTML via the PATH_INFO to (2) nodeworx.php
2, via the PATH_INFO to index.php; and allow remote authenticated users to inject arbitrary web script or HTML via the PATH_INFO to (2) siteworx.php
5, by sending a small file buffer size value to the FsSetVolumeInformation IOCTL handler with an FsSetFileInformation subcode.
2, via unspecified vectors
2, via the s[cid] parameter in a search_list action
4, uses libwrap but does not specify server connection information.
2, via the id parameter.
4, via (1) the aid parameter in a showarticle action or (2) the catid parameter in a showcat action.
2, via the ItemID parameter.
4, via a URL in the vwar_root parameter
4, via a URL in the vwar_root parameter
4, via a URL in the logout_page parameter.
2, via the id parameter.
4, via CRLF sequences in the subject parameter.  NOTE: this can be leveraged for spam by adding To or Cc headers.
0, via certain malformed HTTP headers.
2, via long command line arguments.
5," via a crafted """"-y"""" (TSIG key) command line argument to dig."
0, via a long parameter to the m command.
2, via the img_url parameter.  NOTE: some of these details are obtained from third party information.
2, by aborting the response to a POST request.
2, via certain network traffic associated with entities larger than 2 Gb.
2, via the cat_id parameter.
2, via the id parameter.
5, via a mapfile with a long layer name
2, via the msg parameter.
4, via a symlink attack on temporary files with predictable filenames.
3, via certain file-transfer packets
4, via a URL in the rootdir parameter to (1) intern/admin/other/backup.php
4, via a malformed map
2, via an Uploads action.
4, via a .. (dot dot) in the page parameter
4, via a long chat (PKT_CHAT) message that is not properly handled by the (1) D_NetPlayerEvent function in d_net.c or the (2) Msg_Write function in net_msg.c
5, via a PKT_CHAT packet with a data length less than 3
0, via format string specifiers in a PSV_CONSOLE_TEXT message.
0, via the id parameter in a newspost do action
4, via a long USER command.
1, via unspecified vectors
3, via unknown vectors.
4, via a session file that is a symlink.
2, via the start parameter in a search action.
4, via a series of large packets designed to exploit the SSH CRC32 attack detection overflow (CVE-2001-0144)
2, via unspecified vectors involving the glob function.
2, via an XNET session that makes multiple simultaneous requests to register events
2, via an invalid UncompressedQuickTimeData opcode length in a PICT image.
4, via a URL in the qtnext field in a crafted QTL file.  NOTE: this issue may be related to CVE-2006-4965 or CVE-2007-5045.
5, via a crafted movie file containing a movie atom with a large size value
4, via a QTVR (QuickTime Virtual Reality) movie file containing a large size field in the atom header of a panorama sample atom.
1, via malformed elements when parsing (1) Poly type (0x0070 through 0x0074) and (2) PackBitsRgn field (0x0099) opcodes in a PICT image.
2, via an invalid color table size when parsing the color table atom (CTAB) in a movie file
4, via a crafted striped disk image
1, via crafted responses to FTP PASV commands.
4, via a crafted directory hierarchy.
1, via crafted text content that triggers an access of an uninitialized object pointer.
4, via a relative path when changing the current working directory.
4, via a large num_sels argument to the i386_set_ldt system call.
1, by executing setuid or setgid programs in which the stdio
4, via a crafted TIOCSETD ioctl request.
1, via crafted IPV6 packets.
4, via a crafted AUTH_UNIX RPC packet.
4, via file:// URLs.
1, via unknown vectors related to file uploads.
1," via unknown vectors related to """"page transitions"""" in Safari."
2, via unknown vectors related to browser history
3, via unknown vectors.
4, via a crafted QTL file.
4, via a crafted QuickTime movie.
2, via the URL handler.
4, via a crafted HTTP response.
2, via an image with a crafted ColorSync profile
2, via the (1) homepage
4, via a URL in the page parameter.
2, via the (1) dtc
2, via the ID parameter.
4, via a URL in the files_dir parameter in (1) es_desp.php
4, via unspecified vectors.
2, via the (1) dir parameter in admin/adminusers.php
4, via a .. (dot dot) in the language parameter.
2, via the id parameter.
4, via a long string to the (1) Play and (2) Buzzer methods.
2, via the time and description parameters.
4, via a .. (dot dot) in the URI.
2, via an HTTP request with a long content length
1, by copying data from a large pixel depth pixmap into a smaller pixel depth pixmap.
4, via a crafted packet to TCP port 5005.
4, via a long file path in an m3u file.
4, via a long file path in an m3u file.
2, via the category_id parameter.
4, via a URL in the STPHPLIB_DIR parameter to (1) stphpapplication.php
4, via a URL in the (1) db_conf or (2) ADODB_DIR parameter to utils/stphpimage_show.php; or a URL in the STPHPLIB_DIR parameter to (3) stphpbutton.php
2, via the arguments to the WriteRegistry method.
2, via the sort parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an invalid value in the sort parameter to admin/adminusers.php
4, via Javascript events in the (1) gbmail and (2) gbpage parameters in the sign function.
4, via a long Logo parameter.
5, by queueing jobs that contain these commands.  NOTE: this is only a vulnerability in environments in which the administrator has not followed documentation that outlines the security risks of operating Backburner on untrusted networks.
4, via a crafted RDZ archive in which the first file has an executable extension.
4, via (1) an empty SIP message or (2) a SIP INVITE message with a malformed To header
0, via format string specifiers in a nickname.
4, by sending a client_connect command in a forged packet from the server to a client.  NOTE: client IP addresses are available via product-specific queries.
4," via """"..\"""" (dot dot backslash) sequences in a filename.  NOTE: the """"..\"""" are not displayed when the user lists files.  NOTE: this can be leveraged for code execution by writing to a Startup folder."
4, via a URL in the functions_file parameter.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) user and (2) pass fields
4, via a URL in the PHPOF_INCLUDE_PATH parameter.
4, via a .. (dot dot) in the page parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified escape (backslash) sequences.
4, via a singleton Unicode sequence in a character class in a regex pattern
4, via a regular expression that writes a large amount of data to the backtracking stack.  NOTE: some of these details are obtained from third party information.
4, via a Visual Basic project (vbp) file containing a long Reference line
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via (1) a long string in the pattern parameter to the glob function; or (2) a long string in the string parameter to the fnmatch function
4, via a long string in the charset parameter
4, via a long string in the locale parameter.  NOTE: this might not be a vulnerability in most web server environments that support multiple threads
1, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
4, via a long input parameter.
4, via a long ODM name.
4, via unspecified vectors.
5, via unspecified vectors.
4, via (1) a long eighth argument to the SetInfo method in a certain ActiveX control in glItemCom.dll or (2) a long second argument to the SetClientInfo method in a certain ActiveX control in glitemflat.dll.
2, via long strings in file and title fields in a .pls file
0, via the id parameter in (1) hal.php
4, via a .. (dot dot) in the p parameter.
4, via a URL in the FocusPath parameter.
4, via a URL in the staticpath parameter to (1) modules/Discipline/CategoryBreakdownTime.php or (2) modules/Discipline/StudentFieldBreakdown.php.
4, via (1) the id parameter to news.php in a lirenews action
5, via a URL in the DOC_ROOT parameter to (1) lib/functions.php or (2) lib/header.php.
4, via (1) the ge_id parameter in a list.artists action to explore.php or (2) the id parameter in a show.tracks action to xml.php.
4, via (1) the val parameter to alphabet.php in an alpha.albums action
2, via the name field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long second argument to the Start method.
4, via a URL in the Codebase parameter to (1) channeledit.php
4, via a long (1) URL
2, via an upload action specifying a filename with a double extension such as .php.jpg
5, via a URL in the doc_root parameter to (1) addons/plugin.php
4, via unspecified vectors.
4, via a long first argument to the HttpDownloadFileToTempDir method
1, via HTTP requests to certain HTML pages in the res parameter with an inp req parameter to cgi-bin/cgi
4, via a .. (dot dot) in the dl function.
1, via malformed Modbus requests to TCP port 502.
2, via the user parameter.
2, via the (1) avatar and (2) title parameters.
0, via format string specifiers in a malformed nickname.
4, via a URL in the MGR parameter to (1) index.php
0, via the id parameter in an edit action.
0, via the id parameter in an edit action.
2, via the id parameter.
4, via a long string in a (1) 0x21
5, via (1) a long string in the out_charset parameter to the iconv function; or a long string in the charset parameter to the (2) iconv_mime_decode_headers
4, via a .. (dot dot) in a filename. NOTE: this can be leveraged for code execution by writing to a Startup folder.
4, via a .. (dot dot) in a filename.  NOTE: this can be leveraged for code execution by writing to a Startup folder.
2, via the (1) dlid or (2) cid parameter.
0, via the id parameter in a rubrik go action.
1, via unspecified vectors involving a picasa:// URI.  NOTE: this information is based upon a vague pre-advisory.
4, via a res:// URI in the src property of a JavaScript Image object
5, via a file:// request containing a \x00 sequence
2, via the config[news_url] parameter.
2, via the template parameter.
4, via (1) an invalid lang parameter to admin/index.php; or a direct request to (2) admin/dbg_infos.php
2, via the (1) l_username parameter to admin/layout2b.php
4, via unspecified vectors.
1, via unspecified vectors
4, via a malformed .au file that triggers a divide-by-zero error.
4, via a malformed .au file that triggers a divide-by-zero error.
4, via a (1) UNC share pathname
4, via a long string in the library parameter.  NOTE: there are limited usage scenarios under which this would be a vulnerability.
2, via the MySQL (1) LOAD_FILE
0, via a full pathname in the argument to the SaveAs method.  NOTE: contents can be copied from local files via the Load method.
0, via the post_type parameter to the pingback.extensions.getPingbacks method in the XMLRPC interface
2, via the f parameter.
2, via the (1) lang[adminseite]
2, via the (1) id parameter to forum_forum.php
2, via the username field.
0, via a full pathname in the argument to the SaveToFile method.
4, via (1) a long string in the first argument to the AcquireContext method or (2) an unspecified vector to the DeleteContext method.
0, via the image parameter
5, via a URL in the xcart_dir parameter to (1) config.php
4, via a .. (dot dot) in the pilih parameter.
5, via file-transfer commands in the final portion of a (1) scp
5, via a long .mp3 URI to TCP port 8000.  NOTE: some of these details are obtained from third party information.
1, via unspecified vectors related to character sets other than iso-8859-1 or utf-8.
1,upload arbitrary script files with crafted image filenames to
4, via a crafted payment form
0, via the ip parameter in an online action
0, via the post parameter to index.php.
0, via the id parameter to index.php
2, via the id_actividad parameter.
4, via a URL in the approot parameter.
0, via the id parameter in a play ac action to index.php.  NOTE: some details are obtained from third party information.
4, via a URL in the mosConfig_live_site parameter.
4, via shell metacharacters in the paymentinfo parameter to simplePHPLinux/3payment_receive.php.
2, via many requests with unique buffer names in the buffername parameter in a start action.
0, via the camNo parameter to incl/image_incl.shtml
4, via (1) axis-cgi/admin/restart.cgi
4, via a save_appearence action in admin.php
4, via a URL in the PHPFFL_FILE_ROOT parameter to (1) program_files/livedraft/livedraft.php or (2) program_files/livedraft/admin.php.
4, via a URL in the PHPFFL_FILE_ROOT parameter to (1) admin.php
4," via a .avi file with certain large """"indx truck size"""" and nEntriesInuse values"
4," via a .avi file with certain large """"indx truck size"""" and nEntriesInuse values."
4, via a URL in the FocusPath parameter
1, via malformed input in an unknown set of arguments or property values
4, via (1) a student's email address
3, via unspecified vectors. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the ptinclude parameter to (1) help1.php
4, via (1) a URL in the path_include parameter to includes/rss.class.php
5, via a URL in the pathtohomedir parameter to (1) ekilat.com-int.tpl.php
4, via a URL in the DOCUMENT_ROOT parameter.  NOTE: this issue is disputed by CVE
4, via a URL in the YAPIG_PATH parameter.  NOTE: this issue has been disputed by CVE
0, via the page_id parameter in a favorite op action
2, via the keyword parameter in a search site action.
4, via a URL in the mosConfig_live_site parameter.
4, via a URL in the mosConfig_live_site parameter.
4, via (1) the pseudo parameter to login.php
4, via a .. (dot dot) in the (1) fichier or (2) repertoire parameter
2, via the URI for (1) index.php
2, via the URI.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in a filename within a (1) .IMG or (2) .ISO file. NOTE: this can be leveraged for code execution by writing to a Startup folder.
4, via a long sequence of space characters in a filename within a (1) .IMG or (2) .ISO file. NOTE: this can be leveraged with a separate directory traversal vulnerability to trick a careful user into overwriting arbitrary files.
2, via an invalid BPB_BytsPerSec field in the header of a .IMG file.
1, via crafted arguments to (1) the tovideo method
4, via the skill_delete[] parameter.
5, via a FLAC file with crafted PCM data containing a block with a size that exceeds the previous block size.
2, via the chapter parameter.
4, via a .. (dot dot) in the log parameter.
2, via the referer parameter.
5, via a URL in the base_dir parameter to (1) Decoder.php and (2) Encoder.php in WBXML/.
0, via the id parameter in a results action
4, via a large integer value in the Content-Length HTTP header
1, via unknown vectors
0, via a full pathname in the argument to the (1) SaveAsBMP or (2) SaveAsWMF method.  NOTE: some of these details are obtained from third party information.
4, via a ..\ (dot dot backslash) in the second argument to the DownloadFromMusicStore method.  NOTE: some of these details are obtained from third party information.  NOTE: this can be leveraged for code execution by overwriting JetAudio.exe
2, via the s parameter.
4, via a crafted image file that triggers (1) an infinite loop in the ReadDCMImage function
4, via a crafted (1) .dcm
4, via a crafted image file
5, via a crafted width value in an image file
4, via (1) QueryXBitmaps and (2) QueryXExtents protocol requests with crafted size values that specify an arbitrary number of bytes to be swapped on the heap
2, via an empty packet.
4, via a long request to TCP port 3050.
4, via unspecified vectors.
4, via a long (1) username or (2) password to the rxrLogin command in rxRPC.dll
4," via a long username and a certain """"useless"""" password."
4, via a ..\ (dot dot backslash) sequence in the destination filename argument to sub-function 8 in the rxrReceiveFileFromServer command.
4, via a long response to a FETCH command.
2, via the URL to webbatch.exe.
2, via the dumpinputdata parameter.
3, via the (1) u
4, via a URL in (1) the lvc_admin_dir parameter to modules/visitors2/admin/view-archiver.inc.php or (2) the lvc_include_dir parameter to modules/visitors2/include/menus.inc.php. NOTE: the modules/visitors2/include/config.inc.php vector is already covered by CVE-2006-4373.  NOTE: vector 1 is disputed by CVE because PHP encounters a fatal instantiation error on a direct request for the file
4, via a URL in the sl_theme_unix_path parameter to (1) admin_footer.php
2, via the abc parameter.
4, via a long argument in a SEARCH ON command.  NOTE: this issue might overlap with CVE-2004-1211.
4, via a long argument to the dnsResolve (isInstalled.dnsResolve) method.
4, via a crafted PDF file
2," via an unspecified manipulation of """"images stored in virtual machines downloaded by the user."""""
2, via the (1) DD or (2) DU parameter.
0, via packets containing options with large lengths
2, via an invalid IA_NA option in a REBIND message.
4, via an AddAuthor action with modified add_name and add_radminsuper parameters.
0, via the selfdes parameter in a profile_info editprofile action.
4, via a URL in the this_module_path parameter.  NOTE: this issue is disputed by CVE because PHP encounters a fatal function-call error on a direct request for the file
4, via a crafted query string in an HTTPS request to (1) adLog.cgi
4, via a long filename.
4, via a javascript: URI in an attribute of an element in an email message body
4, via a long filename in an ARJ archive.
4, via a .. (dot dot) in the q parameter.
2, via the (1) box_width
5," via a request to the wiki module with (1) the title parameter or (2) a """"title="""" sequence in the PATH_INFO"
4, via a URL in (1) the admin_home parameter to modules/poll/poll_summary.php or (2) the rootdp parameter to include/db.php; or a URL in the language_home parameter to (3) search/search.php
5, via a URL in the gsLanguage parameter to (1) search/search.php
4, via a .. (dot dot) in (1) the admin_home parameter to modules/poll/poll_summary.php or (2) the rootdp parameter to include/db.php.
0, by spoofing the NetSupport Manager.
2, via the username field in a login attempt
2, via several vectors
3, via certain password_ and rpassword_ parameters
0, via the cat_id parameter to index.php in a banners action.
0, via the un parameter in a register action.
4, via a URL in the mosConfig_live_site parameter.
4, via a crafted URL.
4, via a long If-Modified-Since header to (1) xigui32.exe or (2) xitami.exe.
2, via the mod parameter.
4, via a .. (dot dot) in the module_name parameter.
4, via a long string in the first argument to the SetFont method.
3," via unspecified """"user-supplied input"""" to (1) center.exe or (2) Index.exe."
4, via unspecified CsAgent service commands with certain opcodes
5, via unspecified CsAgent service commands that trigger a heap-based buffer overflow.
4, via CsAgent service commands with opcodes (1) 0x07
3, via unspecified vectors.
2, via the failed parameter.
4, via a URL in the SKIN_URL parameter.
0, via the cat_data[color] parameter to (1) preferences/inc/class.uicategories.inc.php and (2) admin/inc/class.uicategories.inc.php.
4, via a set of four different e-mail messages with a long boundary parameter in a certain malformed Content-Type header line
4, via a URL in the webmail2_inc_dir parameter.
4, via a URL in the DOC_ROOT parameter.  NOTE: this issue is disputed by CVE because a __FILE__ test protects offl_nflteam.php against direct requests.
4, via a URL in the file parameter.
2, via the gid parameter in a play_game action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the user_email parameter.
2, via the user_login parameter.
5, via a long ShortFormat property value.  NOTE: some of these details are obtained from third party information.  NOTE: the researcher claims that this is the same as CVE-2007-5108
0, via a full pathname in the argument to the SaveToFile method.  NOTE: some of these details are obtained from third party information.
4, via a string argument to the AddString method.
2, via the query string
2, via certain modified query parameters
5, via a URL in the pmp_rel_path parameter. NOTE: this issue is disputed by CVE because the applicable require_once is in a function that is not called on a direct request.
4, via a URL in the cfgPathInc parameter to (1) main_upl.php
0, by switching from byte to Unicode (UTF) characters in a regular expression.
2, via an invalid integer in the version parameter to the default URI under attach/Main/.
2, via the (1) group and (2) members parameters in (a) NewGroup.jsp; the (3) edittime parameter in (b) Edit.jsp; the (4) edittime
0, via the redirect parameter to wiki-3/Login.jsp and unspecified other components.
2, via the id parameter.
2, via the nota_id parameter.
1, via unspecified web script or HTML in an instant message
4, via (1) the l_username parameter to the default URI under admin/ or (2) the l_emoticonlist parameter to admin/emoticonlist.php.
4, via (1) an invalid lang parameter to admin/index.php or (2) a direct request to admin/trailer.php
0, via the catId parameter in a browse action.  NOTE: it was separately reported that ActiveKB 1.5 is also affected.
1," via unspecified vectors related to """"the handling of thread contexts."""""
4, via a certain PNG file with a large tEXt chunk that possibly triggers an integer overflow in PNG chunk size handling
4, via unspecified vectors.
4, via multi-frame interlaced GIF files in which later frames are smaller than the first.  NOTE: this issue is due to an incorrect patch for CVE-2007-5378.
4, via a URL in the view parameter.
4, via a URL in the phpbb_root_path parameter.
2, via the search parameter.
2, via the p parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, by using the system32 directory to store a crafted (1) archive or (2) packed executable.  NOTE: in many environments
4, via a URL in the dedi_path parameter to (1) inc.generate_code.php
4, via a URL in the MODULEDIR parameter to (1) core/modules/my/my.module.php or (2) core/modules/xml/xml.module.php; the COREROOT parameter to (3) config.loader.php
4, via a URL in the path_to_root parameter to (1) access/logout.php or certain PHP scripts under (2) admin/
4, via a URL in the indir parameter.
4, via base64-encoded data in an admin cookie
4, via base64-encoded data in an admin cookie.
4, via unspecified vectors.
5, via a URL in the SRC_PATH parameter to phfito-post.
4, via a certain use of a JavaScript htmlFor attribute
4, via a URL in (1) the DIR_ROOT parameter to (a) global.php
2, via an item in a feed
4, via a URL in the rel parameter.  NOTE: this issue is disputed by CVE because the applicable include is in a function that is not called on a direct request.
4, via a URL in the phpbb_root_path parameter.  NOTE: this issue is disputed by CVE because the applicable include is in a function that is not called on a direct request.
4, via a URL in the MINGS_BASE parameter.  NOTE: this issue is disputed by CVE because MINGS_BASE is defined before use.
4, via a URL in the doc_root parameter to (1) inc/pagehead.inc.php or (2) inc/pageinit.inc.php.
4, via a URL in the nom_rep_systeme parameter.
4, via a URL in the root_path parameter to (1) modules/serveur_jeux.php or (2) conf/conf-php.php.  NOTE: vector 1 is disputed by CVE because the require_once is only reached when a certain constant has already been defined.
4, via a long font name in a .PMD file.
4, use ELOM as a spam proxy.
4, via unspecified vectors.
2, by causing unspecified connection errors
4, via a URL in the openid_root_path parameter.
4, via a .. (dot dot) in the do parameter.
5, via a URL in the BaseCfg[BaseDir] parameter.
2, via the (1) NA_DISPLAYNAME parameter in helpdesk/user/rf_create.jsp and the (2) username and (3) LDAPError parameters in index2.jsp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the caid parameter.
2, via the (1) ad
2, via the (1) Kategori parameter in satilik.asp and the (2) Emlak parameter in detay.asp.
2, via the ilan_id parameter.
2, via the (1) Email parameter
0, via format string specifiers in a directory name.
4, via a URL in the HTML_MENU_DirPath parameter to (1) config_HTML_MENU.php and (2) config_PHPLM.php in phpwcms_template/inc_script/frontend_render/navigation/.
2, via the sel parameter.
1, via unspecified vectors related to improper upload configuration settings in class/uploader.php and class/mimetypes.inc.php
4, via (1) the action parameter to php-bin/Webclient.php or (2) the Langue parameter to the default URI.
4, via a man-in-the-middle attack
4, via a man-in-the-middle attack
1, via unspecified vectors related to Reduce in Montgomery-based Pow methods.
4, via a symlink attack on a guilt.log.[PID] temporary file.
4, via shell metacharacters in a from address
0, via a long HTTP request to TCP port 6061.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) parameters associated with saved settings
5, via (1) the PATH_INFO to the default URI associated with a directory
4, via a URL in the SCRIPT_DIR parameter to (1) gtk/main.inc.php or (2) cmdline.inc.php.  NOTE: vector 2 is disputed by CVE because it is contained in unaccessible code
4, via a URL in (1) the cfg_vcard_path parameter to src/vcard_inc.php or (2) the cfg_phpmailer_path parameter to src/email_inc.php.  NOTE: the ark_inc.php vector is already covered by CVE-2006-6086.
2, via the action parameter.
4, via a .. (dot dot) in the argument to the CreateNewFile method.
0, via the cid parameter and possibly other parameters.
4, via a URL in the form parameter.
5," via a """"Firefox ID="""" substring in a Referer HTTP header."
0, via the exif_prog parameter
4, via a negative maximum length value to the I_PEEK ioctl.
2, via an ACTION command without a parameter
3, via the (1) subject_t and (2) body_text parameters.  NOTE: vector 2 requires bypassing a client-side security mechanism that attempts to block XSS sequences.
4, via a request to wp-admin/options-general.php that submits parameter values to FeedBurner_FeedSmith_Plugin.php
5, by sending a modified MIME type.  NOTE: this can be exploited by unauthenticated attackers by leveraging CVE-2007-5230.
0, via the id parameter in a readmore action.
4, via a URL in the level parameter.
2, via the f_email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2," via the """"MCR MCL SHOW CSMA-CD Port * All"""" command"
4," via an """"oversize"""" packet"
5, via (1) the showOption parameter to domain.asp
2, via the ImageName parameter in a GetImage action
0, via the ie parameter to the /search URI.
2, via long strings in the first and second arguments to the FtpDownloadFile method
5, via unspecified vectors.  NOTE: the original disclosure is likely erroneous.
3, via the (1) catid parameter to categorydetail.php and the (2) ddlCategory parameter to search.php.
0, via format string specifiers in the (1) username
5," via (1) a crafted """"0x5c"""" packet or (2) many 32-bit numbers in a """"0x18"""" packet"
2," via format string specifiers in the (1) username or (2) password fields when accessing certain """"restricted zones"""""
4, via a crafted PNG image that prevents a name field from being NULL terminated.
4, via a crafted PNG image
1, via crafted (1) pCAL (png_handle_pCAL)
4, via a URL in the bField[bf_data] parameter to (1) interface/editors/-custom.php or (2) interface/editors/custom.php.
0, via the id parameter in a goster kat action.
4, via a Flash (SWF) movie
0, via a long filename in a BlackHole archive.
2, via unspecified input that is recorded in (1) success or (2) error messages.
4, via invalid messages.
2, via the id parameter.
2, via the backwardDirectory parameter.
2, via the (1) err_msg parameter to error.php and the (2) content parameter to templates/simple/ia.php.
4, via a URL in the site_absolute_path parameter.
2, via the (1) PageContent and (2) PageName parameters.
2, via the (1) db
2, via the page parameter.
4, via a URL in the cfg[document_uri] parameter to (1) _administration/securite.php and (2) _administration/gestion_configurations/save_config.php.
4, via a .OGG file with long comments.
2, via the page_id parameter.
2, via the (1) repertimage parameter to utilisateurs/vousetesbannis.php
4, via a URL in the (1) contenus parameter to (a) contenus.php; the (2) tpelseifportalrepertoire parameter to (b) votes.php
2, via unspecified vectors to utilisateurs/votesresultats.php.
5, via a URL in the mosConfig_live_site parameter.
5, via a URL in the mosConfig_absolute_path parameter.
5, via a .. (dot dot) in the ss_uri parameter.
2, via the (1) color parameter to pjirc/css.php and the (2) cat parameter to browse.php.
4, via a URL in the path parameter.
2, via the cid parameter.
2, via the src parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the CacheFile attribute in the ThumbnailXpres.1 ActiveX control (PegasusImaging.ActiveX.ThumnailXpress1.dll) or (2) overwrite arbitrary files via the CompactFile function in the ImagXpress.8 ActiveX control (PegasusImaging.ActiveX.ImagXpress8.dll).
4, via a .. (dot dot) in the page parameter.
0, by specifying them as an argument to the FoxDoCmd function.
4, via a size value that causes RepliStor to create a smaller buffer than expected
1, by using the addMicrosummaryGenerator sidebar method to access file: URIs.
4, via a crafted website using Javascript that creates
4," via """"unexpected method calls to HTML objects"
1," via unspecified vectors involving """"legacy reply paths."""""
4, via a crafted SMBv2 packet
4, via a URL in the mosConfig_absolute_path parameter to (1) credits.html.php
4, via a URL in the mosConfig_live_site parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via directory traversal sequences in the filename parameter to the createCertFingerprint function.  NOTE: this issue is disputed by CVE because PHP encounters a fatal function-call error on a direct request for payments/ideal_process.php.
2, via unspecified vectors that trigger an error message
4, via unspecified vectors.
4, via unspecified vectors.
4, via a string to the VoIP port (52999/tcp) with an invalid value in the third byte.
2, via the (1) group or (2) utag parameter.
2, via the (1) documentDirty or (2) modVariables parameter.
4, via (1) the invoice quantity field or (2) the sort field.
4, via a URL in the c[components] parameter.
4, via a URL in the (1) app parameter to apps/apps.php and the (2) wsk parameter to wsk/wsk.php.
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: a reliable third party disputes this issue because preview.php tests a certain constant to prevent direct requests.
4, via a URL in the pagina parameter.
3, via unknown vectors.
4, via a crafted PDF file
4, via a PDF file that contains a crafted CCITTFaxDecode filter.
4, via a .PMD file with a crafted font structure
4, via a Y7 Buddy Authorization packet with format string specifiers in the contact Yahoo!  handle (who).
4, via a crafted SWF file.
0, via the sys_request_id parameter to editrequestenduser.asp; and allow remote authenticated users to execute arbitrary SQL commands via (2) the oldpassword parameter to writepwdenduser.asp
2, via the (1) Forename
5, via a URL in the mosConfig_absolute_path parameter to (1) jcs.function.php; (2) add.php
2, via the category parameter.
4, via a URL in the mosConfig_live_site parameter.
2, via the From header in a SIP message.
4, via a URL in the mosConfig_live_site parameter to (1) allopass.php and (2) allopass-error.php.
0, via URLs containing tilde (~) references to home directories
4, via a .. (dot dot) in the id parameter.
4, via a URL in the root_path parameter to (1) en_copyrite.php
2, via PHP sequences in the f array parameter
1, by using an alias
0, via the questId parameter in a hideQuestion ToDo action.  NOTE: the catId vector is already covered by CVE-2007-5131.
2, via the page parameter to the default URI for some directories
2, via the searchword parameter.  NOTE: this might be related to CVE-2007-4189.1.
2, via the search_string parameter to the default URI in search_do/.
2, via the archive parameter.
4, via (1) the p parameter to main.php in the Content Management System
2, via the (1) search or (2) search mask field.
0, via the q parameter to the default URI.
4, via a crafted Data Standards File (Datatype Standards File).
2, via unspecified parameters to the SelectPath function. NOTE: this issue might not cross privilege boundaries in most environments
4, via a crafted HTTP URL on port 6689.
4, via a URL in the DOCUMENT_ROOT parameter to (1) index.php or (2) login.php.  NOTE: this issue is disputed by CVE
1, via unspecified vectors related to (1) the anchor tag and (2) listtags.
4, via a direct request for unspecified files.
4, via a long RejectedRecordsFile parameter
0, via a full pathname in the XmlFilePath argument to the SaveSenderToXml method.
5, via a beacon frame with a large length value in the extended supported rates (xrates) element
2, via the sbcat_id parameter.
4, via a URL in the mosConfig_live_site parameter.
2, via the (1) ip or (2) t parameter.
1, by writing PHP sequences to the php-stats-options record in the _options table
4, via a call to the iah/iah.xis IsisScript code
3, by placing a '?' (question mark) followed by a non-.exe filename after the .exe filename
4, via a URL in the mosConfig_absolute_path parameter to (1) install.joomla_flash_uploader.php and (2) uninstall.joomla_flash_uploader.php.
4, via unspecified vectors.
2, via unspecified packets to a server that exports many filesystems
4," via an """"iDEAL transaction"""""
4, via a long skin name.
4, via a .. (dot dot) in the page parameter to an unspecified component.
1, by sending multiple long strings to the IMAP port (143/tcp); (2) execute arbitrary code via a long string in an IMAP AUTHENTICATE PLAIN action
1, via requests that are written to logs for later display in the log viewer.
2, via the redir parameter.
2, via the project_name parameter.
4, via the EXPS parameter.
2, via the (1) msg parameter to msg.jsp
4," via a """"SOCKS flood."""""
4, via a .. (dot dot) in the IsisScript parameter to iah.
2, via the album parameter.
4, via a long URL in an EXTM3U section of a .m3u file.
4, via a .. (dot dot) in the page parameter.
2, via the id parameter.
4," via """".."""" sequences in the lang parameter."
2, via the value parameter.
4, via a malformed WAP PUSH message that causes the PDU to be incorrectly decoded.
2, via the (1) THEMES
3, via unknown vectors.
4, via a crafted Yahoo! Messenger packet.  NOTE: this might overlap CVE-2007-5590.
5, via a crafted Yahoo! Messenger packet.  NOTE: this might overlap CVE-2007-5590.
0, via format string specifiers in unspecified vectors.  NOTE: as of 20071016
4, via unspecified vectors.  NOTE: as of 20071016
2, via unspecified vectors
2," via an unspecified """"variation of an IOS command"""" involving """"two different methods"""""
2," via unspecified vectors involving a """"common network service"""""
2, via unspecified vectors that trigger a heap-based buffer overflow.  NOTE: as of 20071016
4, via unspecified vectors.  NOTE: as of 20071016
1, via crafted packets
1, via unknown vectors
1, via crafted packets. NOTE: as of 20071016
1, via crafted packets. NOTE: as of 20071016
4, via a crafted HTTP packet.  NOTE: as of 20071016
4, via a crafted HTTP packet. NOTE: as of 20071016
4, via a crafted HTTP packet.  NOTE: as of 20071016
2, via the err parameter in the context of an error page.
4, via unspecified vectors.
4, via (1) HTML tags when BBcode is disabled; or the (2) user
4, via a URL in the dir parameter.  NOTE: this issue is disputed by CVE because the identified code is in a function that is not accessible via direct request.
5, via a URL in the blog_localpath parameter to (1) includes/functions.php or (2) includes/email.php.  NOTE: this issue is disputed by CVE because the identified code is in functions that are not accessible via direct request.
4, via a URL in the DDS parameter.
4, via (1) the block_id parameter to add_block.php or (2) the link_id parameter to add_link.php.
4, via a URL in the rootdir parameter.
4, via a URL in the page parameter.
2, via the (1) Title or (2) Section Name form fields in the Section Manager component
2, via the (1) FirstName and (2) LastName parameters.
4, via a sequence of SIP INVITE transactions in which the Request-URI lacks a user name
1," via crafted """"data in the control-plane path with Layer 7 Application Inspections."""""
0, via the t parameter in search.cgi
2, via certain input available in (1) PHP_SELF in (a) server_status.php
2, via unspecified vectors involving (1) IRC options
5, via a URL in the Setting[OPT_includepath] parameter to (1) adminhelp.php; and (2) admin.incl.php
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the toroot parameter to (1) 404.php or (2) topbar.php
4, via a (1) UNC share pathname
4, via a long first argument
4, via a long argument
5, via a long argument
4, via a long first argument
4, via a URL in the first argument and a destination filename in the second argument
0, via a full pathname in the argument.
2, via unspecified parameters and cookies.
4, via unspecified vectors.
4, via a .. (dot dot) in the file parameter.
0, via multiple OPEN commands to the FTP proxy.
1, via crafted snmpget replies.
1, via unknown vectors to unspecified CGI scripts.
2, via the QUERY parameter.
4, via a URL in the __SOCKETMAIL_ROOT parameter.
4, via a URL in the pageHeaderFile parameter.
2, via the msg parameter
2, via the id parameter in a tnews action.
4, via a flood of invalid characters to the RTCP port (5678/udp) that triggers a Windows error message
5, via a URL in the full_path parameter to (1) certinfo/index.php
4, via a .. (dot dot) in (1) the def_lang parameter to modules/files/list.php; the m_path parameter to (2) modules/projects/summary.inc.php or (3) modules/tasks/summary.inc.php; (4) the module parameter to modules/projects/list.php; or the module parameter to index.php in the (5) certinfo
4, via (1) the CategoryID parameter to ajax/sortcategories.php or (2) an unspecified vector to ajax/sortroles.php.
2, via the (1) art_id or (2) node parameter in an article action to the default URI.
2, via the (1) d or the (2) u parameter.
2, via the lost_id parameter.
4, via a .. (dot dot) in the module parameter to index.php.
4," use of an arbitrary MIME type for a file via a """"%00."""" sequence followed by a new extension"
4, via a PDF file with long arguments to unspecified JavaScript methods.  NOTE: this issue might be subsumed by CVE-2008-0655.
2," via an unspecified """"unsafe method"
4, via a crafted PDF file that calls an insecure JavaScript method in the EScript.api plug-in.  NOTE: this issue might be subsumed by CVE-2008-0655.
4, via a malicious Security Provider library in the reader's current working directory.  NOTE: this issue might be subsumed by CVE-2008-0655.
2, via the cmd parameter.
4, via a long string argument.
4, via a URL in the nuke_bb_root_path parameter.
3, via the go_shout parameter.
0, via the id parameter in a view action to the default URI.
2, via the id parameter in the media page (build_media_content.php). NOTE: it was later reported that 0.7.4 is also affected.
1, by using variable functions and variable variables to write variables whose names match the whitelist
4, via (1) the username parameter to the password reminder page (tiki-remind_password.php)
0, via an absolute pathname in (1) error_handler_file and (2) local_php parameters to (a) tiki-index.php
5," via a combination of """".."""" and sub-directory specifiers that resolve to a pathname that is at or below the same level as the web document root"
5, via a long device name (interface name) in the ifr_name field.  NOTE: the vendor disputes this issue
4, via a crafted reply to an unspecified listing command
5, via (1) the lang parameter to integrator.php; (2) the token parameter in a New Password action
2, via the edit parameter in an upd cmd action
2, via an absolute path in the dir parameter
4, via a URL in the forward parameter in a Log In action.
4, via a URL in the root parameter
4, via a URL in the xarg parameter to (1) xarg_corner.php
4, via the aranan parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via certain data on TCP port 10616 that results in a long argument to the SEARCHREPORT command
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
3, via unspecified vectors.
2, via the (1) Email Address and (2) Password fields in (a) login.asp and (b) admin_login.asp.
2, via unspecified vectors related to settings.inc.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a full pathname in the query string.  NOTE: some of these details are obtained from third party information.
4, via a long file name in an M3U file.
2, via the posts_columns array parameter.
4, via a large packet to TCP or UDP port 48000.
1, via unspecified input related to geolocation
1, via unspecified vectors
1, via unspecified vectors
2, via the table parameter to index.php.
2, via unspecified vectors involving creation of a profile.
4, via a URL in the rootBase parameter.
2, via unspecified input on which base64 encoding is performed. NOTE: some of these details are obtained from third party information.
4, via (1) the category_id parameter to users/kb.php
4, via (1) the email parameter to index.php; or the command parameter to index.php in (2) the default action for the home page
1, by writing Ethernet frames with a size larger than the MTU to the EN0_TCNT register
5, via a WebDAV write request that specifies an entity with a SYSTEM tag
5, via unspecified vectors.  NOTE: these files are stored with .html extensions
1, via unspecified vectors
4, via a .. (dot dot) in the name parameter.
2, via an IMAP tag with a null byte followed by a format string specifier
1, via network data containing pickled objects for the (1) statusmessages or (2) linkintegrity module
4, via a Quattro Pro (QPRO) file with crafted (1) Attribute and (2) Font Description records.
2, via an EMF file with a crafted EMR_STRETCHBLT record
4, via a Quattro Pro (QPRO) file with crafted values that trigger an excessive loop and a stack-based buffer overflow.
4, via a URL in the dir_ws parameter.
2, via long arguments to unspecified methods.
4, via a modified DB2INSTANCE environment variable that points to a malicious library.  NOTE: this might be the same issue as CVE-2008-0697.
4, via a PassMessage request containing a large array index.
3, via unknown vectors.  NOTE: this is probably the same issue as CVE-2007-5527 or CVE-2007-5528
4, via a validation request in which the Novell tree name is not properly delimited with a wide-character backslash or NULL character.
1, via some types of FTP protocol behavior. NOTE: the netkit-ftpd issue is covered by CVE-2007-6263.
4, via a myforum%00 cookie.
3, by saving a description and setting fneditmode to 1.  NOTE: unauthenticated remote attackers can exploit this by leveraging a cookie manipulation issue.
0, via requests containing the pathname in the dir parameter and the filename in the ffile parameter.
2, via an invalid argumentname parameter in a disc op action
2, via unspecified vectors
1, via encoded backslash sequences in the d parameter
4, via a long argument to the OpenUrl method.
5, via a URL in the basePath parameter.
4, via a URL in the SYS_PATH parameter.
4, via a .. (dot dot) in the file parameter.
2, via the pageId parameter.
4, via a URL in the action parameter.
2, via the id parameter.
5, via a URL in the include_path parameter to (1) HTML_oben.php
4, via a crafted SIP INVITE message.
4, via a flood of fragmented packets to port 5060.
2, via the (1) keyField
2, via the (1) keyField
4, via a URL in the bkpwp_plugin_path parameter to (1) plugins/BackUp/Archive.php; and (2) Predicate.php
4, via a .. (dot dot) in the page parameter.  NOTE: this can be leveraged to obtain the path by including a local PHP script with a duplicate function declaration.
1, via unspecified vectors
3, via attributes inside a domain-name string in the (1) mailing or (2) forum component
1, via unspecified vectors
4, via a .. (dot dot) in the dir parameter.  NOTE: this issue is disputed for 8.0.2 by a reliable third party
4, via a .. (dot dot) in the file parameter.
4, via a .. (dot dot) in the (1) ticketid and (2) filename parameters.
3, by making a request with an editauthor action
4, via a (1) del
4, via a .. (dot dot) in the module parameter.
4, via a .. (dot dot) in (1) the lng parameter to (a) guestbook.php
2, via the username parameter in a Register action
4, via a .. (dot dot) in the username parameter in a Register action.
4, via a stats method action to /xml-rpc with (1) an empty Authorization header line
4," via a stats method action to /xml-rpc with format string specifiers in the (1) username or (2) password portion of base64-encoded data on the """"Authorization: Basic"""" HTTP header line."
0, via a full pathname in the second argument to the HttpDownloadFile method
4, via a request to admin/auth/user/1/password/.  NOTE: this issue has been disputed by Debian
2, via directory traversal sequences in the path parameter.  NOTE: some of these details are obtained from third party information.
4, via (1) user info (account details) or (2) a post.
4, via a SCRIPT element in a news post.
2, via the firstname parameter to an unspecified component
2," via the """"Enable key-based authentication to Deployment server"""" browser option"
4, via a symlink attack on temporary files when using the (1) HOSTNAME or (2) IRCHOST command.
4, via a URL in the cmsdir parameter
4, via a URL in the site parameter.
4, via a URL in the cfgProgDir parameter to (1) admincp/auth/secure.php or (2) admincp/auth/checklogin.php.
4, via a URL in the pathdot parameter.
4, via a .. (dot dot) in the selskin parameter to index.php.  NOTE: this can be leveraged for remote file inclusion by including inc/boxleft.inc and specifying a URL in the xposbox[L][] array parameter.
4, via a crafted URI to the CUPS service.
4, via a crafted SNMP response that triggers a stack-based buffer overflow.
4, via a directory with a crafted .DS_Store file.
3, via unknown vectors.
5, via a disk image with crafted GUID partition maps
5, via a crafted feed: URL that triggers memory corruption.
2, via unspecified output files
5, via a crafted .XLS file that triggers memory corruption in the Microsoft Office Spotlight Importer.
4, via a crafted Java applet.
4, via a man-in-the-middle (MITM) attack between the client and the server
2, via the id parameter.
1, via the data parameter.
4, via a URL in the site_absolute_path parameter to (1) admin.php
2, via the DatabaseType parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) requestid
5, via a long argument to the Register method.  NOTE: some details were obtained from third party sources.
2, via an HTTP request with a missing protocol version number
2, via an iframe with Javascript that sets the document.location to contain a leading NULL byte (\x00) and a (1) res://
5, by using ini_set to modify arbitrary configuration variables
4, via a large length value for a GSS client name in an RPC request.
2, via long SMB responses that trigger the overflows in the SendReceive function.
0, via unspecified vectors that trigger establishment of a session to a ColdFusion application in which the (1) CFID or (2) CFTOKEN cookies have empty values
3, by using a debug register (DR7) to set certain breakpoints.
1," via crafted clock source names.  NOTE: follow-on analysis by Linux developers states that """"There is no way for unprivileged users (or really even the root user) to add new clocksources."""""
4, via a long string argument to the (1) BroadcastKey
2, via the to parameter.
0, via the DEBUG parameter
4, via a .. (dot dot) in the whattodo parameter.
2," via unspecified parameters related to the """"login procedures."""""
2, via the admin_name
2, via unspecified vectors
2, via unspecified vectors
2, via the SMAUTHREASON parameter
4, via a certain CONTAINS operation on an indexed column
4, via shell metacharacters in arguments to the (1) AsciiBackup
4, via a .. (dot dot) in the first argument to the GlobalLog stored procedure.  NOTE: this can be leveraged to execute arbitrary code using CVE-2007-5926.
2, via long strings in a SELECT statement.  NOTE: this might be a buffer overflow
3, by creating a stored procedure with a long name and invoking this procedure
4, via unspecified vectors.
0, via unspecified form fields related to the (1) search function
3, by triggering a delete operation while the Session object is still being used
4, via a DVI file with a long href tag.
1, by creating certain temporary files before they are processed by dviljk
4, via a crafted DVI input file.
4, via a long argument to the ShockwaveVersion method.
4, via a malformed request for index.php with (1) a certain func parameter value; or (2) certain func
0," by using the advanced search module with the """"show results as messages"""" option"
2, via the Expect HTTP header.  NOTE: this might be the same issue as CVE-2006-3918
4, via unspecified vectors.
2, via the (1) nick (aka Name) and (2) shout (aka Shout) parameters.
0, via the Description parameter in a Maximo change action.
2, via the id parameter.
2, via the username parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via unspecified vectors.
2, via the clave parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via unspecified vectors.
1, by referencing modified NLS message files through directory traversal sequences in the DBLANG environment variable.
3, via unspecified SQ_ONASSIST requests.
4, via a filename argument in the -sp option to the X program
2, via unspecified vectors involving use of table-level DATA DIRECTORY and INDEX DIRECTORY options when creating a partitioned table with the same name as a table on which the user lacks privileges.
2, via the topic parameter.
2, via the to parameter.
2, via the db parameter.
4, via a hex-encoded IMG element in the db parameter in a POST request
2, via the lid parameter.
2, via the backurl parameter.
2, via the PATH_INFO (PHP_SELF).
2, via the PATH_INFO (PHP_SELF).
5, via a %00 sequence in the dir parameter to index.php
1, via unspecified vectors to (1) account.php
4, via unspecified vectors.
4," via """"short string values"""" that result in heap corruption."
1, via unspecified vectors in a user profile
0, via the user parameter in a profile fn action.
2, via the seid parameter in a viewcat s action on the forums page.
2, via the searchtype parameter.
4, via a URL in the config[path_src_include] parameter.
4, via a URL in the example parameter.
0, via the sbcat_id parameter
2, via the id parameter.
2, via the package parameter.
2, via the id parameter.
0, via large HTTP cookie parameters.
2, via the (1) func or (2) date parameter
2, via the Search field in a search for additions to the Favorites section.
2, via the url parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the id parameter in an artikel action or (2) the katid parameter in a produk action.
5, via (1) an invalid argument to the InitParam method or (2) an unspecified vector involving the SetParam method.
4, via a long section string in a (1) XBM or (2) XPM file to (a) ID_X.apl or (b) IDE_ACDStd.apl.  NOTE: the PSP and LHA vectors are already covered by CVE-2007-4344 and CVE-2007-6007.  NOTE: these might be integer overflows rather than buffer overflows.
1, via unspecified vectors that trigger an assert error.  NOTE: this issue reportedly exists because of an incomplete fix for CVE-2007-5933.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the artnr parameter (aka the search section).  NOTE: some of these details are obtained from third party information.
2, via the t_dedupe parameter.
4, via a .PMD file with a crafted font structure.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a long string in the (1) Text
4, via a crafted e-mail message. NOTE: this information is based upon a vague advisory by a vulnerability information sales organization that does not coordinate with vendors or release actionable advisories. A CVE has been assigned for tracking purposes
3, via unspecified vectors.  NOTE: this information is based upon a vague advisory by a vulnerability information sales organization that does not coordinate with vendors or release actionable advisories. A CVE has been assigned for tracking purposes
2, via the mode parameter.
2, via the local_graph_id parameter.
4, via a short RTSP query
0, via the standalone parameter and other unspecified parameters.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a long string in (1) the domain parameter to the dgettext function
4, via a flood of TCP SYN packets
3, by sending a nickname
5, via a URL in an unspecified parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the login parameter.  NOTE: this issue reportedly exists because of a regression that followed a fix at an unspecified earlier date.
1, via modified values to the (1) Mehr and (2) SUPER parameters.
4, via a URL in the pg parameter.
2, via the id parameter in a (1) codes action in the profile-codes module
4, via a JOIN command without a channel argument.
4, via a crafted argument to the isdn_ioctl function.
2, via unspecified parameters to (1) nc_top.asp; (2) inc_bookmarks.asp
4, via a .. (dot dot) in the xoopsOption[pagetype] parameter to the default URI for modules/news/.  NOTE: this can be leveraged by using legitimate product functionality to upload a file that contains the code
2, via the bid parameter.  NOTE: it was later reported that 1.0.13 is also affected.
2, via the X-Forwarded-For HTTP header.
2, via the id parameter.
2, via the message field in the (1) vedipm or (2) live_chat module.
2, via directory traversal sequences in the module parameter.
2, via certain parameters to the changepass module.
4, via a URL in the phpbb_root_path parameter.
4, via a URL in the action parameter.
2, via the file parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2," via an RTCP index that is """"much more than expected."""""
2, via an IPsec Phase 2 proposal that lacks Perfect Forward Secrecy (PFS).
4, via (1) malformed number list ranges in unspecified IMAP commands
4, via a URL in a feed.
4, via a packet that contains zero in the size field in its header
4, via a URL in the (1) language_file parameter to (a) comments-display-tpl.php and (b) addons/separate-comments-mod/my-comments-display-tpl.php and the (2) config[comments_form_tpl] parameter to comments-display-tpl.php.
0, via the seid parameter in a viewevent action.
4, via a large precision value in an integer format string specifier to the format function
2, via the sort parameter.
2, via the errmsg parameter.
2, via the sb_protype parameter.
2, via the year parameter to (1) xml/index.php; or (2) the year parameter to view.page.inc.php
0, via the year parameter to (1) view.page.inc.php
2, via the idevent parameter.
4, via a .. (dot dot) in the id parameter.  NOTE: in some environments
5, via a URL in the kfm_base_path parameter.
0, via the contentid parameter in an article action to include.php
2, via the (1) title
2, via the cat parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via the password parameter to Default.asp (aka the Login Page).  NOTE: some of these details are obtained from third party information.
4, via a URL in the skin_file parameter.
2, via the (1) id parameter to (a) emlak_detay.asp and (b) haber_detay.asp
2, via the search parameter.
2, via the (1) show parameter to index.php and the (2) print parameter to print.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the password parameter.
4, via a long string in a FlvPlayerUrl property value.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
4," via a """"specific file"""" argument to an FTP command."
4, via a URL in the (a) php_root_path and sometimes the (b) privilege_root_path parameter to various PHP scripts under (1) admin/includes/
4, via a crafted ioctl struct in which iocts is not null terminated
2, via the (1) sig[0] and (2) sig[1] parameters.
2, via the album parameter.
2, via the (1) loginname (aka Username) and (2) loginpass (aka Password) parameters to caladmin.php.
0, via the aarstal parameter in a yeardetail action
0, via the aarstal parameter in a yeardetail action.
4, via a certain search parameter value in a search action
2, via the id parameter in a category action.
3, via the pword (aka Password) parameter.  NOTE: some of these details are obtained from third party information.
0, via the id parameter to (1) reviews.php
5, via an AppleDouble attachment containing an apparently-safe file type and script in a resource fork
3, by creating a malicious yast2 module in the current working directory.
2, via the username parameter
0, via the uname parameter
4, via unknown vectors.
0, via the id parameter to (1) viewimage.php and (2) comments.php.
2, via the emailAddress parameter in a Send New Password action
4, via a crafted request to update a user profile.  NOTE: some of these details are obtained from third party information.
4, via a crafted LZH archive
3, via shell metacharacters in the (1) domain or (2) tld parameter in a check_owner action.
5, via a URL in the webappcfg[APPPATH] parameter.
4, via a URL in the confdir parameter to (1) dbutil.bck.php and (2) dbutil.php in config/.
5, via a URL in the ccms_library_path parameter to (1) markdown.php and (2) gallery.php in decoder/.
4, via unspecified vectors.
4, via a filename with a certain length
4, via shell metacharacters in command line arguments.
4, via a .. (dot dot) in the act parameter.
4, via a .. (dot dot) in the file parameter in a download action
4, via a .. (dot dot) in the filepath parameter to (1) css_file.php
4, via a .. (dot dot) in the language parameter to (1) languages_n.php
4," via a long argument to the InitX method that begins with a """"%%"""" sequence"
4, via a URL in the _SESSION[PM_INCPHP] parameter to (1) incphp/globals.php or (2) plugins/export/mc_table.php.  NOTE: it could be argued that this vulnerability is caused by a problem in PHP and the proper fix should be in PHP; if so
4, via unknown vectors.
2, via the func parameter.
2, by reading comments in the HTML source of any page.
0, via the pag_sub[] parameter to plug.php.
4, via a link in an RSS feed.
4, via a symlink attack on the sylprint.[USER].[PID] temporary file.
4, via a symlink attack on temporary files.
3, via the -L (output log file) option.  NOTE: this issue is only a vulnerability in limited environments
4, via a .. (dot dot) in the layer parameter.
4, via a .. (dot dot) in the (1) Root and (2) Path parameters.
4, via a .. (dot dot) in the sFilePath parameter.  NOTE: exploitation requires that the product is configured
4, via a .. (dot dot) in the (1) roomNo and possibly the (2) bookid parameter.
0, via some programs that access hardware resources
2, via the (1) login (aka Username) and (2) password parameters. NOTE: some of these details are obtained from third party information.
5, via a URL in the (1) level parameter to (a) install_module.php and (b) uninstall_module.php in upload/xax/admin/modules/
3, via unspecified vectors.
2, via unspecified network behavior that triggers a divide-by-zero error.
4, via a direct request to phpinfo.php
0, via the make_id parameter in a search action in browse mode.
4, via a long argument to the c method.
4, via a URL in the CFG[site][project_path] parameter.
4, via a .. (dot dot) in the CFG[site][project_path] parameter.
4, via a URL in the tm_includepath parameter to (1) Classes.inc.php
2, via the error parameter in an error page action.
4, via a .. (dot dot) in the page parameter.  NOTE: in some environments
4, via a loggedin parameter with a value of true
4, via a malformed .au file that triggers a divide-by-zero error.  NOTE: this might be related to CVE-2007-4904.
0, via a certain AIFF file that triggers a divide-by-zero error
0, via unknown attack vectors
4, via the BuildTime parameter.
1, via unknown vectors
4, via (1) a SWF file that uses the asfunction: protocol or (2) the navigateToURL function when used with the Flash Player ActiveX Control in Internet Explorer.
4, via unspecified vectors.
1, via unknown vectors in the (1) Adobe File Dialog Button (FileDlg.dll) and the (2) Adobe Copy to Server Object (SvrCopy.dll) ActiveX controls.
4, via unspecified vectors.
2, via the Host argument to an unspecified method.
4, via a long (1) Host header
4, via a crafted Mach-O binary.
1, via crafted arguments to the (1) addTarget
4, via a crafted TAR archive.
4, via (1) the gid parameter to modules/arcade/index.php in a show_stats action
4, via a .. (dot dot) in the template parameter.
2, via the (1) z
2, via the (1) rmore parameter to xlaabsolutenm.aspx and the (2) template parameter to pages/default.aspx.
4, via a direct request to getpath.aspx
4, via (1) the view parameter to the com_content component
2, via format string specifiers in the (1) Hostname tag or the (2) name attribute in the Connection tag.  NOTE: there might not be any realistic circumstances in which this issue crosses privilege boundaries.
2, via the (1) day or (2) year parameter.
2, via the lid parameter
4, via a crafted load balancing packet to UDP port 4112.
3, via large (1) Metadata Block Size
3, via the MIME-Type URL flag (-->) for the FLAC image file in a crafted .FLAC file.
3, via malformed (1) Seektable values or (2) Seektable Data Offsets in a .FLAC file.
4, via a long request.
2, via the frm_emessage parameter
3, via unspecified vectors.
4, via a URL in the (1) _SERWEB[configdir] parameter to load_lang.php
4, via a .. (dot dot) in the (1) mod and (2) js parameters.
2, via the z parameter.
2, via the id parameter.
4," via """"some HMC commands."""""
4," via """"some HMC commands."""""
2, via the URI.
4, via a URL in the From parameter.
2, via the (1) LIMIT parameter to chat/deluser.php3
4, via Shoutbox block messages.
0, via modules that pass input to the taxonomy_select_nodes function
4, via unspecified vectors.
2, via the type parameter.
0, via unspecified ASCII integers used as memory allocation arguments
4," via """"some HMC commands."""""
2, via the (1) chart name or (2) chart tool tip text; or the (3) href
4, via (1) the link parameter or (2) the User-Agent HTTP header.
3, via unspecified vectors.
4, via (1) the galleryID parameter in a usergallery upload action; or the (2) upID
2, via the handler parameter to (1) index.php and possibly (2) admin/index.php
2, via the username field.
3, by appending a (1) + (plus)
4, via a HTTP request to /eh/chat.ehintf/C. that does not contain a Connection ID
2, via the URI path in an HTTP GET request
3, via certain ..\ (dot dot backslash) sequences in the URL path
0, via the s parameter
4, via a .. (dot dot) in the file parameter.
4, via a .. (dot dot) in the id parameter to (1) get_image.php or (2) get_file.php in mms_template/.
4, via a URL in the path parameter.
4, via a URL in the config[fsBase] parameter
4, via a request that includes an MS-DOS device name
4, via a long first argument to the CreateStill method.
2, via the mount command.  NOTE: the researcher reports a vendor response stating that this is not a security problem.
4, via a crafted MEW packed PE file
4, via a crafted MS-ZIP compressed CAB file.
0, via the user parameter (username field).  NOTE: some of these details are obtained from third party information.
4," via unspecified """"undocumented object parameters."""""
2, via the SESSION_COOKIE_NAME (session ID) in a cookie.
2, via unspecified vectors
3, via unspecified vectors.
1, by invoking dangerous subcommands including (1) unison
2, via an image file with crafted EXIF tags
2, via an image with crafted EXIF tags
4, via a crafted EXIF file that triggers a heap-based buffer overflow.
2, via recursive IFD references in the EXIF data in a JPEG image.
4, via a symlink attack on the pdfin.[PID].tmp temporary file
4, via a crafted signed Mach-O binary that causes the hashes function to return NULL.
2, via the catid parameter in an inline page action.
4, via a signature.
2, via the month parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: the day and year vectors are covered by CVE-2007-6274.
4, via (1) the id parameter to mods/Calendar/index.php
2, via the (1) username (user) or (2) comment (commento) field
4, via a .. (dot dot) in the link parameter.
4, via a .. (dot dot) in the (1) size or (2) path parameter.
4, via a SIP INVITE message accompanied by an immediately subsequent SIP CANCEL message
0, via malformed BGP packets
2, via the (1) categorie parameter to catdownload.php
2, via the PATH_INFO to (1) users/register.php or (2) search/index.php
2, via the (1) sort_mode parameter to wiki/list_pages.php and the (2) highlight parameter to search/index.php.  NOTE: the researcher also reported injection via JavaScript code in the Search box
4, via a .. (dot dot) in the filename parameter
4, via a long query string.
4, via a .. (dot dot) in the filename parameter.
2, via an invalid browse parameter
3, by using a robot to invoke the SwingUtilities.invokeLater method.
3, by using ctrl-V.
2, via the id parameter.
0, via the search parameter to the /search URI.
0, via the id parameter in editalbum mode.
0, via the id parameter in an expand action.
2, via the (1) username
4, via a .. (dot dot) in the username parameter when registering a user account
2, via the fpb_username cookie.
0, by reading the password parameter value in the HTML source for the page generated by a profile action.
4, via a .. (dot dot) or absolute pathname in the filename parameter.
1, via crafted unicode in a .mp4 file
4, via a ..\ (dot dot backslash) in the URI.
4, via a URI with an appended (1) '+' character
2, via the IP Address field and other unspecified fields.
2," via the (1) """"assess modification"
4, via a long string in an emots.txt file.
2, by invoking scp
4, via unspecified vectors.
2, via the (1) ss
1, via requests related to byte swapping and heap corruption within multiple functions
4, via a request containing a 32-bit value that is improperly used as an array index.
4, via (1) a GetVisualInfo request containing a 32-bit value that is improperly used to calculate an amount of memory for allocation by the EVI extension
4, via a malformed .PMD file
2, via the order parameter.
4, via a crafted executable file that calls the do_brk function.
4, via a message with a timestamp that does not contain a trailing space
2, via the (1) Itemid parameter in a com_frontpage option and the (2) option parameter.
4, via a long Host header.
4, via a base64-encoded value of the admin parameter to shop/admin.php.
2, via the URI
0, via (1) the query string in an index action
2, via the id parameter.
4," via unspecified """"text areas/boxes."""""
4, via a URL in the g_root_dir parameter to (1) admin_page_open.php and (2) client_page_open.php in global/templates/.
2, via the (1) c and (2) h parameters to (a) web/host_gmetrics.php; the (3) G
4, via (1) the prod parameter in a details action
0, via the ida parameter in a gallery foto_show action.
5, via a crafted huffman encoded packet.  NOTE: some of these details are obtained from third party information.
4, via a ..\ (dot dot backslash) in the config parameter.
0, via the type parameter to search.php and (2) remote authenticated administrators to execute arbitrary SQL commands via the listing_updated_days parameter to admin/findlistings.php.  NOTE: some of these details are obtained from third party information.
4, via a long reply to a LIST command.
0, via the newdir parameter to index_3x.php
4, via a .. (dot dot) in the lang_sel parameter to (1) updater.php and (2) thumber.php.
4, via a direct request to explorer/phpinfo.php
4, via a filename with a double extension
2, via the password parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the fileOreonConf parameter to (1) MakeXML.php or (2) MakeXML4statusCounter.php in include/monitoring/engine/.
2, via the (1) username (nickname) or (2) message parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in (1) the dir[classes] parameter to sitemap.xml.php or (2) the error parameter to errors.php.
2, via the (1) gb_mail
4, via a certain changepass action to index.php.
4, via (1) the cat_id parameter to categories.asp; and probably (2) the document_id parameter to categories.asp
4, via a request to hosting/addreseller.asp with a username in the reseller parameter
4, via a request to hosting/addsubsite.asp with the loginname and password parameters set
4, via a request to Hosting/Addreseller.asp with modified loginname and email parameters; and (2) allows remote authenticated users to change a credit amount and increase a discount via an UpdateUser action to Accounts/AccountActions.asp with modified UserName
2, via the (1) email and (2) loginname parameters to Hosting/Addreseller.asp
4," via a request to fp2002/UNINSTAL.asp with a """"host id (IIS) value."""""
4, via a request to OpenApi/GatewayVariables.asp.
4, via a request to adminsettings/choosetranstype.asp.
4, via (1) the AdminName and AdminLevel parameters to fp2000/NEWSRVR.asp
4, via a request to hosting/importhostingplans.asp; or (2) change an arbitrary plan via a request to hosting/AutoSignUpPlans.asp with the (a) save
2, via an unspecified parameter.
4, via a ..%2F (dot dot slash) in the list parameter.
4, via a crafted packet to port 5400/tcp.
4, via a crafted file to the (1) AMOS-MusicBank
0, by visiting http URLs with a (1) RealPlayer G2
1, via code separator characters in the query string.
4, via a long FileName property.
2, via the EmailAddress parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) showposts
4, via unspecified vectors.
1, via unknown vectors related to plug-ins.
1, via crafted TLS certificates.
3, by using designMode to modify contents of pages in other domains.
4, via a crafted bitmap (BMP) file that triggers a large number of calculations and checks.
4, via a crafted bitmap (BMP) file
2, via the area_name parameter.
5, via a .. (dot dot) and modified filename in the movie parameter.
4, via Launcher tooltips.  NOTE: a second buffer overflow (over-read) in the xfce_mkdirhier function was also reported
2," via unknown vectors related to the """"cliend id"
2, via an HTTP link to a PLS file in a crafted ZPL file
5, via a crafted PUB file
4, via a long string to the IsTaggedBM method.
4, via a long filename in a gzipped archive
2, via the id parameter.
2, via the include_file parameter.
0, via the q parameter to the default URI in patch/.
4, via (1) the topic parameter in a viewtopic action
4, via a URL in the loadadminpage parameter.
2, via the id parameter.
2, via the lid parameter to (1) brokenfile.php
4, via (1) the subject parameter to modules/news/submit.php; (2) the PATH_INFO to modules/news/index.php
2, via the (1) header and (2) footer parameters to modules/system/admin.php in a meta-generator action
4, via a .. (dot dot) in the act parameter
4, via a URL in the CONF[app_root] parameter to (1) tcuser.class.php
4, via a .. (dot dot) in the lang parameter to (1) index.php
5, via a URL in the GLOBALS[mosConfig_absolute_path] parameter.
4, via (1) the id parameter to default.asp in a news page action or (2) the pageid parameter to default.asp.
0, via the ItemID parameter to (1) comments.php
4, via a large .m3u file.  NOTE: this might be a duplicate of CVE-2006-6288.
4, via (1) the from parameter to index.php or (2) the page parameter to update.php.
4, via (1) the newconfname parameter to profiles.php or (2) the conf parameter to index.php.
0, via a long filename argument to the PDF_load_image function that results in an overflow in the pdc_fsearch_fopen function
3, via multiple concurrent connections
2, via the com_option parameter.
0, via the id parameter to an arbitrary component.
2, via the subcatid parameter to index.php.
5, via a .. (dot dot) in the pagename parameter in a page view action.
4, via a URL in the path_escape parameter.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via a long (1) HELO
4, via (1) the origin parameter to work/work.php in a display_upload_form action
0, via the idpro parameter in a prodotti_dettaglio action.
0, via the id parameter to (1) videolink_count.php or (2) links.php.
4, via (1) the categ parameter in a categ action or (2) the article parameter in an articles action.
2, via the id parameter.
0, via the vlan_id parameter to (1) vlanview.php
4, via (1) the catid parameter to category.php or (2) the groupid parameter to editadgroup.php.
4, via a .. (dot dot) in the global_lang parameter to (1) header_album.php
4, via a .. (dot dot) in the page parameter in a page mode action.
2, via the ip parameter.
4, via a .. (dot dot) in (1) the lang parameter to pages/print/default/ops/news.php or (2) the theme_dir parameter to pages/download/default/ops/search.php; or the admin_theme_dir parameter to (3) download.php
4, via a URL in the output parameter.
0, via the id parameter in a sezione page action to index.php.
2, via the id parameter.
2, via the username field in an unspecified component.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a symlink attack on (1) temporary files used by the cli_gentempfd function in libclamav/others.c or on (2) .ascii files used by sigtool
2, via the (1) KW and (2) SF parameters to forum/login_user.asp
2, via the username field to the login script.
4, via a .. (dot dot) in (1) the s parameter to the admin page or (2) the pg parameter to an arbitrary module
2, via long strings in the first four arguments to the Start method.
4, via a direct request to phpinfo.php
4, via a direct request for (1) shared/footer.php
2, via the (1) LAST and (2) FIRST parameters to admin/staff_del_confirm.php
4, via a long (1) cTag or (2) cValue field in an OGG Vorbis file.
4, via a filename
2," via an HTTP request containing double-encoded sequences ("""".%252e"""")."
4, via a disk or image that contains a long joilet file name.
5, via a URL in the loadadminpage parameter
2, via directory traversal sequences in the selected_provider parameter.
2, via the searchkey parameter in a search action.  NOTE: some of these details are obtained from third party information.
4, via a modified filter ID.
4, via a .. (dot dot) in the picture parameter.
4, via a .. (dot dot) in the picture parameter.
2, via the Referer HTTP header.
0, via a full pathname in the dir parameter.
4, via a .. (dot dot) in the phpEx parameter.
2, via unspecified network traffic that triggers a syslog message containing invalid format string specifiers
4, via (1) a long first line of a response
2, via an RTP packet with a size value of 0xffff.
4, via (1) a malformed Transport header
4, via a User-Agent header line that contains a carriage-return character
4, via (1) a reply that begins with a long version string
4, via shell metacharacters in the path parameter.
4, via a crafted .torrent file.
4, via a crafted SWF file
0, via the id parameter in a viewdir action.
0, via the cat parameter in a browse action.
4, via unspecified vectors.
1, via unspecified vectors
2, via the cat parameter.
2, via directory traversal sequences in the p parameter.
4, via a URL in the config[root_ordner] parameter.
1, by using the image/gif content type
4, via a .. (dot dot) in the suck_url parameter.
4, via a .. (dot dot) in the file parameter.
4, via a long string in the ProductCode argument (second argument) to the DownloadAndExecute method
4, via a URL in the root_path parameter.
2, via the templateid parameter.
4, via a URL in the mfh_root_path parameter.
0, via the p parameter in the Console page.
3, via the (1) contentshort or (2) contentfull parameter in an addnews action to the default URI; (3) the content parameter in a pm write action to 2z/admin.php; (4) the referer parameter to templates/default/usermenu.tpl
4, via (1) a request to index.php with an invalid template or (2) a request to the default URI with certain year and month parameters
4, via a .. (dot dot) in the file parameter
2, via the m parameter.
2, via the txtLoginID parameter.
2, via the albumnr parameter.
2, via the id parameter.  NOTE: the member.php vector is already covered by CVE-2005-0413.
2, via the string parameter.
2, via the string parameter.
0, via the Password parameter
4, via multiple '/' (slash) characters in the URI.
2, via the ara parameter to the default URI under Ara/ in a search action.
2, via the Arayalim parameter.
2, via the comment field in the comment form.
4, via a long subtitle in a (1) MicroDvd
0, via format string specifiers in the Connection parameter.
4, via (1) the :demuxdump-file option in a filename in a playlist
4, via a request without a Transport parameter
5, via unknown vectors.
2, via unknown vectors related to the admin controller.
1, via crafted filenames to the (1) Core or (2) add-item modules; or via (3) HTTP PROPPATCH in the WebDAV module.
5, via a URL in the (1) Core and (2) print modules.
2, via the option parameter.
5, via (1) an event description
5, via a crafted GIF file
4, via a potentially-successful modify operation with the NOOP control set to critical
4, via a long string in the (1) DisplayName
2, via the cmd parameter.
1, via long arguments to multiple unspecified RPC functions
4, via unspecified vectors.
2, via unspecified vectors
2, via an arbitrary valid request to an administrative URI
1, via crafted image
4, via unspecified vectors.
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the forum parameter.
2, via the MSN field during user registration.
0, via the pingstr parameter and other unspecified vectors.
5, via goform/formRmtMgt or (2) modify the administrator password via goform/formPasswordSetup.
2, via an OXM file with a negative value
1, via unspecified vectors related to an untrusted length value and the (1) pofs and (2) plen arrays.
4, via a .. (dot dot) in a (1) LIST
4, via a long command.
4, via search operations that trigger recursive filter_free calls.
2, via partial HTTP requests
5, via unspecified vectors.
2, via the user/logout URI.  NOTE: the vendor disputes the significance of this issue
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
4, via a crafted UTF-8 URL in a link.
2, via the key parameter to the (1) admin and (2) user interface pages.
4, via a crafted Sorenson 3 video file
4, via a movie file containing a Macintosh Resource record with a modified length value in the resource header
4, via a movie file with Image Descriptor (IDSC) atoms containing an invalid atom size
1, via vectors related to emergency calls.
4, via a crafted compressed PICT image
4, via a crafted file:// URL.
2, via unknown vectors related to mbuf chains that trigger memory corruption.
2, via unspecified URL schemes.
4, via photocast subscriptions.
4, via a crafted afp:// URL.
2, via unknown manipulations of Kerberos principal realm names.
2, via the a long file name to the NSDocument API.
3, via data in a 502 Bad Gateway error.
1, via crafted time zone data.
4, via a crafted HP-GL/2 file.
4, via a malformed selector name to the NSSelectorFromString API
5," via a """"long pathname with an unexpected structure"""" that triggers the overflow in NSFileManager."
4, via a crafted serialized property list.
2, via unspecified manipulations that cause messages to be sent to a deallocated object.
4, via a crafted XML file
4, via a help:topic_list URL that injects HTML or JavaScript into a topic list page
4, via a long FontName parameter in a slideshow (.sld) file
2, via an RPC request that specifies a large number of array dimensions
2, via an HTTP request with a malformed Range header.
4, via a crafted encrypted message
4, via a large streamid SDP parameter.
1, via unknown vectors related to file change notifications in the TPRoot
1, via crafted inputs to ASP pages.
4, via a crafted DHCP packet.
2, via the UID parameter.
4, via a long argument to the SetPassword method.
4, via a .. (dot dot) in the file parameter.
2, via the search parameter.
4, via a .. (dot dot) in the as_language parameter to assets/snippets/AjaxSearch/AjaxSearch.php
4, via a (1) a long username
0, via format string specifiers in the username field
4, via unspecified vectors.  NOTE: As of 20080103
0, via the searchtext parameter to search.php
4, via a long string in a .WRL file.
0, via format string specifiers in a .WRL file.
2," via an Excel document with malformed cell comments that trigger memory corruption from an """"allocation error"
4, via a PowerPoint file with a malformed picture index that triggers memory corruption
4, via a PowerPoint file with an invalid picture index that triggers memory corruption
4," via (1) the """"Real name"""" field in Personal Settings"
2, via the baseDir parameter.
4, via a long initial authentication packet.
2, via the album_name parameter.
0, via the Username parameter
2, via the msg parameter
2, via the (1) id parameter to cat_main.php and the (2) cat parameter to forum.php in a liste action.
2, via the MAIL parameter.
4, via a direct request to forum/whereami.asp
4, via a URL in the path_escape parameter.
2, via the template parameter.
4, via a .. (dot dot) in the selected_theme parameter
2, via the user_name parameter to actions.php
4, via a URL in the page parameter.  NOTE: this can also be leveraged for local file inclusion using directory traversal sequences.
2, via the PATH_INFO to the top-level URI.
4, via a direct request to php/admin/phpinfo.php
2, via unspecified telnet options
5, via a crafted TELOPT PRAGMA LOGON telnet option
2, via the c parameter.
3," via encoded """"/"""" (%2F) sequences in the link parameter."
2, via the flexbb_temp_id parameter in a cookie.
4, via a .. (dot dot) in the aux_page parameter.
0, via the eggblogpassword parameter in a cookie.
2, via the join_form page and (2) change the privileges of arbitrary groups via the prefs_groups_overview page.
2, via an invalid regular expression.
2, via an invalid regular expression.
2, via unspecified parameters
5, by uploading a file with an executable extension to the main virtual directory.
2, via the User-Agent HTTP header.
3, via the User-Agent HTTP header
2, via the Greeting field in a User Profile.
2, via the Shutdown message.
2, via the Shutdown message.
2," via an encoded """"/"""" (""""%2F"""") in the file parameter."
0, via the pid parameter in a profile page (possibly profile.php).
2, via the page parameter
2, via the (1) data[title]
2, via an invalid p parameter in an rss2 action to the default URI
0, via the popuptitle parameter to (1) wp-admin/post.php or (2) wp-admin/page-new.php.
2, via an empty value of the page parameter to certain PHP scripts under wp-admin/
4, via a .. (dot dot) in (1) the page parameter to certain PHP scripts under wp-admin/ or (2) the import parameter to wp-admin/admin.php
2, via the (1) wpcf_email
2, via the (1) wpcf_question
2, via certain values of the show_page and time parameters to the default URI.
2, via the (1) user or (2) drop parameter.
2, via the URL parameter.
2, via the URL parameter.
2, via the (1) cryptwidth
2, via the (1) mcsp_opt_msg_no_answer or (2) mcsp_opt_msg_wrong_answer parameter to wp-admin/options-general.php.
2, via the (1) mcsp_opt_msg_no_answer or (2) mcsp_opt_msg_wrong_answer parameter to wp-admin/options-general.php.
2, via the (1) captcha_ttffolder
2, via the (1) prot
2, via the target parameter.
4, via a URL in the target parameter.
3, via unspecified vectors.
3, via unknown vectors.
2, via unknown attack vectors.
2, via the message parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id_actividad parameter
4, via a long string in the (1) second or (2) fourth argument to the DoWebLaunch method.  NOTE: some of these details are obtained from third party information.
4, via a ..\ (dot dot backslash) in the second argument to the DoWebLaunch method.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
2, via the Client-Ip parameter.
2, via the SDP Abstract attribute in an RTSP session
4, via a URL in the php121dir parameter.
4, via (1) the id parameter to index.php
0, by uploading an avatar file with an accepted Content-Type such as image/jpeg.
1, by invoking the foxcommand method.
1, by invoking the DoCmd method.
0, by invoking the insecure SaveFile method.
2, via the SDP (1) Title
2, via unknown vectors
3, via unknown vectors.
4," via """"&&"""" and other shell metacharacters in exec_sdbinfo and other unspecified commands"
4, via a packet with a large length value.
4, via a long URL argument to the InternalTuneIn method.
4, via a direct request to admin/backup_phpwebquest.php
4, via a Studio Solution (.SLN) file with a long Project line.
3, via unknown vectors.
2, via the nid parameter.
2, via the (1) id parameter to (a) Imgbig.asp
2, via the keywords parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the message parameter.
4, via a .. (dot dot) in the (1) thumbcat and (2) thumb parameters.
4, via a direct request to php_info.php
3, via unspecified vectors.
2, via the articlecat parameter.
0, via the SearchString parameter to (1) list_system.jsp
2, via the (1) status
2, via the s parameter.
4, via unspecified vectors.
2, via the sContext parameter.
4, via a site variable
3, via unspecified vectors.
0, via the day parameter in a sm_window action.
2, via the topic parameter.  NOTE: the categorie parameter might also be affected.
2, via the (1) a or (2) cid parameter.
2, via the idFamille parameter.
2, via the mail parameter.
4, via a URL in the page parameter.
4, via (1) Itemid or (2) topic arguments.
1, via crafted IRC PART message
2, via the (1) user or (2) password fields.
4, via a URL in the abs_path parameter to (1) index.php and (2) checkout.php.
2, via the id
4, via a URL in the i parameter.  NOTE: a second vector might exist via the l parameter.  NOTE: as of 20080118
2, via the selectskin parameter to an unspecified program
2, via the cat parameter.
2, via the search parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
4, via a long string.
4, via a direct request to update/update3.php
4, via a crafted web page
2, via PHP code sequences in the factor parameter
0, via the gaz parameter to mod_gazetteer_edit.php and other unspecified vectors.
4, via a malicious apt-listchanges program in the current working directory.
4, via a crafted external-body MIME type in an e-mail message
4," via """".."""" sequences in an unspecified environment variable"
4, via a large HTTP request.
4, via a crafted PeSpin packed PE binary with a modified length value.
2, via an OLE file with a crafted DocumentSummaryInformation stream.
1, by calling the 0x80002038 IOCTL with a small size value
2, via the id parameter.
0, via the id parameter to show.php.
2, via the id parameter.
2, via the id parameter.
1, via malformed RADIUS requests
2, via unspecified DNS requests.
2, via directory traversal sequences in the page parameter.
4, via a .. (dot dot) in the temp_filename parameter.
2, via the L_PREF_NAME[855] parameter.
0, via an arbitrary custom text field.
2, via unspecified vectors
4, via a long URI.
4, via a (1) .%2e (partially encoded dot dot) or (2) %2e%2e (encoded dot dot) in the URI.
1, by omitting the es_security_captcha parameter and not invoking captcha.php.
4, via a certain IPv6 packet
3, via the cognome_cerca parameter.  NOTE: some of these details are obtained from third party information.
4, via a crafted message
2, via directory traversal sequences in the language parameter.
2, via the parent_id parameter.
2, via the PATH_INFO to (1) admin.php or (2) index.php in photo/.
4, via (1) the blogid parameter to index.php
4, via a .. (dot dot) in the tabla parameter.
2, via the album parameter.
2, via the (1) ID parameter to postcomment.php and the (2) album parameter to gallery.php.
1, via crafted arguments to (1) IOCTL functions in the Firewall module or (2) SSDT hook handler functions in the Registry module.
2, via the Trace file argument.
0, by specifying the target file in the SQLIDEBUG environment variable
2, via the rurl parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the cfile parameter.
4, via a direct request to admin.php.
2, via the SelectedSession method
4, via a long MP4Prefix property.
2, via the sortby parameter to (1) forumdisplay.php or (2) a results action in search.php.
4, via (1) the mergepost parameter in a do_mergeposts action
2, by calling the SIOCGIFRTLABEL IOCTL on an interface that does not have a route label
0, via the connectionId parameter to index.php with (1) statprt/js/request or (2) dyn/js/request in the PATH_INFO.
4, via shell metacharacters in a URL argument to (1) xdg-open or (2) xdg-email.
0, via the user parameter in a showprofile action to the default URI.
4, via a .dsr file with a long (1) ConnectionName or (2) CommandName line.
4, via a .. (dot dot) in the tabla parameter
4, via a long RCPT TO command
4, via a direct request to syncml/index.php
2, via long arguments to the (1) SetPort and (2) SetIpAddress methods.
0, via the gallery parameter to default.php.
2, via an HTTP request with a long method string to port 443/tcp.
1, via unknown vectors
4," via vectors related to the """"Most active bugs"""" summary."
1, by using the base64 representation of this text during HTTP Basic Authentication.
2, via the userinfo subcomponent of a URL.
0, by using an id element such as <id>%version%</id> in HTTP Basic Authentication instead of a username and password
4, via a postscript (.ps) file containing a long Range array in a .seticcspace operator.
3, via images in a page that uses designMode frames
2, via the album parameter in a rate command.
2, via the id parameter.
4, via a URL in the MY_CONF[classRoot] parameter to (1) inc.steps.access_error.php
2, via the month parameter.
0, via a full pathname in the name parameter.
3, via the (1) name
4, via a .. (dot dot) in the file parameter.
2, via the (1) username or (2) password parameter to admin/index.php.
2, via the catid parameter in a forum_catview action.
4, via the IDFM parameter.
4, via a .. (dot dot) in the fileName parameter.
2, via the cat parameter.
4, via a URL in the loadpage parameter
0, via format string specifiers in the CNHO command.
4, via a .. (dot dot) in the id parameter in a printpreview action.
2, via the target parameter.
0, via the txt parameter to a Flash (SWF) file
2, via the lang_listofmatches parameter.
4, via a URL in the ffile parameter
5, via a long HandwriterFilename property value.  NOTE: some of these details are obtained from third party information.
1, via subtext parameter to unspecified components.
1, via crafted logbook entries.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the story parameter.
5, via a URL in the libcurlemuinc parameter.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the (1) DIR_PLUGINS parameter to (a) index.php
0, via the id parameter to (1) siteadmin/article-edit.php; and unspecified parameters to (2) submitted-edit.php
0, via directory traversal sequences in the cat parameter in a viewart action.
2, via the categoryid parameter.
4, via a .. (dot dot) in the newlang parameter to index.php.
4, via unspecified vectors.
1, via unspecified vectors involving node properties.
4, via a .. (dot dot) in the template parameter.
4, via a .. (dot dot) in the files parameter.
2, via the id parameter.
2, via the catid parameter in a newscat action.
2, via the ExecuteStr method.
4, via a deleteall action.
4, via a thread_del action.
4, via unspecified vectors.
2, via the (1) showlink parameter to jsp/DiscoveryProfiles.jsp; the (2) attributeIDs
0, via an invalid URI
4, via a long first argument to the Upgrade method.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the set parameter
4, via a QuickTime MOV file with a crafted stsc atom tag.
2, via the (1) username and (2) password parameters.  NOTE: some of these details are obtained from third party information.
2, via directory traversal sequences in the location parameter.
4, via a .. (dot dot) in the lang parameter.
2, via the id parameter.
2, via the album parameter.
4, via a long argument to the AddFile method.  NOTE: some of these details are obtained from third party information.
4, via a crafted FlashPix (.FPX) file
2, via the psearch parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
0, via the limit parameter in a search action.
2, via the PATH_INFO
0, via the pollid parameter in a results action to main_bigware_53.php.
4, via unspecified vectors.
4, via a .. (dot dot) in the page_courante parameter to the top-level URI.
4, via a URL in the template_path parameter.
2, via the filedata parameter.
2, via the (1) albumid
2, via the (1) h and (2) t parameters.
2, via the id parameter.
0, via the old_struct parameter in a deans_permalinks_migration.php action to wp-admin/options-general.php
4, via a long argument to (1) piox25
2, via the listid parameter.
2, via the listid parameter.
2, via the listid parameter.
4, via a .. (dot dot) in the file parameter to parser/parser.php
0, via the catid parameter in a display action.
0, via the aid parameter in an answer action.
5, via a URL in the spaw_root parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the objid parameter in a contact showObject action.
2, via the id parameter in a detail action.
0, via the cat parameter in a CatView action.
2, via the (1) from_date or (2) to_date parameter to spy.php.
4, via a .. (dot dot) in the uri parameter to dispatcher.php in (1) examples/dispatcher/framework/
4, via unspecified vectors.
2, via the (1) License_Plate
3, via unspecified vectors.
4, via a crafted HTTP request.
4, via a long argument located immediately after the Logout argument
2, via an argument located immediately after the Help argument
2, via the (1) password parameter to login.php
2, via the report_type parameter.
2, via the query string to index.php in (1) user/ or (2) maint/.
2, via the (1) open and (2) date_show parameters.
5, via a .. (dot dot) in the file parameter.
4, via the (1) sloginid and (2) spass parameters to (a) login.asp and (b) siteadmin/login.asp.  NOTE: some of these details are obtained from third party information.
5, via a crafted IFF ILBM file.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the (1) uri parameter to (a) yui-menu.tpl.php
4, via a large integer in the Content-Length HTTP header
4, via a long Ogg tag.
0, via a certain HTTP request that leads to a buffer overflow
4, via a URL in the argument to the Install method.  NOTE: some of these details are obtained from third party information.
2, via the PATH_INFO.
4, via a crafted GIF image
0, via the id parameter in a detail action.
2, via the rp parameter to cartView.asp and unspecified other components.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in (1) the permalink parameter in core.php
0, via the id parameter in a detail action.
2, via the id parameter in a detail action.
2, via the User-Agent HTTP header
2," via unspecified vectors related to (1) editing templates and (2) the list's """"info attribute"""" in the web administrator interface"
2, via the id parameter.
4, via a URL in the full_path_to_public_program parameter.
4, via a URL in the mosConfig_absolute_path parameter to (1) PPS/File.php
4, via a URL in the MM_GLOBALS[home] parameter to (1) acweb/admin_index.php; and (2) ask.inc.php
4, via a crafted IPSECDRV_IOCTL IOCTL request.
0, via the sort parameter in a whoisonline action.
4," via an """"update member"""" action."
3, via unspecified vectors.
0, via the aid parameter in a list action.
0, by obtaining the encrypted password from a batch file
2, via the Full Name field of a reviewer of a business item entry
2, via unspecified vectors related to the (1) swap
2, via unspecified vectors related to the (1) lchangevg
4, via unspecified vectors.
3, via unspecified vectors.
4, via a long opendir command.
4," via a plain .txt file with a """"Content-Disposition: attachment"""" and an invalid """"Content-Type: plain/text"
2, via the name parameter.
2, via directory traversal sequences in the class_name parameter.
0, via the listid parameter in a viewlist task.
2, via the (1) txtSearch parameter to operator/article/article_search_results.asp and the (2) Attach_Id parameter to operator/article/article_attachment.asp.  NOTE: for vector 2
2, via the Itemid parameter.
4, via a large number of large packets to port 5151/udp
4, via a .. (dot dot) in the page parameter.
2, via the id parameter.
4, via a .. (dot dot) in the lang parameter.
5, via a URL in the xoops_redirect parameter.
2, via the pic parameter in a showpic action.
4, via a .. (dot dot) in the (1) folder and (2) file parameters.
4, via unspecified vectors.  NOTE: it is not clear whether this issue crosses privilege boundaries.
2, via the (1) file parameter to wp-admin/admin.php
2, via the (1) gbname
4, via a long URI in a .M3U file.
4, via a 0x53 LPD command
2, via long arguments to the (1) 0x01
2, via unspecified vectors related to the ulang parameter.
4, via a long argument to the AddImage method.
4, via a long argument to the AddButton method
4, via a long argument to the AddBitmap method.
4, via a CDDB database entry containing a long album title.
4, via a crafted URL that prevents the IPv6 parsing code from setting a pointer to NULL
2, via the SaveToDisk method
5, by uploading a file with an executable extension
3, via unknown vectors.
4, via a packet with a crafted value of a certain size field
4, via unspecified vectors.
2, via unspecified vectors related to the setEncoding function.
4, via a URL in the site_path parameter to (1) config/conf-activation.php
2, via long arguments to the (1) hgs_startGame and (2) hgs_startNotify methods
4, via a URL in the path parameter to (1) indexFooter.php; and (2) DatabaseManager.php
2, via the link_id parameter.
2, via the username field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the username field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the filecatid parameter in a selectfolder action.
0, via the id parameter in a showYNews action.
4, via a .. (dot dot) in the _VIEW (view) parameter to (1) index.php
2, via the filename attribute.
4, via a .M3U file with a long URI. NOTE: this might be the same issue as CVE-2004-1569.
4, via a symlink attack on the ipp.$$.tmp temporary file.
4, via a symlink attack on (1) the /tmp/pe.tmp.$$ temporary file used by wml_contrib/wmg.cgi and (2) temporary files used by wml_backend/p3_eperl/eperl_sys.c.
4, via a crafted XLS file containing XLS HLINK opcodes
2, via the qt parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter in a detalhe action.
4, via a long chat message
4, via a YES message without a newline character
5, via a regular expression containing a character class with a large number of characters with Unicode code points greater than 255.
2, via the node_id parameter.
2, via the words parameter.
2, via the id parameter in a news action.
0, via the id parameter in a page action.
2, via the search parameter.
4, via a crafted SNMP SET request.
0, via the product_id parameter
2, via the id parameter.
2, via the newsletter parameter.
2, via the CatID parameter.
2, via the CatID parameter.
2, via the catid parameter.
2, via the lang[please_wait] parameter.
2, via the id parameter in a viewcategory action.
2, via the catid parameter in a show_category action.
2, via the catid parameter in a viewcat action.
4, via the (1) wp_footnotes_current_settings[priority]
2, via the item_id parameter.
4, via a series of long packets to TCP port 48101.
2, via the Expect HTTP header.
2, via the topicid parameter in a showtopic action.
4, via unspecified vectors.
2, via the search parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long argument to the (1) USER or (2) PASS command
4, via a .. (dot dot) in the (1) permalink or (2) section parameter to index.php
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.  NOTE: this might overlap CVE-2007-6513.
2, via the username parameter in a lost_password_go action.
4," via a """"Shatter"""" style attack."
2, via the testimonial_id parameter.
0, via the search parameter to webmin_search.cgi (aka the search section)
2, via the gid parameter.
2, via the search_term parameter in a pagetool_search action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long command.  NOTE: the USER and PASS commands for the FTP service are covered by CVE-2008-0702.
1, via crafted arguments to the printSepsWithParams
4, via a long password and (2) remote authenticated users to execute arbitrary code via a long DBPATH value.
2, via certain JavaScript code that constructs a long string and an array containing long string elements
0, via the id parameter
2, via the albums parameter.
4, via a .. (dot dot) in the (1) subpage parameter in (a) categories.inc.php
4, via a URL in the hlp parameter.
2, via the login page.
4, via a .. (dot dot) in the page parameter.
0, via the id parameter in a detail action.
4, via a long URL in a .asx file
4, via a long argument to the SetLogging method.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in a calimero_webpage action.
3, via the forumid parameter.
2, via the catid parameter in a show action.
2, via the month parameter.
4, via (1) the user_id parameter in a showuser action or (2) the category_id parameter in a viewcategorysrecipes action.
2, via the message parameter (aka the message text area)
4, via an invalid UAM field in a request to the Apple Filing Protocol (AFP) service on TCP port 548.
0, via the user_id parameter in a players action.
0, via the id parameter in an edit action.
4, via a long argument in a LICENSE command on TCP port 3114.
0, via format string specifiers in a USEP command on TCP port 3114.
2, via the (1) date parameter to artmedic_print.php and the (2) jahrneu parameter to index.php.
4," via a long filename in a """"Receive data file"""" LPD command.  NOTE: some of these details are obtained from third party information."
2, via the g_display_order cookie parameter.
2, via the (1) txtUserName and (2) txtPassword parameters.  NOTE: some of these details are obtained from third party information.
2, via the sid parameter in a view task.
2, via the hotel_name parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via strings to the shoutbox form that start with """"&#"""""
2, via the item_id parameter.
2, via long arguments to the (1) SetBgColor
2, via the login action.
4, via (1) message
4, via a .. (dot dot) in the MOIN_ID user ID in a cookie for a userform action.  NOTE: this issue can be leveraged for PHP code execution via the quicklinks parameter.
4, via (1) the view_type parameter to graph.php; (2) the filter parameter to graph_view.php; (3) the action parameter to the draw_navigation_text function in lib/functions.php
2, via an invalid local_graph_id parameter and other unspecified vectors.
2, via the (1) graph_list parameter to graph_view.php
0, via the options[disablesmilies] parameter to private.php.
4, via a do_multideletethreads action to moderation.php and (2) hijack the authentication of arbitrary users for requests that delete private messages (PM) via a delete action to private.php.
2, via the years parameter.
4, via a .. (dot dot) in the URI.
1, via short packets on TCP port 5001 with the 3
3, via the (1) category
4, via a .. (dot dot) in the language parameter.
2, via the aid parameter in an answer action.
2, via the ssid parameter.
0, via directory traversal sequences in the url parameter.
0, via the tid parameter in a user_tst_shw action.
0, via the tid parameter in a user_tst_shw action.
4, via (1) the iid parameter in a view action
2, via the albumnum parameter in a contact action.
4, via a URL in the sys_conf[path][real] parameter to (1) modules\class\Table.php; (2) db_admins.php
4, via a URL in the name parameter.
3, by uploading a file with an executable extension from the event page
4, via a symlink attack on the wyrd-tmp.[USERID] temporary file.
3, via meta tags.
3, via title contents.
2, via the id parameter.
4, via (1) the kid parameter to (a) mod/dl.php or (b) mod/links.php
4, via a .. (dot dot) in the action parameter.
4, via a .. (dot dot) in the upload_filename parameter.
0, via the id parameter in an edit task.
0, via the pid parameter in an order task.
0, via the filecatid parameter in a selectfolder action.
4, via a .. (dot dot) in the lang cookie to (1) comment.php
5, via a .. (dot dot) in the page parameter.
4, via $_SERVER['PHP_INFO'].  NOTE: the vendor disputes this issue in a followup
2, via the questid parameter in an expand_question action.
4, via a .. (dot dot) in the page parameter.
2, via unknown attack vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the cid parameter.
4, via (1) attributes such as style and onmouseover in (a) forum post or (b) mail; or (2) the website field of the profile.
0, via the id parameter in a detail task.
4, via a malformed dpap: URI
2, via the (1) user_id or (2) category_id parameter.  NOTE: this might overlap CVE-2008-0754.
0, via the surano parameter in a viewayat action.
0, via the id parameter in a detail action.
2, via the area parameter.
2, via unspecified vectors that trigger a NULL pointer dereference in the vuid3ps2 module
0, via the s parameter
2, via the (1) error and (2) go parameters to the login page.
2, via the id parameter.
4, via a .. (dot dot) in the username parameter.
2, via the id parameter.
2, via the cat_id parameter.
4, via a direct request to admin.asp.
2, via the user_id parameter.
2, via the person parameter.
2, via the oid parameter.
2, via the articleid parameter.
2, via the cat parameter in a selectcat function
2, via the (1) id parameter to whoisonline.php
3, via the (1) username parameter to inscription.php
4, via a SSH2_MSG_NEWKEYS packet to TCP port 22
0, via the id parameter to index.php.  NOTE: this issue might be site-specific.  If so
2, via the rid parameter in a showrep action to index.php.
2, via the catid parameter to index.php.
0, via the id parameter to (1) iframe.php and (2) print.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sortOrder parameter to the PMList page.
4, via unspecified vectors.
1, via unspecified vectors related to decoding of uuencoded input
4, via an h_SearchString sub-parameter in the PreSetFields parameter of an EditDocument action.
3, via unknown vectors.
2, via an invalid action URI
2, via the name parameter.
4, via unknown vectors.
4," via a """"framework defined request parameter"""" when using WebLogic Workshop or Apache Beehive NetUI framework with page flows."
4, via a (1) long password in an Authorization header to the HTTP service or a (2) large packet to the SMPP service.
5, via a STYLE attribute of an element in the Subject field of an e-mail message.
0, via the cid parameter in an Adsview action.
2, via the cid parameter in a view action.
4," via """"invalid data."""""
2, via the (1) frontend
2, via the cid parameter in a view action.
2, via the cid parameter in a viewlink action.
2, via the page_id parameter.
2, via the okulid parameter in an okullar action.
1, via crafted UDP Browse packets to the cupsd port (631/udp)
4, via a symlink attack on temporary files related to SSL certificate handling.
4, via a crafted (1) bitmap (BMP) or (2) GIF file
1, via crafted request headers.
1, via URLs that are not properly handled by the Unexpected Exception Page.
5, via unspecified samples.  NOTE: this might be the same issue as CVE-2007-2694.
4, via a crafted URL.
4, via a .. (dot dot) in the file parameter.
2, via the artid parameter in a viewarticle operation.
2, via the cid parameter.
2, via the c parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the c parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the productid parameter.
1, via crafted BBCodes in an unspecified context.
4, via unspecified vectors.
0, via the cat_id parameter in a viewcategory action to index.php.
0, via the id parameter to getfile.php
2, via the dest parameter.
0, via the portname parameter
2, via the id parameter.
0, via the cid parameter in a viewdownload action to modules.php.
2, via an HTTP request with (1) multiple Connection headers or (2) a Connection header with multiple comma-separated values.  NOTE: this might be similar to CVE-2008-1777.
4, via a symlink attack on the temporaire temporary file.  NOTE: some of these details are obtained from third party information.
4, via shell metacharacters in the range parameter.
1, via unspecified vectors related to kcpc_unbind and kcpc_restore.
0, via the id_catg parameter in a ViewCatg action.
4, via a long argument to the ExecuteRequest method.
0, via the cid parameter in a view action.
2, via the id parameter in a print action
2, via unspecified vectors
4, via (1) the photo parameter to index.php
4, via an event.
2, via the GrdBk parameter.
2, via the (1) FC parameter to Comments.asp
4, via a version field containing zero.
0, via format string specifiers in an IP address field.
4, via a .. (dot dot) in the recipient field.
3, by triggering a large number of open file descriptors.
4, via a malformed connection request packet.
0, via a full pathname in the first argument and the content in the second argument
4, via a .exe filename in the argument
4, via a long CacheFolder property value.
1, via unspecified initialization parameters.
4, via unspecified vectors.
4, via a crafted request to the RPC interface.
4, via a crafted message to the RPC interface.
4, via (1) the url or type parameter to docs/examples/redirect.spy; (2) the x parameter to docs/examples/handlervalidate.spy; (3) the name parameter to spyce/examples/request.spy; (4) the Name parameter to spyce/examples/getpost.spy; (5) the mytextarea parameter
4, via a URL in the url parameter.
4, via a direct request for spyce/examples/automaton.spy
5, via a crafted GIF file whose logical screen height and width are different than the actual height and width.
1, via crafted arguments that trigger a buffer over-read.
0, via format string specifiers in the local hostname.
2, via an archive with a crafted length value.
4, via a crafted PostScript Printer Description (PPD) file that is not properly handled when querying a network printer.
1, via crafted distributed objects.
4, via a crafted Universal Disc Format (UDF) disk image
4," via """".."""" sequences in file attachments."
4, via a crafted javascript: URL.
4, via a crafted AFP request
4, via a crafted movie.
4, via a crafted movie.
3, via an MP4A movie with a malformed Channel Compositor (aka chan) atom.
4, via a crafted PICT image file
4, via a crafted PICT image file with Kodak encoding
4, via a crafted movie with run length encoding.
5, via a crafted VR movie with an obji atom of zero size.
4, via a crafted PICT image file.
4, via a crafted document file
2, via an invalid length argument
5, via a crafted PDF document
4, via an (1) Automator
5, via a crafted help:topic URL that triggers a buffer overflow.
2, via the FILELIST parameter to an arbitrary component
4, via a URL in the extmanager_install parameter.
2, via the QID parameter.
2, via the domain parameter.
4, via a .. (dot dot) in the content parameter.
5, via a URL in the menu parameter.
4, via a long argument to the UploadLogs method
2, via the resource parameter.
4, via a URL in the op[footer_body] parameter.
3, via unspecified vectors.
2, via the dir parameter.
2, via the sbcat_id parameter.
4, via a URL in the content parameter.
4, via a large integer in the Content-Length HTTP header
0, via the artid parameter in a (1) viewarticle or (2) printpage action to modules.php.
5, via a long argv[0] string when executing (1) pbrun
1, via malformed IPv6 routing headers.
1, via crafted TCP packets.  NOTE: some of these details are obtained from third party information.
4, via a URL in the libpath parameter.
2, via the text parameter.
2, via the (1) text parameter to (a) warning.php
4, via a crafted packet with two CRLF sequences.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sortby parameter.
2, via the q parameter.
2, via the (1) letter or (2) sortby parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the _SESSION[path] parameter to (1) ezmlm.php and (2) tools/update_translations.php.
4, via a URL in the site_path parameter to (1) Vert/index.php
4, via a URL in the CONFIG[gameroot] parameter to (1) server_request.php and (2) qlib/smarty.inc.php.
4, via a malformed packet.
4, via a malformed packet.
3, via unspecified vectors.
4, via a URL in the CFG[PREPEND_FILE] parameter.
0, via the keywords parameter in a search command.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the search_query parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the catid parameter in a view action.
4, by tricking a user into typing the characters of the target filename into a file input.
0, via images that contain custom comments
1, via crafted attribute values in an XML document
4, via a crafted Word file
4, via a pattern_x parameter in a search_count_equals action
5, via a crafted .xcf file that triggers an out-of-bounds heap write
5, via a crafted .pcx file that triggers incorrect memory allocation for the scanline array
4, via (1) certain input processed by formatter/text_gedit.py (aka the gui editor formatter); (2) a page name
4, via a crafted Upack PE file.
4, via a .blend file that contains a crafted Radiance RGBE image.
5, via a crafted PDF file
4, via a crafted SMB response.
2, via an HTTP request that contains (1) no Referer header
4, via a long DESCRIPTION property in an iCalendar attachment
4, via a crafted ASF header.  NOTE: this issue leads to a crash when an attack uses the CVE-2006-1664 exploit code
2, via an unspecified sequence of system calls or commands.
1, by setting the BaseURL property and invoking the UpdateEngine method. NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the img parameter.
2, via unspecified vectors related to HTML code generation.
2, via the session_vars cookie.
0, via the categ parameter to index.php.  NOTE: it was later reported that this also affects Koobi CMS 4.2.4
5, via a URL in the CarpPath parameter to (1) files/carprss.php and (2) files/amazon-bestsellers.php.
4, via a URL in the absoluteurl parameter to (1) components/xmlparser/loadparser.php; (2) admin.php
4, via a .. (dot dot) in the (1) theme_path parameter to core/themes.php and the (2) filename parameter to download.php.
4, via a URL in the pageURL parameter.
0, via format string specifiers in the user name
4, via a URL in the page parameter.
2, via the msg parameter.  NOTE: some of these details are obtained from third party information.
4, via a SVRCONN (MQ client) channel.
0, via titles in content edit forms.
4, via a malicious gksu program
4, via shell metacharacters in a certain string to TCP port 5679.
0, via the id parameter in a detail action to index.php.
4, via a certain ZERO_MEM DLMFENC_IOCTL request to \\.\DLKPFSD_Device
4, via a certain DLKFDISK_IOCTL request to \\.\DLKFDisk_Control that overwrites a data structure associated with a mounted pseudo-filesystem
4," via a series of DLMFENC_IOCTL requests to \\.\DLKPFSD_Device that allocate """"link list structures."""""
4, via a series of PPTP sessions
4, via a series of PPTP sessions
1, via crafted (1) UDP port 2067 or (2) IP protocol 91 packets.
1, via malformed packets
2, via unknown vectors
4, via a Matroska file with invalid frame sizes.
2, via the albumID parameter.
0, via the userid parameter in a profile action.
2, via the mod_project_id parameter in a project_detail action.
4, via (1) a forced SQL error message or (2) old_value and new_value database fields in task summaries
4, via a long Squid proxy server User-Agent header.  NOTE: some of these details are obtained from third party information.
2, via the User-Agent header
4," via a """"..\"""" (dot dot backslash) or """"../"""" (dot dot forward slash) in the GET command."
5, via a URL in the page parameter to (1) minimal/wiki.php and (2) simplest/wiki.php.
4," via a URL in the phpbb_root_path parameter to (1) 123flashchat.php and (2) phpbb_login_chat.php.  NOTE: CVE disputes this issue because $phpbb_root_path is explicitly set to """"./"""" in both programs."
2, via the msg parameter.
2, via the username parameter.
2, via the username parameter to aspAdmin/deleteUser.asp
2, via the sideblock4 parameter.
2, via the id parameter.
4, via a .. (dot dot) in the page parameter
2, via the (1) name and (2) title parameters.  NOTE: some of these details are obtained from third party information.
2, via the delivery_mode parameter.
4, via a direct request for remediate.cgi without certain parameters
3, via unspecified vectors.
2, via unspecified parameters to (1) livehelp.php
2, via an untrusted application
1, via unspecified vectors related to JavaScript and Java APIs.
4, via a crafted JNLP file.
4, via a crafted .MDB file
4, via unknown vectors.
2, via unspecified vectors related to the (1) Help and (2) Version windows.
2, via the user parameter.
2, via the sid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted .c file
4, via (1) the type parameter in calendar.php and (2) the category parameter in calendar_search.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via the scriptlang parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Title form field when setting an appointment.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via shell metacharacters in the PROJECTNUM parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the kid parameter in a hadisgoster action to modules.php.
2, via the roomid parameter in an index action to modules.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via an absolute pathname in the RETR (get) command.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the returnTo parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the list parameter in an import action.
2, via the editor parameter
2," via an unspecified manipulation that attaches a .jsp file to an """"entry page."""""
2," via an HTTP request with invalid POST data and a """"Connection: Keep-Alive"""" header."
2, by entering characters at the enable prompt
2," via the """"Call a number"""" field.  NOTE: this might overlap CVE-2007-3440."
4," via a """"'); (double quote"
3, via unspecified vectors.
0, by reading the pwd field in the HTML source.
0, via the var:category parameter
3, via unspecified vectors.
2, via the PingIPAddr parameter.
2, via the rf parameter.
0, via the WWWAccessInterface parameter to Forms/RemMagWWW_1 or (2) change the IP whitelisting timeout via the StdioTimout parameter to Forms/rpSysAdmin_1.
4, via a long username and password to the FTP interface.
4, via (1) a long username or (2) an HTTP header with a large name and an empty value.
2, via an HTTP request to basehelp_English.htm with a large integer in the Content-Length field.
2, via the (1) cat parameter to showad.php and the (2) ad parameter to pfriendly.php.
0, via the path parameter to (1) popup.php
4, via a malicious program in the man directory.
2, via long arguments to the (1) FETCH
4, via (1) SEARCH and (2) APPEND commands without required arguments
2, via an invalid Accept-Charset header
4, via a long FilePath parameter.
2, via the URI
3, via unknown vectors.
1, by reading user cookies.
2, via the msg_id parameter.
2, via the file parameter to (1) watermark.php and (2) catalog_watermark.php in core/.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the cat parameter in a selectcat action.
2, via the cat parameter in a viewcat action to modules.php.
3, via the searchText parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the filePath.0 parameter in a save action
0, via a full pathname in the filePath.0 parameter.
4, via a (1) server-DiffFile or (2) server-ReleaseFile command with a large integer value
0, via a missing parameter to the (1) dm-FaultFile
2, via the (1) inviteemail parameter in an invite action to wp-admin/users.php and the (2) to parameter in a sent action to wp-admin/invites.php.
2, via the id parameter.
0, via the searchterms parameter to (1) searchresults.cfm
4, via a long argument to the SetUninstallName method.
0, via the id_catg parameter in a ViewCatg action to modules.php.
5, by uploading a file named (1) '|' (pipe)
2, via the (1) post_id
2, via the id parameter in an edit action to modules.php.
0, via the cat parameter to modules.php.
2, via the id parameter.
3, via blocked I/O message queues.
2, via the callback parameter in an API call for JavaScript Object Notation (JSON) formatted results.
4, via (1) a long request to FxIAList on TCP port 6162
4, via a query string that specifies the -b option
2, via the ThreadDelete action.
4, via a .. (dot dot) in the (1) page_id and (2) language parameters.  NOTE: this might be the same issue as CVE-2008-1325.
4, via a .. (dot dot) in the (1) page_id and (2) language parameters.  NOTE: this might be the same issue as CVE-2008-1324.
2, via the query parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via logging messages that are not properly handled by (1) the ast_verbose logging API call
0, via the categ parameter in a links action to index.php
2, via an invalid Version field or (2) a denial of service (CPU consumption and daemon termination) via an invalid or partial message.
4, via a server-DiffFile command with an integer value within a certain range
2, via the CategoryId parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) _q and (2) lucene_index_field_value parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via unknown vectors.
2, via the (1) year parameter in a dayview action to plugins/calendar/calendar_backend.php and the (2) page parameter to ajaxp_backend.php.
2, via the day parameter in a dayview action.
0, via the catid parameter in a category action.
4, via (1) the PATH_INFO or (2) the q parameter in an about action to the help system.
2, via the chart parameter to modules.php.
2, via the cid parameter.
0, via the k parameter in an article action.
0, via the tid parameter to printpage.php
4, via a .. (dot dot) in the _SearchTemplate parameter during a Title search.
3, via multiple vfs.file.cksum commands with a special device node such as /dev/urandom or /dev/zero.
2, via the Issue_ID parameter.
2, via the path parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a FETCH command with a long BODY.
3, via nested BBCodes
2, via unknown vectors to unspecified CGI scripts
4, via an ftp:// URL that contains a URL-encoded CRLF (%0D%0A) before the FTP command
5, via a URL in the page parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via a full pathname in the d_root parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted file that triggers a buffer over-read
4, via a GIF file with a large code_size value
0, via requests with crafted length values that specify an arbitrary number of bytes to be swapped on the heap
1, via crafted values for a Pixmap width and height.
4, via a printf format parameter with a large width specifier
2, via the Referer HTTP header.
4, via (1) unspecified path fields or (2) the database host field.  NOTE: the timing window for exploitation of this issue might be limited.
4, via a crafted ARJ archive
4, via a malformed CHM file
2, via the X-Forwarded-For field (HTTP_X_FORWARDED_FOR environment variable) in an HTTP header.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via a """"..\"""" (dot dot backslash) or """"../"""" (dot dot slash) in the URI."
0, via format string specifiers in the URI
4, via a UDP packet to the SNMP Trap Service (MgWTrap3.exe) or (2) denial of service (device freeze or memory consumption) via a malformed request to the Net Inspector Server (niengine).
4, via a request with a long filename.
2, via the kid parameter.
4, via a URL in the admindir parameter.
0, via the lid parameter in an ImprAnn action.
2, via the roomid parameter.
2, via the id parameter in a banner_out action.
2, via directory traversal sequences in the theme parameter to (1) index.php
0, via directory traversal sequences to the TFTP service.
2, via an incomplete TFTP request
2, via the query parameter.
0, via the tab parameter to (1) index.php
4," via """"../..//"""" (modified dot dot) sequences in the tab parameter."
4, via a URL in the include_path parameter to (1) converter.inc.php
4, via a symlink attack on the axyl.conf temporary file.
4, via a crafted OGG file
4, via a crafted OGG file with a large virtual space for its codebook
0, via the id parameter in a kate action.
2, via the albumid parameter.
0, via the mailingid parameter in a mailing view action to index.php.
4, via a text attribute value for a product.
4, via a NEW_CLIENT packet without a nickname.
2, via the CatId parameter.
2, via the searchText parameter
4, via a Synchronized Accessible Media Interchange (SAMI) file with crafted parameters for a Class Name variable
2, via the q parameter in a products search action.  NOTE: it was also reported that 1.3.5-SP2 trial edition is also affected.
2, via the id parameter in a detail action to index.php.
0, via the id parameter in a detail action to index.php.
0, via a long filename argument on the command line.  NOTE: it is unclear whether there are common handler configurations in which this argument is controlled by an attacker.
2, via the artid parameter in a viewarticle action.
2, via an invalid or prohibited request to a web server protected by SecureSphere
2, via the (1) query parameter to (a) search.php; (2) gusername and (3) gpassword parameters to (b) login.php; and the (4) username and (5) password parameters to (c) gadmin/index.php in a signin action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter in a detail action to index.php
4, via a URL in the bn_dir_default parameter to (1) add_user.php
4, via shell metacharacters in a URI
4, via UTF-7 encoded input
4," via a """"Shatter"""" style attack."
2, via unspecified vectors related to received trackbacks.
2, via the (1) busca and (2) link parameters.
3, by opening a FTP passive mode connection
2, via the directory parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a malformed RPC request.
2, via the board parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) a crafted .FLV file
0, via the get_host parameter to moderate.php.
4, via (1) ftp/index.php
4, via a long filename.
4, via a crafted MP4 RDRF box that triggers a heap-based buffer overflow
4, via a long string to TCP port 623.
4, via a .. (dot dot) in the skin parameter to (1) index.php and (2) install.php.  NOTE: it was later reported that vector 1 is also present in 2.0.
4, via a .. (dot dot) in the language parameter.
0, via the id parameter in a user details action
2, via long arguments to the LSUB command.
4, via a long first argument to the LIST command.
2, via the query string.
2, via the PHPSESSID parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via (1) the name of a node object
2, via the Lang parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the cpage parameter to index.php.
2, via the id parameter.
2, via the query parameter.
2, via the (1) searchfilter or (2) listSearchFilter parameter.
4, via a URL in the PathToComment parameter for (1) classes/class_admin.php and (2) classes/class_comments.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the phpEx parameter. NOTE: some of these details are obtained from third party information.
1, via SOAP requests
2, via unspecified vectors related to workqueues.
4, via an IOCTL 0x800520e8 call.
1, via crafted duplicate keys that are imported from key servers
4, via unknown vectors.
4, via a .. (dot dot) in the (1) settings[footer] parameter to footer.inc.php and the (2) settings[header] parameter to header.inc.php.
2, via the op_id parameter in a view action to index.php.
2, via the amessage parameter.  NOTE: some of these details are obtained from third party information.
4, via a ..  (dot dot) in the page parameter.  NOTE: in some environments
2, via the searchText parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. Fixed in EventLog Analyzer 10.0 Build 10000.
0, via the p parameter to modules.php for the Forums module.
2, via the id parameter in a detail action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the t parameter.
2, via an XML document containing a setRequest command.
4, via a URL in the URL parameter.
2, via the (1) UserName parameter to loginproc.asp and the (2) usr parameter to Login.asp.
2, via the (1) GrdBk parameter to GradebookOptions.asp and the (2) SchlCode variable to loginproc.asp
4, via (1) the _a parameter in a searchStr action and the (2) Submit parameter.
2, via the cid parameter.
4, via a .. (dot dot) in the to parameter.
4, via a .. (dot dot) in the _bFileToInclude parameter.
2, via the (1) url parameter to (a) system/actionspages/_b/contentFiles/gBImageViewer.php
4, via a direct request to system/actionspages/_b/contentFiles/gBphpInfo.php
4, via a large streamid SDP parameter.  NOTE: this issue has been referred to as an integer overflow.
0, via the id parameter in a view action to index.php.
2, via the (1) domain parameter to lookup_result.asp
5, via a malformed packet to the (1) X.509sat or (2) Roofnet dissectors.  NOTE: Vector 2 might also lead to a hang.
4, via a malformed packet
4, via a malformed packet.
4," via a """"..\"""" (dot dot backslash) in the filename."
4, via a .. (dot dot) in the phpEx parameter.
2, via the query parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a filename containing shell metacharacters that are not properly sanitized when executing the rar
4, via a symlink attack on temporary files that are used when creating a socket.
2, by creating the LOCKPATH directory
0, via directory traversal sequences in the URI.
4, via a crafted (1) BMP or (2) GIF image
4, via a crafted JPEG2000 image that triggers a heap-based buffer overflow.
4, via a crafted embedded font in a PDF document
4, via a crafted movie file
0, by reading the error message produced upon access to a nonexistent blog.
1, via crafted packed scanlines in PixData structures in a PICT image.
4, via a crafted AAC-encoded file that triggers memory corruption.
4, via a crafted PICT image
1, via crafted Indeo video codec content in a movie file.
4, via a crafted TIFF image.
2, via Unicode ideographic spaces in the URL.
2," via unknown calls that trigger """"undefined behavior."""""
4, via unspecified vectors.
5, via a long download URL
2, via unspecified vectors in the email form.
4, via unspecified vectors.
4, via a .. (dot dot) in the file parameter to manager/getImportFileRedirect.jsp
2, via the haber parameter.
0, via the ID parameter
4, via a URL in the (1) website parameter to (a) forum.php
4, via a long mode field in a read or write request.
0, via a long filename in a read or write request.
4, via (1) a race condition that involves multiple symlink changes to point a file owned by a different user
2, via certain traffic
4, via a ... (dot dot dot) in the filename.
2, via the id parameter to (1) show.php
4, via a URL in the id parameter to (1) show.php
2, via the cid parameter.
4, via a .. (dot dot) in the xPage parameter.
2, via an unspecified cookie. NOTE: this might overlap CVE-2008-0159.
4, via a modified internal UID.
5, via a long command argument. NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
2, via the language parameter to (1) page/showcirculation.php; and (2) edittemplate_step2.php
0, via the UserId parameter
2, via the (1) listid parameter to pages/editmailinglist_step1.php
2, via the image parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the tmp_theme parameter.  NOTE: 5.1.1 is also reportedly affected.
2, via the f parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the articleId parameter in a show action
0, via the view_id parameter in an ansicht action.
2, via the catID parameter.
2, via directory traversal sequences in the action parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
2, via the category parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the filename parameter.
2, via the dl_id parameter.
4, via an e-mail message with a malformed value of the Content-Type header and unspecified other headers.  NOTE: some of these details are obtained from third party information.
0, via the read parameter in an edp_pupublish action.
2, via the read parameter in an edp_Help_Internal_News action.
4, via a .. (dot dot) in the lang parameter.
0, via directory traversal sequences in the q parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, by using the Flash navigateToURL function to send a SOAP message to a UPnP control point
1, by modifying the .ssh/rc session file.
2, via format strings in a password.
4, via unknown vectors.
4, via a crafted encoded authentication request.
4, via unspecified vectors.
3, via unknown vectors.
4, via a crafted LDAP query that triggers the overflow during translation to a regular expression.
1, via crafted images that trigger heap-based buffer overflows.  NOTE: this issue is due to an incomplete fix for CVE-2007-4965.
4, via a direct request to maintenance/index.php
5, via a URL in the base_dir parameter.
4, via a long request header in an HTTP request to TCP port 801.  NOTE: some of these details are obtained from third party information.
4, via a long URI in HTTP requests to TCP port 801.  NOTE: some of these details are obtained from third party information.
4, via a large packet to UDP port 54.  NOTE: some of these details are obtained from third party information.
2, via the album parameter to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the PostID parameter.
4, via a crafted Macintosh iPrint client request.
0, via a full pathname in the file parameter.  NOTE: some of these details are obtained from third party information.
0, via format string specifiers in the (1) user name
4, via a large value in a certain 32-bit field.
4," via a packet with an 0x11 value in a certain """"type"""" field."
4," via a Studio Solution (.SLN) file with a long malformed Project line beginning with a 'Project(""""{}"""") =' sequence"
4, via a modified PATH environment variable.
4, via a URL in the mx_root_path parameter.
4, via a long string to IMAP port (143/tcp).
2, via the (1) page and (2) form parameters
5, via invalid (1) page and (2) form parameters
4, via a negative signed integer
4, via a long remoteFile parameter.
1, by triggering large outgoing queues without reading messages.
2, via the matchid parameter in a dupa action.
2, via the gid parameter to index.php.
3, by creating a file with a one-letter lowercase alphabetic name
2, via an invalid pointer to the CLIENT_ID structure in a call to the NtOpenProcess hooked System Service Descriptor Table (SSDT) function.
2, via an invalid pointer to the _CLIENT_ID structure in a call to the NtOpenProcess hooked System Service Descriptor Table (SSDT) function.
1, via crafted ftyp atoms in a movie file
2," via an unspecified """"stress test"
4, via a TCP port scan
4, via a series of malformed TCP packets
4, via a series of malformed TCP packets
4, via a SIP JOIN message with a malformed header
1, via TCP segments with an unspecified combination of TCP flags.
0, via the id parameter to the /category URI.
4, via a .. (dot dot) in the (1) language and (2) lang parameters.
2, via the searchfilter parameter
2, via directory traversal sequences in the file parameter.
3, via unspecified vectors.
2, via the VIEW parameter.
2, via the C_ID parameter to index.php.
2, via the cat parameter to index.php
4, via a URL in the incl_page parameter in (1) struct_admin.php
5, via a crafted newsfeed source
4, via a crafted scaled image pattern in an HTML CANVAS element
2, via the id_art parameter.
2," via an XSL style sheet file with a long XSLT """"transformation match"""" condition that triggers a large number of steps."
2, via the (1) MP4 demuxer
4, via a crafted Cinepak file that triggers an out-of-bounds array access and memory corruption.
0, via a URL parameter containing an encoded LF followed by a malicious target line.
2, via an HTTP POST request with a large Content-Length.
4, via a URL in the root parameter.
2, via the id parameter.
2, via the displayName parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the PATH_TO_CODE parameter.
4, via a long HTTP HEAD request to TCP port 8028.
4, via unknown vectors.
2, via the file parameter.
4, via a modified UserID parameter in a direct request to siteadmin/DeleteUser.php.
4, via a direct request to (1) addu.php
4, via a modified s parameter.
2, via the (1) text and (2) ul parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cat parameter.  NOTE: some of these details are obtained from third party information.
2, via the forum parameter.
4," via a crafted logo file in the """"Manage Settings"""" functionality.  NOTE: remote exploitation is facilitated by a separate SQL injection vulnerability."
2, via the ladderid parameter.
4, via unspecified vectors.
4, via a crafted URL.
4, via a .. (dot dot) in the cal[lng] parameter.
5, via a .. (dot dot) in the img parameter.
3, via the (1) choice
4, via a Remote Desktop Protocol (RDP) request with a small length field.
4, via a Remote Desktop Protocol (RDP) redirect request with modified length fields.
2, via unknown parameters that trigger a heap-based overflow.  NOTE: the role of the channel_process function was not specified by the original researcher.
4, via a crafted set of 16-bit length values within the Private dictionary table in a Printer Font Binary (PFB) file
2," via an invalid """"number of axes"""" field in a Printer Font Binary (PFB) file"
4, via (1) a crafted table in a Printer Font Binary (PFB) file or (2) a crafted SHC instruction in a TrueType Font (TTF) file
4, via a modified PATH environment variable.
4, via a symlink attack on the csvers temporary file.
4, via a crafted WWPack compressed PE binary.
0, via the cat parameter to index.php.
2, via the (1) day
2, via the Content-Type HTTP response header provided by the HTTP server that is used for an upload.
2, via an input field associated with the session_id variable
2, via the age_to parameter in a browsebyCat action.
2, via the kind parameter.
2, via the id parameter.
2, via the error parameter in a show_error action to index.php.
4, via a .. (dot dot) in the dir parameter in a show_error action.
3, via the (1) login
4, via a long HTTP (1) GET
2, via directory traversal sequences in the (1) dirn and (2) fname parameters.
2, via the ID parameter.
0, via the id parameter in a show action.
2, via the default parameter.
2, via the id parameter.
2, via the project parameter.
4, via a third-party program that calls this function with a long item argument.  NOTE: the vendor does not provide any program that is capable of causing this overflow.
0, via the categorie parameter to index.php
0, via the id parameter in a detail action to index.php.  NOTE: this issue might be site-specific.
2, via the id parameter.
0, via the cat_id parameter in a list action.
3, via the arcmonth parameter.  NOTE: some of these details are obtained from third party information.
2, via the reed parameter.
2, via the photo_id parameter.
4, via a URL in the _CONFIG[files][functions_page] parameter.
0, via the -a parameter
4, via a long NSF title.
4, via a long subtitle in an SSA file.  NOTE: this issue is due to an incomplete fix for CVE-2007-6681.
2, via directory traversal sequences in the wiki parameter
4, via a .. (dot dot) in the SkinPath parameter and a .zip URL in the HttpSkin parameter.  NOTE: this can be leveraged for code execution by writing to a Startup folder.
0, via multiple vectors that cause a negative size value to be provided to the PyString_FromStringAndSize function
2, via the Picture Source (aka picture object source) field in the Rich Text Editor.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the msg parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the ilang parameter.
2, via the (1) ID parameter to events.asp
2, via the (1) Redirect parameter to login.asp and the (2) OrderBy parameter to member_send.asp.
4, via a modified ID field.
4, via a symlink attack on the gambas-apt.lock temporary file.
0, via the year parameter in a view.year action.
2, via the (1) id_product
4, via a .. (dot dot) in (1) the language parameter in a language action to the default URI
2, via the ID parameter.
4, via a malformed opcode 0x52 request to TCP port 3050. NOTE: this might overlap CVE-2007-5243 or CVE-2007-5244.
4, via a long subtitle in a .SRT file.
4, via a long URI in a request to TCP port 6080. NOTE: some of these details are obtained from third party information.
2, via the id parameter.
1, via text fields intended for the (1) address and (2) order information
4, via the (1) class parameter to (a) methodTable.php
2, via the r parameter.
4, via a crafted personal status message.
2, via the category_ID parameter.
2, via unknown vectors
4, via a crafted regular expression containing UTF8 characters.  NOTE: this issue might only be present on certain operating systems.
2, via an image based fill in which the number of input channels is different from the number of output channels.
4, via a crafted IOCTL request.
2, via the SaveToFile method.  NOTE: the victim must explicitly allow the code to run.
2, via the id parameter.
2, via the idFiliale parameter.
2, via the cat_id parameter in an add action.  NOTE: this issue might be site-specific.
2, via the (1) id and (2) topic parameters to (a) philboard_reply.asp
1, via unspecified vectors in the form field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a PDF file with (1) a malformed ExtGState resource containing a /Font resource
4, via a certain integer value in the Random field in an encrypted Client Hello message within a TLS record with an invalid Record Length
2, via the query parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the user_id parameter.
2, via the id parameter. information.
2, via the wiki parameter.
2, via the nb parameter in voir mode.
3, by uploading a file with a .php extension.
4, via a crafted SIP message.  NOTE: some of these details are obtained from third party information.
2, via the search parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the AMG_id parameter in a comments action.
4, via a .. (dot dot) in the (1) class parameter to include/functions.inc.php and the (2) file parameter to include/common.inc.php.
4, via a URL in the location parameter.
4, via a long copyright field in an NSF header in an NES Sound file
2, via the SleUserName parameter.
0, via the FUNID parameter to (1) CFLookup.asp and (2) CznCommon/CznCustomContainer.asp.
2, via the (1) LookUPId and (2) CbFun parameters to (a) CFLookUP.asp; (3) TitleParms
4, via a long subtitle file.
2, via the ID_loc parameter.
3, via node titles related to unspecified product features
4, via a packet with a large integer value used in an increment to TCP port 41523
2, via the ss_id parameter.
2, via the beg parameter in a members action to index.php.
4, via a malformed packet to TCP port 1882.
0, via the mt parameter
2, via the jours parameter.
2, via the search parameter.
3, by uploading a file with an executable extension
2, via the (1) cID parameter to default.asp and the (2) username parameter to main_login2.asp.
2, via the field parameter.
4, via a large number of connections.
1," by placing many """"invisible"""" characters in the userinfo subcomponent of the authority component of the URL (aka the user field)"
1, via JavaScript code that calls document.write in an infinite loop.
4, via a file:///%E2 link that triggers an out-of-bounds access
2," via the """"Restart Cable Modem"""" value in the BUTTON_INPUT parameter to configdata.html"
4, via a long nickname in an MSN protocol message.
4, via a crafted QuickTime media file.  NOTE: as of 20080429
2, via the eid parameter in an event action.
2, via JavaScript code that calls document.write in an infinite loop.
0, via a full pathname in the argument to the (1) CompactSave and (2) SaveSession method in one control
4, via a URL in the lang parameter to the default URI under install/.  NOTE: this can also be leveraged to include and execute arbitrary local files via directory traversal sequences.
4, via a .. (dot dot) in the operation parameter to the default URI under install/.
4, via a long comment field in a ZOO archive.
2, via the (1) toid parameter to send-private-message.asp and the (2) redirect parameter to admin/impersonate.asp.  NOTE: vector 2 requires authentication.
2, via the (1) invisible and (2) timeoffset parameters to profile/controlpanel.asp and the (3) attachmentid parameter to forums/attach-file.asp.
2, via the query string.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted LIST command
0, by sending multiple crafted RETR commands.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the poll_id parameter in a poll action.
2, via the msg parameter to (1) login.php
2, via the (1) orderby and (2) sort parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a Basic Authentication string with a long (1) username or (2) password.
4, via a full path in the URL parameter to modules/Feeds/Feed.php
2, via the user parameter.
0, via the id parameter to (1) hpz/profil.asp and (2) hpz/prodetail.asp.
2, via the sayfa parameter.
2, via multiple crafted APOP commands for a known POP3 account
4, via a URL in the goto parameter.
4, via unknown vectors.
4, via a crafted Transport Layer Security (TLS) packet to the device interface.
4, via a port scan against TCP port 443 on the device.
3, via unknown vectors.
1, via malformed network traffic to TCP port 2748.
2, via the category parameter.
3, via the catagorie parameter.
0, via the whatus parameter in a searchusers2 action.  NOTE: it was later reported that other versions before 3.0.1 are also vulnerable.
2, via the whatus parameter in a searchusers2 action.  NOTE: it was later reported that other versions before 3.0.1 are also vulnerable.
3, via unspecified vectors.
4, via a long argument in a mailto: URI.
4, via repeated
4, via requests to cpanel/whm/webmail and other unspecified vectors.
0, via the l parameter
5, via a .. (dot dot) in the l parameter.
2, via the picfile parameter.
4, via a .. (dot dot) in the style parameter.
2, via unspecified vectors related to the AWT Event Queue.
4, via a .cdf file with crafted length tags.
4, via a .. (dot dot) in the module parameter.
2, via the module parameter
0, via the topic_id parameter in a listarticles action.
4, via a crafted SIP message.
5, via a crafted jnlp file that modifies the (1) java.home
2, via the id parameter in the news module to admin.php.
4, via a crafted SCTP packet.
4, via a crafted SCTP packet.
2, via the i parameter.
4," via a long ping packet (""""ping of death""""). NOTE: the severity of this issue has been disputed since there are limited attack scenarios."
0, via the user parameter in a userProfile action to index.php.
2, via the id parameter.
2, via the book_id parameter.
0, via the cat_id parameter to a site-specific component name such as link.php or backlinkspider.php.
4," via an """"invalid Content-Length."""""
2," via the id parameter to the """"Format for Printing"""" view or """"Long Format"""" bug list."
4, via a request to the XML-RPC interface
5, via a type 7 stats packet
3, by uploading a file with an executable extension
1, via unspecified vectors in the Ynoifier COM object that trigger memory corruption.
2, via unknown vectors related to utconfig.
2, via the cat_id parameter.
2, via the search parameter.
2, via the (1) te and (2) dir parameters in a tempedit action.
4, via a .. (dot dot) in the (1) te and (2) dir parameters in a tempedit action.
0, via the year parameter in a news action to index.php
2, via the id parameter.
4, via a port scan
4," via (1) a """"<>"""" sequence in the ~service parameter to wgate.dll"
2, via the lg parameter.
2, via the artistId parameter.
2, via the (1) q parameter to index.php and the (2) returnURL parameter to tux-login.php.
2, via the what parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the mainpath parameter
2, via the id parameter.
2, via the topic field
2, via the cat_fldAuto parameter.
0, via the title parameter in a new entry
2, via the (1) contentname parameter to showdetails.php and the (2) article parameter to printer.php.
1, via network traffic to a Simple Internet Transition (SIT) tunnel interface
5," by sending a request containing a trailing """"%0A"""" (encoded line feed)"
4, via a crafted URL.
5," via a long username in the """"forgotten password"""" dialog."
4, via a malicious library under the modules/ or plugins/ subdirectories of the current working directory.
4, via a crafted file that triggers a heap-based buffer overflow.
2, via an unspecified string field in a packet to TCP port 3500.
1, via crafted TCP packets to port 41025.
1, via crafted (1) JPEG and (2) GIF images.
2, via the Host header in a request to a non-existent web page
2, via the msg parameter.
2, via unknown parameters in index.jsp.
2, via the Referer header
5, via UTF-7 encoded URLs that are not properly handled when displaying the 403 Forbidden error page.
1, via crafted BGP UPDATE messages
1, via crafted BGP UPDATE messages
1, via crafted BGP UPDATE messages
1, via crafted BGP UPDATE messages
1, via crafted BGP UPDATE messages
2, via the id parameter.
2, via the catname parameter.
0, via the searchTerms parameter in an editArticleCategories operation (aka an admin category search).
2, via the searchField parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) search_text and (2) search_category parameters.  NOTE: the XSS reportedly occurs in a forced SQL error message.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
2, via the idt parameter.
2, via the (1) mois
2, via directory traversal sequences in the page parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the q parameter.
2, via the level parameter in a redirect action
2, via the (1) bookCopyright and (2) ver parameters to (a) footer.php
2, via the cat parameter.
2, via the pid parameter.  NOTE: it was later reported that 5.0 and earlier are also affected.
0, via the id parameter in a display_term action to index.php.
2, via the shout parameter.
4, via a URL in the site parameter.
2, via the sort parameter.
2, via the URI.
2, via the newBlogUserName parameter in an addBlogUser action
0, via the historymonth parameter to index.php.
2, via the (1) keywords parameter to admin/index.php in a blogs search action
2, via the (1) header
2, via the (1) keywords parameter to upload/admin/index.php in a search action
0, via the keywords parameter in a search action.
2, via the (1) header
2, via the album parameter in an album action.
2, via the (1) keywords parameter in a search action to index.php
2, via the keywords parameter in a search action.
2, via the keywords parameter in a search action.
2, via the (1) msg_script and (2) msg_script2 parameters.
2, via the (1) msg_script
2, via the (1) msg_script2 and (2) msg_script3 parameters.
2, via the (1) msg_adminheader
2, via the (1) msg_script2 and (2) msg_script3 parameters.
4, via a long community string in an SNMP TRAP packet.
4, via a .. (dot dot) in the filename parameter to (1) src/yopy_sync.php and (2) system-logger/print_logs.php.
3,upload arbitrary files to
4, via a .. (dot dot) in the cm_imgpath parameter.
4," via a flood of """"extraneous"""" messages"
2, via the etape parameter.
2, via unknown attack vectors.
2, via the user_id parameter.
2, via the tid parameter.
2, via the systemId parameter.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the settings[locale] parameter to (1) forum.php and (2) profile.php in infusions/rank_system/.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.
3, via shell metacharacters in a pathname.
4," via a crafted """"Authorization: Basic"""" HTTP header."
0, via the flav parameter (flavour variable).  NOTE: some of these details are obtained from third party information.
4, via a crafted WMF file associated with a StarOffice/StarSuite document.
1, via crafted EMR records in an EMF file associated with a StarOffice/StarSuite document
4, via a .doc file that contains malformed data
3, via unspecified e-mail fields
2, via unspecified HTML
4, via a crafted audio-only file that is streamed from a Server-Side Playlist (SSPL) on Windows Media Server
2, via the cat_id parameter.  NOTE: linking.page.php is commonly renamed to link.php
2, via the msg_erreur parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the ida parameter.
5, by uploading a file with a name ending in (1) .jsp
4, via a URL in the goto parameter in a redirect action to mjguest.php.  NOTE: this is user-assisted because there is a delay and a notification before redirection occurs.
2, by setting the gastracker_admin cookie to TRUE.
4, via a URL in the (1) main_page_directory and (2) page_to_include parameters in template\index.php.
1," by leveraging the """"access content"""" permission to list tables and obtain session IDs from the database."
4, via a crafted link.
2, via the listingid parameter.
0, via the pid parameter in a pdetails action.
2, via the l parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, by setting the login_admin cookie to true.
2, via the argument to the (1) SaveBarCode and (2) SaveEnhWMF methods in (a) the IDAuto.BarCode.1 ActiveX control in IDAutomationLinear6.dll (aka IDAutomation Linear BarCode) 1.6.0.6
5, via a URL in the FUSEBOX_APPLICATION_PATH parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified string fields in a notification packet.
2, via unknown attack vectors.
2, via unknown attack vectors.
1, by setting the CommentSystemAdmin cookie to 1.
4," via a direct request to useradded.php with a modified user name for """"admin."""""
4, via a URL in the site_path parameter.
1," by setting the logininfo cookie to """"<?php"""" or """"?>"""""
0, by setting the admin cookie to 1.
0, via the id parameter to (1) view.php and (2) top_view.php.
0, via vectors involving JavaScript array indices that trigger an out-of-bounds access
4, via a .funhouse file with a string XML element that contains many characters.
4, via a document containing a crafted font
0, by resolving an alias that contains crafted AFP volume mount information.
4, via a (1) .xht or (2) .xhtm file
4, via a crafted string in (1) C++ or (2) Java source code.
1, via vectors related to the (1) stringobject
2," via unknown vectors involving """"processing of arguments."""""
1, via crafted textual content in messages.
4, via a crafted Microsoft Office file
5, by resolving a crafted .local domain name that contains a long label.
5, via a crafted TIFF image.
2, via the email parameter.
2, via the (1) forumid parameter to (a) admin/philboard_admin-forumedit.asp
2, via the query parameter.  NOTE: some of these details are obtained from third party information.  NOTE: it was later reported that 1.2.3 is also affected.
2, via the cat parameter.
0, by setting the auth cookie to true when accessing unspecified scripts in /admin.
0, via the id parameter in an item action
2, via the (1) lang parameter to (a) advsearch.php
4, via a URL in the read_xml_include parameter.
4, via a .. (dot dot) in the id parameter.
4, via a direct request to (1) db/connect_str.php and (2) login/info.php.
3, via unspecified vectors.
2," via unspecified vectors related to """"insufficient file filtering."""""
0, by creating an admin account via a direct request to adduser.php.
0," by setting the userID parameter to """"admin"""" in a direct request to admin/addUser.php."
1, by creating an admin account via a direct request to install/newuser.php with the admin parameter set to 1.
4, via (1) .. (dot dot) or (2) C: folder sequences in the file parameter.
2, via the (1) lang_id and (2) menu_id parameters.
4, via a .. (dot dot) in the show parameter.
3, via unknown vectors.
2, via the post_id parameter.
2, via unspecified request fields that are used to calculate a heap buffer size
2, via unspecified request fields that are used to calculate a glyph buffer size
4, via a (1) SProcRenderCreateLinearGradient
1, via TLS transmission of data that is improperly used when the peer calls gnutls_handshake within a normal session
4, via a Trojan horse killall program in a directory in the PATH
4, via a crafted hyperlink in an HTML part of an e-mail message.
2, via the comments variable.
4, via a certain message.
4, via LF (aka \n) characters surrounding a command name within a Device Control Request Status String (DECRQSS) escape sequence in a text file
4, via a symlink attack.
4, via a pageindex (aka data page number) of -1.
2, via the Upload section in the Write Tabs area of the dashboard.
2, via the id parameter.
3, via the (1) cid parameter to contact.php and the (2) nid parameter to news.php.
2, via the id parameter.
4, via the search_query parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the appservlang parameter.
4, via ..\ (dot dot backslash) sequences in responses to (1) MLSD and (2) LIST commands
2, via the first argument to a certain file that is included by multiple unspecified ASP applications.
4, via a .. (dot dot) in the Path parameter to the MapPath method.
2, via an unspecified string field.
5, via shell metacharacters in HTTP requests to unspecified ASP applications.
2, via direct requests on TCP port 5102.
4, via a long attribute value in a FONT tag in a message.
4, via a malformed attribute in an IMG tag.
1, via unspecified attributes in the X-MMS-IM-FORMAT header in an MSN message.
2, via the id parameter.
2, via the id parameter.
2, via the postid parameter.
4, via a .. (dot dot) in the page parameter.
0, via the category parameter in a Fiction action
2, via the qNo parameter.
4, via unknown vectors.
0, by triggering an error condition during certain Iframe operations between a JSframe write and a JSframe close
0, via the slide parameter in a slides action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via crafted HTTP requests.  NOTE: this might overlap CVE-2007-2635.
2, via the letter parameter in a Search action
4, via (1) a PNM image with a crafted header
2, via the (1) email or (2) wantusername parameter to account-signup.php
4, via (1) the catsearch parameter to cal_search.php or (2) the catview parameter to cal_cat.php.  NOTE: vector 1 might overlap CVE-2007-3183.3
4, via a large fmt chunk in a WAV file.
0, by calling the Novell iPrint ActiveX control (aka ienipp.ocx) with (1) a long third argument to the GetDriverFile method; a long first argument to the (2) GetPrinterURLList or (3) GetPrinterURLList2 method; (4) a long argument to the GetFileList method; a long argument to the (5) GetServerVersion
4, via a directory name in the argument.
4," via a """"custom update server"""" argument.  NOTE: this can be leveraged for code execution by writing to a Startup folder."
4, via a crafted notifyOnLoadNative callback function.
4, via a long argument to the (1) GetPrinterURLList
2, via the docID parameter.
2, via the langsel parameter.
0, via the userid parameter in a show action.
2," via the (1) userid parameter to (a) profile.php in a """"show moreinfo"""" action; the (2) bildid parameter to (b) picturegallery.php in a shownext action; the (3) id parameter to (c) filebase.php in a freigeben action"
2, via the cat parameter.
3, via the (1) id parameter to (a) admin/duzenle.asp and (b) admin_oku.asp; the (2) kid parameter to (c) kategori.asp and (d) admin_kategori.asp; and unspecified parameters to (e) uye.asp and (f) oku.asp.
2, via the (1) gallery parameter to (a) index.php and (b) image.php
5, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
0, via the fatherID parameter to (1) browse.php and (2) search.php.
2, via the movie parameter to index.php.
2, via the rid parameter.
2, via the comic_id parameter.
2, via the cat_id parameter.
2, via the st parameter.
2, via directory traversal sequences in the page parameter.
0, via the q parameter in a search action.
0, via the pageid parameter
5, via a long DNS TXT record with a modified length field.
4, via a call to ExecuteRemote with a URL that results in a 404 error response.
4, via a crafted packet using the (1) IEC60870-5-101 or (2) IEC60870-5-104 communication protocol to the X87 web interface.
2, via the PictureUrls property.
2, via the page parameter.
3, via shell metacharacters in the Email address field (aka Email text box).  NOTE: the vendor disputes this
2, via the (1) kind parameter to fix/browse.php and the (2) account parameter to auth/00_pass.php.
4, via a URL in the _pages_dir parameter.
4, via a .. (dot dot) in the load parameter in a go action.
4, via a .. (dot dot) in the op parameter.
4, via unknown vectors.
2, via the category parameter in a webboard action.
4," via unspecified """"user input."""""
4," via unspecified """"user input."""""
2, via the cat_id parameter.
2, via the (1) id parameter to post3/view.asp and the (2) review parameter to post3/book.asp.
2, via the review parameter.
2, via the l parameter.
4, via a .. (dot dot) in the p parameter.
2, via the PATH_INFO to (1) index.php
4, via unspecified vectors.
3, via unspecified vectors.
2, via the (1) album parameter to thumbnails.php and the (2) pid parameter to displayimage.php.
2, via unknown attack vectors.
2, via the (1) cat parameter to netbutik.php and the (2) id parameter to product.php.
2, via the search parameter.
3, via the (1) mainid and (2) id parameters to index2.php.
2, via the CalendarName parameter in a ShowIt action.
2," via the """"nb"""" parameter in voir mode."
2, via the pID parameter.
2, via the f_id parameter.
4, via a .. (dot dot) in the argument to the SaveToFile method.  NOTE: this can be leveraged for code execution by writing to a Startup folder.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
2, via unspecified vectors
4, via .. (dot dot) sequences in responses to LIST commands
2, via the fid parameter.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
2, via the catId parameter.
2, via the (1) nr parameter to (a) frontend/news.php
2, via the q parameter.
2, via the id parameter.
2, via the (1) ltarget parameter to (a) admin/admin_frame.php and the (2) conf parameter to (b) gbuch.admin.php
4, via a .. (dot dot) in the ltarget parameter.
0, via the del parameter to (1) gbuch.admin.php
2, via the t parameter.
2, via the cat parameter.
1, via long FTP responses
4, via a crafted PNM file.
4, via a long GUID value for the /x (aka /uninstall) option.  NOTE: this issue might cross privilege boundaries if msiexec.exe is reachable via components such as ActiveX controls
2, via an MMS transmission of a malformed JPEG image
5," via a URL in the propDownloadUrl parameter with the propPostDownloadAction parameter set to """"run."""""
2, via the userfield parameter.
2, via the (1) id parameter to template_permalink.asp and (2) cat parameter to template_archives_cat.asp.
2, via the mid parameter.
2, via the datespan parameter in a read action.
2, via the (1) Links and (2) Links Submit pages.
4, via a malformed packet to TCP port 3050
2, via the post parameter.
2, via the (1) PATH_INFO to (a) register.php
2, via the css_str parameter in an edit action.
2, via the (a) tid parameter in a main.taskeditor edit action
0, via the cid parameter to index.php.
2, via the id parameter to (1) view.php and (2) edit.php.  NOTE: it was later reported that 4.0.x is also affected.
0, via the group parameter to (1) index.php or (2) the default URI.
0, via the catid parameter in a browse action to index.php.
0, via the gbid parameter in a deleteentry action to index.php.
4," via a """"modify quota"""" action."
2, via the articulo_id parameter.
4, via a long directory name in an SSH_FXP_OPENDIR (aka opendir) command.
3, by uploading a .php file
4, via shell metacharacters in a (1) ZIP (aka .cbz) or (2) RAR (aka .cbr) archive filename.
3, via unknown vectors.
4, via a malicious (1) libclntsh.so or (2) libnnz10.so library.
4, via unknown vectors.
2, via the entry parameter.
0, via the id parameter to index.php.
0, via the albumId parameter in a ViewAlbum action to index.php.
2, via the CategoryID parameter in a category action to index.php.
4, via a crafted HTTP POST request. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the usage parameter in a subscribe action to index.php.
0, via the id parameter in a (1) show_radio or (2) show_video action to index.php.
2, via the item parameter.
4, via a .. (dot dot) in (1) a response to a LIST command from the BitKinex FTP client and (2) a response to a PROPFIND command from the BitKinex WebDAV client.  NOTE: this can be leveraged for code execution by writing to a Startup folder.
4," via a URI that begins with a """"/./"""" sequence"
2, via the message parameter in an HTML webform
2, via the userAccount parameter (aka the User Name field) to index.php.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in a mediaplayer action to index.php.
2, via the (1) data parameter to catalog.php
4, via a URL in the renderer parameter to template.tpl.php in (1) barrel/
2, via the (1) sql parameter to dbadd.inc.php
2, via the JID parameter.
5, by uploading a .php file
5, via a URL in the app_path parameter to (1) don3_requiem.don3app/don3_requiem.php and (2) frontpage.don3app/frontpage.php.
2, via the forum parameter in a forum action to index.php.
2, via the (1) idp and (2) category parameters.
4, via a long request to a Motion HTTP Control interface
4, via a .. (dot dot) in an http URL
3, by creating a subdirectory named http: and then placing ../ (dot dot slash) sequences in an http URL argument to the (1) chdir or (2) ftok function.
4, via (1) the q parameter to search.php
4, via (1) the q parameter to search.php
4, via (1) the id parameter
2, via the id parameter.
2, via the action parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the Itemid parameter to index.php.
2, via the action parameter.
2, via the kwrd parameter in a kwl action to the default URI.
2, via the (1) CmpctedDB and (2) Boyut parameters.
4, via a direct request to _db/compact.asp
2, via certain modified cookies
0, by specifying the origin URL in the first argument to the DownloadImageFileURL method
2, via long strings in the two arguments to the DownloadImageFileURL method
0, via the entry parameter
3, by overwriting a PHP file in webinc/bxe/scripts/ via a filename in the XML parameter and PHP sequences in the request body
4, via a .. (dot dot) in the language parameter.
0, via the article parameter in a kb action.
4, via a URL in the bcrm_pub_root parameter.
2, via the fID parameter.
0, via the ArticleID parameter in a comment action to index.php.
4, via a long first argument to the SetByteOrder method.
2, via the keyword parameter.
4, via a .. (dot dot) in the action parameter.
4, via a zero value in Nikon lens information in the metadata of an image
2, via the recipe_id parameter in a viewrecipe action to index.php.
2, via the (1) comment
0, via directory traversal sequences in (1) the plugin parameter to admin/plugins.php or (2) the com parameter to index.php.
2, via the id parameter.
2, via the category_id parameter in a page action to index.php.
4, via a .. (dot dot) in a response to a LIST command
4," via """"spoofed server responses"""" that contain a long string after the NM_A_SZ_TRANSACTION_ID field name."
4, via a long user ID
5, by submitting and retrieving user-defined events
4, via unknown vectors.
4, via an SIOCSIPMSFILTER IOCTL request with a large value of the imsf->imsf_numsrc field
4, via a crafted Petite file that triggers an out-of-bounds read.
1, via HTML CANVAS elements that use the images as patterns.
0, by modifying the location
4, via a crafted file that triggers a stack-based buffer overflow.
2, via the (1) host and (2) path components of a URL.
5, by attempting to add a new album to a hidden album.
4, via a ZIP archive.
2," via unknown vectors related to """"spoofing the remote address."""""
0, via network traffic that triggers unspecified IPS signatures
3, by uploading a file with .php followed by a safe extension
1," via unknown vectors and an """"obscure method."""" NOTE: the vector is probably in the redirect parameter to the Admin Control Panel (admincp/index.php)."
0, via a long parameter to the AnnoSaveToTiff method.
2, via the detail parameter.
4, via a series of long
4, via a crafted PPPOL2TP packet that results in a large value for a certain length variable.
2, via the (1) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:jndiProp:JndiNew
2, via the (1) xslIdn parameter to (a) utils/getXsl.aspx
2, via the id parameter.
2, via the name parameter and other unspecified parameters.  NOTE: some of these details are obtained from third party information.
2, via the orderby parameter.
2, via the (1) pblname and (2) text parameters to (a) admin/search.asp
2, via the (1) showfields
2, via the orderby parameter.
2, via the text parameter in (1) searchbanners.asp and (2) listadvertisers.asp
2, via the orderby parameter.
2, via the orderby parameter.
1," via unspecified vectors (""""all fields"""")."
0, via the categoryid parameter in a viewimage action.
2, via unspecified vectors in (1) admin/search.asp and (2) gallery.asp.
2, via the orderby parameter.
2," via unspecified vectors (""""all fields"""")."
4, via a URL in the pConfig_auth[smf_path] parameter.
1, via unspecified URL arguments
2, via the category_id parameter
2, via the searchFor parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via the searchFor parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
2, via the search parameter.
4, via ..\ (dot dot backslash) sequences in responses to LIST commands
2, via the fname parameter in a members search action.
4, via a .. (dot dot) in the lang parameter to (1) library_rss.php and (2) rss.php.
2, via the last_message parameter.
2, via the redirection parameter.
2, via the page_id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the site parameter.
2, via the tid parameter.
2, via unknown attack vectors.
4, via a .. (dot dot) or a ..\ (dot dot backslash) in a response to a LIST command.
2, via the page parameter.
2, via the hostName parameter
3, via vectors involving (1) an event handler attached to an outer window
3, via vectors involving originalTarget and DOM Range.
4, via a crafted Java applet
2, via the username parameter to the login interface.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.
0, via the repquote parameter in a reply action
0, via the CatId parameter in a show action.
4, via a .. (dot dot) in the section parameter to the default URI.
4, via unspecified vectors.
4, via a .. (dot dot) in the lang parameter.
4, via a ..\ (dot dot backslash) in a response to a LIST command
4, via a .. (dot dot) in a response to a (1) LIST or (2) MLSD command.
2, via the post parameter.
3, via vectors involving a large addr_num field in an sctp_getaddrs_old data structure.
2, via an MSN packet with a UBX command containing a large UBX payload length field.
4, via (1) the list of blocked senders or (2) the list of safe senders.
0, via the FILE1 parameter in an uploadfileprocess action
2, via the id parameter.
2, via the formid parameter.
4, via a URL in the includedir parameter and a 0 value for the noSet parameter
2, via the menuclick parameter.
4, via a .. (dot dot) in the module parameter.
2, via the query parameter to index.php.
4, via a .. (dot dot) in the theme parameter to (1) custompage.php
2, via the FILE parameter.
2, via the (1) ID parameter in an USUB action to default.asp and the (2) Licence[SpecialLicenseNumber] (aka LicenceId) cookie to edit/default.asp.
2, via the cat parameter.
2, via the cat parameter.
2, via the type parameter.
2, via the categori parameter in a pocategorisell action to modules.php.
4, via unspecified vectors.
2, via unspecified cookies
1," via unspecified vectors related to """"parsing of http headers."""""
2, via the cat_path parameter.
4, via a URL in the GLOBALS[preloc] parameter to (1) modules/core/logger/init.php and (2) AJAX/newscat.php.
2, via the id parameter.
2, via the id parameter.
2, via the eml parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2," via unknown vectors related to an """"imap command."""""
2, via the cate_id parameter.
2, via the (1) topic and (2) button parameters to ansFAQ.asp and the (3) id and (4) txtEmail parameters to login.asp.
2, via the (1) id parameter to ansFAQ.asp and the (2) template_id parameter to preview.asp.
0, via a full pathname in the inpCurrFolder parameter to (1) folderdel_.asp or (2) foldernew.asp in cms/assetmanager/.
4, via a direct request to (1) trigger.asp or (2) common2.asp in cms/include/
2, via the articleid parameter in a show_article action.
2, via the saArticle[ID] parameter.
2, via the bannerid parameter.
2, via the iEve parameter.
2, via the linkid parameter.
2, via the (1) eventID parameter to event_info.php and the (2) userID parameter to list_user.php.
2, via the (1) sitetitle
2, via the sayfa parameter.
0, via the sbjoke_id parameter
2, via the hal parameter.
4, via a .. (dot dot) in the zone parameter.
5, via a long SRC property value.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the jamroom[jm_dir] parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the path parameter.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the page parameter.
4, via a ..\ (dot dot backslash) in a response to a LIST command
2, via the (1) fflteam_id parameter to teams.php
2, via the cat_id parameter in a category action.
0, via the catid parameter in a show_payment action to index.php.
0, via the id parameter
5, via a .. (dot dot) in a response to a LIST command
4, via a .. (dot dot) in the page parameter.
4, via a .. (dot dot) in the page parameter.
2, via the page parameter.
4, via a .. (dot dot) in the c_temp_path parameter. NOTE: in some environments
2, via the id parameter.
2, via the (1) address parameter to addressbook.php
2, via the id parameter.  NOTE: The que_id parameter to forum_answer.php is already covered by CVE-2007-4085.
2, via the cat parameter.
2, via the tsk_id parameter.
4, via a long value of the (1) operation
3, via the searchtype parameter.
2, via the (1) contenido
5, via a URL in the (1) contenido_path parameter to (a) contenido/backend_search.php; the (2) cfg[path][contenido] parameter to (b) move_articles.php
2, via the (1) kw or (2) position parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) position or (2) kw parameter.
2, via the category_id parameter.
0, via the prodId parameter
2, via the sort parameter.
2, via the page parameter.
4, via a long IRC message.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted Accept-Language HTTP header.
4, via a crafted GIF file that triggers a free of an uninitialized pointer.
4," via """".."""" (dot dot) sequences in a patch file."
3," by using ldapadd to attempt to create a duplicate ibm-globalAdminGroup LDAP database entry.  NOTE: the vendor states """"There is no real risk of a vulnerability"
3, via malformed packets.
2, via the Object data type
2, via the String data type
4, via a URL in the q parameter
1, via crafted ASN.1 BER datagrams that trigger an assertion error.
5," via """"partial file list requests"""" that trigger a NULL pointer dereference."
2, via an empty private message
3, via symlink and possibly other attacks on temporary working directories.
4, via a long lpstrLinkPath argument to the fCreateShellLink function.
5, via a .. (dot dot) in the (1) path and (2) p parameter.
2, via the (1) s and (2) sort parameters to index.php
2, via the (1) view parameter to (a) index.php
2, via the id parameter.
2, via the forum parameter.
4, via a .. (dot dot) in the user parameter. party information.
2, via the id parameter.
0, via the cat_id parameter in a comment action.
2, via the (1) sitename and (2) wmessage parameters.
2, via the language parameter.
4, via a URL in the include_connection parameter to (1) edit_top_feature.php and (2) edit_topics_feature.php in phpi/.
2, via the (1) top_page and (2) end_page parameters.
2, via the (1) error_meldung parameter to admin/features/register/register.php
2, via the id parameter.
2, via the lang[be_red_text] parameter.
4, via a URL in the ourlinux_root_path parameter to (1) adodb-errorpear.inc.php and (2) adodb-pear.inc.php in adodb/.
2, via the PATH_INFO to (1) admin_edit_submenu.php
1, via unspecified vectors
2, via the go parameter.
5, via a URL in the ff_compath parameter.
1, via vectors related to the Help Errors log.
4, via a PDF file that calls the util.printf JavaScript function with a crafted format string argument
4, via a .. (dot dot) in the (1) fog_lang and (2) fog_skin parameters
2, via the (1) annuaire parameter to (a) last_records.php and (b) annuaire.php and the (2) by and (3) cat_id parameters to annuaire.php.
4, via (1) the annuaire parameter to annuaire.php or (2) the username field in admin/login.php.
0, via the subject parameter in a postnewsubmit (aka create new thread) action.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a long first argument to the GetDetailsString method
5, via a URL in (1) icerikyolu
4, via a long .pal filename in palette/.
2, via the adid parameter in a redir action.
2, via the id parameter.
0, via the article_ID parameter to index.php.
4, via unspecified vectors.
4, via unspecified vectors.
0, via the cat_id parameter in an urunler action.
4, via a .. (dot dot) in the page parameter.
3, via unspecified vectors.
2, via the (1) IdFlux parameter to admin/fonctions/supprimer_flux.php and the (2) IdTag parameter to admin/fonctions/supprimer_tag.php.
2, via the boardID parameter.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
3," via vectors related to """"certain file types."""""
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via (1) malformed input in the login page (includes/local.hooks.php) and (2) an invalid session ID
4, via a URL in the to parameter.
2, via the username parameter.
1, via unspecified parameters to (1) portal.php and (2) inc/functions_post.php.
4, via shell metacharacters in filenames used by the execute and system functions within the (1) mz and (2) mc commands
3, via unknown vectors.
2, via the PARAMS parameter.
2, via the catid parameter.
4, via a .. (dot dot) in the file parameter to index.php
2, via the cid parameter in a Category action to index.php.
2, via the uid parameter.
2, via the (1) p
5, by placing a .php filename in the Upload_Avatar parameter and sending the image/gif content type.
0, via the user parameter to the login form.
2, via the username parameter in a getpasswd action to register.php.
4, via (1) the parenttab parameter in an index action to the Products module
2," via unknown vectors involving """"processing of XML data"""" by a trusted application."
3, via unknown vectors involving processing of XML data by an untrusted (1) application or (2) applet
2, via an untrusted (1) application or (2) applet
0, by using an applet to read information from another applet.
2, via an untrusted application
0, via format string specifiers in a chat message.
3, by uploading a .php file with a content type of (1) image/gif
2, via the vid parameter.
2, via the page parameter.
3, via unspecified vectors.
2, via the unspecified vectors.
0, via the listing_id parameter in a listings action.
2, via the file parameter.
2, via the cid parameter.
4, via a crafted URL.
4, via a .. (dot dot) in the t parameter.
4, via the (1) foreign_key_value parameter in the news page and (2) webpage parameter in the webpage_multi_edit form.
2, via the (1) firstname and (2) search parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the pet parameter to index.php.
4, via a packet with a large numeric value in a 0x80 data block.
2, via the cat parameter.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.  NOTE: this might be due to a use-after-free error.
2, via unknown vectors
4, via unspecified vectors.
5, via a long string that leads to incorrect memory allocation during Unicode string processing
5, via vectors related to (1) Include/pymem.h; (2) _csv.c
1, via crafted input to string formatting operations.  NOTE: the handling of certain integer values is also affected by related integer underflows and an off-by-one error.
4, via a series of fragmented packets with non-sequential fragmentation offset values
4, via a crafted NCP packet that causes an invalid pointer to be used.
4, via a crafted DLL file that contains a long string.
1, by walking the hrSWInstalled OID branch in HOST-RESOURCES-MIB.
0, via the id parameter in a show_dvd action.
2, via the idDirectory parameter.
2, via the X-Forwarded-For HTTP header.
2, via the page parameter.
5, via a long argument to the Update method.
2, via unspecified URLs passed to the Update method.
4, via the (1) Accept
4, via a crafted STR file that interleaves audio and video sectors.
4, via a .. (dot dot) in the dodosmail_header_file parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified vectors
4, via a crafted message that triggers a buffer overflow.
3, by uploading a .php file with a jpeg content type
4, via a .. (dot dot) in the page parameter.
2, via the (1) pageid parameter or (2) PATH_INFO.
3, by uploading a file with an executable extension
4, via a URL in the dirDepth parameter.
0, via the listing_id parameter in a listings action.
0, via the membername parameter to (1) members.php
2, via the id parameter.
5, via a .. (dot dot) in the lang parameter.
4, via a .. (dot dot) in the module parameter.
2, via the page parameter to the default URI.
4, via a .. (dot dot) in the (1) langpref
4," via a link or IMG tag to (1) the db parameter in the """"Creating a Database"""" functionality (db_create.php)"
1, via unspecified vectors
2," via unknown network traffic with a large """"bytes-in-memory/bytes-on-wire ratio."""""
2, via the id parameter in an affich_message action.
2, via the (1) acct_fname and (2) acct_lname parameters in an edit action
2, via the current_url parameter in a tellafriend action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id_cat parameter.
4, via a .. (dot dot) in the c parameter.
2, via the category parameter.
4, via a long string argument to the GetNumberOfImagesInGifFile method in the BIImgFrm Control ActiveX control in biimgfrm.ocx.  NOTE: some of these details are obtained from third party information.
1, by setting the cookid cookie value to 1.
2, via the (1) username or (2) password parameter to admin/login.php
0, via the id parameter to portal/index.php in a tablon action. NOTE: some of these details are obtained from third party information.
4, via a malformed Petite file that triggers an out-of-bounds memory access.  NOTE: this issue exists because of an incomplete fix for CVE-2008-2713.
1, via vectors related to (1) free tagging taxonomy terms
4," via vectors involving deletion of """"translated strings."""""
0, via vectors involving deletion of OpenID identities.
1," via vectors related to """"an inappropriate placeholder for 'numeric' fields."""""
2, via unknown attack vectors.
4, via a crafted GIF file
5, via a crafted OGG file
5, by uploading a file with an executable extension
1," via vectors related to """"previously encrypted properties"""" that are not encrypted."
2, via the productid parameter.
4, via (1) the seller_id parameter in sellers_othersitem.php
2, via the pgm parameter in a directory action.
4, via a long argument to the StartUrl method.  NOTE: some of these details are obtained from third party information.
4, via (1) a crafted UPX-compressed file
4, via a CHM file with a large nb_dir value that triggers an out-of-bounds read.
4, via a crafted PDF file attachment.
2, via the filter parameter.
4, via (1) the opp parameter to tampereunited/opponent.php; or the id parameter to (2) index.php
4, via a news article containing a large number of lines starting with a period.
0, via the id parameter in a UserProfil action.
4, via unspecified vectors.
4, via a long HTTP version string
4, via unspecified vectors.
4, via (1) the cwd parameter in a rqMkHtml action to document/rqmkhtml.php
5, via a URL in the url parameter.
0, via the eventId parameter in a pay_options action to index.php.
2, via the key parameter.
2, via the cat_a parameter.
4, via a crafted packet to TCP port 4321.
5, via a folder name containing shell metacharacters.
4, via a (1) VERIFYCONTENT or (2) GAMECONFIG command sent to the server before user session initialization
1, via malformed packets to TCP port 497
4, via a series of long packets containing 0x00 characters to TCP port 497 that trigger memory corruption
2, via the id parameter.
1, by setting the photoalbumadmin cookie
2, via the dlfilename parameter.
2, via the fct parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the fct parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via (1) an se_user cookie to include/class_user.php or (2) an se_admin cookie to include/class_admin.php.
2, by setting the admin_lng cookie value to 1. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, by setting the aa_login cookie value to 1.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) content parameter to admin/update.php
4, via (1) an enable_cache=false query string to footer.php or (2) a direct request to pagination.php
2, via the m parameter.
0, via the id parameter
0, via the id parameter
2, via the book_id parameter.
2, via the catid parameter.
4, via a URL in the incpath parameter.
4, via a .. (dot dot) in the dir parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this might be an issue in FCKeditor.
4, via a URL in the (1) cfg[document_uri] parameter to _administration/edition_article/edition_article.php and the (2) cfg[base_uri_admin] parameter to _administration/fonctions/get_liste_langue.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted type 6 command
2, via the (1) query string to (a) announcements/messages.php; (b) lostPassword.php and (c) profile.php in auth/; (d) calendar/myagenda.php; (e) group/group.php; (f) learningPath.php
1, via unspecified vectors
0, by sending an arbitrary search_cookie cookie.
0, by sending an arbitrary weblog_cookie cookie.
0, by sending an arbitrary links_cookie cookie.
0, by sending an arbitrary gbook_cookie cookie.
0, by sending an arbitrary uploader_cookie cookie.
0, by sending an arbitrary recipe_cookie cookie.
4, via a link or IMG tag to the user edit profile page.
0, via the etitle parameter (blog entry title).
3, via unknown vectors.
2, via the contact name.
2, via the filter_target parameter.
2, via the value parameter.
2, via the language parameter to the user preferences page (account_prefs_update.php).
2, via unspecified vectors
3, via unknown vectors.
2, via unspecified vectors in (1) include/parser.php and (2) moderate.php.
2, via unspecified vectors that reveal the installation path in an error message.
2, via the searchFor variable (possibly the opt parameter.)
2, via the (1) jobcountryid and (2) jobstateid parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the read parameter in an edp_News action.
2, via the read parameter in a search action.
2, via the (1) ResultHtml
2, via the pid parameter.
2, via the read parameter.
2, via the year parameter.
0, via the photoId parameter in a show action.
0, via the id parameter in a Singer action.
2, via unspecified vectors related to the (1) article comments feature and the (2) search log feature.
4, via a URL in the (1) bbPath[path] parameter to votepolls.php and the (2) bbPath[root_theme] parameter to config.php
0, via the id parameter in a photos action.
2, via the username parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a long URL in the HREF attribute of an A element
5, via a long HTTP Server header.
3, by uploading a file with an executable extension via the upfile parameter
4, via a ..\ (dot dot backslash) in the include parameter.
2, via the id parameter.  NOTE: this might overlap CVE-2008-1774.
2, via the email parameter.
4, via a URL in the type parameter.
2, via the category_id parameter.
2, via the user (user name) field.
2, via the sb_protype parameter.
4, via a crafted UPX compressed file
2, via the rsargs array parameter in an __exp__getFeedContent action.
4, via a boolean value within serialized data in a JMU_Cookie cookie.
2, via the image_id parameter.
2, via the mid parameter.
2, via the pic parameter to the default URI.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the rs parameter.
4, via unspecified vectors.
2, via the cat_a parameter.
2, via the cat_a parameter in a browse action.
4, via a .. (dot dot) in the (1) module and (2) file parameters.
4, via a .. (dot dot) in the content parameter.  NOTE: in some environments
0, via the UID parameter
2, via the dbtable parameter.
2, via the article parameter to (1) comaddok.php and (2) comlook.php.
0, via the mode parameter to (1) admin_group_details.asp and (2) admin_category_details.asp.
4, via a link or IMG tag to log_off_user.asp.
2, via the events_id parameter.
2, via the (1) gallery and (2) search_string parameters.
4, via a certain sequence of malformed packets.
5, via a cerberus_user cookie.
2, via the msg parameter to unspecified components
4, via a direct request to tests/info.php
4, via a URL in the hm parameter.
4, via a URL in the hm parameter to (1) hioxupdate.php and (2) hioxstats.php.
2, via the cat parameter.
2, via the link parameter.
2, via directory traversal sequences in the action_file parameter.
2, via the catid parameter.
5, by sending a login=right cookie.
5, via a UDP packet containing a large value in a certain size field
4, via a UDP packet in which the value of a certain size field is greater than the total packet length
0, via the pid parameter in a (1) pro_show or (2) disppro action to the default URI.
2, via the cate_id parameter.
2, via the art parameter.
2, via the username parameter in a members action to index.php
0, via the r parameter
2, via the id parameter.
2, via the UID parameter.
4, via (1) the id parameter to browse.php or (2) the s parameter in an exhibitions action to detail.php.
2, via unspecified input to (1) update_module.jsp
1, via crafted attributes related to (1) HtmlControl.cs (PreProcessRelativeReference)
4, via unspecified vectors.
2, via unknown attack vectors.
1, by setting the session_id parameter to match the victim's nickid parameter.
4, via a long URL.
4," via a crafted but well-formed web page that contains """"a simple set of legitimate HTML tags."""""
2, via the location parameter.
4, via a .. (dot dot) in the language parameter.
4, via a malformed ZIP archive
2, via the letter parameter.
2, via multiple IMAP connection requests to the same folder.
3, via unspecified vectors.
1, by editing the user's profile.
2, via the loc_id parameter in a list_events action to mod.php.
2," by setting the """"adm"""" cookie value to 1."
4, via a URL in the rd parameter.
1, via crafted setup arguments.  NOTE: this issue can only be exploited in limited scenarios in which the attacker must be able to modify config/config.inc.php.
4, via a crafted RPC call
4, via a direct request
2," via error messages in the """"/admin.aspx - System Log"""" page."
2, via the cid parameter in a showcat action to index.php.
4, via a malicious icabar.exe placed in the search path.
2, via the id parameter.
3, via unknown vectors.
4, via a PXL cookie.
2, via the mail_id parameter in a veiw action.
0, via the id parameter in a report action.
4, via a crafted UDP packet
4, via a crafted frame buffer update packet.
0, via an extra HTTP Host header with additional leading text placed before the real Host header.
2, via the kid parameter.
2, via the pid parameter.
2, via the cid parameter in an orders action to index.php.  NOTE: some of these details are obtained from third party information.
1, via crafted Taxonomy terms.
4, via unspecified vectors.
1, via unspecified vectors related to the Devel::StackTrace module for Perl.
0, via the nr parameter to the default URI.
0, via the nr parameter to the default URI.
2, via the department parameter.
2, via the (1) latest parameter to (a) index.php
0, via the lid parameter in a visit action to modules.php.
2, via the catid parameter in a category action to modules.php.
2, via unspecified vectors involving (1) viewer.swf and (2) loadflash.js
1, via unspecified vectors involving (1) viewer.swf and (2) loadflash.js
4, via a crafted image file
1, via vectors related to the mif_hdr_put function and use of vsprintf.
1, via format string specifiers in an invalid URI on the command line
0, via a certain sequence of file create
0, via a certain sequence of file I/O operations with readv and writev
3, via unknown vectors.  NOTE: the initial description of this CVE was inadvertently associated with libxml2
3, via unknown vectors.
2, via unknown attack vectors.
4, via a PATH whose length is larger than the system's PATH_MAX when running GIT utilities such as git-diff or git-grep.
4," via vectors involving many long names for """"companies and clients."""""
3, via unknown vectors.
3, via unknown vectors.
4, via a combination of ?script? and ?/script? sequences in the id field
1, via unknown vectors
2, via the searchid parameter in a search action.
2, via the (1) showmember parameter in a members action and the (2) thread parameter in a board action.  NOTE: vector 1 might be the same as CVE-2008-2522.
2, by setting both the adminuser and loggedin cookies.
4, via a long argument to the NewObject method.
2, via the (1) filename parameter to search.asp and the (2) page parameter to order.asp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the search parameter.
5, via (1) the checked array parameter to plog-download.php in an album action and (2) unspecified parameters to plog-remote.php
4, via a .. (dot dot) in the (1) p
0, via the area parameter to (1) day.php
2, via the acuparam parameter to (1) the default URI or (2) index.php
2, via an MP3 file with JavaScript in id3 tags.
0, via a full pathname in the Dirroot parameter
4, via a URL in the abg_path parameter.
2, via an empty UDP packet to port 1900.
2, via the category parameter.
5, via a URL in the GLOBALS[gsLanguage] parameter
5, via a crafted string.  NOTE: some of these details are obtained from third party information.
4," via a large filename supplied to the """"-g"""" parameter in the ttd_main function.  NOTE: it is unlikely that this issue would cross privilege boundaries in typical environments."
4, via a long irc:// URI.
4, via (1) the id parameter to visit.php
0, via the login_message parameter in a login action.
2, via the username parameter.
4, via a long URL in the SRC attribute of an IMG element.  NOTE: this might be related to CVE-2008-3360.  NOTE: it was later reported that 2.08 Beta 4 is also affected.
0, via the id parameter to (1) product_desc.php and (2) store_info.php.
0, via the id parameter in a detail action to index.php.
2, via the r parameter.
2, via the (1) eid parameter to comments.php
2, via the (1) Username and (2) Password parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sym_auth cookie in a /publish/filemanager/ request to index.php.
3, by uploading a file with an executable extension to a directory specified in the destination parameter
4, via a .. (dot dot) in the page parameter.
4, via a URL in the CFG[txtsql][class] parameter.
2, via the Username field
3," by sending a """"command 29"""" packet when the player is not in the game."
5, via (1) the Cid parameter to categories.php or (2) the Username parameter to login.php.
2, via the id parameter.
2, via the forums array parameter in a search action.
0, by setting the admin cookie to 1.
0, via the id parameter in a sections action.
2, via the adid parameter.
4, via a long argument to the LIST command.  NOTE: some of these details are obtained from third party information.
0, via multiple long LOGIN commands.
4, via a crafted JPEG image with an embedded ICC profile.
3, via vectors involving a search for a remote disk on the local network.
4, via a crafted PICT image
3," via vectors associated with """"passing untrusted input"""" to unspecified API functions."
3, via vectors involving H.264 encoded media.
4, via an e-mail message that reaches a mailing-list archive
4, via a QuickTime Virtual Reality (QTVR) movie file with crafted panorama atoms.
4, via a QuickTime Virtual Reality (QTVR) movie file with crafted (1) maxTilt
4, via a crafted PICT image
4, via a crafted PICT image that triggers an out-of-bounds read.
2, via an SGI image with malformed Run Length Encoded (RLE) data containing a small image and a large row count.
4, via a crafted PostScript file that triggers a heap-based buffer overflow.
1, via crafted pen width and pen color opcodes that overwrite arbitrary memory.
2, via an image with a crafted ICC profile.
5, via a crafted Desktop file that generates an error when producing its icon
3, via unknown vectors.
4, via a PostScript file with a crafted bounding box comment.
2, via the Cat parameter.
3, via unknown vectors.
4, via a crafted font file.
2, via the delimiter argument to the explode function.  NOTE: the scope of this issue is limited since most applications would not use an attacker-controlled delimiter
4, via (1) the real name field
0, via vectors involving creation of a crafted file and use of the sendfilev system call
4, via a long Content-type HTTP header.
2, via the uid parameter to (1) friends.php
2, via the ItemID parameter.
2, via the autid parameter.
2, via the cid parameter
0, via the cid parameter
2, via the UID parameter.
4, via (1) a .. (dot dot) and possibly (2) a full pathname in the img parameter.  NOTE: some of these details are obtained from third party information.
4, via a long series of IMAP commands.
3, via unspecified vectors.
4, via the URL.
2, via the catid parameter in a (1) user_add
3, by sending a type 0 packet with an invalid version followed by another packet to TCP port 3784.
2, via the docID parameter.
1, via unknown vectors
3, by connecting to a non-responsive server
4, via a malformed request.
4, via a symlink attack on the album_info.xml temporary file.
4, via (1) the sessionid parameter in a livesupport startclientchat action to visitor/index.php; (2) the filter parameter in a news view action to index.php; or the Full Name field in a (3) account creation
0, via the customfieldlinkid parameter in a delcflink action.
4, via a large (1) group or (2) user list
2, via the adid parameter.
5, via a URL in the script_path parameter to (1) flat_read.php
4, via a .. (dot dot) in the id parameter to (1) news/index.dot and (2) getting_started/macros/macros_detail.dot.
2, via the (1) lOptionsOptions
2, via directory traversal sequences in the (1) script_path parameter to (a) options.php and the (2) lang_code parameter to (b) copy_vip.php and (c) process_edit_board.php in adminopts/.  NOTE: some of these vectors might not be vulnerabilities under proper installation.
2, via the cat parameter in a browse action.
2, via the pro_id parameter.
2, via the query_string
5, via a (1) save or (2) delete action to an unspecified component.
2, via the (1) id parameter to show_topic.php and the (2) user parameter to profile.php.
0, via the id parameter in a deadlink action.
2, via the page parameter.  NOTE: the id vector is already covered by CVE-2007-5679.
4, via a URL in the language_dir parameter.
2, via the kat parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) a .. (dot dot)
2, via the suchanzahl parameter.
2, via the id parameter.
2, via the URI.
4, via a .. (dot dot) in the URI.
4, via a direct request with (1) an IsAdmin=true cookie value or (2) no cookie.
3, via unspecified vectors.
5, via a crafted TTA file
4, via a .eop (aka playlist) file with a ProjectElement element that contains a long Name element.
0, via format string specifiers in a connection greeting (response).
2, via the query parameter in a blogs.search action.
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
3, by uploading a file with an executable extension
2, via unknown vectors
5, via vectors related to Digest authentication
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the category parameter.
2, via the id parameter.
2, via the id parameter.
0, via the NewPassword parameter to people.php
4, via a SignOutNow action to people.php.
0, via the dep parameter
2, via the test parameter
2, via the id parameter.
1, via malformed protocol messages.
2, via the adid parameter.
4, via (1) the id parameter in an edit_registry action to index.php
2, via the PageNo parameter.
2, via the cat_id parameter.
2, via the id parameter.
4, via a .. (dot dot) in the URI.
2, via the words parameter in a search action.
2, via the item_id parameter.
3, via unspecified vectors.
2, via the (1) Category name field under Advertisement Packages
2, via the info_hash parameter.
0, via the id parameter in a (1) view
2," via the qtitle parameter (aka """"Gallery or event name"""" field) in a search action."
2, via the name parameter.
4, via a symlink attack on the /tmp/rot.jpg temporary file.
5, via a crafted mmst link with a negative size value
4," via a long """"message response."""""
4, via a 1x1 JPEG image.
4, via a normal
1, via crafted packets for which the software path is used.
4, via a crafted Protocol Independent Multicast (PIM) packet.
4, via a malformed Protocol Independent Multicast (PIM) packet.
4, via a crafted IPv6 packet.
0, via an unspecified sequence of packets
4, via a series of crafted DNS requests
4, via (1) the query string to the ping program or (2) unspecified other aspects of the URI.
4, via a crafted video file that causes the stream_read function to read or write arbitrary memory.
2, via the search_link parameter.
2, via the department parameter to (1) is_xmlhttp.php and (2) is_flush.php.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the id parameter.
2, via unspecified vectors
2, via the PATH_INFO to courier/forgot_password.html.
4, via a ..\ (dot dot backslash) in the (1) blogpost
3, via unknown vectors.
4, via unspecified vectors. NOTE: this might be related to CVE-2007-3676.
1, via vectors related to (1) use of XQuery to issue statements; the (2) XMLQUERY
4, via a crafted CONNECT data stream that simulates a V7 client connect request.
4, via a direct request to conf/admins.php.
4, via (1) the id parameter in pages.php and (2) the price_max parameter in search.php.
2, via the email_user_key parameter.
4, via a crafted RPC request
5, via a crafted RPC request that triggers a heap-based buffer overflow
4, via a crafted .mx4 file.  NOTE: it was later reported that version 3 is also affected.
3, via long strUrl
5, via a URL in the first argument to the Open method
2, via the filter array parameter.
3," via unspecified """"zm_html_view_*.php"""" files."
4, via (1) the executeFilter function in zm_html_view_events.php and (2) the run_state parameter to zm_html_view_state.php.
5, via a symlink attack on a /tmp/roken#####.pike temporary file.
2, via unspecified vectors
4, via (1) the inactive parameter in a tasks action
0, via the tab parameter in a projects action
0, via the uid parameter in a member_details action.
1, via vectors related to authentication responses that lack a request identifier and recipient field.
4, via shell metacharacters in a filename.
4, via CRLF sequences in the query string.
4, via shell metacharacters in a feed URL.
4, via (1) a long argument on the command line; a long (2) WNSEARCHDIR
4, via vectors related to an out-of-memory condition.
1," via unspecified vectors related to """"error handling logic""""."
4, via a long filename.  NOTE: since ed itself does not typically run with special privileges
2, via the field parameter in a search action.
2, via the field parameter in a search action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted JTD document
4, via unspecified vectors.
2, via the (1) month and (2) year parameter.
2, via PHP sequences in the sort parameter
2, via the (1) page and (2) year parameters in an hstat_year action.
4, via a logout action.
4, via a .. (dot dot) in the env parameter in a weblog action to index.php
4, via a symlink attack on temporary files.
4, via a symlink attack on a temporary file.
4, via a symlink attack on the /tmp/filelist temporary file.
4, via a symlink attack on a temporary file.
4, via a symlink attack on temporary files.
4, via unspecified vectors.
4, via a long URI.
2, via the (1) user_id parameter in an edit action to user_admin.php
4, via an update_password action.
2, via directory traversal sequences in the URI.
0, via format string specifiers in a (1) .plan or (2) .project file.
2, via the page parameter in a search action to the default URI.
2, via the id parameter.
2, via the r parameter.
2, via the adid parameter in an adorder action.
2, via the word parameter in a claim action.
4, via a link corresponding to a (1) .plan or (2) .project file.
4, via a long command line.
4, via unspecified vectors.
4, via a JavaScript alert call with an argument that lacks breakable characters and has a length that is a multiple of the memory page size
2, via the ann_id parameter.
2, via the idcat parameter.
2, via the tage parameter.
0, via the cat parameter in a showcat action.
0, via the ordercode parameter in a veiworderstatus page.
4, via a crafted .opx file.
4, via a URL in the first argument to the Open method
4, via a crafted CONNECT/ATTACH data stream that simulates a V7 client connect/attach request.  NOTE: this may overlap CVE-2008-3858.  NOTE: this issue exists because of an incomplete fix for CVE-2008-3959.
4," via """"malicious packets."""""
4, via a crafted AI file.
4, via a certain editor field.
4, via (1) a certain referrer field in usercp2.php
2, via the p parameter.
1," via unknown vectors related to """"inconsistent handling of the USTATUS_IDENTIFIED state."""" NOTE: this issue exists because of an incomplete fix for CVE-2008-3920."
4, via a crafted man page
4, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
5, via unknown vectors.  NOTE: the previous information was obtained from the January 2009 CPU.  Oracle has not commented on reliable researcher claims that this issue is a SQL injection vulnerability that 
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
5, via unknown vectors.  NOTE: the previous information was obtained from the Oracle October 2008 CPU. Oracle has not commented on reliable researcher claims that this issue allows bypass of the lockout mechanism using brute force guessing of credentials and a response discrepancy information leak when the password is correct.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4," via a document that contains a """"Content-Disposition: attachment"""" header and is accessed through a cdo: URL"
4, via a Word document with a crafted lcbPlcfBkfSdt field in the File Information Block (FIB)
2, via the cat_path parameter.
4, via a .. (dot dot) in the URI.
4, via a long IMAP APPEND command with certain repeated parameters.
2, via the artid parameter to (1) acme/article/comment.php and (2) prime/article/comment.php.
2, via the artid parameter.
2, via the (1) file and (2) HelpFile parameters to parse.php
2, via the page parameter.
4, via a long third argument to the CreateURLShortcut method.
0, via arguments to the RunApp method.
2, via the RegistryValue method
2, via the sid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) param
2, via the id parameter.
2, via the id_cat parameter.
2, via the msg parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the sid parameter in a pickup action or (2) the sql_cid parameter
0, via the pageid parameter in a DBpAGE action.
2, via the id parameter in a detail action.
4, via a .. (dot dot) in the topic parameter.
2, via an HTTP POST request with a large Content-Length.
3, via unspecified vectors.
5, by setting a bsm cookie.
2, via the name parameter in an addItemPost action to index.php.  NOTE: some of these details are obtained from third party information.
0, via the go parameter in a browse action.
4, via a symlink attack on (1) cut.$$
2, via the site parameter in an open action.
4, via a Beatcraft Project (aka bcproj) file with a long string in a certain instruments title field.
2, via the sid parameter.
2, via the sid parameter.
2, via the id parameter in an addtocart action
2, via the site parameter in an open action.
2, via the artid parameter.
2, via the (1) :limit and (2) :offset parameters
4, via a request to server_databases.php with a sort_by parameter containing PHP sequences
0, by calling CREATE TABLE on a MyISAM table with modified (1) DATA DIRECTORY or (2) INDEX DIRECTORY arguments that are associated with symlinks within pathnames for subdirectories of the MySQL home data directory
4," via a """"passed in"""" URL."
4, via a symlink attack on a tmp$RANDOM.tmp temporary file.  NOTE: there may not be common usage scenarios in which tmp$RANDOM.tmp is located in an untrusted directory.
4, via a long URL in the second argument to the Connect method.  NOTE: this issue is not a vulnerability in many environments
4, via a direct request to install/info.php
4, via a long type attribute in a quicktime tag (1) on a web page or embedded in a (2) .mp4 or (3) .mov file
4, via unspecified vectors.
3, via unspecified vectors.
2," via unspecified vectors involving """"multiple web forms."""""
2, via the (1) user or (2) pass parameter to login.php
4, via (1) the search parameter in a search.quick action to search.php and (2) the name parameter in a sendtofriend action to sendtofriend.php.
4, via a crafted PNG file
4," via (1) a certain """"show privilege"""" command to the /level/15/exec/- URI"
4, via a crafted Flash animation
1, via vectors related to handling of tags with (1) the -t option and (2) the :tag command in the (a) vi
4, via a long first argument to the Archive method.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via multiple deauthentication (DeAuth) frames.
3, via multiple RETR commands
4, via a URL in the footer_file parameter.
4, via a URL in the shop_this_skin_path parameter.
2, via the query string.
2, via the query string.
4, via a URL in the web_root parameter to (1) includes/function_core.php and (2) templates/layout_lyrics.php.
2, via the es_id parameter.
2, via the id parameter.
0, via the cid parameter in a showcat action.
5, via a modified approved field and (2) change the visit-counter value via a modified counter field.
2," via the """"Link page header"""" field."
0, via the id parameter
4, via a .. (dot dot) in the neturl parameter.
2, via the we_objectID parameter.
4, via a .. (dot dot) in the (1) module or (2) action parameter in (a) www/index.php; the (3) module
0, via the cat parameter
4, via a .. (dot dot) in the (1) flag and (2) inc parameters.
2, via the page (pageid) parameter.
2, via unknown vectors related to the Solaris Access Control List (ACL) implementation.
4, via a combination of crafted order and order_by parameters in a search_all action.
4, via a URL in the g_site_url parameter.
4, via a direct request
5, by attempting to URL encode a string containing many instances of an invalid character.
2, via the form_username parameter (aka user name field).
2, via an invalid dob parameter
2, via the name parameter.
2, via the lnkid parameter.
2, via the random parameter to the default URI.
2, via the (1) currentpath
2, via the (1) ucat parameter to upgrade.php and the (2) id parameter to linkadmin/edit.php.
2, via the oyun parameter.
2, via the c parameter.
2, via the (1) page_id parameter to smileys.php and the (2) q parameter to search.php.
4, via a username in the g_dbuser parameter and a password in the g_dbpwd parameter
2, via the patron parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter in a documentos action
2, via the id_doc parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the template parameter.
1," via unknown vectors related to """"injection of control characters."""""
4, via a symlink attack on the extract-table.csv temporary file.
4, via a symlink attack on the /tmp/eglog temporary file.
4, via a long username parameter.
4, via a long DNS reply with many entries in the answer section
3, via unspecified vectors.
4, via a crafted MPEG-4 (MP4) file.
0, via the idd parameter in a deadlink action.
4, via a recook cookie.
2, via the city parameter.
2, via the category parameter in a Search action to index.php.  NOTE: some of these details are obtained from third party information.
4, via a crafted Microsoft Excel file that triggers an out-of-bounds memory access
2, via the headers in a crafted CPIO archive
4, via a crafted call to (1) i386_set_ldt or (2) i386_get_ldt.
2, by running an application that is dynamically linked to libraries on an NFS server
5, via unspecified vectors.  NOTE: this may be related to the WLB-2008080064 advisory published by SecurityReason on 20080822; however
4, via a crafted date string
4, via unspecified vectors.
4, via a malformed UDF volume in a crafted ISO file.
4, via a large XML document.
4, via a large XML document.
0, by restoring the device from a backup.
2, via an executable file with the content type indicating no application association for the file
5, via a crafted embedded font in a PDF file.
2, via an SID cookie.
4, via a .. (dot dot) in the URI.
0, by setting the usuario and pass cookies to 1.
4, via a crafted CTCP response.
1, via crafted (1) Rows and (2) Cols properties to the (a) ExpandAll and (b) CollapseAll methods
4, via a crafted Excel spreadsheet that contains a malformed object
0, by triggering an exception that causes the virtual CPU to perform an indirect jump to a non-canonical address.
3, via unknown vectors.
4, via unspecified vectors.
4, via a large number of requests with duplicate request headers.
4, via a large integer value in the first argument to the PutProperty method.  NOTE: this issue was disclosed by an unreliable researcher
4, via a long string in the second argument to the GetObject method.  NOTE: this issue was disclosed by an unreliable researcher
4, via a string argument to the SetPassword method.  NOTE: this issue could not be reproduced by a reliable third party.  In addition
5, via shell metacharacters in unspecified input related to the SSL_CLIENT_CERT environment variable. NOTE: in some environments
2, via the URI.
4, via shell metacharacters in the query parameter to (1) whois.php or (2) netcmd.php.
4, via (1) the j_username parameter to j_acegi_security_check
4, via a long response to the PWD command.
4, via a crafted .ZIP file.
4, via a series of keypress
2, via the (1) item
4, via a URL in the oe_classpath parameter.
4, via a .. (dot dot) in the design parameter.
4, via a .. (dot dot) in the act parameter to index.php.
0, via the idcat parameter to showtopic.php.
0, via the isname parameter in a newtopic action.
1, by setting the infouser cookie to 1.
2, via the apa_album_ID parameter.
2, via the apa_album_ID parameter.
2, via the URL parameter to (1) edit.php and (2) list.php in articles/; (3) list_blogs.php and (4) rankings.php in blogs/; (5) calendar/index.php; (6) calendar.php
2," via an HTML document containing a carriage return (""""\r\n\r\n"""") argument to the window.open function."
3, by setting a cookie with admin=yes and login=admin.
2, via the CatID parameter.
2, via the aid parameter.
4, via a .. (dot dot) in the language parameter to comments.php
2, via the newsid parameter.
2, via the (1) id or (2) page parameter in a details action.
2, via the cat_id parameter in a list action.
4, via a .. (dot dot) in the p parameter.
2, via the uid parameter in a viewprofile action to index.php.
2, via the cat_id parameter. NOTE: although one component of Linkarity is distributable PHP code
2, via the cat parameter to index.php.
2, via the id parameter.
4, via (1) the nid parameter to index.php in a View action to the News module; (2) the vid parameter to index.php in a Result action to the Voting module; (3) the fid parameter to index.php in a ShowForum action to the Forum module; (4) the tid parameter to index.php in a ShowTopic action to the Forum module; (5) the uname parameter to index.php in a UserInfo action to the Account module; or (6) the module parameter to index.php
2, via the id parameter.
4, via a .. (dot dot) in the path parameter to the default URI.
4, via a crafted IOCTL request to \Device\DLPTokenWalter0.
4, via a certain DLMFENC_IOCTL request to \\.\DLKPFSD_Device that overwrites a pointer
2," via the (1) id parameter in the """"page"""" page and (2) txtSearch parameter in the """"Search"""" page."
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, by uploading a file with an executable extension
2, via the sid parameter.
2, via the (1) sid parameter to pics.php and the (2) a parameter to view.php.
2, via the aIDS parameter.
2, via the aIDS parameter.
2, via the jid parameter.
0, via the id parameter in a playgame action.
2, via the p parameter.
2, via the mid parameter.
2, via the sideid parameter.
2, via the id parameter.
2, via the id parameter.
4, via a malformed HTTP request
1, via Javascript that calls the alert function with a URL-encoded string of a large number of invalid characters.
1, via Javascript that calls the alert function with a URL-encoded string of a large number of invalid characters.
2, via unknown vectors involving instantiation by Internet Explorer.
2, via long invalid arguments.
0, via the action parameter to zodiac/servlet/zodiac.
1, by sending packets over a local wireless network that specify long ESSIDs.
5, via a .. (dot dot) in an RPC call with opnum 0x10A.
4, via a crafted request.
4, via a crafted request
1, via crafted authentication credentials
3, via unspecified vectors.
1, via crafted HTTP headers
4, via a symlink attack on unspecified .tmp files.
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
0, via the item parameter in a contact modify action.
0, via the s parameter in a comments action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via directory traversal sequences in the file parameter within a delfile action.
0, via the date parameter in a new action.
5, by uploading a .php file
1, via malformed compressed files.  NOTE: some of these details are obtained from third party information.
0, via the skin parameter
2, via the itemsxpag parameter.
2, via the itemsxpag parameter.
4, via a long Created By field in a .torrent file.
2, via the (1) key parameter to search.php and the (2) id parameter to down.php.
2, via the mod parameter.
2, via the q parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the INSTALL_FOLDER parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a symlink on the (1) /tmp/feta.install.$USER and (2) /tmp/feta.avail.$USER temporary files.
4, via a Realtime Transport Protocol (RTP) packet with malformed headers.
3, via unspecified vectors.
0, via (1) the fn parameter during a dload action
4, via a long hostname in a PRIVMSG message.
2, via the (1) dbserver
4, via a certain METHOD_NEITHER IOCTL request to \Device\esiasdrv that overwrites a pointer.
4, via a long CWD request.
4, via a .. (dot dot) in the lang parameter to actions.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cid parameter in a product action.
3, via the uname_search parameter.  NOTE: some of these details are obtained from third party information.
2, via the game_id parameter.
2, via the news_id parameter.
2, via the news_id parameter.
2, via the cat_id parameter.
2, via the cat_id parameter.
2, via the cat_id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the coder_id parameter.
2, via an M3U playlist file that contains a long absolute pathname.
2, via an SWF file containing long control parameters.
4, via a symlink attack on temporary files in (1) backup_radacct
4, via a symlink attack on temporary files.
4, via a symlink attack on the /tmp/sympa_aliases.$$ temporary file.  NOTE: wwsympa.fcgi was also reported
4, via a symlink attack on the test.alert.log temporary file.
3, via unspecified vectors.
2, via an XML schema definition with a large maxOccurs value
0," by setting the name parameter to """"users"
3, via the (1) site_name
2, via the (1) name and (2) id parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via directory traversal sequences in the theme_chosen parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the usNick cookie.
2, via the id parameter.
2, via the v_cat parameter.
2, via the v_cat parameter.
2, via the event_id parameter.
4, via the catid parameter.
4, via a .. (dot dot) in the (1) refer parameter to main.php and the (2) file parameter to edit.php.
4, via a URL in the DFF_config[dir_include] parameter to (1) DFF_affiliate_client_API.php
0, via access control dialogs disguised as normal graphical elements
5," via an M3u file with a """"long entry."""" NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
4," via a """"nonstandard URL argument"""" to the OpenDocument command. NOTE: due to lack of details from the vendor"
4, via unknown vectors.
3, via unknown vectors.
3, by uploading a file with an executable extension
2, via multiple attempts to access a virtual address in a PAGE_NOACCESS memory page.
3, via nested BBcode image tags.
4, via a font tag with a long color value
2, via the pic parameter.
2, via the id parameter.
2, via the (1) sprache parameter to index2.php and the (2) artikel parameter to index.php.
4, via a .. (dot dot) in the target parameter to (1) index2.php and (2) index.php.
2, via the remark parameter.
2, via the INFO_RAID_ID parameter.
4, via a .. (dot dot) in the src parameter to (1) listen.php and (2) download.php.
2, via the user_name parameter.
2, via the user_name parameter.
0, via the special parameter in a performerid action.
4, via a .. (dot dot) in the skin parameter to (1) index.php
2, via the kat_id parameter in a kategorier action.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the id parameter in an edit action.
4, via a URL in the _ENV[asicms][path] parameter to (1) Association.php
0, via the keyword parameter in a search action.
3, via unknown vectors.
0, by using the VNC console for a connection
4, via a crafted HTTP GET request.
4, via a long second argument to the TimeSpanFormat method.
4, via a long second argument to the ConnectServer method.
4, via an IKE_SA_INIT message with a large number of NULL values in a Key Exchange payload
4, via a symlink attack on temporary files and directories.
4, via a crafted request.
2, via the text parameter
5, via an XSPF playlist file with a negative identifier tag
2, via the p parameter.
2, via the cat parameter.
2, via the Description field for search results
2, via the kat parameter.
2, via the linkid parameter.
4," via (1) a long -cmd argument and (2) unspecified vectors related to """"a bunch of potential string overflows."""""
4, via an INIT-ACK that states the peer does not support AUTH
0, via a full pathname in the SavePkcs8File method.
0, via a full pathname to the SaveLastError method.
4, via a direct request to admin/home.php.
2, via the DownloadAndExecute method.
2, via the AddFile and RunScheduledJobs methods.  NOTE: this could be leveraged for code execution by uploading executable files to Startup folders.
4, via (1) the username parameter to admin/login.php and (2) the post parameter to admin/news.php.
2, via the (1) lang[access_forbiden] and (2) lang[ident_title] parameters.
4, via a .. (dot dot) in the p parameter.
2, via the cid parameter.
2, by setting the ValidUserAdmin cookie.
2, via the habari_username parameter.
4, via a .. (dot dot) in the md parameter.
2, via the keywords parameter in a search_games action.
2, via the itemid parameter.
0, via the id parameter to (1) dish.php and (2) menu.php.
2, via the (1) location_id parameter to locationdel.php and (2) vlan_id parameter to vlanedit.php.  NOTE: the vlanview.php and vlandel.php vectors are already covered by CVE-2007-6579.
4, via (1) a malformed AAC file
2, via the sayfa parameter.
2, via the keywords parameter to (1) forums.asp and (2) content.asp.
2, via the sortby parameter.
3, by using server-supplied values to calculate a shared key.
2, via the id parameter.
4, via a crafted request to procedure 8 in program 100000 (rpcbind)
2, via the area parameter to (1) month.php
2, via the adid parameter.
1, by setting the fn-loggedin cookie to 1.
0, via the feed_id parameter to index2.php.
0, via the newsletter parameter
2, via the itemID parameter in the RGalleryImageWrapper page in index.php.
4, via the post_id parameter.
4, via unspecified vectors.
4, via a crafted message.  NOTE: some of these details are obtained from third party information.
2, via unknown vectors related to the administrative page
4, via shell metacharacters in filenames used by the backup process.
1, via unknown vectors in the advanced search feature.  NOTE: this is probably a variant of CVE-2008-4121.
4, via a symlink attack on a temporary file.
3," via vectors involving a modified input filename in which (1) a final """"z"""" character is replaced by a """"t"""" character or (2) a final """"t"""" character is replaced by a """"z"""" character."
3, via shell metacharacters in unspecified input.
2, via the id parameter in a view action.
2, via the sortby parameter.
4, via a modified X-Forwarded-For HTTP header.
2, via PHP sequences in the sort parameter
2, via the page parameter.
2, via the (1) PATH_INFO or the (2) option
1, by setting the PHPSESSID parameter.
2, via the eventdate parameter.
2, via the (1) orderby parameter to admin/cms/images.php and the (2) nav_id parameter in an editrecord action to admin/cms/nav.php.
4, via a long SecretKey property.
4, via a TiVo TY media file with a header containing a crafted size value.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a long URL property.  NOTE: some of these details are obtained from third party information.
2, via the id parameter to (1) news_read.php and (2) gifts_show.php.
2, via the Category parameter.
4, via a .. (dot dot) in the rss parameter.
4, via a .. (dot dot) in the folder parameter to index.php.
2, via the keyword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the search box.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) s and (2) ip_address parameters.
2, via the k parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the (1) path[docroot] and (2) component parameters.
0, via the cat_id parameter in browse mode.
2, via the name parameter.
4, via a long HTTP Host header
4, via a malformed USB Request Block (URB).
4, via unknown packets.
4," via a malformed Tamos CommView capture file (aka .ncf file) with an """"unknown/unexpected packet type"""" that triggers a failed assertion."
4, via a packet with an invalid length
2, via certain packets that trigger an exception.
0, via a sort parameter containing PHP sequences
3, via unknown vectors.
4, via a redirect that specifies a crafted URL.
0, by predicting the cache pathname of a cached Java applet and then launching this applet from the cache
2," via the anchor identifier (aka the """"optional fragment"""")"
2, via the ExecutePreferredApplication method.
4, via a .. (dot dot) in the (1) user[language] and (2) user[template] parameters to (a) init.inc.php
2, via the article parameter.
4, via a URL in the IP parameter.
2, via the id parameter.
4, via a .. (dot dot) in the lien_2 parameter.
2, by setting the phorum_admin_session cookie to 1.
2, via the id parameter.
2, via the qID parameter.
2, via the cid parameter to index.php.
2, via the catid parameter.
2, via the adid parameter.
2, via directory traversal sequences in the help_file parameter
5, via a URL in the lang parameter to (1) page/forums/bottom.php and (2) page/forums/category.php.
1," by setting the PostCommentsAdmin cookie to """"logged."""""
4, via an ftp:// URL for an HTML document within a (1) JPG
4, via an ftp:// URL for an HTML document within a (1) JPG
2, via the query string
4, via a long string to the (1) open (aka SSH_FXP_OPEN)
2, via the addr1 parameter.  NOTE: this might be resultant from a CSRF vulnerability
2, via the (1) Run and (2) PerformUpdateAsync methods
4, via a long PlainTextPassword property.  NOTE: code execution might not be possible in 13.0.
0, via the openid_trust_root parameter and an inconsistent openid_return_to parameter
2, via the p parameter.
2, via the (1) replytotext
4, via a request that sets the wpcr_hidden_form_input parameter.
3, via the showtopic parameter.
2, via the dom parameter.
2, via the id parameter.
2, via the (1) password and (2) user_name parameters.
2, via the catid parameter.
2, via the pid parameter.
4, via unspecified vectors.
2, via unspecified vectors to (1) search.asp and (2) cartUtil.asp.
2, via unknown attack vectors related to the LDAP JDK library.
0, via the pg parameter
1, by setting the tlNews_login cookie to admin.
2, via the url parameter.
2, via the forum parameter.
2, via the id parameter.
2, via the date parameter.
2, via the (1) id parameter to (a) add_postit.php (b) delete.php
4, via a .. (dot dot) in the fichier parameter.
4, via a .. (dot dot) in the id parameter.
2, via the jsMakeSrc parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this issue is probably in the HTMLArea HTMLTidy (HTML Tidy) plugin
4, via a long argument to the (1) rename and (2) realpath parameters.
4, via the PHP_SELF variable.
4, via a .. (dot dot) in the dir parameter in a show_error action.
2, via the pollID parameter in a results operation.  NOTE: this issue was disclosed by an unreliable researcher
2, via the member parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, by uploading a file with (1) .htm
0, via the nom parameter to a-b-membres.php.  NOTE: the goodies.php vector is already covered by CVE-2007-4808.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the obj parameter.
4, via a .. (dot dot) in the theme parameter.
2, via the cx parameter.
4, via a contact description with a large length
2, via the cat parameter in a showTests task.
2, via the galid parameter in a showimages action.
0, via a long filename in a .zip file.
4, via a .. (dot dot) in the langage parameter.
2, via the poll_id parameter.
2," by setting the tlAds_login cookie to """"admin."""""
1," by setting the aflog_auth_a cookie to """"A"""" or """"O"""" in (1) edit_delete.php"
2, via the category_id parameter.
4, via a URL with a hostname containing many &nbsp; (Non-Blocking Space character) sequences
3, via unknown vectors.
3, via unknown vectors.
1, via unknown vectors related to contributed modules.
2, via the History Search results page
3, via unknown vectors.
3, by uploading a Perl module and accessing it via a crafted URL.
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the aid parameter in a showalbum action to index.php.  NOTE: some of these details are obtained from third party information.  NOTE: this issue was disclosed by an unreliable researcher
4, via (1) the community title
0, via the sortField parameter to unspecified components.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via vectors related to templates and (1) a dollar-sign character
1, via vectors related to templates and a \ (backslash) before a dollar-sign character.
4, via a Trojan Horse program in an unspecified directory that is associated with an insecure RPATH.
3, via unknown vectors.
4, via a crafted PDF document that calls an AcroJS function with a long string argument
0, via vectors involving HTTP response headers.
3, via unknown vectors.
3, via vectors related to loose interpretation of an ActionScript attribute.
1," via unknown vectors related to """"input validation errors."""""
4," via (1) a long """"Zwitterion v"""" HTTP header"
3, via the SaveDocumentAs method or (2) read or execute arbitrary files via the OpenDocument method.
5, via a symlink attack on a directory under (1) /var/lock or (2) /var/run.  NOTE: this issue exists because of a race condition in an incorrect fix for CVE-2008-3524. NOTE: exploitation may require an unusual scenario in which rc.sysinit is executed other than at boot time.
4, via a Trojan horse Python file in the current working directory
2, via large integer values in certain arguments to the crop function
4, via a Trojan horse .valgrindrc file in the current working directory
4, via BBcode IMG tags.
4, via the item_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via shell metacharacters in the file parameter during a down_file action.
4, via a .. (dot dot) in a GET request.  NOTE: this can be leveraged with CVE-2008-4874 for unauthenticated access to sensitive files such as (1) save.dat and (2) apply.log
2, via the request URL
3, by uploading a file with an executable extension
0, via the cat parameter
0, via the id parameter
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the c parameter.
0, via the id parameter in a (1) profile page (profile.php) or (2) game page (game.php).  NOTE: some of these details are obtained from third party information.
2, via the error parameter to index.php.  NOTE: some of these details are obtained from third party information.
0, via the users parameter in an addbuddy operation in a buddys action.
2, via the id parameter.
2, via the hash parameter.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the art parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the rate parameter in a submit rate action.
4, via unspecified vectors.
2, via the id parameter.
2, via the username parameter.
2, via the userid parameter.
3, via the (1) comment[author] (Name) and (2) comment[url] (Website) parameters.
2, via the search[published_at] parameter.
2, via the l_id parameter.  NOTE: some of these details are obtained from third party information.
4, via a symlink attack on a temporary file.
4, via unspecified vectors.
5, via a file:// URL argument to the showDocument method.
4, via a URL in the data parameter.
2, via the fotoID parameter.  NOTE: this issue was disclosed by an unreliable researcher
4, via a .. (dot dot) in the delete parameter.
4, via a snapshot with a malformed VMDK delta disk.
0, via a full pathname to the savePageAsBitmap method.
4, via a direct request.  NOTE: some of these details are obtained from third party information.
4, via a long (1) ImageURL property
4, via a malformed (1) MIDI or (2) DAT file
2, via the url parameter in a removesubscriptions action to moderation.php
2, via an absolute pathname in the path parameter and arbitrary content in the content parameter.  NOTE: this can be leveraged for code execution by writing to a file under the web document root.
3, via an hfsplus filesystem image with an invalid catalog namelength field
5, via a symlink attack on a /tmp/aview#####.pgm temporary file.
4, via a symlink attack on a /tmp/faxsp.##### temporary file.
4, via a symlink attack on a /tmp/log.obr.##### temporary file.
4, via a symlink attack on (a) /tmp/#####
4, via a symlink attack on (a) /tmp/#####.lex.cc
4, via a symlink attack on the /tmp/aptoncd temporary file.
4, via a symlink attack on (a) /tmp/arb_fdnaml_*
4, via a symlink attack on the (1) /tmp/audiolink.db.tmp and (2) /tmp/audiolink.tb.tmp temporary files.
5, via a symlink attack on the (a) /tmp/error.txt
4, via a symlink attack on /tmp/v-recorder*-out temporary files.
4, via a symlink attack involving a /tmp/amlabel-cdrw.##### temporary directory.
4, via a symlink attack on the /tmp/set_output temporary file
4, via a symlink attack on the /tmp/dhis-dummy-log-engine.log temporary file.
4, via a symlink attack on the /tmp/ddj_fest.tmp temporary file.
4, via a symlink attack on (a) /tmp/cil#####
4, via a symlink attack on the tmp/gccross2.log temporary file.  NOTE: the vendor disputes this vulnerability
4, via a symlink attack on (a) /tmp/awstats.log
4, via a symlink attack on a /tmp/*.log temporary file.
4, via a symlink attack on (1) /tmp/.firehol-tmp-#####-*-* and (2) /tmp/firehol.conf temporary files.  NOTE: the vendor disputes this vulnerability
5, via a symlink attack on the /tmp/debugbuf temporary file.
4, via a symlink attack on (1) /tmp/*-#####.pid
4, via a symlink attack on a /tmp/ssh-agent.##### temporary file.
4, via a symlink attack on a /tmp/*.cxx temporary file.
5, via a symlink attack on the /tmp/gdrae/palabra temporary file.
4, via a symlink attack on (1) /tmp/geo.google
4, via a symlink attack on (1) /tmp/*-tmp.ps and (2) /tmp/bboxx-* temporary files.
4, via a symlink attack on a /tmp/any-##### temporary file.
4, via a symlink attack on (1) /tmp/liguidsoap.liq
4, via a symlink attack on (a) /tmp/snap##### and (b) /tmp/nightly##### temporary files
4, via a symlink attack on the (a) /tmp/bwk
4, via a symlink attack on a /tmp/sdiff.##### temporary file.
4, via a symlink attack on (a) /tmp/vsftpd.conf
4, via a symlink attack on the /tmp/iozone.log temporary file.
4, via a symlink attack on (1) /tmp/_vf#?????
4, via a symlink attack on a /tmp/mailgo##### temporary file.
4, via a symlink attack on (1) /tmp/i2my#####.1 and (2) /tmp/i2my#####.2 temporary files.
4, via a symlink attack on (1) /tmp/*.xml and (2) /tmp/*.backup temporary files.
4, via a symlink attack on a /tmp/mmp##### temporary file.
4, via a symlink attack on (a) /tmp/ogle_audio.#####
4, via a symlink attack on the (1) /tmp/postfix_groups.stdout
4, via a symlink attack on (a) /tmp/opt.fmt
4, via a symlink attack on (1) /tmp/ipacct.#####.prefixes
4, via a symlink attack on the /tmp/cccp_tmp.txt temporary file.
4, via a symlink attack on the /tmp/perl.robot.log temporary file.
4, via a symlink attack on the /tmp/rkhunter-debug temporary file. NOTE: this is probably a different vulnerability than CVE-2005-1270.
4, via a symlink attack on (a) /tmp/SciLink#####1
4, via a symlink attack on (a) /tmp/dpkg.#####.tmp
4, via a symlink attack on the /tmp/memleaktest.log temporary file.
4, via a symlink attack on (a) /tmp/env#####
4, via a symlink attack on the (a) /tmp/ldconfig.tmp
4, via a symlink attack on a /tmp/pscal##### temporary file.
4, via a symlink attack on the /tmp/args temporary file.
4, via a symlink attack on a /tmp/Mosaic.*pid temporary file.
5, via a symlink attack on the /tmp/redirect.log temporary file. NOTE: this vulnerability is only limited to debug mode
4, via a symlink attack on the /tmp/initramfs.debug temporary file.  NOTE: the vendor disputes this vulnerability
4, via a symlink attack on the /tmp/zenity temporary file.  NOTE: the vendor disputes this vulnerability
4, via a symlink attack on the /tmp/twiki temporary file.  NOTE: the vendor disputes this vulnerability
4," via a long ping packet (""""ping of death"""").  NOTE: this issue could not be reproduced by a third party"
2, via the WriteFile method.  NOTE: this could be leveraged for code execution by creating executable files in Startup folders or by accessing files using hcp:// URLs.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
4, via a crafted cookie.
4, by responding to the QUIT command with a close of the TCP connection instead of the expected 221 response code.
4, via a symlink attack on a (1) /tmp/lazarus.tgz temporary file or a (2) /tmp/lazarus temporary directory.
1, via unspecified vectors
0, via an hfs filesystem image with an invalid catalog namelength field
4,send commands to
2, via long CDDB data.
2, via the header of an invalid CUE image file
4, via a symlink attack on the /tmp/filter.debug temporary file.  NOTE: the vendor disputes this vulnerability
5, via a packet with an invalid length.
2, via an an invalid RealText (rt) subtitle file
2, via the cid parameter.
4," via a sequence of """"Get NCP Extension Information By Name"""" requests that cause one thread to operate on memory after it has been freed in another thread"
2, by setting the (1) myforum_login and (2) myforum_pass cookies to 1.
4, via a direct request to admin/home.php.
4, via (1) the elementid parameter in a generatedreportresults action to the ReportTree program
4, via a multi-threaded application that makes many calls to UnhookWindowsHookEx while certain other desktop activity is occurring.
4, via the manufacturers_id parameter.
2, via the username parameter.
4, via a crafted VBA project file
0, via the PostID parameter to index.php.
4, via a URL in the mosConfig_live_site parameter.
2, via the (1) email and (2) password parameters to customer_login.php and the (3) user_name and (4) user_pass parameters to admin/index.php. NOTE: some of these details are obtained from third party information.
0, via the department_id parameter to index.php.
0, via the department_id parameter to index.php.
2, via the film parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the user parameter
5, via a Javascript event in the new_language parameter in a login action.
4, via a URL in the DIR parameter to (1) export_batch.inc.php
2, via the URL.
0, via directory traversal sequences in the thefile parameter.
4, via a URL in the Tipo parameter.
2, via the id parameter.
2, by setting the tlGuestBook_login cookie to admin.
4, via a URL in the loadadminpage parameter.
2, via the q parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via the (1) begin parameter to index.php and the (2) searchtext parameter to search.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the proj_id parameter.
4, via a malformed FLV file.
4, via a long argument to the CanUninstall method.
4, via the linkid parameter.
4, via unspecified vectors.
2, via the ID parameter to (1) email.php and (2) question.php
4, via a call to the (1) Pages.Save
0, via PHP code embedded in bbcode in the email parameter
4," via vectors involving an """"invalid extensibleMatch filter."""""
3, via unknown vectors.
2, via unknown attack vectors.
2, via the page parameter.
2, via unspecified vectors
4, via a crafted BMP image
3, via certain (1) APPE
4, via a long argument to an arbitrary command
2, via unknown attack vectors.
2, via the keyword parameter.
4, via a long request string.
2, via the res parameter.
2, via the u parameter.
0, by setting the type cookie value to admin.
2, via the search_query parameter.
4, via (1) the aid parameter to article_details.php
2, via the X-Forwarded-For HTTP header.
4," via an """"invalid beacon/probe response."""""
4, via a symlink attack on the (1) /tmp/mounted-map or (2) /tmp/raided-map temporary file.  NOTE: the vendor disputes this issue
4, via a symlink attack on the /tmp/tkusr.pgm temporary file.
4, via a symlink attack on a (1) /tmp/tkman##### or (2) /tmp/ll temporary file.
4, via a symlink attack on a /tmp/passwdehd.##### temporary file.
4, via a symlink attack on a /tmp/#####.updatejail temporary file.
4, via a symlink attack on a (1) /tmp/opr.ini.##### or (2) /tmp/lpt*.zip temporary file.
4, via a symlink attack on a /tmp/multicast.tar.##### temporary file.
4, via a symlink attack on a /tmp/pr.##### temporary file.
4, via a symlink attack on a (1) /tmp/*.debug or (2) /tmp/*.env temporary file.
4, via a symlink attack on the /tmp/nvidia-cg-toolkit-manifest temporary file.
4, via a symlink attack on a /tmp/runltp.mainmenu.##### temporary file.
4, via a symlink attack on the /tmp/accession temporary file.
4, via a symlink attack on the /tmp/outer.odt temporary file.
4, via a symlink attack on a /tmp/##### temporary file.
4, via a symlink attack on a /tmp/##### temporary file.
4, via a symlink attack on a /tmp/maildirsync-*.#####.log temporary file.
4, via a symlink attack on the /tmp/err.log temporary file.
5, via a symlink attack on a (1) /tmp/inmail#####.log or (2) /tmp/inmail#####.stdin temporary file.
4, via a symlink attack on the (1) /tmp/spell-check-debug.log
4, via a symlink attack on the /tmp/blue.log temporary file.
4, via a symlink attack on a (1) /tmp/header.##### or (2) /tmp/body.##### temporary file
4, via a symlink attack on a (1) /tmp/*.inetd.conf or (2) /tmp/pxe.conf.*.tmp temporary file.
4, via a symlink attack on a (1) /tmp/makefile.tau.*.##### or (2) /tmp/makefile.tau*.##### temporary file
3," via vectors involving """"simply skipping the auth stage."""""
4, via a large string length argument
2, via multiple invalid requests with the HTTP GET
0, via the id parameter to (1) viewarticle.php and (2) viewarticle2.php.
2, via the (1) id parameter to (a) viewarticle.php and (b) viewarticle2.php and the (2) PATH_INFO to viewarticle.php.
0, via the pri parameter to (1) index.php
2, via the riddleid parameter.
2, via the tipid parameter.
2, via the drinkid parameter.
2, via the itemid parameter.
2, via the (1) q parameter to (a) search.jsp
2, via unspecified attack vectors.
2, via the jokeid parameter.
4, via a .. (dot dot) in a response to a LIST command
4, via (1) a long 0x02 command to the remote administration service on TCP port 13500 or (2) a long invalid control filename to LPDService.exe on TCP port 515.
4, via a long file:// URI.  NOTE: this might overlap CVE-2008-5680.
0, via instant messages containing large numbers of emoticons.
2, via unknown vectors related to race conditions in inotify watch removal and umount.
2, via an XML sequence containing an opening delimiter without a closing delimiter
1, via crafted inputs that influence the default language path ($path variable).  NOTE: this issue has been disputed by a vendor
4, via a crafted URL to the redirect_to function.
2, via the SUB parameter.
2, via the (1) poll_id parameter to poll.php and the (2) sp_id parameter to staticpages.php.
2, via the forumid parameter.  NOTE: this might overlap CVE-2008-2334
2, via the searchterms parameter.  NOTE: this might overlap CVE-2007-4024.
2, via the id parameter.
4, via (1) the recid parameter to cms/form/read.php
2, via the category parameter.
2, via the lid parameter in a detail_adverts action.
2, via the pow parameter.
4, via a URL in the gorumDir parameter.
0, via the id parameter in a detail action to index.php.
4, via a .. (dot dot) in the conteudo parameter.  NOTE: in some environments
2, via the conteudo parameter.
2, via the l_vote_done parameter.
0, via the articleid parameter in an add action.
4, via a URL in the mosConfig_absolute_path parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a .. (dot dot) in the taal parameter to (1) backup.php and (2) gb_voegtoe.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the User-Agent HTTP header.
4, via a .. (dot dot) in the file parameter.
5, via a URL in the PATH_TO_CODE parameter to (1) script/init/createallimagecache.php
2, via the item_id parameter.
2, via the artid parameter in a search detail action.
2, via the annee parameter.
2, via the link parameter.
2, via the cid parameter.
3, by uploading a file with an executable extension
2, via the username parameter.
2, via the pid parameter.
5, via unspecified vectors.
2, via the PATH_INFO to the default URI under (1) SearchResults/ and (2) Services/ in dsdn/dsweb/
2, via the ma_cat parameter in a view action to index.php
2, via unknown vectors
4, via a large invalid PrefixLength to the CreateIpForwardEntry2 method
4, via a long target-frame option value
4, via a crafted Real Media file. NOTE: some of these details are obtained from third party information.
1, via vectors that send ID3 data to the (1) id3v22_interp_frame and (2) id3v24_interp_frame functions in src/demuxers/id3.c.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via """"MP3 files with metadata consisting only of separators."""""
3, via unspecified vectors.
4, via a symlink attack on a /tmp/.vbox-$USER-ipc/lock temporary file.
1, via HTTP requests
4, via a long image_pan_tilt property value.
4, via a crafted Radiance RGBE file.
4, via a crafted Radiance RGBE image (aka .hdr file).
0, via the p parameter in a root action.
0, via the name parameter
2, via the Topic_Id parameter.
2, via the shownews parameter.
2, via the board parameter.
2, via the section parameter.
5, via a .. (dot dot) in the template parameter to (1) starnet/editors/fckeditor/studenteditor.php; (2) starnet/modules/sn_news/edit_content.php
2, via the newsID parameter.
4, via a direct request to (1) rss.asp
4, via a malformed RealMedia (.rm) file that triggers a heap-based buffer overflow.
4, via a CH HINFO query.
2, via the Host header (HTTP_HOST variable).
4, via (1) heap-based buffer overflows involving multiple vectors including a long room name and a long source account
1, via crafted requests without required parameters.
4, via a long DELE command.
4, via (1) a link with a long HREF attribute
2, via unknown vectors related to the delall action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information. CVE analysis suggests that the most recent version as of 20081128 is 1.2
4, via a long SMTP request
4, via a PNG image with a large height value
2, via the cat_id parameter.
2, via the id parameter.
2, via the id parameter.
2, via directory traversal sequences in the p parameter
2, via the type parameter.
4, via the pageid parameter.
3, via the pageid parameter.
2, via the show_emp parameter.
4, via a crafted response to a DNS update request
4, via a symlink attack on .chm files in the (1) /tmp/chm2pdf/work or (2) /tmp/chm2pdf/orig temporary directories.
4, via a large number of sendmsg function calls
4, via a symlink attack
4, via a symlink attack
2, via the %URLPARAM{}% variable.
2, via the %SEARCH{}% variable.
0, via the login_lg parameter (username).  NOTE: some of these details are obtained from third party information.
2, via the login_lg parameter.  NOTE: some of these details are obtained from third party information.
2, via the ad_id parameter in the re_send_email module to index.php.
2, via the id parameter.
2, via the id parameter.
4, via a symlink attack on certain temporary files used by the (1) f-prot-autoupdate
4, via a symlink attack on certain temporary files used by the (1) f-prot-autoupdate
0, via a crafted JPEG file
5, via unspecified vectors.
1," via vectors related to a length parameter inconsistency involving the contents of """"the input file"
4," via a file containing a certain """"number of entries"""" value"
2, via the ue[] parameter.
2, via an invalid categup parameter to index.php
2, via the s parameter.
4, via unspecified vectors.
3, via unspecified vectors.
3, by using a password revealer utility on a field containing a series of asterisks.
1, by specifying multiple comma-separated server identifiers on the JTLRMIREGISTRYSERVERS line in a jtl.properties file.
4, via a URL in the (1) lib parameter to files in lib/action/ including (a) alias.php
2, via the id parameter.
4, via a URL in the root parameter.
2, via the pageid parameter.
2, via the id parameter.
2, via the section parameter.
1, via unknown vectors
2, via unknown vectors
1, via unknown vectors
4, via a crafted file that validates as both a GIF and a Java JAR file
2, via unknown vectors related to applet classloading
3, via unknown vectors.
4, via a crafted ZIP file.
1, via vectors related to access to inner classes in the (1) JAX-WS and (2) JAXB packages.
3, via unknown vectors.
4, via a JAR file with a long Main-Class manifest entry.
4, via a crafted TrueType font file.
4, via a crafted TrueType font file
4, via a crafted GIF file that triggers memory corruption during display of the splash screen
2, via the AccountID parameter.
4, via a symlink attack on the (1) /tmp/probe-finished or (2) /tmp/ppp-errors temporary file.
4, via a symlink attack on the /tmp/resolv.conf.tmp temporary file.
4, via a symlink attack on the /tmp/muttprint.log temporary file.
4, via a symlink attack on the /tmp/noip2 temporary file.
4, via a symlink attack on the /tmp/pvpgn-support-1.0.tar.gz temporary file.
4, via a symlink attack on a /tmp/.screenie.##### temporary file.
4, via a symlink attack on the /tmp/sdm.autologin.once temporary file.
5, via a symlink attack on a /tmp/mtx.##### temporary file
4, via a symlink attack on a /tmp/cb#####.? temporary file
4, via a symlink attack on the /tmp/cmus-status temporary file.
4, via a symlink attack on a /tmp/*.tag.tmp temporary file.
4, via a symlink attack on the /tmp/pstopdf.log temporary file
4, via a symlink attack on a /tmp/arb_pids_*_* temporary file.
4, via a symlink attack on the /tmp/netdisco-mibs-0.6.tar.gz temporary file
4, via a symlink attack on an (a) /tmp/geo#####
4, via a long URL.
4, via a crafted .ewb file.
2, by launching an editor.
4, via vectors associated with an attempt to unwind a stack that contains userspace addresses.
5, by writing to /dev/zap/ctl
4, via unspecified parameters.
5, via a long image filename
4, via a crafted XML expression
4, via a malformed XML tag.
2, via the HttpDownloadFile method.  NOTE: this could be leveraged for code execution by creating executable files in Startup folders or by accessing files using hcp:// URLs.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via a MOV file with """"long arguments"
2, by reading the (1) systemout.log and (2) ffdc files.  NOTE: this is probably a duplicate of CVE-2009-0434.
4, via a handle_t argument to an RPC endpoint in which the argument refers to an incompatible procedure.
4, via a .. (dot dot) in the pun_user[language] parameter.
3, via multiple SST_CTGTRANS requests.
4, via (1) a large integer in the Content-Length HTTP header; (2) an invalid value in the Content-Length HTTP header
4, via (1) a certain CWD command
2, via the password field.
2, via the (1) order_by or (2) direction parameter to admin/users.php
4, via a topic subject.
4, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
5, via unknown vectors.  NOTE: the previous information was obtained from the January 2009 CPU.  Oracle has not commented on reliable researcher claims that this issue is a denial of service in observiced.exe via malformed private Protocol data that triggers a NULL pointer dereference.
3," via unknown vectors.  NOTE: the previous information was obtained from the January 2009 CPU.  Oracle has not commented on reliable researcher claims that this issue is related to unrestricted guest access to the """"About Us Page"""" in the Oracle Applications Framework (OAF)"
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
5, via unknown vectors.
4, via unknown vectors.
2, via the id parameter.
2, via the id parameter.
2, via the passfromform parameter.
2, via the id parameter.
2, via the pageID parameter.
5, via a long first argument to the OpenPDF method.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the catid parameter to index.php.
4, via unknown vectors.
2, via the cid parameter.
2, by setting the login_auth cookie to true.
4, via a crafted value of the third argument (aka the bgd_color or clrBack argument) for an indexed image.
2, via directory traversal sequences in the (1) group
1," via unknown vectors related to """"access to secure files by ThemeServlet."""""
2, via the redirect_url parameter.
1, by injecting data at two different positions within an HTML document
4, via a CRLF sequence in conjunction with a crafted Content-Type header
4, via a crafted string containing an HTML entity
2, via the cid parameter.
0, via the id parameter to (1) fiche_product.php and (2) presentation.php.
4, via a malformed HTTP request.
4, via a logout action in conjunction with the NewAdmin
2, via the PATH_INFO.
4, via a logout action in conjunction with the NewAdmin
4, via a logout action in conjunction with the admin_id
2, via the PATH_INFO to (1) index.php or (2) shop/kontakt.php
2, via the (1) uname parameter (aka user field) or the (2) psw parameter (aka passwd field).  NOTE: some of these details are obtained from third party information.
2, via the (1) Password and (2) username parameters.
2, via the u parameter.
2, by setting the PHPSESSID parameter.
0, via a full pathname in the sFileName parameter.
4, via shell metacharacters in the sFileName argument.
4, via a URL in the sFileName parameter.
2, via the query string
5, via (1) a message
4, via a URL in the phpbb_root_path parameter to (1) portal/includes/portal_block.php and (2) includes/acp/acp_lcxbbportal.php.
2, via the siteID parameter.
2, via the (1) txtusername parameter (aka username field) or the (2) txtpassword parameter (aka password field).  NOTE: some of these details are obtained from third party information.
2, via the forum_topic_id parameter.
2," via the username parameter and possibly other """"login fields."""" NOTE: some of these details are obtained from third party information."
4, via a .. (dot dot) in the (1) page and (2) admin parameters.
5, via a .. (dot dot) in the (1) page and (2) admin parameters.
2, via the ID parameter.
4, via a .. (dot dot) in the group parameter.
2, via the password parameter (aka passwd field) in a login action.  NOTE: some of these details are obtained from third party information.
2, via the (1) ItemID parameter to classifieds.asp and the (2) ID parameter to Events.asp.
0, via the id parameter to index.php.
4, via unspecified vectors.
4, via a malformed TwinVQ file.
1, via crafted size parameters that are used to create a large quota image.
4, via a link or IMG tag to tbl_structure.php with a modified table parameter.  NOTE: other unspecified pages are also reachable
4, via a crafted argument to the NLST command
2, via the (1) username parameter (aka Email field) or the (2) password parameter. NOTE: some of these details are obtained from third party information.
2, via the term parameter.
0, via the id parameter in a play action.
2, via the umprof_status parameter.
2, via the (1) useremail parameter (aka username field) or the (2) password parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) username and (2) password parameters
2, via the (1) username and (2) password parameters
2, via the (1) username and (2) password parameters
2, via the (1) username and (2) password parameters
2, via the wr parameter.
2, via the (1) ProductID parameter to reviews.aspx or the (2) linkid parameter to links.asp.
4, via a .. (dot dot) in the m parameter.
2, via the ItemID parameter.
2, via the (1) username and (2) password parameters.
4, via a .. (dot dot) in a cms_language cookie.
0, via the book_id parameter in a book_details action to index.php.
3, via unknown vectors.
0, via directory traversal sequences in an HTTP GET request.
0," via unknown attack vectors related to """"certain wiki markup."""""
2, via unknown attack vectors.
2, via the admin_username parameter.  NOTE: some of these details are obtained from third party information.
2, via the username parameter.
2, via the pwd parameter.
2, via the Parent parameter.
0, via the rsargs parameter
0, via the rsargs parameter
0, via the rsargs parameter
2, via the (1) delete_folder and (2) delete_link parameters to unspecified vectors
4, via a crafted CTCP message.
5, via a ZIP file with a file whose name contains .. (dot dot) sequences.
0, via format string specifiers in a crafted URI or VNC server response.
3, via unknown vectors.
3, by uploading a file with an executable extension using (1) load_receiver.php or (2) a shipainter action to paint_save.php
2, via the no parameter.
4, via a malformed RAR archive.
4, via (1) the PATH_INFO to setup/index.php or (2) the name parameter to index.php in the comments preview section.
4, via a long message parameter.
4, use (1) admin.php or (2) private messages.
4, via (1) an invalid camnum parameter to the pocketpc component and (2) an invalid id parameter to the show_gallery_pic component.
2, via the infile parameter to the default URI under cgi/
1, via crafted web pages that trigger an invalid pointer calculation and heap corruption.
4, via a crafted text area
4, via built-in XSLT templates.
3, via unknown vectors.
4, via a crafted SIOCGTUNPARAM IOCTL request
5, via a long argument to the SetID method.
4, via unspecified vectors.  NOTE: the issue
4, via a string argument.
5, via an invalid document.load call that triggers use of a deleted object.  NOTE: some of these details are obtained from third party information.
3, via an o32 syscall with a small syscall number
4, via a certain /dev/watchdog WDIOC_SETTIMEOUT IOCTL call.
4, via a symlink attack on the (a) /tmp/.smswatch or (b) /tmp/gpsdrivepos temporary file
4, via a symlink attack on the /tmp/gpsdrive-unit-test/proc temporary file
4, via a symlink attack on the /tmp/trigger.tmp temporary file.
2, via the catno parameter.
4, via a long FileMask property value.
4, via (1) a long COLOR attribute in an HR element; or a long (a) BGCOLOR or (b) BORDERCOLOR attribute in a (2) TABLE
3, by sending a large amount of network traffic
1, via JavaScript code with a long string value for the hash property (aka location.hash). NOTE: it was later reported that earlier versions are also affected
4, via unspecified vectors.
2, via unspecified vectors involving the default error page for the org.seasar.mayaa.impl.engine.PageNotFoundException exception and possibly other exceptions.
4, via unspecified vectors.
4, via a long SAWSTUDIO PREFERENCES STRUCT value in a .prf (preferences) file.
4, via a crafted IRP in a certain METHOD_NEITHER IOCTL request to \Device\Epfw that overwrites portions of memory.
0, via certain IRP parameters in an IOCTL request to \Device\Powerstrip1 that overwrites portions of memory.
2, via the id parameter.
3, via the (1) form and (2) control parameters to FCKeditor/neditor.php
1, via unspecified vectors involving (1) a %0a sequence in a cookie and (2) the add.php file.
4, via a certain METHOD_BUFFERED IOCTL request that overwrites portions of memory
3, by uploading a file with an executable extension
2, via the id parameter.
2, via an IMG element in an HTML e-mail message.
4, via a large PlaylistSkin value in a skin file.
2, via the username parameter.
2, by setting the nodstrumCalendarV2 cookie to 1.  NOTE: some of these details are obtained from third party information.
2, via the url parameter.
4," via (1) the redirect parameter in a logoff action to modules/auth/index.php or (2) the url parameter to modules/linkmanager/redirect.php.  NOTE: this was reported within an """"HTTP Response Splitting"""" section in the original disclosure."
5, by writing to /dev/zap/ctl
4, via a symlink attack on temporary files.
4," via a crafted ELF program with a """"corrupted"""" header that still allows the program to be executed.  NOTE: due to an error in the initial disclosure"
2, via the (1) lang
2, via the --renderer-path option in a chromehtml: URI.  NOTE: a third party disputes this issue
2, via the --renderer-path option in a chromehtml: URI.
0, via the id parameter in a directory action.
4, via a bookmark file entry with a long host name
4, via a .bps file (aka Session-File) with a long second line
4, via a MAP file containing a long URL
5, via a long mapping reference in a Color Mapping (.cmap) file.
2, via the Body parameter in an article action.  NOTE: some of these details are obtained from third party information.
2, via unknown vectors related to private messages.
2, via the name parameter in an updaterecord action to index.php in the 08_Files module.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sent parameter.  NOTE: some of these details are obtained from third party information.
4, via (1) the mod parameter to the default URI; (2) the foto parameter to photo.php in the 05_Foto module; or (3) the name parameter in an insertrecord action to index.php in the 08_Files module
4, via a URL in the slogin_path parameter.
2, via the id parameter.
2, via the authorID parameter.
2, via the id parameter.
3, via the (1) folder parameter to mailCompose.php or the (2) daytime parameter to calendarEdit.php.  NOTE: some of these details are obtained from third party information.
2, via the PATH_INFO.
2, via directory traversal sequences in the language parameter.
2, via the (1) iType parameter to type.asp and the (2) iPro parameter to detail.asp.
2, via the (1) iType parameter to (a) type.asp and (b) type2.asp and the (2) iPro parameter to (c) detail.asp.
2, via the id parameter.
2, via directory traversal sequences in the (1) action parameter to admin.php and the (2) get parameter to index.php.  NOTE: in some environments
2, via the cid parameter.
2, via the linkid parameter.
2, via the id parameter.
2, via the title parameter.
2, via the adid parameter.
0, by setting the admin cookie to 1.
0, by setting the admin cookie to 1.
2, via the (1) username and (2) password fields.
4, via a .. (dot dot) in the file parameter
2, via the id parameter.
4, via a URL in the (1) mosConfig_absolute_path parameter to (a) add_tmsp.php
4, via a URL in the (1) GLOBALS[mosConfig_absolute_path] parameter to (a) add.php and (b) competitions.php in includes/competitions/
4, via a URL in the (1) GLOBALS[mosConfig_absolute_path] parameter to (a) install.clickheat.php
4, via a .. (dot dot) in the delete parameter.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via the cat_id parameter.
0, via the user parameter (aka username field).  NOTE: some of these details are obtained from third party information.
0, via the id parameter in an edit action.
2, via the siteid parameter
2, via the admin_username parameter (aka admin field).  NOTE: some of these details are obtained from third party information.
4, via (1) Testproject Names and (2) Testplan Names in planEdit.php
0, via the gid parameter in a table action to index.php.
2, via the id parameter.
2, via the ref_id parameter.
2, via the (1) user and (2) password fields in a sign_in action.
2, via the newsid parameter.
4, via a crafted WAV file.
5, via (1) a large value in the payload length field in an NDEF record
2, via the cid parameter.
5, via a long mailto URI in the HREF attribute of an A element.
2, by setting the phpicalendar and phpicalendar_login cookies to 1.
0, via the browse parameter to (1) previews.php and (2) reviews.php
5, via a Trojan horse program in (1) the current working directory or (2) /var/tmp
4, via a (1) MTEntryAuthorUsername
4," via a """"system-wide entry listing screen."""""
2, via the seasonID parameter.
3, via the (1) ls_user and (2) ls_email parameters (aka the User form) in an ls_register action.  NOTE: some of these details are obtained from third party information.
2, via directory traversal sequences in the ftype parameter.
0," via a certain sequence of """"browse documents"""" and dashboard requests."
1, via unspecified vectors
2, via directory traversal sequences in the p parameter.  NOTE: some of these details are obtained from third party information.
4, via a ..%2F (encoded dot dot slash) in the URI.
0, via the y parameter in a get_user action.
0, via the id parameter in a showhoteldetails action to index.php.
0, via the r_type parameter in a showhoteldetails action to index.php.
4, via a long ProxyLogin value in a configuration (.cfg) file.
2, via the system.sysName.0 SNMP OID.
4, via a malformed BMP image with large width and height values
4, via a UFTP message that has a negative block size or other crafted Connection Details values.
4, via a galleta[sesion] cookie that has a value beginning with 1:1: followed by a username.
0, via the id parameter in a showhoteldetails action to index.php in the (1) com_allhotels or (2) com_5starhotels module.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in a showhoteldetails action to index.php.
2, via unspecified vectors in the B3D loader.
0," by setting the auth cookie to """"ok""""."
0, via directory traversal sequences in the (1) gateway_module parameter to plugin/gateway/gnokii/init.php and the (2) themes_module parameter to plugin/themes/default/init.php.
0, via a full pathname in the sDir parameter.
4, via a GIF file with a malformed header.
2, via unknown vectors
0, via the id parameter to (1) hitcounter.asp
2, via the action parameter.
2, via the id parameter.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via (1) the ID parameter to admin_dblayers.asp in an update action
2, via the tablename parameter in an update action.
4, via a .. (dot dot) in the lang parameter.
2, via the user parameter.
4, via a crafted request.
2, via vectors that manipulate the value of the edit_pos structure member.
1, via input data that sets crafted values for certain length variables
2, via unspecified parameters to this interface's PHP scripts.
2, via three crafted RTSP SETUP commands
2, via the PATH_INFO.
5, via a crafted username that is processed by the preg_replace function with the eval switch.
2, via the id parameter.
4, via a URL in the (1) main and (2) right parameters.
2, via the cat parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) login parameter (aka user field) or the (2) password parameter (aka pass field).  NOTE: some of these details are obtained from third party information.
2, via the (1) checkuser parameter (aka username field) or (2) checkpass parameter (aka password field) to admin/index.php.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the BlogID parameter.
4, via (1) the strcerca parameter (aka the input field for the cerca action) or (2) the id_oggetto parameter.  NOTE: some of these details are obtained from third party information.
2, via the id_sezione parameter.
4, via a filename in the sFileName parameter.
4, via a bitmap (aka .bmp) file with large height and width values.
4, via a JavaScript event in the username field
4, via unknown vectors.
3," via vectors related to (1) the preserveUrls function and (2) """"username input."""" NOTE: vector 2 may be related to CVE-2008-5939."
4, via a .. (dot dot) in the module parameter to (1) admin_modules.php and (2) modules.php.
2, via the module parameter.
1, by setting the admf cookie to 1.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the news_id parameter.
4, via a URL in the cfgIncludeDirectory parameter.
4, via a .. (dot dot) in the newlanguage parameter.
4, via a URL in the cct_base parameter to (1) index.php; (2) handle/proxy.php; (3) header.php
2, via the mcatid parameter.
2, via the id parameter.
2, via the directory parameter to index.php.
2, via the QuizID parameter to (1) questions.asp
2, via the (1) useremail parameter (aka username field) or (2) password parameter (aka password field).  NOTE: some of these details are obtained from third party information.
2, via the cID parameter in a document action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cID parameter in a document action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the objectname parameter.
2, via the objectname parameter.
1, by setting the PHPSESSID parameter.
4, via a filename in the file parameter and file contents in the data parameter.
4, via a .. (dot dot) in the cookie_language parameter in a phpicalendar_* cookie
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the catid parameter.
2, via the password parameter.
2, via the (1) password and (2) username fields.
3, via the linkid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the adname parameter in a Submit action or (2) the UserName field.
2, via the adname parameter in a Submit action.
2, via the Email parameter to (1) default.asp and (2) s_edit.asp.
2, via the Email parameter.
0, via format string specifiers in an invalid version number to TCP port 3181
2, via the id parameter.
4, via a .. (dot dot) in the sitecode parameter to connect/index.php.
4, via a .. (dot dot) in the doc parameter.
0, via the KayitNo parameter to (1) diger.php and (2) sayfalar.php.
4, via a .. (dot dot) in the code parameter.
2, via the dir parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
0, via a full pathname in the root parameter.
4, via a fpusuario cookie composed of an initial sysop: string
2, via the seller_id parameter.
2, via the product parameter.
4, via a URL in the minsoft_path parameter to (1) utdb_access.php and (2) utgn_message.php in utility/.
2, via the id parameter.
0, by setting the Auth cookie to 1.
4, via a .. (dot dot) in the (1) mod
2, via the page_id parameter.
1, via unspecified vectors involving the (1) advanced search result and (2) service resource pages.
2, via the id parameter.
2, via the (1) keywords and (2) cat parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the cid parameter
2, via the idp parameter.
2, via the p parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1," via unspecified vectors related to """"an exposed filter on CCK text fields."""""
4, via a .. (dot dot) in the obj parameter.
2, via the id parameter.
2, via the (1) whl
2, via the parent_id parameter in a subject action.
4, via (1) the job parameter to index.php in the search module or (2) the news_id parameter to index.php.
2, via the id parameter.  NOTE: it was later reported that 2.34 is also vulnerable.
2, via the id parameter.
2, via the id parameter.
2, via the atkaction parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the atknodetype parameter.
4, via a URL in the mj_config[src_path] parameter.
2, via the v parameter.
2, via the id parameter in an editevent action
1, by setting the PHPSESSID parameter.
2, via the articlecat parameter
2, via the (1) ViewName
2, via the ad parameter to index.php.
2, via the (1) order_field and (2) order_type parameters to categories.php and unspecified other components.  NOTE: some of these details are obtained from third party information.
2, via the keywords parameter.
2, by setting the XTCsid parameter.
1, via unspecified vectors in (1) opt_in_out.php.inc
2, via unspecified vectors related to (1) subscribing and (2) unsubscribing.
3, via the menuID parameter.  NOTE: CVE and multiple reliable third parties dispute this issue
0, via the item parameter to index.php.
2, via the (1) n parameter to emailrecipe.aspx
4, via a URL in the SRC attribute of an IMG element in the dataURL parameter.
4, via a URL in the csPreloader parameter.
0, via the cat parameter to agenda/index.php
4, via a URL in the root_path parameter to (1) modules.php
0, via the user parameter in a viewProfile action to index.php.
4, via a crafted PALM image
2, via the kid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter to index.php.
0, via the colpick parameter in a singleread action.
0, via the id parameter in a pms action to index.php.
5, via a crafted (1) ARGB
4, via a .. (dot dot) in the file parameter.
2, via the id parameter.
2, via the SITE WHO command.
4, via a .. (dot dot) in the language parameter.
3, by uploading a file with an executable extension
0, via the id parameter
2, via the name parameter.
0, via the id parameter in a tordetails action to index.php.
4, via a .. (dot dot) in the id parameter in a download action.
5, via a .. (dot dot) in the dir parameter in a view action.
2, by sending an admin=ja cookie.
2, via the ni.smessage parameter.
2, via the viewName parameter.
2, via the (1) key parameter to index.php/Special/Main/keywordSearch
4, via a URL in the file_op parameter.
2, via the targetid parameter.
2, via the lnkid parameter.
0, via the eventid parameter to admin/index.php.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
2, via the key parameter.
2, via the note parameter.
4, via a .. (dot dot) in the id parameter in a detail action to (1) main.php and (2) template.php in ringtones/.
1, via unspecified vectors
2, via the product parameter.
0, via the id parameter in a deadlink action
0, via the event parameter to index.php.
2, via the poll_view_id parameter in a results action.
1, by setting the loggedin cookie to 1.
2, via the (1) username and (2) password parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the comment_secure parameter.
2, via the PHPSESSID cookie.
4," via a request that contains a question mark (""""?"""")."
4, via a .. (dot dot) in the (1) file parameter to download.php and the (2) page parameter to index.php
2, via the (1) page and (2) query parameters to (a) index.php
2, by setting the PHPSESSID parameter.
4, via a .. (dot dot) in the page parameter.
2, via the (1) action and (2) page parameters.
1, by setting the PHPSESSID parameter.
0, via the id parameter
5, via a URL in the path[docroot] parameter.
4, via a .. (dot dot) in the download parameter.
4, via unspecified vectors.
4, via a large amount of H.323 data.
5, via a modified account name in the username cookie.
2, via unspecified vectors
3, via unspecified vectors.
2, via the tid parameter in a viewticker action to index.php.
0, via the cagtegory parameter in a story_lists action to index.php.
2, via the ID parameter.
2, via the ID parameter.
2, via the ID parameter.  NOTE: this was originally reported for Lawyer Portal
2, via the AlbumID parameter.
2, via the idcat parameter.
0, via the idtl parameter in a buy action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the campaignId parameter.
4, via a direct request to info.php
4, via unspecified vectors.
1, by setting the loggedin cookie to 1 and the usNick cookie to admin.
2, via the bannerid parameter.
2, via the page parameter.
0, via the id parameter in an article action to index.php.
4, via a .. (dot dot) in the lng parameter.
2, via an unspecified argument
2, via the book page title.
2, via the title parameter.
2, via the liste parameter.
4, via a crafted argument to the opendir SFTP command.
0, via the parent_id parameter
0, via the jid parameter to index.php.
2, via the gallery parameter in a view action to index.php.
4, via a .. (dot dot) in the (1) d and (2) f parameters.
2, via the catid parameter in a catalogue action to index.php.
2, via multiple POP3 requests with a long PASS command.
3, via long (1) CWD and (2) MLST commands.
2, via the release_id parameter.
2, via the skill_edit[] parameter.
0, via the offset parameter to (1) new/index.php
2, via the content parameter.
3, via unknown vectors.
5, via DNS packets.  NOTE: this issue reportedly exists because of an incorrect fix for CVE-2007-3898.
4," via a subdirectory name followed by """".."""" sequences"
4, via a URL in the EASYSITE_BASE parameter to (1) browser.php
2, via the id_gal parameter in a gal action.
2, via the page parameter.
4, via a direct request to backup.php
4, via (1) the query string and (2) a new wiki entry.
0, via the id parameter to (1) urun.asp
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) id parameter to secure/admin/guncelle.asp
2, via the (1) language
4, via a URL in the DOCUMENT_ROOT parameter to (1) graph.php and (2) robotstats.inc.php. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, by uploading a file with an executable extension
2, via the (1) author_name
2, via the cat_id parameter.
0, via the img_id parameter in the gallerypic page.
0, via the lang parameter to (1) admin.php
2, via the (1) sel_mese and (2) sel_anno parameters in a systems action. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the trg parameter.
2, via the id parameter.
2, via the OfertaID parameter.
2, via the OfertaID parameter.
4, via the plugins[file][id] parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted PNG file.
4, via a URL in the GLOBALS[mosConfig_absolute_path] parameter.
4, via a .. (dot dot) in the include_file parameter to index.php.
4, via a URL in the plancia parameter to crea.php.
4, via a .. (dot dot) in the plancia parameter.
2, via the flight parameter.  NOTE: the vendor has disputed this issue
2, via the (1) sid and (2) cid parameters.
1," by setting the (1) adminname and the (2) adminid cookies to """"admin""""."
2, via the id parameter.
2," by setting the (1) adminname and the (2) adminid cookies to """"admin""""."
2," by setting the (1) adminname and the (2) adminid cookies to """"admin""""."
2, via the recid parameter.
2, via the id parameter to index.php.
3," via shell metacharacters in a filename used by the (1) """"D"""" (delete) command or (2) b:netrw_curdir variable"
2, via the id parameter.
2, via the name parameter.
4, via unknown vectors.
2, via the catalogid parameter.
2, via the where parameter.
2, via the cid parameter.
2, via the id parameter.
2, via the id parameter.
2, via the cat parameter.
2, via the ts parameter.
2, via the tag parameter.
2, via the id parameter.
0, via the arcmonth parameter to a blog page.
4, via a URL in the includepath parameter.
4, via a long -k option.
2, via the categoryID parameter.
2, via the (1) answer parameter to admincp/verify.php
0, via the holidayinfo[recurring] parameter
2, via the idpage parameter in the pages module.
2, via the serverid parameter.
2, via the group parameter.
2, via the URL to the translate function.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the username parameter to the _userLoggedIn function.  NOTE: some of these details are obtained from third party information.
2, via the password parameter.
4, via a .. (dot dot) in the theme parameter.
2, via the cid parameter in a viewlink action.
2, via the name parameter.
2, via the id parameter.
2, via the user parameter.
2, via the pass parameter.
4, via a .. (dot dot) in the langage parameter
4," via (1) the logmbr parameter (aka login field) or (2) the mdpmbr parameter (aka pass or """"Mot de passe"""" field).  NOTE: some of these details are obtained from third party information."
2, via the subcategory_id parameter.
2, via the (1) category_id and (2) subcategory_id parameters.
2, via an invalid PHPSESSID cookie
2, via the action parameter in a DHCP_Static operation.
2, via the id parameter.
2, via the city parameter in a users_edit_pub action to index.php.
4, via a comment
2, via the site parameter.
2, via the mid parameter.
4, via (1) the email parameter (aka username or E-mail field)
4, via a URL in the baseDir parameter to (1) MySQLController.php
4, via a .. (dot dot) in the filename parameter.
2, via the cityid parameter.
1," by setting the NEWSLETTERLOGIN cookie to """"admin""""."
2," by setting the (1) username_cookie to """"admin"
1," by setting the username_cookie to """"admin."""""
2," by setting the username_cookie cookie to """"admin."""""
0, via the q parameter to (1) search.php and (2) rss.php; the query string after the image name in (3) photos/photo; the path parameter to (4) folder.php; page parameter and REQUEST_URI to (5) login.php; ver parameter to (6) media.php; theme parameter to (7) modules/iconset/iconset-debug.php; and the REQUEST_URI to (8) index.php.
0," by setting the user cookie to """"demo."""""
4, via the (1) domain and (2) d1 parameters.
1," via unknown vectors related to the """"HTTP header rewrite function."""""
4," via (1) the title and description parameters to the com_weblinks module and (2) unspecified vectors in the com_content module related to """"article submission."""""
2, by setting the (1) gwm_user and (2) gwm_pass cookies to admin.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter in a delete action.
4, via a direct request to Site_Admin/admin.php.
2, via the tourid parameter.
2, via the msg parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0," by setting the auth cookie to """"admin."""""
4, via a .. (dot dot) in the pun_user[language] parameter to (1) functions_navlinks.php
3, via the f[password] parameter.  NOTE: some of these details are obtained from third party information.
2, via the f[password] parameter.  NOTE: some of these details are obtained from third party information.
2, via the mytable parameter.  NOTE: the id vector is covered by another CVE name.
2, via the username parameter.
0, via the id parameter in a delete action.
4, via a URL in the confdir parameter
4, via a .. (dot dot) in the lang parameter
4, via a .. (dot dot) in the conf[lang] parameter
4, via a URL in the admindir parameter
2, via the calid parameter.
0, via the Category parameter in a ViewCategory action.
2, via the categorynbr parameter.
2, via the categorynbr parameter.
2, via the categorynbr parameter.
2, via the (1) radio parameter to showcategory.php
2, via the email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the password parameter
2, via the id parameter.
2, via the (1) Username and (2) Password parameters
0, via the send parameter in a notes action.
3, via unknown vectors.
2, via the password parameter.
4, via a .. (dot dot) in the filename parameter.
4, via a .. (dot dot) in the filename parameter.
2, via the job_id parameter in a jobshow action to index.php.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via unknown attack vectors.
4, via unspecified vectors.
2, via the cat parameter to indes.php.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the (1) cat_id parameter to gallery_category.php
2, via the id parameter.
2, via the r parameter.
2, via the r parameter.
2, via the menu parameter.
2, via the cha parameter.
2, via the id parameter.
2, via the (1) name
2, via the rank_title parameter.  NOTE: some of these details are obtained from third party information.
0, via directory traversal sequences in the lang parameter.
2, via the id parameter.
4, via a crafted .cct file.  NOTE: some of these details are obtained from third party information.
2, via the (1) username (uname parameter) and (2) password (pass parameter).  NOTE: some of these details are obtained from third party information.
2, via the (1) username and (2) password
2, via the (1) username and (2) password
3, by uploading a file with an executable extension
2, via the start parameter.
2, via the Sort parameter.
2, via the DisplayFormat parameter.
2, via the username (Username parameter).
0, via the ID parameter in a Cat action.  NOTE: some of these details are obtained from third party information.
2, via the password (pass parameter).
4, via a URL in the pfad parameter.
2, via the ID parameter.
2, via the ID parameter.
2, via the CategoryID parameter.
2, via the section parameter.
2, via the id parameter.
2, via the Password parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the username (user parameter).
2, via the id parameter.
4, via a file transfer request with a negative value in a SOCKS5 option
2, via the cs_cookies[customer_user_id] cookie parameter.
4, via a malformed HTTP POST request.
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
4, via a symlink attack on temporary files.
4, via a symlink attack on the (1) /tmp/recompiled$$.png
2, via unknown attack vectors.
2, via the headerMsg parameter to (1) show.php and (2) search.php.  NOTE: some of these details are obtained from third party information.
2, via the kat parameter.
4, via a URL in the mod_dir parameter.
5, via a URL in the tpl_dir parameter.
2, via the callback parameter.
2, via the cid parameter.
2, via the query string.
4, via a .. (dot dot) in the framefile parameter.
4, via a URL in the framefile parameter.
0, via the id parameter in a brain action.
4, via a .. (dot dot) in the show parameter.
0, by setting the login cookie to 1.
2, via the item_id parameter.
4, via a CONNECTION request with a long hostname.
1," via unspecified vectors related to """"internal pages."""""
3, via unknown vectors.
2, via the info_hash parameter.
2, via the (1) sgc_id parameter to display_blog.php
0, via the file parameter to (1) filedload.php
4, via a URL in the path parameter.
4, via a .. (dot dot) in the site_id parameter.
4, via a response to an FTP LIST command with a filename that contains a .. (dot dot).
0, via the news_id parameter
4, via unspecified vectors.
0, via the id parameter in a view_request action to index2.php.
0, via the id parameter in a view action to index.php.
2, via the (1) outpused parameter to index.php
0, via the keywords parameter in a search action.
2, via the LinkServID parameter.
2, via the (1) lang[home]
2, via the (1) message parameter to error.php
0, via the uid parameter
2, via the keyword parameter.
0," via direct requests for """"controllers ... that aren't standard helpdesk pages"
4, via a URL in the first parameter to the DonwloadAndInstall method.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the fno parameter.
5, via a crafted packet
2, via the message parameter.
4, via a long first argument to the CreateStore method.
4, via unspecified vectors.
2, via the id parameter. NOTE: this might overlap CVE-2004-2036 or CVE-2005-3509.
2, via the id parameter.
0, via the singerid parameter in a singers action.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the id parameter.
2, via the (1) err
2, via the image parameter in an image-detail action.
2, via the job_id parameter.
2, via the area parameter in a browse action.
2, via the p parameter.
0, via the cat parameter in a show action.
4, via unspecified vectors.
5," via a modified """"a"""" parameter with a """"%"""" wildcard symbol in the b parameter."
0, via unspecified configuration settings related to Perl EP3 with templates
2, via the Via HTTP header (HTTP_VIA) to index.php.
2, via the q parameter.
0, via the id parameter to index.php.
4, via a link or IMG tag to (1) create-file and (2) list-control in vz/cp/vzdir/infrman/envs/files/; or modify system configuration via the path parameter to vz/cp/vzdir/infrman/envs/files/index.
4, via a link or IMG tag to vz/cp/pwd.
4, use a modified image parameter.
0, via the id parameter in an edit task to index.php.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the user field.
2, via the ctg parameter.
2, via the (1) admin and (2) password fields.
2, via the Admin field in a login action.
2, via the album parameter to index.php.
0, by specifying the target filename in the target_file parameter.  NOTE: this can be leveraged for code execution by overwriting a PHP file
4, via a URL in the DOCUMENT_ROOT parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, by uploading a file with an executable extension via index.php
2, via the album parameter.
2, via the first argument to the extractPagesToFile method.
2, via multiple HTTP requests for the /- URI.
2, via the xampppasswd parameter.
2, via the query string to the default URI.
2, via the gud parameter.
4, via a .. (dot dot) in the avatar parameter
2, via the PATH_INFO to (1) admin/login.php and (2) order.php.
4, via a ..%252f (encoded dot dot slash) in a URI with a /struts/ path
4, via unknown vectors.
2, via unknown vectors related to the lack of password prompts for a private message that quotes a post in a password-protected forum.
4, via a .. (dot dot) in a URI that matches the Exclude-Strings list
0, via the type parameter to sipark-log-summary.jsp.
2, via the url parameter.
2, via the url parameter.
1, by hosting an assumed-safe file type containing Google Gear commands on the target domain
3, by uploading a file with an executable extension
1, by using Expo mouse shortcuts
2, via the query string to the default URI.
4, via a .. (dot dot) in the (1) tema_dizin parameter to baslik.php and (2) portal_ayarlarportal_dili parameter to anket_yonetim.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the news_user cookie parameter.
3, by uploading a PHP file as an Avatar
0, via an invalid File parameter
1, by setting the oiauth cookie.  NOTE: this can be leveraged with a separate vulnerability in resetpass.php to modify passwords for arbitrary users.
0, via a modified uid parameter.  NOTE: this can be leveraged with a separate vulnerability in auth.php to modify passwords without authentication.
2, via the Password parameter (aka the pass field).
0, via the cat_id parameter
2, via the iFor parameter.
5, by appending ::$DATA to the URL
2, via the r parameter.
5, by uploading a file with an executable extension
4, via a crafted URL that is dynamically transformed into method calls
1, via unspecified vectors
5," via a custom SITE command containing shell metacharacters such as """"&"""" (ampersand) in the middle of an argument."
4, via a direct request with a modified NewAdmin parameter.
2," via the setup """"do"""" action to LightNEasy.php"
4, via a direct request to config/add/CfgOptUser.
4, via a crafted pin parameter.
5, via unspecified vectors.
4, by uploading a static file that is converted into a dynamic script via unknown vectors related to HTM or HTML files.
4, via a URL in the (1) settings[default_theme_dir] parameter to Sources/Subs-Graphics.php and (2) settings[default_theme_dir] parameter to Sources/Themes.php.  NOTE: CVE and multiple third parties dispute this issue because the files contain a protection mechanism against direct request.
5, via a URL in the langfile parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the letter parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via symlink attacks on files in /tmp
4, via shell metacharacters in the query string.
4, via shell metacharacters in the dig command.
4, via shell metacharacters in the whois command.
4, via shell metacharacters in the details command.
2, by modifying the RELIANT_PATH environment variable to point to a malicious bin/hvenv program.
5, via a crafted -d argument that contains .. (dot dot) sequences that point to a directory containing a file whose name includes shell metacharacters.
4, via a cluster.conf file with many lines.  NOTE: it is not clear whether this issue crosses privilege boundaries in realistic uses of the product.
2, via the cat parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an IFRAME tag in the signature.
4, via (1) the e-mail address
3, by uploading a file with an executable extension
2, via the session ID in the login page.
4, via a crafted RSS feed.
4, via (1) new_images.php
2, via the keyword parameter.
2, via unknown vectors related to reuse of valid credentials.
4, via unknown vectors.
2," via unknown vectors related to """"web resources to phones and administrators."""""
2, by setting the addedit cookie parameter.
2, via the username parameter in a login action.
4, via a long string in a .SRT file.
4, via a URL with a file containing an executable extension in the url_upload parameter
2, via the addUser action.
2, via the add-url action and (2) hijack the authentication of administrators for requests that modify the administrator account via the setsetting action.
0, via the dlid parameter to index.php.
3, via unspecified vectors.
4, via unspecified vectors.
2, via the hash parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the step parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the query parameter.
3, via unknown vectors.
4, via a .. (dot dot) in the pagina parameter
2, via the id parameter.
2, via the thema parameter.
4, via (1) the user_name parameter (aka user field) to admin/index.php
2, via the path parameter.
4, via a full pathname in the file parameter.
2, via the id parameter.
3, by uploading a file with an executable extension
4, via (1) the administrators_username parameter (aka the Username field) or (2) the administrators_pass parameter (aka the Password field).
2, via the keyword parameter in the advanced_search_result page.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the keyword parameter in the advanced_search_result page. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, by uploading a file with an executable extension
2, via the teacher_id parameter in (1) class/HomepageMain.php and (2) class/HomepageTop.php
3, by uploading a file with an executable extension
2, via the (1) errcontext
1, via unspecified vectors in DPX images.  NOTE: some of these details are obtained from third party information.
2, via the username parameter.
2, via the username parameter.
2, via the username parameter.
2, via the name parameter.
4, via unspecified vectors.
2, via the (1) user parameter in a sendmessage action and the (2) username parameter when registering a new user
2, via the User-Agent HTTP header ($_SERVER['HTTP_USER_AGENT']).
0, via the idresa parameter to resaopen.php.
0, via the idroom parameter to weekview.php.
2, via the (1) school and (2) email parameters.
2, via the RemoveFileOrDir method.
2, via the update_user_pwd action.
0, via the id parameter to (1) uyeadmin.asp and (2) profil.asp.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the sid parameter to (1) kanal.asp
2, via the sid parameter.  NOTE: some of these details are obtained from third party information.
2, via the PATH_INFO.
2, via the User-Agent header ($_SERVER ['HTTP_USER_AGENT'])
2, via the username parameter.
2, via the gid parameter.
0, via the gid parameter to about_us.php.  NOTE: this might be the same issue as CVE-2008-6647.
5, via a direct request with a modified post_id parameter
2, via the oxymsg parameter.
2, via the sitename parameter.
0, via the catid parameter to index.php.
2, via the keywords parameter.
2, via the (1) nom_branche and (2) nom parameters to php/prenom.php; the (3) nom_branche parameter to php/index.php; and the (4) nom_branche
4, via (1) the id parameter to listings.php and (2) the username field to login.php.
2, via the package parameter in an install2 action.
4, via a .. (dot dot) in the package parameter during an install2 action
0, via directory traversal sequences in the value of the theme_dir field during a jsoption action
3, by uploading a file with an executable extension followed by a .sql extension
4, via a malformed (1) NeoLite and (2) ASProtect packed PE file.
0, via the auction_id parameter
1, by setting the shuser and shpass cookies to non-zero values.
2, via the description field to (1) servlet/com.threeis.webta.H710selProject and (2) servlet/com.threeis.webta.H720editProjectInfo.  NOTE: BID:29610 states that the initial report was incorrect
1, by setting the mobsuser and mobspass cookies to 1.
4, via a .. (dot dot) in the (1) id parameter to comm.php and (2) var_filename parameter to viewrq.php.
4, via shell metacharacters in the var_filename parameter in a (1) tif or (2) pdf format action.
4, via a crafted packet to UDP port 27960.
5, via a crafted join packet to UDP port 27960.
4, via a crafted join packet to UDP port 27960
4, via a large number of requests with a modified sEmail parameter.
4, via (1) the close parameter to showThumb.aspx; (2) SB_redirect and (3) SB_feedback parameters in process_send.asp
4, via a request to showThumb.aspx without any parameters
3, by uploading a file with an executable extension
0, via the sNickName parameter in a profile action to default.asp.
4, via a crafted EXE file that triggers a divide-by-zero error.
1, via XML entities in a TEXTAREA element.
2," via vectors associated with improper handling of (1) """" (double quote) characters in the href attribute of an s:a tag and (2) parameters in the action attribute of an s:url tag."
2, via the r parameter.
3, by uploading a file with an executable extension and a GIF header
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
2, via the (1) mytable parameter to view.php
4, via a long nickname
4, via a compressed 0x39 packet
5, via a crafted packet with a 0xc1 value that contains no compressed data
4, via a crafted packet without an expected 0xe0 or 0xe1 value
2," via unknown vectors related to """"configuring data viewing or restoring credentials."""""
1," via unknown vectors related to """"viewing system logs."""""
4, via a long HTTP request
4, via a zero-byte data block to TCP port 48000
1, by setting the xecms_username cookie.
0, via the msg parameter to (1) homeadmin/adminhome.php and (2) homeadmin/signinform.php.
2, via the admin_username parameter (aka the admin field).
2, via the txtName parameter (aka the username field).
1, by setting the adminLogged cookie to Administrator.
2, via the language parameter.  NOTE: some of these details are obtained from third party information.
0, via the id parameter to (1) index.php in a mythings page (mythings.php) and (2) the users page in admin.php.
2, via the (1) password or (2) email_address parameter.
3, by uploading a file with an executable extension
4," via """"newly generated paths."""""
4, via the querystring parameter.
4, via a .. (dot dot) in the action parameter.
4, via a .. (dot dot) in the sLanguage cookie.
5, by sending a keyexchange packet without a previous join packet
1, by setting the admin_access cookie to 1.
4, via a URL in the _settings[pluginpath] parameter.
1, by setting the db_character_set parameter to a multibyte character set such as big5
4, via a foxy URI with a download action and a large fs value.
0, by setting the verified cookie to an arbitrary value and performing a direct request to (1) delete.php
4, via a crafted email parameter in a register2 action.
2, via the contact name.
2, via the play action in a mega:// URI.
3, by uploading a file with an executable extension
5, by uploading a file with an executable extension
1, via unspecified vectors related to AjaxUniqueTextField.
2, via the manuals_search parameter.
0, via the cart_name parameter in a save action.
4, via a URL in the POST_DATA parameter to manuals_search.php
2, via an unauthenticated add and save action for a shopping cart in cart_save.php
2, via the installdbname parameter (aka the Database Name field).  NOTE: the installation instructions specify deleting admin/install.php.
1, by setting the logged_in cookie to that account's username.
2, via the message parameter.
4, via a modified cart_name parameter.
4, via a flood of requests.
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
4, via a direct request via a direct request to user/uploads/phpinfo.php
2, via the (1) fav1_url
2, via the phid parameter.
2, via the (1) id parameter in a confirm action
2, via the cat parameter.
2, via the id parameter in a showcontent action to modules.php.
0, via the cat_id parameter in a list action.
0, via the cat_id parameter in a list action.
2, via the cat_id parameter in a list action.
0, via the cat_id parameter in a list action.
0, via the cat_id parameter in a list action.
3, by uploading a file with an executable extension
2, via directory traversal sequences in a pagename argument in the (1) handle_edit and (2) handle_raw functions.
2, via the user.
2, via the username parameter in a login action to the admin module in index.php
4, via a modified username parameter in an edit account action to index.php.
4, via a write request with a long mode field.
2, via the cat parameter.
2, via the nID parameter.
2, via the username1 parameter (aka the Admin field or Username field).
4, via (1) the us parameter (aka the Username field) or (2) the ps parameter (aka the Password field).
1," by setting the s parameter to """"7."""""
3, via unknown vectors.
2, via the (1) Username and (2) Password fields.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, by setting the COOKIE_LAST_ADMIN_USER and COOKIE_LAST_ADMIN_LANG cookies.  NOTE: a third party reports that the vendor disputes the existence of this issue.
3, by uploading a file with an executable extension
5, via a URL in the xml_dir parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: the lib_dir vector is already covered by CVE-2006-6630.
0, via the cat_id parameter in a list action.
2, via the HotelID parameter.
2, via the (1) myusername (username) and (2) password parameters.  NOTE: some of these details are obtained from third party information.
3, by uploading a file with an executable extension
2, via the det parameter.
2, via the id_kat parameter.
3, by uploading a file with an executable extension and an image/jpeg content type
3, by adding a custom action to the MGE frontend via pane_actionbutton.php
1, via vectors related to CreateWindow
3, by uploading a file with an executable extension and a modified content type
2, via certain parameters to goform/formWanTcpipSetup or (2) modify credentials via certain parameters to goform/formPasswordSetup.
4, via a .. (dot dot) in the langChoice parameter.
4, via shell metacharacters in the page parameter
4," via a """"Shatter"""" style attack on the """"command prompt"""" hidden GUI button to (1) overwrite the CommandLine parameter to cmd.exe to use SYSTEM privileges and (2) modify the DLL that is loaded using the LoadLibrary API function."
5," via a LIST command that starts with a """"/\/"""" (forward slash"
2, via the (1) fullname (Full Name) parameter in the ViewProfile page or (2) returnUrl parameter in a form
3, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in a files array element for a blogs action
4, via a .. (dot dot) in (1) the s parameter to code/commupdate.php in a count action or (2) the heads parameter to code/newsheads.php.  NOTE: the blog.php vector is already covered by CVE-2008-3164.
2, via unspecified vectors
3, via the _off parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) msg and (2) goodmsg parameters to (a) login.php and (b) index.php
5, via a URL in the (1) CONFIG[pear_dir] parameter to (a) Mail/RFC822.php
5, via a URL in the mosConfig_absolute_path parameter to classes/DBQ/admin/common.class.php.
4, via a .. (dot dot) in the post parameter.
4, via a corrupted LZH file.
2, via the msg parameter.
0, via the category parameter in a select action.
3, by uploading a file with an executable extension
5, via unspecified vectors.
0, via the catid parameter to index.php.
2, via the PollID parameter.
5, by setting a cookie to a certain value.
4, by setting a certain cookie.
5, by setting a cookie to a certain value.
3, by setting a cookie to a certain value.
4, by setting a cookie to a certain value.
3, by setting a cookie to a certain value.
5, by setting a cookie to a certain value.
5, by setting a cookie to a certain value.
5, by setting a cookie to a certain value.
3, by setting a cookie to a certain value.
5, by setting a cookie to a certain value.
2, via the artid parameter in a printpage action.
0, via the id parameter in a summary action.
2, via the topic parameter.
2, via the msg parameter.  NOTE: the EsContacts 1.0 issue is covered in CVE-2008-2037.
4, via a direct request to (1) config.asp and (2) users.asp.
0, via the TabOpenQuickTab1 parameter to (1) popaccounts.aspx
2, via the iType parameter in (1) Auto1/type.asp or (2) auto2/type.asp.
2, via the cid parameter
2, via the msg parameter.  NOTE: the EsContacts 1.0 issue is covered in CVE-2008-2037.
2, via the id parameter.
0, via the last parameter to (1) getChat.php
4, via a GET request with a full URL in the query string.
0, via the last parameter to getChatRoom.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a STYLE attribute in a URL BBcode tag in a private message.
2, via the siteid parameter.
2, via the address parameter.
2, via the AccountID parameter.
2, via the message_id parameter.
2, via the (1) forum_id parameter to (a) new_message.asp and (b) messages.asp
2, via the rubid parameter.  NOTE: this might be the same issue as CVE-2005-3572.
2, via the (1) fName and (2) fPassword parameters.
2, via unspecified vectors
4," via a long (1) """"a"""" HTML tag; a long src attribute in (2) embed"
4, via a long argument to the Get method and other unspecified methods.
4, via a long (1) open
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
2, via the admin page.
2, via the username.
4, via a direct request to admin/home.php.
3, by uploading a file with an executable extension as a photo in a profile edit action
5, by uploading a file with an executable extension as a photo in a profile modification
2, via the propid parameter.
2, via an invalid Host header
2, via the username (user parameter).
3, by uploading a file with an executable extension
0," by setting the auth cookie to """"fook!admin."""""
3, by uploading a file with an executable extension during a regnew action
3, by uploading a file with an executable extension
4, via a long argument to the (1) CreateUserPath
0, via the Itemid parameter in a blogcategory action to index.php.
2, via the (1) username
2," via unspecified vectors in the """"request logging"""" feature.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
2, via directory traversal sequences in the scriptpath_show parameter in a GoAhead action.  NOTE: this issue only crosses privilege boundaries when security settings such as disable_functions and safe_mode are active
2, via the (1) localapp
3, by uploading a file with an executable extension as a logo
3, by uploading a file with an executable extension as a logo
3, by uploading a file with an executable extension as a logo
3, by uploading a file with an executable extension as a resume photo
3, by uploading a file with an executable extension
0, by setting the adm cookie to 1 or (2) gain privileges as another user by setting the logged cookie to the target username.
2, via the password field.
5, by uploading a file with an executable extension as a profile logo
5, by uploading a file with an executable extension as a recipe photo
3, by uploading a file with an executable extension as a profile logo
2, via the project Name
5, by uploading a file with an executable extension and using a text/plain MIME type
2, via the (1) username or (2) password field.
2, via the c parameter.
3, by editing a Cheetah kickstart template to import arbitrary Python modules.
0, via the description parameter
1, via crafted (1) lostpasswd and (2) getpasswd actions
2, via the creditsformula parameter.
2, via the SaveLastError method.  NOTE: this might be related to CVE-2008-1647.
2, via an encoded url parameter
4, via a direct request.
2, via the password field.
2, via the (1) category and (2) id parameters.
4, via the (1) step_id and (2) CHECKOUT_CZ_BLOWFISH_KEY parameters.
2, via the Forum[] array parameter.
2," via the (1) """"field label"
2, via the ping_ip parameter; (2) change the administrative credentials via the http_username and http_passwd parameters; (3) enable remote administration via the remote_management parameter; or (4) configure port forwarding via certain from
2, via the ping_ip parameter; (2) change the administrative credentials via the http_username and http_passwd parameters; (3) enable remote administration via the remote_management parameter; or (4) configure port forwarding via certain from
4, via a crafted SNMP set request.
2, via the message parameter in a summary action.
3, by uploading a file with an executable extension
3, via the currentpath parameter.
2, via the HTTP Referer header with a target file specified in the gv_folder_data parameter
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) galleryid parameter to gallery.php
2, via the username parameter.
2, via the password parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id_rub_page parameter.
5, via a web page with a long TITLE element
4," via a URI with an invalid handler followed by a """"%"""" (percent) character"
2, via an IMG tag with a long src attribute
5, via a link target (href attribute) with a large number of path elements
5, via a URL in the lan parameter.  NOTE: this might be related to CVE-2005-2255.1.
3, via unknown vectors.
2, via the (1) user_id and (2) password parameter.
2, via the quotes_to_edit parameter.  NOTE: this issue has been reported as an unrestricted file upload by some sources
4, via a direct request to admin/backupdb.php.
2, by setting the (1) admin_name and (2) admin_pass cookie values to 1.
4, via a direct request to admin/backup/db.
5, via a file or directory with a long path.  NOTE: some of these details are obtained from third party information.
4, via a direct request to admin/register.php.
4, via a crafted login response that triggers a divide-by-zero error.
2, via an Authorization HTTP header with an invalid character after the Basic value.
2, via the Details field (descr parameter) in an Add New Event action in an unspecified request as generated by an add action in index.php.
4, via modified (1) enombre and (2) euri cookies.
3, by uploading a file with an executable extension as an image or logo
2, via the LoadXmlEmail method.
0," by setting the user cookie to """"admin"""" and setting the name parameter to """"users."""""
5, by uploading a file with an executable extension as an avatar
0, by setting the user and pass cookies to 1.
1, by setting the keep4u cookie to a certain value.
5, by uploading a file with an executable extension as an avatar
2, via the (1) username or (2) password field to an unspecified component
2, via long SSH packets
0, via the section parameter in a section action to index.php
4, via a URL in unspecified vectors that modify the _smarty_compile_path variable in the fetch function.
2, via the resistance field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the gid parameter in a showgall action to modules.php.  NOTE: this issue was disclosed by an unreliable researcher
0, via the content parameter in a comment.  NOTE: some of these details are obtained from third party information.
2, via the u parameter.  NOTE: this issue was disclosed by an unreliable researcher
4, via a direct request to admin/home.php.
4, via a URL in the tmp_sid parameter.
2, via the Email parameter.  NOTE: this can be leveraged to modify cookies and conduct session fixation attacks.
2, via the ques parameter.
4, via a direct request to admin/resetvote.php.
4, via a direct request to admin/include/newpoll.php
4, via a direct request to admin/home.asp.
2, via the (1) txtUsername parameter to registerDo.asp
2, via the (1) txtUsername parameter (aka Username) and (2) txtPassword parameter (aka Password) in a form generated by home.asp.  NOTE: due to lack of details
4, via a direct request to (1) user.php
3, by uploading a file with an executable extension as a profile logo
1, by setting the fgcolor and bgcolor properties to certain long values that trigger memory corruption.
2, via the (1) gsLanguage and (2) language_home parameters to modules/diary/showdiary.php; (3) admin_home
4," via """"....//"""" (doubled dot dot slash) sequences in the link parameter"
2, via the type parameter.
4, via adminpanel/logout.php.
2, via the q parameter.
2, via the (1) title or (2) content parameters in a news item to add.php
5, via a tag with a long title attribute
3, by uploading a file with an executable extension
4, via a crafted SIP packet to UDP port 5060.
5, via a direct request with the update parameter set to 1 and modified user and password parameters.
4, via a URL in the GLOBALS[PT_Config][dir][data] parameter.
5, via a key with the NULL byte.  NOTE: this might only be a vulnerability in limited circumstances in which the attacker can modify or add database entries but does not have permissions to truncate the file.
4," via a """" (quote) followed by command line switches in a (1) irc:///"
2, via the username parameter
2, via the start parameter.
0, via format string specifiers in a server response
4, via (1) the subcatid parameter to article.list.php; or the artid parameter to (2) article.print.php
3, by uploading a file with an executable extension as a profile photo
2, via the (1) username and (2) password fields.
4, via a long HTTP verb in the HTTP component; and allow remote authenticated users to execute arbitrary code via a long argument to the (2) MKD
4, via a long entry in a .M3U playlist file.  NOTE: this issue might be related to CVE-2008-0619.
0, by setting the login parameter to admin. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) username and (2) password fields.
4, via a .. (dot dot) in the URI.
2, via the (1) id parameter in the viewpage action to the default URI
1, by setting the mecard_admin_cookie cookie to admin.
4, via a URL in the LIBPATH parameter.
3, by uploading a file with an executable extension followed by a safe extension
2, via the keyword parameter in a search action to user.php and other unspecified vectors.
4, via a .. (dot dot) in the $tb_url variable in trackback.php
4, via the (1) id parameter to vote.php
4, via a Javascript event in the (1) url
4, via a .. (dot dot) in the folder name in the new folder functionality or (2) list arbitrary files via a crafted request to Campaign/CampaignListener.
4, via a crafted length field that triggers (1) connection exhaustion or (2) memory allocation failure.
4, via (1) the $id variable in admin/includes/dele_cpac.php
2, via the blog
3, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3," via unknown vectors related to a """"unique id"""" for user actions and improper validation of a """"user identity."""""
0, by accessing the install wizard page via unknown vectors.
4, via a long Document.Location property value.
4, via a crafted (1) RTF or (2) PDF file.
5, via a TNEF-encoded message with a crafted rich text body that is not properly handled during conversion to plain text.  NOTE: this might be related to CVE-2008-7104.
4, via a crafted IOCTL 0x222003 request to the \\.\easdrv device interface.
3, via the (1) quantity or (2) Add Engraving fields to the default URI; (3) Quantity field to phpcart.php; (4) Name
5, via a modified program that does not prompt the user for a password.
4, via a .. (dot dot) in a request.
0, via invalid field length values in a malformed (1) document or (2) request.
2, via the name field.
4, via a direct request to (1) statusprocess.exe
2, via the username.
5, via a certain request with the file parameter set to style.css.  NOTE: this can probably be leveraged for cross-site scripting (XSS) attacks.
2, via the id parameter.
2, via the news.php parameter.
2, via the search bar.
2, via the (1) About
4, via a null byte (%00) in the login parameter in an ajout action
2, via vectors related to PINP programs and the annotate command.  NOTE: some of these details are obtained from third party information.
4, via a crafted packet with a large string length value to UDP port 14000
4, via a crafted packet with a large string length value to UDP port 14000
4, via an X.509 certificate that does not pass the RSA signature check during verification.
3, via unknown vectors.
5, via a link to a victim who is already connected to the database.
2, via the nuked_nude parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) search and (2) d index.php parameters to index.php
2, via the (1) file parameter
4, via a long argument to the IsChecked method
5, via a long argument to the (1) RequestURL
2, via an empty query string to port 59278 and other unspecified vectors.
5, via a SOAPAction parameter of (1) urn:SetOptions for autostart
2, via the (1) language_setup parameter to setup.php or (2) test parameter to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: a third party has been reported that the test parameter is not used in @lex Guestbook.
5, via the language_setup parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the showtree parameter.
2, via the (1) username or (2) parameters.
4, via a crafted .sif file.
2, via the Accept-Language HTTP header.  NOTE: this can be leveraged to execute arbitrary PHP code using the INTO DUMPFILE command.
4, via a direct request to (1) class/class.conf_fw.php
0, by uploading an avatar file with an executable extension followed by a safe extension
4, via shell metacharacters in the (1) transcriptFile parameter to MRcgi/MRchat.pl or (2) LOADFILE parameter to MRcgi/MRABLoad2.pl.  NOTE: some of these details are obtained from third party information.
4, via a crafted OID value
4, via a crafted Content-Length header
0, via a long filename in a .M3U file.  NOTE: this might be related to CVE-2008-4504.
2, via certain values for the wlChannel and wlRadioEnable parameters.
3, by uploading a file with an executable extension
1, via crafted arguments to the Update method
2, via the id parameter in a sign task to index.php.
2, via the (1) photo parameter to show_photo.php
1, via unspecified vectors related to improper use of the gets and sprintf functions.
2, via the picture description field in a page edit action.
4, via a .. (dot dot) in the (1) change_lang parameter to index.php or (2) modload parameter to modules.php.
4, via a .. (dot dot) in the filename parameter in a downloadfile action to index.php.
2, by setting the ADMIN_Hora
4, via a direct request with a modified id variable.
4, via a modified tablehere parameter to category-delete.php with the is_js_confirmed parameter set to 1
4, via a public comment.
4, via a playlist (.pls) file with a long Title field
4, via a direct request to include/slideshow.inc.php
4, via a long request URL.
4, via (1) unspecified manipulations as demonstrated by a Nessus scan or (2) malformed input to TCP port 502.
2, via certain vulnerability scans
4, via unknown vectors.
2, via multiple crafted login packets.
4, via unspecified vectors.
1, via vectors related to a template file.
0, via a numeric parameter with a value matching the s parameter's hash value
3, via unknown vectors.
4, via a crafted request to system/admin.php.
2, via the rank_title parameter in a RankForumAdd action.
4, via (1) ftp/index.php
4, via a crafted link.
2, via long SSH packets
4, via a crafted string
2, via the Title field in a (1) document (subGeneralProps:dmpvDocTitle:PROP_W_title) or (2) container (subGeneralProps:dmpvContainerTitle:PROP_W_title).
4, via a crafted CONNECT TACACS command.
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors related to the Mobile Application Server component (APP01); (2) remote attackers to affect confidentiality via unknown vectors related to the Oracle Applications Framework (APP03); remote authenticated users to affect confidentiality and integrity via unknown vectors related to the (3) CRM Technical Foundation (APP05) and (4) Oracle Application Object Library (APP06); and remote authenticated users to affect integrity and availability via unknown vectors related to (5) Oracle Applications Technology Stack (APP07).
2, via unknown vectors related to the (1) Oracle Application Object Library (APP02) and (2) Oracle Applications Manager (APP04).
2, via the template parameter.
4, via manager/index.php.  NOTE: due to the lack of details
1, by calling the window.print function in a loop
2, by calling the window.print function in a loop
2, by calling the window.print function in a loop
4, via a JavaScript onload event in the User-Agent header
5, via an e-mail message containing a long line that begins with a . (dot) character.  NOTE: CVE disputes this issue because it is solely a usability problem for senders of messages with certain long lines
3, via vectors involving a symlink in a pathname to a (1) CWD
3, by sending a QUIT command during a disallowed data-transfer attempt.
2, via an ABOR command during a data transfer.
3, via unknown vectors.
2, via the id parameter.
1, by setting the action parameter to php_info in misc.php.
4, via a URL in the forward parameter in a logout action.
1, via vectors related to (1) AgentTicketMailbox or (2) CustomerTicketOverView.
3, via unspecified vectors.
3, by clicking a download link
2, via unknown vectors
0, by making many function calls.
2, via an anonymous DIGEST-MD5 LDAP Bind operation.
0, by making many function calls.
2, via the username parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1," via unspecified vectors involving """"knowledge of ... the contents of an encrypted file."""""
4, via a long nickname.
4, via a writev system call that triggers an iovec of zero length
1, by using the quickAllow dialog at an unattended workstation
4, via a crafted RTSP URL.
5, via a QTVR movie file with crafted THKD atoms.
2, via an AVI movie file with an invalid nBlockAlign value in the _WAVEFORMATEX structure.
4, via a crafted MP3 audio file.
5, via a crafted H.263 encoded movie file that triggers memory corruption.
4, via a Cinepak encoded movie file with a crafted MDAT atom that triggers a heap-based buffer overflow.
4, via a QuickTime movie file containing invalid image width data in JPEG atoms within STSD atoms.
4, via a crafted MPEG-2 movie.
4, via a crafted movie file that triggers memory corruption.
2," via unknown vectors related to an """"insecure file operation"""" on a temporary file."
4, via a crafted Unicode string.
1," via unknown vectors related to """"credential management."""""
4, via a Digital Audio Access Protocol (DAAP) message with a crafted Content-Length header.
2, via unspecified vectors that trigger an out-of-bounds memory access.
4, via a crafted resource fork that triggers memory corruption.
2, via unspecified vectors
2, via the (1) name
2," by sending malformed input over a TCP session in which the """"client terminates prematurely."""""
3, via unspecified vectors.
4, via an FWD-TSN (aka FORWARD-TSN) chunk with a large stream ID.
3, by sending a file with a dangerous MIME type but using a safe type that Firefox sends to xdg-open
3, via unspecified vectors.
4," via an onload=screen[""""""""] attribute value in a BODY element."
2, via an MJPEG file or video stream with a malformed Huffman table
4, via a URL in the (1) apps_path[plug] parameter to plugin/gateway/gnokii/init.php
2, via the qType parameter in a webboard prog action.
2, via the mdfd parameter in a prog action.
2, via the user_id parameter.
2, via the user_id parameter.
4, via modified (1) PHPAUCTION_RM_ID
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
2, via the forumid parameter.
2, via the username parameter.
2, via the username
4, via a .. (dot dot) in the X_CMS_LIBRARY_PATH HTTP header.
4, via a crafted .chm file.
1, by sending data over an established SSL connection
2, via the password parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, via unspecified manipulations in advance of an HPLIP installation or upgrade by an administrator
1, via vectors related to the association of Safari with the (1) feed
2, via the single posix_fallocate test in the SUSv3 POSIX test suite
4," via a .hhp file with a long """"Index file"""" field"
3, via the (1) DoSaveFile or (2) DoSaveHtmlFile method.  NOTE: vector 1 could be leveraged for code execution by creating executable files in Startup folders or by accessing files using hcp:// URLs.  NOTE: some of these details are obtained from third party information.
0, via an Audible Audio (.aa) file with a large (1) nlen or (2) vlen Tag value
0, via an Audible Audio (.aa) file with a crafted (1) nlen or (2) vlen Tag value
4, via a crafted SMB file system that triggers a heap-based buffer overflow.
4, via a crafted file system name.
1," via unspecified vectors related to """"file enumeration logic."""""
2, via long strings in input such as (1) source-code tokens and (2) pathnames
5, by attempting to mount a crafted sparse disk image that triggers memory corruption.
4, by attempting to mount a crafted sparse disk image.
4, via a crafted Compact Font Format (CFF) font.
5, via a crafted Mach-O executable that triggers an out-of-bounds memory read.
2, via long HTTP headers.
0, via a long hostname for a telnet server.
4, via a crafted response.
5, via a crafted PICT image that triggers memory corruption.
4, via a crafted TIFF image
1, via unspecified vectors
2, via unspecified vectors
4, via a long .asf URI in the HREF attribute of a REF element in a .asx file.
4, via a long string in an invalid .mp3 file.
4, via a long file
4, via a long URL in a File line in a .pls file
4, via a long Authorization header in an HTTP request.
4, via (1) a long file name within a torrent file
1, via crafted MS ADPCM encoded audio data in an AVI movie file.
4, via a crafted movie composed of a Sorenson 3 video file.
4, via a large XPM file that triggers a heap-based buffer overflow.
5," via a Freelance file with unspecified """"layout information"""" that triggers a heap-based buffer overflow."
4, via unspecified vectors.
3, via unknown vectors.
1, via unspecified vectors
3, via unknown vectors
1, via unknown vectors
2, via unknown vectors
1, via unknown vectors
4," via a PowerPoint file containing a crafted record type for """"collaboration information for different slides"""" that contains a field that specifies a large number of records"
1, via crafted sound data in a file that uses a PowerPoint 95 native file format
4, via a crafted ShareName in a response to an RPC request
4, via a crafted file that appears in a preview in a search result
4, via a request to the gmetad service with a long pathname.
2, via unspecified vectors
2, via an invalid Radiance RGBE (aka .hdr) file.
2, via the siteID parameter.
2, via the footer parameter.  NOTE: this can be exploited by unauthenticated attackers by leveraging CVE-2009-0250. NOTE: some of these details are obtained from third party information.
2, via the (1) Login parameter (aka username field) or the (2) Password parameter (aka password field).  NOTE: some of these details are obtained from third party information.
2, via an onclick action that moves a crafted element to the current mouse position
2, via an invalid Flexible Image Transport System (FITS) file.  NOTE: some of these details are obtained from third party information.
4, via a crafted (1) .doc
4, via an AttachFile action to the WikiSandBox component with (1) the rename parameter or (2) the drawing parameter (aka the basename variable).
4, via a Skins\DefaultSkin\DefaultSkin.ini file with a large ColumnHeaderSpan value.
4, via a long string in a .m3u playlist file.  NOTE: some of these details are obtained from third party information.
5, via (1) a large Common Chunk (COMM) header value in an AIFF file and (2) a large invalid value in an MP3 file.
4, via a long string in a .m3l playlist file.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the header parameter.  NOTE: this can be exploited by unauthenticated attackers by leveraging CVE-2009-0250. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted script that accesses another frame and reads its full URL and possibly other sensitive information
3, via unknown vectors.
5, via a malformed request.
2, via the id parameter.
0, by setting the crypt cookie to 1.
2, via the (1) username and (2) password parameters.
2, via the message parameter.
2, via the cat_id parameter.
2, via the message parameter.
2, via the (1) username and (2) password.
2, via directory traversal sequences in a GET request.
0, via a long filename in a crafted request.
4, via a .. (dot dot) in the g4_path parameter.  NOTE: in some environments
4, via a .. (dot dot) in the MAX_type parameter.
2, via the grid parameter.
2, via the cat_id parameter.
2, via the (1) txtEmail and (2) txtPassword parameters.  NOTE: some of these details are obtained from third party information.
2, via the cat parameter.
2, via the (1) SaveFile and (2) ExportToXML methods.
2, via the url parameter in the Add operation to modules.php.
3," via vectors related to """"encoded JavaScript"""" and Helpdesk.woa."
1, via unspecified use of the (1) load or (2) loadJad method.
4, via a crafted web page.  NOTE: some of these details are obtained from third party information.
2, via the (1) customDate
4, via a packet with a crafted value that is dereferenced as a function pointer.
1, via crafted
4, via a symlink attack on the x_showmenu.txt temporary file.
4, via a Trojan horse Python file in the current working directory
4, via a Trojan horse Python file in the current working directory
4, via a Trojan horse Python file in the current working directory
4, via a Trojan horse Python file in the current working directory
4, via a Trojan horse Python file in the current working directory
4, via a link to an http URI in which the authority (aka hostname) portion is either a (1) . (dot) or (2) .. (dot dot) sequence.
4, via (1) a long type parameter in an input tag
2, via the (1) idp parameter to reports/projects.php
2, via the (1) username and (2) password parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the version parameter.
0, via the recipe_id parameter in a viewrecipe action to index.php
0, via directory traversal sequences in the p parameter.
4, via a .. (dot dot) in the file parameter.  NOTE: the vulnerability may be in my little homepage Comment script. If so
2, via unspecified parameters to (1) admin/edit.php
2, via the catid parameter in a category action to index.php.
2, via the day parameter in an archive action.
2, via the view parameter.
2, via the (1) month and (2) year parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the CategoryID parameter in a refer action.
0, via the itemID parameter in a view action.
4, via a .. (dot dot) in the olang parameter to (1) mail.php and (2) mailbar.php.
4, via a long VALUE attribute in an INPUT element
5, by making a 64-bit syscall with a syscall number that corresponds to a policy-compliant 32-bit syscall.
3, by making a 32-bit syscall with a syscall number that corresponds to a policy-compliant 64-bit syscall
2, via unknown vectors
1, via unknown vectors
2, via the url parameter.
4, via a long string in a licensing key (aka .key) file.
4, via a long string in a .m3u playlist file
5, via a long LIST argument beginning with an * (asterisk) character.
2, via the (1) message title or (2) user full name.
4, via a crafted reverse-resolved DNS name (rhost) entry that contains a substring that is interpreted as an IP address
1, via vectors involving (1) a crafted zcrypt message
4, via a large compressed WML document.
3, by using a whitelisted module that imports an unsafe module
4, via a (1) low level APDU command or (2) debugging tool
2, via an onclick action that moves a crafted element to the current mouse position
4, via a .. (dot dot) in the type parameter.
3, by uploading a file with an executable extension and an image content type via a users editProfile action
0, via the mag_id parameter in a magazine action to index.php.
2, via an onclick action that moves a crafted element to the current mouse position
2, via the mpid parameter in a sign action to index.php
0, via the pet parameter in a sign action.
0, via the game_id parameter in a showgame action to index.php
2, via the cid parameter in a products action to index.php.
2, via the id parameter.
4, via a malformed 4X movie file with a large current_track value
1, via crafted Composition Time To Sample (ctts) atom data in a malformed QuickTime media .mov file.
1, via crafted Sync Sample (aka stss) atom data in a malformed QuickTime media .mov file
4, via a large length value in a message
2, via the WriteIniFileString method
3, via unknown vectors.
4, via a .. (dot dot) in the page parameter.
2, via the page parameter.
2, via the school parameter.
2, via the (1) username and (2) password parameters.
5, via a crafted QuickTime media file.
4, via a direct request to admin/reguser.php.  NOTE: this is only a vulnerability when the administrator does not properly follow installation directions.
2, via the category_id parameter.
2, via the cid parameter.
2, via the (1) familyname
2, via the (1) username and (2) password parameters.
1, via invalid Cascading Style Sheets (CSS) expressions in the style attribute
2, via the var parameter.
2, via the id parameter.
2, via the username parameter.
1, by reusing the RememberToken cookie after a failed admin login attempt.
2, via the background attribute embedded in an HTML e-mail message.
4, via a Trojan horse trickle-overload.so in the current working directory
4, via a symlink attack on the (1) /var/tmp/key.pem
4, via a crafted URL with certain characters that are not properly handled by web browsers that do not strictly follow RFC 3986
0, via the id parameter to index.php.
0, via the catid parameter to index.php.
4, via a .. (dot dot) in the preview parameter.
0, via the country parameter
2, via the clanek parameter.
2, via the cid parameter.
2, via the cid parameter.
2, via the cid parameter.
2, via the (1) search parameter to search.asp
2, via the (1) search parameter to search.asp and the (2) URL parameter to tellafriend.asp.
2, via the OrderDirection parameter.
1, via vectors related to the aio_getioev2 and getEvent methods.
5, via a crafted request.  NOTE: this is probably a duplicate of CVE-2008-5412.
4, via a .. (dot dot) in the l parameter.
2, via an M3U file containing a long string in a URL.
0, via the exhibition_id parameter in a gallery.viewPhotos action.
2, via the id parameter.
4, via (1) the user parameter (aka UserName field) or (2) the pass parameter (aka Pass field) to (a) admin/admin.asp or (b) the default URI under admin/.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the synTarget parameter.
4, via an IOCTL 0x80052110 call.
4, via a long string in a playlist (aka .plf) file.
2, via the Admin name field to the default URI under admin/.
4, via a direct request to phpinfo.php
2, via the (1) username or (2) password field.  NOTE: some third parties report inability to verify this issue.
2, via directory traversal sequences in the currentlang parameter to admin/case.php in the (1) Contact_Plus and (2) Reviews modules
0, via (1) the uid parameter (aka Username field) or (2) the pwd parameter (aka Password field).  NOTE: some of these details are obtained from third party information.
0, via (1) the uid parameter (aka Username field) or (2) the pwd parameter (aka Password field).  NOTE: some of these details are obtained from third party information.
2, via an integer value in the adminid cookie.
2, via an integer value in the adminid cookie.
4, via (1) the txtEmail parameter (aka E-MAIL field) or (2) the txtPassword parameter (aka password field) to customer_login.asp. NOTE: some of these details are obtained from third party information.
5, via a URL in the abspath parameter.
4, via a URL in the abspath parameter.
2, via an argument ending in a '\0' character
4, via a URI that triggers a 404 Page Not Found response.
0, via the proxy parameter in a deny_log manage action.
3, via unknown vectors.
2, via the PATH_INFO to the default URI under (1) level/15/exec/-/ or (2) exec/
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.  NOTE: this may overlap CVE-2002-1603.
5, via a crafted MP3 file that triggers heap corruption.
1, via vectors related to the contract filesystem.
2, via the (1) uname or (2) pword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted forum post.
4, via unspecified vectors.
5, via a .gro file containing a long string.
4, via a M3U file containing a long URL.
2, via the Username.
2, via the vcatid parameter in a viewcategory action to index.php.
4, via a URL in the INC_DIR parameter.
2, via the (1) log parameter to (a) logviewer.jsp and (b) log.jsp; (2) search parameter to (c) group-summary.jsp; (3) username parameter to (d) user-properties.jsp; (4) logDir
4, via a ..\ (dot dot backslash) in the log parameter.
3, via unknown vectors.
5, via a URL in the classFiles parameter to (1) admin/doc/index.php
0, via directory traversal sequences in the (1) currentmod and (2) LANG parameters to mod/index.php.
4, via a .. (dot dot) in the lang parameter.
0, via the id parameter to index.php.
0, via the fields parameter
4, via a crafted Shockwave Flash (aka .swf) file.
4, via a crafted library in a directory contained in the RPATH.
2," via an unspecified manipulation of the """"mouse pointer display"
4, via a crafted URL
2, via the URL parameter
2, via the (1) url and (2) acuparam parameters
4, via a URL in the sitepath parameter.
2, via the id parameter.
2, via the language parameter.
2, via the entry parameter.
1, via unspecified vectors
2, via unspecified vectors
2, via the catId parameter.
4, via a deep directory tree
4, via (1) the username field in an admin/ request to index.php
4," via a """"%"""" (percent) character in the username"
4, via a large ARC2 key length.
4, via shell metacharacters in the type parameter in a NoAuthREQ x509List action.
5, via a long text attribute in an outline element in a .opml file.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a crafted Excel file with a malformed record object
5, via a mail message with a crafted return receipt request.
3, via the (1) s parameter to cmdrequest/Login.fwx and the (2) search parameter to Grid.fwx.
2, via the catid parameter
4, via a .. (dot dot) in the ModName parameter to (1) admin_words.php
0, via the id parameter in a newar action.
2, via the PATH_INFO.
2, via the id parameter.
4, via a malformed NetScreen snoop file.
4, via a crafted Tektronix K12 text capture file
0, via format string specifiers in the HOME environment variable.
3, by uploading a file with an executable extension
2, via the searching parameter.
2, via unspecified vectors that trigger page faults on a machine that has a registered Kprobes probe.
5, by sending a large number of input lines.
2, via the (1) title or (2) date parameter
4, via (1) the siteloc parameter in a displayaddsite action
4, via a crafted URL.
1, via unspecified vectors
1, via crafted packets to TCP port 2000.
4, via a crafted SSH packet.
4, via a crafted SNMPv1 packet.
4, via a crafted SNMPv3 packet.
4, via a crafted HTTPS packet.
0, by disconnecting an SSL session in an abnormal manner
4, via MIPv6 packets
2, via an ICMP packet
4, via a URL in the Azione parameter.
4, via a .. (dot dot) in the URI
0, via the post parameter
4, via a .. (dot dot) in the (1) language
2, via the (1) login and (2) password parameters to pcgi/4site.pl
2, via the (1) edit and (2) edit_now actions.
2, via JavaScript code that calls the setAttributeNode method.
4," by presenting a """"plain image"""" of the authorized user."
1, by presenting an image with a modified viewpoint that matches the posture of a stored image of the authorized notebook user.
4, by presenting a large number of images for which the viewpoint and lighting have been modified to match a stored image of the authorized notebook user.
4, via a STATS line with a long email field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a (1) profile and (2) blog
2, via an IRC PRIVMSG command containing crafted color codes that trigger an out-of-bounds read.
2, via unspecified input to an application that uses the getline and pg_getline functions to read database rows.
4, via (1) the introduction field in a user profile or (2) an arbitrary text block in a user view.
0, via the user_prefix parameter to modules.php.
2, via the ID Field Name box in a yaCustomFields action to admin.php.
3, via an aFonts array parameter value that does not correspond to a valid font file
3, via unspecified vectors.
4, via a crafted query string
4, via a crafted IOCTL request to pgpdisk.sys
1, via strings that are used as input to the sasl_encode64 function in lib/saslutil.c.
4, via (1) the User-Agent HTTP header to hserver.dll or (2) unspecified input to hagent.exe.
4, via a 4X movie file with a large current_track value
2, via the (1) QUB and (2) Bez74 parameters.
4, via a modified Pfad parameter to pagesUTF8/Sys_DirAnzeige.jsp
2, via the id parameter in a section action to index.php.
2, via the id parameter.
2, via the search parameter in an advanced action.
0, via the category parameter to index.php.
2, via the loginemail parameter (aka login field).  NOTE: some of these details are obtained from third party information.
1, via unknown vectors or (2) hijack the authentication of arbitrary users via vectors involving the profile page.
2, via the user parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the user parameter to login.php or (2) the dbfield parameter to filter.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a request with an Accounts value for the dbtable parameter
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via a .. (dot dot) in the user cookie parameter.
2, via the gigcal_gigs_id parameter in a details action to index.php.
2, via the jobid parameter.
0, via the pid parameter in a showpic action to index.php.
2, via directory traversal sequences in the fPrefix parameter to (1) modules/recent_poll_include.php
4, via a .. (dot dot) in the template parameter.
4, via a long string in a .m3u playlist file.
4, via unspecified vectors.
2, via the (1) username and (2) passwd parameters.
2, via the (1) username and (2) passwd parameters.
2, via the (1) username and (2) passwd parameters.
2, via the LoginName parameter.
2, via the E-mail Address field.
4, via a feeds: URI beginning with a (1) % (percent)
5, via a crafted GIF image that causes the realloc function to return a new pointer
2, via the username parameter.
4, via a request with a large number of headers.
4," via a leading """"//"""" (double slash) in the filename."
4, via a PDF file with an invalid Form Opt entry.
4, via a PDF file that triggers a parsing error
2, via the (1) mpfr_snprintf and (2) mpfr_vsnprintf functions.
4, via CRLF sequences in the quit message and other vectors.
2, via the lookname parameter.
2, via the name parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the charm parameter.
2, via the charm parameter to (1) index.php and (2) kipper.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the configfile parameter.
0, via directory traversal sequences in the configfile parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the forumID parameter in a next action.
4, via a crafted Rich Text Format (RTF) ICQ message
5, by signing a message with a key that has been revoked in DNS
4," via a long """"input string."""""
2, via an Autonomous System (AS) advertisement containing a long AS path.
2, via unknown attack vectors.
4, via a direct request to admin.php.
5, via unspecified vectors.
2, via the user parameter.
2, via an executable file name in the argument to the SetExternalPlayer method.
4, via modified DownloadProtocol
2, via the searchText parameter.
5," via """"an XPath expression employing a scalar expression as a FilterExpr with ExtractValue() or UpdateXML()"
4, via (1) the end_date parameter to reserve.php and (2) the start_date and end_date parameters to check.php.  NOTE: the start_date/reserve.php vector is already covered by CVE-2008-6132.
1, via nested calls to the window.print function
2, via the id parameter.
2, via the (1) MyBox and (2) selectFavorites parameters to (a) quotes.php and the (3) QuoteName and (4) QuoteText parameters to (b) quotesadd.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via the (1) QuoteName and (2) QuoteText parameters to quotesadd.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the CA parameter.
4, via a playlist (.pls) file with a long URL in the File1 field.  NOTE: some of these details are obtained from third party information.
4, via a negative value in the Content-Length HTTP header.
0, via a full pathname in the map parameter
0, via a full pathname in the queryfile parameter
5, via a crafted length value that triggers a buffer over-read.
5, via vectors involving an invalid DER encoding that triggers a free of an uninitialized pointer.
4," via a Trojan horse GTK module in an unspecified """"relative search path."""""
4, via a long username field during backup domain authentication
2, via the filename of a virus-infected file
2, via the user parameter.
4, via unspecified vectors.
2, via the msg parameter.  NOTE: this can be leveraged for access to the SunMC Web Console.
1, via unspecified vectors
2, via an IRC channel name.  NOTE: some of these details are obtained from third party information.
3, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via an OK value for the login cookie.
4, via a .. (dot dot) in the argument
2, via unspecified requests in a client connection.
5, via unspecified vectors.
2, via the (1) Full Name or (2) Subject field.
4, via a map with a large (1) width or (2) height.
4, via a long consumer name
4, via a .. (dot dot) in a /CIMListener/ URI in an M-POST request.
2, via the id parameter.
2, via the (1) id parameter to showtheme.php and the (2) user parameter to userinfo.php.
1, via unspecified vectors related to SSL/TLS packets.
4, via a long string in a (1) M3U
4, via a .. (dot dot) in the default_language parameter.
2, via an NDS Verb 0x1 request containing a large integer value that triggers a heap-based buffer overflow.
5, via a crafted request.
1," via vectors related to the """"schema DB2 instance id"""" and the bcgarchive (aka the archiver script)."
1, via crafted SSL information in a Client Channel Definition Table (CCDT) file.
4, via unknown vectors.
2, via unknown vectors related to PF_KEY socket
4, via a crafted JPEG image that triggers memory corruption.
1, via unspecified vectors related to plug-ins.
5, by providing a forensic image containing HTML documents
4," via (1) """"external tools"""" or (2) a crafted forensic image."
1, via unknown vectors related to the master Key Distribution Center (KDC) server.
3, via unknown vectors.
2, via unspecified vectors to (1) smime.php
1, via directory traversal sequences in the Horde_Image driver name.
4, via unspecified vectors.
1, via unknown vectors related to links and MUC logs.
5," via """"corrupt votes."""""
3, via unknown vectors.
4," via """"malformed input."""""
3, via vectors related to large values in certain inputs in (1) smooth/ftsmooth.c
4, via an itms: URL with a long URL component after a colon.
5, via a crafted FLC compression file.
4, via a crafted compressed PSD image.
4, via a crafted PICT image.
4, via a movie file containing crafted Clipping Region (CRGN) atom types.
1, via crafted image description atoms in an Apple video file
4, via a crafted JP2 image.
4," via a crafted MPEG-4 video file that triggers an """"input validation issue."""""
0, via the node parameter in a browse action to gdl.php.
5, via a URL in the url parameter.  NOTE: this can also be leveraged to include and execute arbitrary local files via .. (dot dot) sequences.
4, via a large number of SMNT commands without an argument.
0, via the id parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via the act[update] action.
3, via unknown vectors.
4, via unknown vectors.
1, via unknown vectors
2, via unknown vectors
1, via unknown vectors
4, via unknown vectors.
2, via unknown vectors
4, via unknown vectors.
3, via unknown vectors.
5, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
1, via unknown vectors
2, via unknown vectors
4, via a long text field in a subtitle (.srt) file.
2, via the entry_id parameter.
0, via the linkid parameter to edlink.php
4, via a URL in the page parameter.
2, via the (1) username and (2) password parameters.
2, via the order parameter.
4, via a crafted .zip file.
4, via a long Date header
2, via the HTTP Host header.
4, via a \.. (backslash dot dot) in an MKD request.
2, via the gal parameter.
0, via the qorder parameter
4, via the (1) image_id parameter to comments.php
4, via a crafted Info header in an Ogg Vorbis (.ogg) file.
4, via a crafted project (.wap) file.
2, via unknown vectors triggered by clicking on a link
1, via unknown vectors triggered by clicking on a link
2, via unknown vectors related to the _moveToEdgeShift XUL tree method
4, via a long input argument in an in_play action.
2, via the id parameter.
1, by setting the identifyYourself cookie.
5, via a crafted .zip file that triggers memory corruption
5, via a crafted .zip file that triggers an SEH overwrite.  NOTE: it is possible that this overlaps CVE-2005-3317. NOTE: CVE has not investigated whether the specified file.zip file can be used for exploitation of this product.
4, via a crafted .zip file.  NOTE: CVE has not investigated whether the specified file.zip file can be used for exploitation of this product.
1, via unknown vectors triggered by clicking on a link
4, via a crafted executable (.exe) file.
3, via whitespace and a command-line switch
2, via the x parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Referer HTTP header in a request.
2, via the x parameter.
4, via a long hostname in a .bsl playlist file.
4, via a crafted Portable Game Notation (.pgn) file.
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, by submitting crafted commands to the Admin Console
4, via a DNS resource record (RR) with a long (1) class field (clas variable) and possibly (2) TTL field.
4, via a UNC share pathname in the LoadModule argument to the (1) synacast
4," via a crafted XSLT stylesheet with """"extension elements and extension functions"""" that trigger code execution by Xalan-Java"
5, via a base64-encoded absolute path in the filename parameter.
2, via directory traversal sequences in the uploaded parameter.
2, via the uploaded parameter.
2, by calling the GetAudioPlayingTime method with certain arguments.
2, via unknown vectors related to serialized data.
4, via (1) a crafted PNG image that triggers an integer overflow during memory allocation for display on the splash screen
4, via a crafted GIF image
4, via a connection without any data
1," via unknown vectors related to """"code generation."""""
2," via unknown vectors related to """"deserializing applets"
4, via a crafted message to (1) ctrlservice.exe or (2) rep_srv.exe
4, via a large amount of data associated with unspecified atoms in a PowerPoint file that triggers memory corruption
0," via unspecified DHTML function calls related to a tr element and the """"insertion"
4, via a Trojan horse xpdfrc file in the current working directory
2, via directory traversal sequences in the file_path parameter ($filename variable).
2, via the (1) c_type and possibly (2) file_type parameters.
2, via the pma_db_filename_template cookie.
2, via the save action.
4, via a long BGP UPDATE message
2, via unspecified TCP packets.
0, via the server parameter
1, via vectors related to error logging of keys from uddiget.jsp.
0, via the dsname parameter to happyjuddi.jsp.
2, via the PHP_SELF portion of a URI to (1) tiki-galleries.php
4, via unknown vectors.
2, via a script tag with a long defer attribute.
5, via a PN-DCP packet with format string specifiers in the station name.  NOTE: some of these details are obtained from third party information.
2, via the (1) SaveBarCode and (2) SaveEnhWMF methods.
4, via a symlink attack on the /tmp/screen-exchange temporary file.
5, via a crafted EMF file that triggers an integer overflow
4, via (1) the fmt-out parameter to login.wcap or (2) the date parameter to command.shtml.
1, via multiple requests to the default URI with alphabetic characters in the tzid parameter.
2, via the gameID parameter.
2, via the keywords parameter in a search action.
4, via a long (1) Authorization or (2) Referer HTTP header to TCP port 18624.  NOTE: the vendor has disputed this issue
2, via the username field (user_name parameter).
2, via the user cookie parameter.
0, via the recent parameter in a config change action.
2, via an XML document composed of a long series of start-tags with no corresponding end-tags. NOTE: it was later reported that 3.0.10 and earlier are also affected.
2, via an XML document containing many nested A elements.
2, via an XML document containing a long series of start-tags with no corresponding end-tags.  NOTE: it was later reported that 9.52 is also affected.
4, via a ZIP NOTIFY (aka ZIPOP_NOTIFY) packet that overwrites a certain ifPort structure member.
4, via a crafted (1) SYS_add_profil or (2) SYS___mac_getfsstat system call.
4, via a modified RAR archive.
2," by setting the EFER_LME (aka """"Long mode enable"""") bit in the Extended Feature Enable Register (EFER) model-specific register"
2, via the (1) subject
4, via a .. (dot dot) in the (1) row_mysql_blocks_center_down[file] parameter to includes/block_center_down.php; (2) row_mysql_blocks_center_top[file] includes/parameter to block_center_top.php; (3) row_mysql_blocks_left[file] parameter to includes/block_left.php; (4) row_mysql_blocks_right[file] parameter to includes/block_right.php; and row_mysql_bloginfo[theme] parameter to (5) includes/window_down.php and (6) includes/window_top.php.
2, via the username parameter.
4, via a URL in the theme_directory parameter to (1) container.php and (2) header.php in themes/.
2, via an RX response containing more data than specified in a request
4, via a symlink attack on an unspecified temporary file.
4, via shell metacharacters in a stream URL.
2, via the ItemId parameter.  NOTE: some of these details are obtained from third party information.
4, via a crafted CCD file.
0, via the makeid parameter in index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted (1) CCD or (2) IMG file.
2, via the (1) Report Name
2, via the gbid parameter in a comment action to index.php.
4, via a crafted FWHA_MY_STATE packet.
4, via a crafted Tektronix .rf5 file.
4, via a crafted TAR file that causes (1) clamd and (2) clamscan to hang.
4, via a malformed string to the json_decode API function.
4, via a ZIP file that contains filenames with relative paths
4, via a Quicktime movie file with a large count value in an STTS atom
2, via the member_id parameter in a viewprofile action.  NOTE: the board_id issue is already covered by CVE-2008-2996.2.
2, via the configure action to index.php.
2, via unspecified vectors to the (1) com_admin component
3, via unknown vectors.
5, via unspecified vectors.
2, via the glf_session cookie parameter.
5, via a long .bib bibliography file.
4, via a MIME e-mail message with RFC822 attachments (aka blobs) containing malformed root entities.
2, via the URI.  NOTE: some of these details are obtained from third party information.
2, via the (1) p_p_state or (2) p_p_mode parameters.
4, via a symlink attack on a /tmp/.esd-##### temporary file.
2, via an ID3 tag with a negative encoding value.  NOTE: some of these details are obtained from third party information.
2, via the savefile action with a file parameter containing a filename that has an executable extension.
2, via the (1) gid parameter to groups_profile.php
2, via the (1) eid parameter to events_view.php and the (2) id parameter to events_clndr_view.php.
4, via a .. (dot dot) in the lang parameter to index.php.
2, via the (1) gridPage and (2) gridSort parameters.  NOTE: some of these details are obtained from third party information.
2, via the keywords parameter.
2, via the id parameter.
4, via a long URI in a playlist (.m3u) file.
5, via a long URI in a playlist (.m3u) file.
4, via a long URI in a playlist (.m3u) file.
4, via a long URI in a playlist (.m3u) file.
4, via a long URI in a playlist (.m3u) file.
4, via a long URI in a playlist (.m3u) file.
0, via a long filename in a playlist (.pls) file.
5, via a crafted .mid file
2, via the POST request body.
2, via the reason parameter.
4, via a large document composed of unprintable characters
1, by fetching data with BYTEA columns.
2, via the id_document parameter.
4, via the id_establecimiento parameter.
4, via (1) the login_name parameter (aka the username field) or (2) the login_pw parameter (aka the password field).
2, via the URI.
1, by establishing an IPC$ connection to the XTIERRPCPIPE named pipe
4, via a long URI in a playlist (.m3u) file.
2, via an HTML file with a link to a long URL
4, via a long URI
4, via a .. (dot dot) in the URI.
4, via a long MP3 filename in a playlist (.xpl) file.
2, via the HELP_PAGE parameter.
3, via unknown vectors.
4, via shell metacharacters in the host parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via the login_name parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted WMF file.
2," via unspecified vectors related to """"name/value pairs"""" and """"paypal IPN functionality."""""
2, via the query parameter in search action
4, via a .. (dot dot) in the page parameter.  NOTE: this might be the same issue as CVE-2008-6126.2
2, via the (1) gal[] parameter to gallery.php
4, via a long string in a .cue file.
4, via a malformed file with UPack encoding.
4, via a crafted URL.
4, via an out-of-sequence DTLS handshake message
5, by sending a long malformed string over the PlughNTCommand named pipe.
2, via the products_id parameter.
4, via a .. (dot dot) in the include parameter.
4, via a .. (dot dot) in a certain languages[][file] parameter.
2, via the id parameter.
0, via the c parameter to plug.php.
4, via unspecified vectors.
2, via unknown attack vectors.
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
3, by triggering a stop or crash in httpd
1, via unknown vectors related to the ttrace system call.
2, via the filename parameter.
0, via directories with long pathnames.  NOTE: some of these details are obtained from third party information.
4, via a long string in a malformed playlist (.m3u) file. NOTE: this may overlap CVE-2008-3408.
4, via a long nativeFileSystem field in a Tree Connect response to an SMB mount request.
4, via a crafted filename.
3, via vectors related to a large bitmap that arrives over the IPC channel.
4, via a URL in the lib_path parameter.
2, via directory traversal sequences in the lang parameter to libraries/helpdocs/help.php and (2) include and execute arbitrary local files via directory traversal sequences in the error parameter to index.php.
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
4, via a skin file (skin.ini) with a large PlaylistSkin parameter.  NOTE: this may overlap CVE-2008-5735.
4, via a URL in the _page_content parameter.
2, via the PATH_INFO.
4, via a URL in the (1) _page_css and (2) _page_javascript parameters. NOTE: the _page_content vector is already is covered by CVE-2009-1450.
2, via the selection parameter in a todo action.
4, via a .. (dot dot) in the module parameter.
2, via the defaultVisualExt parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the slab parameter in an edit action
2, via the Page Title field.
2, by saving content as a .php file.
4, via a command job
4, via (1) the body of a message
2, via the (1) sql and (2) order_by elements in an XML search query.
3, via vectors involving a long hostname in a URL.
4, via a .. (dot dot) in the url parameter.
2, via the fileget parameter in a view action and other unspecified vectors.
2, via the cname parameter in a checkAlias action
4, via (1) an AttachFile sub-action in the error_msg function or (2) multiple vectors related to package file errors in the upload_form function
2, via unspecified vectors involving e-mail messages.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via unspecified attack vectors.
4, via a .. (dot dot) in the with parameter.
3, via the login_user (aka username) parameter.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the module parameter to index.php.
0, by setting the user cookie parameter.
4, via a long X- header
4, via a .. (dot dot) in the viewit parameter to index.php.
4, via a long string in an SRT file.
4, via a .. (dot dot) in the skin parameter in a settings action to profile.php.
2, via the article parameter in index.php.  NOTE: SecurityFocus states that this issue has been disputed by the vendor.
2, via the sn parameter.
2, via directory traversal sequences in the page parameter.
2, via the (1) username and (2) password parameters.
1," by setting the xlaAFPadmin cookie to """"lvl=1&userid=1."""""
0, via the id parameter to banner-details.php.
2, via the page parameter.
2, via directory traversal sequences in the file parameter to (1) ki_makepic.php and (2) ki_nojsdisplayimage.php in ki_base/.
5, via a PNG file that contains a certain large btChunkLen value.
0, via the adminEMail parameter to SaveConfig.php.
4, via a long instrument name.
4, via a throw statement with a long exception value.
4, via a crafted compound document file
4, via a large value in the second argument to the Base64FileEncode method
2, via unspecified input to the (1) GetBackupLocationPath
3, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the language parameter.
4, via a directory listing request containing a ; (semicolon) character.
3, via shell metacharacters in the name parameter during a restore action.
4, via a symlink attack on an arbitrary file in a certain temporary directory
4, via a PTRACE_ATTACH ptrace call during an exec system call that is launching a setuid application
4, via a crafted RPC message to a Windows XP SP2 or SP3 or Server 2003 SP2 system
4, via a crafted AVI file
2, via the news_id parameter in a read action.
4, via a URL in the (1) qte_web_path parameter to qte_web.php and the (2) qte_root parameter to bin/qte_init.php.
3, via unspecified vectors.
2, via the query string to (1) applications/applications.jsf
4, via a filename in the next_file parameter
0, via the next_file parameter to (1) main.cgi
5, via a %2e. (encoded dot dot) or an absolute pathname in the next_file parameter.
0, via an absolute pathname in the this_file parameter.  NOTE: traversal via a .. (dot dot) is probably also possible.
2, via the sysPasswd and sysConfirmPasswd parameters.
4, via a BMP file with crafted width and height values that trigger a heap-based buffer overflow.
2, via an AS path containing ASN elements whose string representation is longer than expected
1, via crafted fragmented packets without a payload
3, via vectors involving (1) certain encrypted strings in e-mail headers
4, via shell metacharacters in a username string that is used by the ypmatch program.
4, via a crafted cookie.
2, via the (1) search form; (2) _expresion_de_busqueda
5, via a crafted DTD reference in a DOCTYPE element in an NZB file.
1, by setting the login_id
3, via unknown vectors.
4, via a web form.
4, via a long banner.  NOTE: this might overlap CVE-2003-1368.
4, via a modified username element in a passwd_change action.
0, via multiple long SMTP commands
2, via unknown attack vectors related to /admin/remotecontrol/.
4, via long (1) baseurl
2, via the username in a registration
4, via a .MCP project file with long (1) FILE_INFO
3, by uploading a file with an executable extension
4, via a direct request.
4, via a long 257 reply to a CWD command.
4, via a long argument to the OnBeforeVideoDownload method
4, via (1) the msg parameter (aka the message in an article comment) or (2) the searchterm parameter (aka the search post form).  NOTE: some of these details are obtained from third party information.
3, by uploading a file with an executable extension via an admin.system.files (aka Manage Files) request to the default URI
2, via the css parameter
4, via a userid=1&lvl=1 value for the twLTadmin cookie.
4, via a pwd=&lvl=1&usr=&alias=admin&userid=1 value for the TWLHadmin cookie.
1, by setting the twFSadmin cookie to 1.
2, via the (1) nickname and (2) color parameters.
4, via a .. (dot dot) in the route parameter.
2, via the order_sn parameter in an order_query action.
2, via the PID parameter.
4, via a .. (dot dot) in the show parameter.
4, via a .. (dot dot) in the ln parameter.
4, via a long .asf URL in the HREF attribute of a REF element in a .asx file.
4, via a crafted TCP packet.
1, via vectors involving (1) signature verification during user authentication with X.509 certificates
5, via (1) a malformed Unicode string
4, via (1) the User.lang parameter to the login page (aka gw/webacc)
4, via (1) a crafted e-mail address in an SMTP session or (2) an SMTP command.
2, by setting the JobCareerAdmin cookie to Login.
4, via a crafted .NKNT file.
4, via a crafted .AMHH file.
4, via (1) a long rtsp URL in a .ram file and (2) a long string in the HREF attribute of a REF element in a .asx file.
4," via (1) a long rtsp URL in a .ram file and (2) a long string in the HREF attribute of a REF element in a .asx file.  NOTE: the latter was also subsequently reported in """"prior to 3.1.3.7."""""
4, via a crafted .m3u file.
4, via a crafted .pla file.
4, via (1) a long rtsp URL in a .ram file and (2) a long string in the HREF attribute of a REF element in a .asx file.
4, via a long rtsp URL in a .ram file.
4, via a long string in a +OK response.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the arch parameter.
2, via the (1) albumID
2, via the mid parameter.
4, via a .. (dot dot) in the script parameter.
2, via the questionid parameter.
2, via the (1) user name (userid parameter) and (2) password.
4, via unspecified vectors.
2, via the (1) user (username) and (2) password parameters.  NOTE: some of these details are obtained from third party information.
2, via an avatar file with an accepted Content-Type such as image/gif
4, via a long file entry in a .vpl file.
2, via the (1) username and (2) Password fields
3, by uploading a file with an executable extension
4, via a modified userid parameter without specifying any additional fields.
2, via the ReturnConnection method in (1) CM_ADOConnection.dll
4, via a long entry in a .m3u file
5, by sending an ABOR (abort) command without an active file transfer.
4, via shell metacharacters in the equation attribute of the math function.  NOTE: some of these details are obtained from third party information.
4, via a long string argument to the (1) setInstallerType
5, via a .jnlp URL in the argument to the launch method
4, by calling fstat with a first argument of AT_FDCWD.
4, via a long .cof pathname in a [TOOL_SETTINGS] section in a .mcp file
4, via a long 227 reply to a PASV command.
2," by placing PHP sequences into the account's """"display name"""" setting and then invoking boards/boards_rss.php"
5, via a .. (dot dot) in the version parameter to boards/boards_rss.php.
4, via a crafted ICMP echo request
4, via unspecified vectors.
2, via an SVG animation element
4, via a crafted size value in a CSI[4 xterm resize escape sequence that triggers a heap-based buffer overflow.
1, via vectors involving drag events and the dragging of content over a crafted web page.
4, via a call to the undocumented apple.laf.CColourUIResource constructor with a crafted value in the first argument
2, via unspecified vectors that trigger heap-based buffer overflows
0, via vectors that trigger a free of an uninitialized pointer.
4, via unspecified vectors.
4, via a crafted image containing an embedded ColorSync profile.
4, via (1) the abperson_displayName parameter to uwc/abs/search.xml in the Add Contact implementation in the Personal Address Book component or (2) the temporaryCalendars parameter to uwc/base/UWCMain.
2, via directory traversal sequences in the (1) GET or (2) PUT command.
4, via a base64-encoded supervisor cookie.
2, via the grp parameter.
2, via the catid parameter.
3, via the searchtxt parameter.  NOTE: some of these details are obtained from third party information.
0, via the catid parameter in a viewCategory action to index.php.
4, via a .. (dot dot) in the dir parameter.
4, via a long argument to the (1) SetFilePath and (2) SetClientCookie methods.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter in a detail action.
2, via the forumid parameter in a post action.
4, via a .. (dot dot) in the (1) webpages_form or (2) userman_form parameter.
2, via the (1) userman_form and (2) webpages_form parameters.
3, by uploading a file with an executable extension
2, via the id parameter.
4," via a symlink attack on an unspecified """"result file."""""
3, via unknown vectors.
4, via (1) an invalid 0x13 message
2, via the (1) GWAP.version or (2) User.Theme (aka User.Theme.index) parameter.
3, via unknown vectors.
0, via the id parameter in a digg action.
2, via the id parameter.
4, via a .. (dot dot) in the file parameter.
4, via a .. (dot dot) in the lang parameter.
2, via the re_route parameter to the login script.
2, via an invalid re_route parameter to the login script
4, via a .. (dot dot) in the file parameter to example/index.php.  NOTE: this was originally reported as an issue affecting the do parameter
2, via the id parameter to (1) admin/applications.php
4, via a URL in the form_include_template parameter.
2, via the form_aula parameter.
0, via the error parameter to header.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a symlink attack on the log file associated with the MALLOCDEBUG environment variable.
2, via the (1) username and (2) password parameters.
4, via a crafted PRIVMSG that causes an empty string to trigger a negative string length copy.  NOTE: this issue exists because of an incorrect fix for CVE-2007-2807.
4, via unspecified parameters.
4, via shell metacharacters in the first argument (the sURL argument).
3, via unspecified vectors.  NOTE: the login_username vector for Forms/login1 is already covered by CVE-2009-4406.
2, via the (1) username and (2) password parameters.
2, by calling the SetAttributeValue method
1, by making an SPI_SETDESKWALLPAPER SystemParametersInfo call with an improperly terminated pvParam argument
4, via (1) the year parameter to modules/kalender.php
4, via (1) the formUser parameter (aka the Name field) to common/login.php
4, via (1) the Page parameter in a List action to modules/ereignis.php
4, via (1) the formUser parameter (aka the Name field) to common/login.php
4, via (1) the uNev parameter (aka the username field) or (2) the uJelszo parameter (aka the Password field).
2, via the ID parameter.  NOTE: the profile.php vector is already covered by CVE-2006-0074.
4, via a long string in a playlist file
2, via the user parameter (aka the username field).  NOTE: some of these details are obtained from third party information.
4, via a long string in a malformed (1) .m3u or (2) .m3l playlist file.
4, via an m_username cookie in an add action.
2, via the id parameter.
2, via the id parameter.
4, via a URL in the mosConfig_absolute_path parameter to (1) imgcaptcha.php or (2) mp3captcha.php in assets/captcha/includes/captchaform/
5, via a large value in the r (aka Radius) attribute of a circle element
1, via crafted PCNFSD packets.
4, via a long search query.
4, via a crafted MAKI file
2, via the HTTP Referer header.
2, via the (1) quiz parameter to (a) num_questions.php
1, via crafted UTF-8 byte sequences that are treated as UTF-7 by Internet Explorer 6 and 7
2, via the RequestName parameter.
4, via a .. (dot dot) in the THEME_FOLDER parameter to (1) Corporate/homepage.php
4, via a .. (dot dot) in the fiche parameter.
2, via the id parameter in a groupdetail action to index.php.
4, via unspecified vectors.
2, via the password parameter.
2, via the username parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) Username and (2) Password fields.
2, via the (1) f and (2) t parameters in a showforum action.
0, by setting the userid cookie to 1.
1, via crafted Shockwave Player 10 content.
4, via a .. (dot dot) in the logfile parameter.
3, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors related to (1) model.php and (2) config.php with timestamps before 20090521.
1, via unspecified vectors related to model.php with a timestamp before 20090521.
0," via vectors involving nested parentheses and invalid byte values in """"simply nested DTD structures"
4, via a multipart form datapost request with a missing part header name
4, via a request for a PDF file that does not use the GET method.
4, via a string argument that represents a large number
2, via an IPv6 address in the correlation token in the APPID string
2, via the Referer HTTP header.
2, via the AlbumId parameter.
5, via a .. (dot dot) in a language cookie. NOTE: this can be leveraged for SQL injection by including awards.php.
1, by reading the /proc/iomem file
0, via an Internet shortcut .URL file containing a long URL parameter
4, via shell metacharacters in the ns parameter.
4, via a crafted WINS replication packet that triggers an incorrect buffer-length calculation
1, via crafted data structures in a packet
2, via the query string in situations that result in a 502 Gateway error.
4, via unspecified vectors.
2, via the (1) commentname (aka Author)
2, via unspecified vectors related to database output and the frontend administrative panel.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a long request to UDP port 62514.
2, via an MP3 file with a long ID3 tag.
2, via the event_id parameter.
2, via the Query parameter in a search action to forum.php
4, via a direct request
2, via the mesajid parameter.
0, via the pl parameter in a mi action.
2, via unknown vectors
4, via crafted input.
2," via an invalid IKE_SA_INIT request that triggers """"an incomplete state"
2, via an empty command
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
1, via unknown vectors
3, via unknown vectors.  NOTE: the previous information was obtained from the July 2009 CPU.  Oracle has not commented on claims from an established researcher that this is cross-site scripting (XSS) via the search_p_groups parameter in search/query/search.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
2," by setting the (1) c7portal and (2) cookname cookies to """"admin."""""
2, via the (1) thread parameter to messageboard.php
2, via the source_class parameter in a browse_classes action.
0, via the classid parameter in a showclass action to index.php.
4, via a .. (dot dot) in the file parameter.
2, via the cid parameter.
2, via the cid parameter.
2, via the nid parameter.
2, via the nid parameter.
2, via the category parameter.
1, by setting the (1) USER
3, by checking a box that specifies an immediate launch of the application after installation
2, via the msg parameter.
2, via the username parameter.
2, via unspecified vectors
4, via vectors related to interaction with TinyMCE.
4, via a URI for a large GIF image in the BACKGROUND attribute of a BODY element.
5, via a (1) http or (2) https request
4, via unspecified vectors.
4, via a BGP UPDATE message with an invalid attribute
3, via vectors involving a BGP UPDATE message with many AS numbers prepended to the AS path.
2, via unknown vectors
2, via the catid parameter.  NOTE: some of these details are obtained from third party information.
2, via the itemnr parameter.
3, via the search_text parameter.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the cat parameter in an xml action to index.php.
2, via directory traversal sequences in the section parameter to index.php.
2, via the fileid parameter to index.php.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, via event handlers such as onmouseover in the (1) search or (2) tag parameters; (3) arbitrary invalid parameter names that are not properly handled when triggered on a column; (4) bookmark parameter in an edit action; or (5) email parameter in a remember action.
4, via a request containing extra unrecognized arguments.
2, via directory traversal sequences in the (1) language parameter to charts.php and the (2) fretsweb_language cookie parameter to unspecified vectors
4, via a crafted (1) url and (2) location parameter.
2, via directory traversal sequences in the _FORUM[settings_design_style] parameter.
2, via the (1) name parameter to player.php and the (2) hash parameter to song.php.
2, via the (1) mgroup
0, via an invalid id parameter
4, via a .. (dot dot) in the dir parameter.
1, by setting the kulladi cookie to a valid username.
4, via a base64-encoded xcho parameter.
2, via the (1) ids parameter to admin.php
4, via a crafted response.
2, via the id parameter.
2, via the (1) inUser (aka Username) and (2) inPass (aka Password) parameters to (a) inc/login.ei
4, via a .. (dot dot) in the id parameter.
2, via the title (aka subject) field.
2, via the id parameter.
2, via the title (aka subject) field.
4, via a logout action.
3, by providing a crafted user_homepage parameter to member.php
2, via the (1) menu or (2) sort parameter to pivot/index.php
4, via an invalid url parameter
1, via unspecified vectors related to a race between the port_dissociate and close functions.
4, via (1) the returnto parameter to login.php or (2) the returnto parameter in a delete action to news.php.  NOTE: this can be leveraged for cross-site scripting (XSS) by redirecting to a data: URI.
4, via (1) the returnto parameter to makepoll.php
2, via the (1) login and (2) senha parameters.
4, via a URL in the fs_javascript parameter.
4, via unspecified vectors.
2, via the (a) NodeID and (b) action parameters to the default URI
3, by uploading a file with only an extension in its name
2, via the id parameter.
2, via the id parameter.
2, via the (1) courseid parameter to enrolments/step1.php
4, via login/logout.php
4, via a .. (dot dot) in the newlang parameter.
0, via the CodigoDisciplina parameter in a TopicosCadastro1 action.
2, via the sort parameter.
2, via the type parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) the Title field to requests.php
4, via (1) the origmsg parameter to account-inbox.php; the categ parameter to (2) delreq.php and (3) admin-delreq.php; (4) the choice parameter to index.php; (5) the id parameter to modrules.php in an edited (aka edit) action; the (6) user
4, via a direct request to phpinfo.php
4, via unspecified vectors.
2, via the sc_error parameter.
4, via a full pathname in the log parameter.
4, via a URL argument to the FtpConnect argument and a target filename argument to the FtpDownloadFile method.  NOTE: this can be leveraged for code execution by writing to a Startup folder.
4, via unknown vectors.
2, via the station parameter.
5, via a crafted HTTP request to TCP port 28012.
2, via an empty (1) subscription or (2) control message.
2, via the page parameter.
2, via the sform[day] parameter.
4, via (1) a .. (dot dot) or (2) absolute path in the file parameter.
2, via the listbasedir parameter.
4, via a URL in the GLOBALS[g_campsiteDir] parameter to (1) ad_popup.php
4, via a .. (dot dot) in the GLOBALS[g_campsiteDir] parameter.
2," via an encoded """"/"""" (slash) in the file parameter."
2, via unknown vectors
1, by making many connections to an inetd-based launchd service.
2, via format string specifiers in an application name.
4, via a crafted AppleTalk response packet.
1, via crafted floating-point numbers.
4, via a web page that places text in a crafted context
4, via a crafted H.264 movie file.
4, via a crafted MPEG-4 video file.
3, via unspecified vectors.
2, via the key parameter.
4, via a multipart/alternative e-mail message containing a text/enhanced part that triggers access to an incorrect object type.
4, via unspecified vectors.
3, via unspecified vectors.
2, via an unspecified request.
3, via vectors related to the fatal_error page and unspecified other components.
2, via the URI in a view=advanced request.
0, via an invalid URL in a BBCode img tag.
2, via the (1) _SESSION[handle] parameter to (a) home.php
4, via unspecified vectors.
2, via directory traversal sequences in unspecified vectors
4, via a .. (dot dot) in the cwd parameter.  NOTE: remote file inclusion attacks may be possible.
4, via a crafted (1) m3u or (2) pls playlist file.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
4, via a crafted request to TCP port 19810.
2, via the url parameter in a redirect action.
4, via a .. (dot dot) in the file parameter during a download action
2, via the birthdayprivacy parameter.
2, via an admin account record in a MIDAS cookie.
4, via the size_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, by setting the awse_logged cookie to 1.
2, via the (1) Username parameter ($PHP_AUTH_USER) and (2) Password parameter ($PHP_AUTH_PW).
2, via the id parameter.
3, via the txtAdminEmail parameter.  NOTE: some of these details are obtained from third party information.
3, by uploading a file with an executable extension
3, via unspecified vectors.
2, via the keyword parameter.
2, via the order parameter.
2, via the sortby parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an HTTP POST request to cgi-bin/firmwarecfg.
4, via a direct request to (1) gateway/commands/saveconfig.html
4, via a .. (dot dot) in the nextpage parameter.
4, via a URL in the pathtoserverdata parameter.  NOTE: the installation instructions specify deleting the install/ folder.
4, via a .. (dot dot) in the page parameter.  NOTE: in some environments
2, via directory traversal sequences in the input to unspecified connector modules
0, via the bid parameter to the default URI under e/tool/gbook/.
3, by uploading a file with a double extension in the filename
4, via a direct request to (1) lan_status_adv.asp
4, via a .. (dot dot) in the domain parameter.
2, via the out parameter.
3," via vectors related to """"context data."""""
4, via (1) a crafted Content-Length HTTP header or (2) a large HTTP request
4, via a crafted SQL bookmark.
4, via a crafted TIFF image
5, via a long declaration in a .xbm file.  NOTE: this issue only affects compface on distributions that used a certain patch.
4, via shell metacharacters in the (1) ping or (2) Traceroute parameters.
0, via the q parameter in a gamelist action.
0, via the id parameter in a (1) account or (2) event task to index.php.
4, via unspecified vectors.
1, by setting the usernamed cookie parameter.
5, via a PNG image with crafted (1) width or (2) height values.
4, via a crafted PNG image with large width and height values that trigger a heap-based buffer overflow in the (1) read_png_file or (2) read_png_file_as_rgb24 function.
2, via unspecified vectors
0, via the q parameter in a search action. NOTE: it was later reported that 5.2.1 is also affected.
5, via a negative integer value for the start parameter in a search action
5, via a nonexistent account name in the u parameter in a rate action
5, via a long URI composed of //.\ (slash slash dot backslash) sequences.
2, via the rid parameter in a viewrecords action to modules.php.
2, via the (1) in or (2) out parameter.
2, via the tag parameter.
2, via the section parameter.
2, via the userID parameter in the RGalleryUserGallery page to index.php
4, via a .. (dot dot) in the name parameter.
4, via unspecified vectors.
2, by entering an unspecified URL in (1) the self-service UI interface or (2) the console interface. NOTE: it was later reported that 4.6.0 is also affected by the first vector.
4, via a flood of SYN packets
4, via a RESTORE=RESTORE query string.
3, via unspecified vectors.
0, via components in the samples (aka _samples) directory.
4, via a .. (dot dot) in the side parameter.
5, via (1) an enter_parol cookie to index.php in an auto action or (2) the topic parameter to message.php.  NOTE: vector 2 can be leveraged for a cross-site scripting (XSS) attack.
2, via the v_variant1 parameter.
4, via a direct request to (1) admin/head.php
2, via the menu parameter.
2, via the menu parameter to admin_settings.php or (2) into a content/=NUMBER.php file via the title parameter to admin_new.php.
4, via (1) a crafted id parameter to index.php or (2) a nonexistent folder name in the id parameter to admin/admin_delete.php
4, via a .. (dot dot) in (1) the menu parameter to admin/admin_menu.php
2, via the product parameter.
2, via the txtUserName (aka User Name) parameter.  NOTE: some of these details are obtained from third party information.
2, via the albumid parameter.
2, via the username field.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
5, via a $admin value for the admin parameter in an edit action to admin/user/user.cgi and unspecified other components.
2, via unknown parameters to the gbook module and unspecified other components.
4, by installing and executing an application that does not make a permission request before using the camera or microphone.
5, by copying a local executable file to a location under the web root via the -o option
2, via the username parameter.
3, by specifying (1) an empty string or (2) a non-numeric string when selecting a forum
4, via (1) the GUI client
2, via the backend parameter.
2, via the staff username parameter.
4, via a long string in a (1) .lst or (2) .m3u playlist file.
4, via a .pls playlist file with a playlist entry containing a long File1 argument.
5, via (1) a long string in a .plf file and (2) a long string in the listdata.dat file
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) password parameter in 1.1 and (2) p_password parameter in 1.5.  NOTE: some of these details are obtained from third party information.
4, via a crafted JPEG file
4, via unspecified vectors.
0, via the value parameter
4, via a long PrinterName property.
4, via a URL in the BASE_DIR[jax_formmailer] parameter.
4, via a .. (dot dot) in the cmd parameter.
1, via vectors related to the url variable.
1, by setting the PHPMYBCAdmin cookie to LOGGEDIN.
2, via the guid parameter.
5, via a long string in a .m3u playlist file.  NOTE: some of these details are obtained from third party information.
2, via the id parameter in a profile action to index.php.  NOTE: some of these details are obtained from third party information.
2, via unknown vectors
4, via the txtPassword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the book_id parameter to index.php.
2, via the tid parameter.
2, via the tid parameter.
2, via the CatID parameter.
0, via the category parameter in an itemlist action to index.php.
0, via directory traversal sequences in the file parameter.
5, via a ..// (dot dot slash slash) in the t parameter.
0, via the id parameter to index.php.
4, via a forum post.
0, via the id parameter in a thread action
5, via a long string in a .m3u playlist file.
4, via a crafted HTML document that references a zero-length .js file and the JavaScript reload function.  NOTE: some of these details are obtained from third party information.
5," via a """"high-bit character"""" in a URL fragment for an unspecified protocol."
0, via the cate_id parameter in a list action.
2, via the mode parameter.
4, via a malformed router descriptor.
2, by causing controllers to accept DNS responses that redirect to an internal IP address via unknown vectors.  NOTE: some of these details are obtained from third party information.
2, via the emp_id parameter.
2, via the (1) userid parameter to suchauftraege_user.php and the (2) descr parameter to vote.php; and other unspecified vectors.
4, via a direct request to wp-settings.php
4, via a long URL in the first argument.
5, via unspecified vectors.
2, via the page_id parameter.
2, via the (1) username (aka Login) and (2) password parameters in a login action.
2, via the text parameter in a list action.  NOTE: this might overlap CVE-2008-1399.
2, via the (1) IndustryID parameter to category.php and the (2) SellerID parameter to supplier/view_contact_details.php.  NOTE: this is a product that was developed by a third party; it is not associated with alibaba.com or the Alibaba Group.
2, via the page parameter.
2, via the entry parameter.
2, via the search parameter in a resultats-recherche action.
0, via format string specifiers in a database name in a (1) COM_CREATE_DB or (2) COM_DROP_DB request.  NOTE: some of these details are obtained from third party information.
2, via the (1) search or (2) display parameter.
2, via the search_choice parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the path_to_lang parameter.
2, via the (1) month and (2) year parameters in a calendar action
3, via the (1) type and (2) func parameters. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an LDAP request containing multiple . (dot) wildcard characters in the Relative Distinguished Name (RDN).
4, via a malformed bind LDAP packet.
1, via certain use of the escape function that triggers access to uninitialized memory locations
2, via unspecified vectors
4, via a malformed externalized plist (XML form) containing an undefined element.
5, via a long string in a .ht3 file.
4, via unknown vectors.
1, via unspecified vectors
2, via an Office document with a bitmap (aka BMP) image that triggers memory corruption
4, via a list (ls) -R command containing a wildcard that references a subdirectory
2, via an RPC message containing a string without a null terminator
4, via (1) a crafted ASF file or (2) crafted streaming content
1, via multiple RTSP SET_PARAMETER requests with empty DataConvertBuffer headers.
2, via an RTSP SETUP request that (1) specifies the / URI or (2) lacks a / character in the URI.
4, via a large integer value for the length property of a Select object
0, via a large integer value for the length property of a Select object
4, via a large integer value for the length property of a Select object
4, via a large integer value for the length property of a Select object
4, via a large integer value for the length property of a Select object
5, via a .. (dot dot) in a pathname.
0, via the avatargalfile parameter when changing an avatar
4, via a long string in a (1) .m3u or (2) .hpl playlist file.
2, via the id parameter in a detail action to (1) main.php and possibly (2) demo_page.php.
2, via unspecified vectors that trigger excessive memory allocation.
4, via a .. (dot dot) in the fichier parameter.
2, via unspecified vectors related to an array index error.  NOTE: some of these details are obtained from third party information.
4, via a file that records a malformed packet trace and is processed by the (1) Bluetooth L2CAP
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
0, via the id parameter to index.php.
5, via a long string in a playlist (.m3u) file.
4, via (1) the nick parameter in a login action to index.php or (2) the URI in a news request to index.html.
4, via a long argument to the AppendFax method.
4, via (1) the URI
2, via an opt action.
4, via a large integer value for the length property of a Select object
4, via a long Unicode string argument to the write method
5, via a long Unicode string argument to the write method
0, via the sort_order parameter in a reward_points.userlog action to index.php
2, via the msg parameter.
4, via a malformed HTTP response during a Redswoosh download
1, via unspecified vectors involving the (1) console and (2) self service interfaces.
4, via a crafted count argument
4, via a member cookie in an account editprofile action
2, via the title parameter.
4, via the (1) sid parameter to assets/js/ddcart.php
0, via the msg parameter to (1) feedback.php
0, via the msg parameter to (1) feedback.php
2, via the cid parameter.
2, via the lid parameter in a viewannonces action to index.php.
2, via the mes_id parameter.
2, via the itemid parameter in a details action.
2, via the itemid parameter in a details action.
0, via the q parameter in a ProductSearch action.
4, via a GET request.
2, via the key parameter in a resetpass action to index.php and (2) remote authenticated users to execute arbitrary SQL commands via the ADD parameter in a mailto action to parents/parents.php.
2, via the seller parameter in a search action.
4, via a .. (dot dot) in the topic parameter.
0, via the id parameter in a show_profile action to index.php.
2, via the (1) cat and (2) tid parameters.
2, via the (1) userid (aka username) and (2) PassWord parameters to admin.asp.
4, via (1) trupuser and (2) truppassword cookies to uploadcp/index.php.
2, via the task parameter in a showpic action to index.php.
3, via the (1) id parameter to delete.php or (2) alphabet parameter to index.php.  NOTE: the edit.php and view.php vectors are already covered by CVE-2008-2565.
2, via the catid parameter in a category action to index.php.
2, via the txtUser parameter. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the page parameter to (1) z_loginfailed.asp
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the page parameter to (1) z_admin_login.asp
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via a long pathname in the source attribute of an item element in a .smpl playlist file.
0, via the pollID parameter in a results action to modules.php.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1," via malformed requests including (1) """"missing or mismatched protocol identifier"
2, via the Run method
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the gbid parameter in a reply action to index.php.
0, via the id parameter in a viewticket action.
4, via a pmadm cookie in (1) an edittemp action or (2) a users action.
5, via a URL in the page parameter.  NOTE: this can also be leveraged to include and execute arbitrary local files via .. (dot dot) sequences.
0, by setting the logged cookie to 1 and the uid cookie to an integer value
4, via a crafted .pdf file attachment
4, via a crafted .pdf file attachment
0," via unknown attack vectors unrelated to """"an external script."""""
4, via a direct request to amfphp/phpinfo.php
4, via a crafted (1) .m3u or possibly (2) .pst file.
2, via an RTP text frame without a certain delimiter
0, by calling the JavaScript findText method with a crafted Unicode string in the first argument
4, via a crafted DCC SEND request.
0, via images containing large width and height values that trigger a heap-based buffer overflow
1, via vectors related to the TraceRecorder::snapshot function in js/src/jstracer.cpp
4, via a crafted .js file
2, via an XML document composed of a long series of start-tags with no corresponding end-tags
4, via a crafted JPEG image that is not properly handled during display to a splash screen
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
2, via the Login variable.
4, via a malformed JPEG image with invalid offset fields
5, via vectors related to ELF loading
4, via a .. (dot dot) in an entry in a WAR file
0, via vectors involving the MSG_MORE flag and a UDP socket.
4, via a TOPIC message that lacks a topic string.
4, via a request containing a %00 (encoded null byte).
4, via a request containing non-canonical
4, via a 32-bit x86 application.
3, via unknown vectors.
4, via a sysenter instruction.
4, via a crafted .jnlp file
3, via unknown vectors.
0, via an Authorization HTTP header that lacks a : (colon) character in the base64-decoded string.
4, via (1) the scheduler title in the scheduler module
2, via the userid parameter (aka user_id variable) to dispatch.php.
2," via the """"Overall Width"""" field in a setconfig action."
3, via unknown vectors.
3, via unknown vectors.
4, via a malformed packet.
4, via unknown vectors.
4, via unspecified input.
1, via unknown vectors
4, via unspecified vectors.
4, via a certain DIV element in conjunction with SCRIPT elements that have empty contents and no reference to a valid external script location.
5, via a CLOCK_MONOTONIC_RAW clock_nanosleep call that triggers a NULL pointer dereference.
4, by executing a shared flat binary
4, via a MIME encoded value of admin for the myadminname cookie.
2, via the keyword parameter to the default URI under search/.
0, via the part parameter to (1) quick_search.php and (2) viewprofile.php.
4, via a URL in the page parameter.
2, via the ID parameter.
2, via the id parameter.
2, via the catid parameter.
2, via the key parameter.
2, via the key parameter.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in a productdetail action.
2, via the (1) cat parameter to category.php
0, via the Itemid parameter to index.php.
2, via the (1) op parameter to modules/pm/viewpmsg.php and (2) query string to modules/profile/user.php.
2, via the (1) page parameter to buy.php and the id parameter to (2) contact.php and (3) tellafriend.php.
2, via the (1) adminName parameter to cp/auth.php
2, via the id parameter in a list action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cid parameter.  NOTE: this might overlap CVE-2006-3271.4.
4, via a URL in the offset parameter.
4, via a .. (dot dot) in the PT parameter.
5, via a crafted FlashPix file.
5, via a crafted H.264 movie file.
4, via a crafted alias file.
4, via a file with a crafted resource fork.
5, via a crafted JBIG2 stream in a PDF file
4, via unspecified vectors.
4, via a crafted PixarFilm encoded TIFF image
4, via a .fileloc file
4, via a search request containing data that does not use UTF-8 encoding.
4, via a crafted .pls file.
5, via unspecified vectors.
4, via a crafted embedded font in a document.
5, via a crafted PDF document that triggers a heap-based buffer overflow.
4, via a crafted FAT filesystem on a disk image.
4, via unspecified vectors.
4, via a crafted Common Document Format (CDF) file.  NOTE: this might overlap CVE-2009-1515.
4, via a CWD command specifying a pathname in a deeply nested hierarchy of directories
3, via unspecified vectors.
3, via unspecified vectors.
5, via a crafted PICT image.
4, via a crafted Microsoft Office document that triggers a buffer overflow.
4, via unspecified vectors.
4, via a sequence of beacon frames in which one frame omits an SSID Information Element (IE) and the subsequent frame contains an SSID IE
4, via a negative ppos argument
3," via vectors related to """"suspend_* sysfs attributes"""" and the (1) suspend_lo_store or (2) suspend_hi_store functions.  NOTE: this is only a vulnerability when sysfs is writable by an attacker."
4, via a comment author URL.
4, via a direct request to (1) admin-footer.php
4, via a crafted auth header with certain comma delimiters that trigger an infinite loop of calls to the strcspn function.
1, via unspecified vectors
4, via a das command.
4," via """"malicious packets."""""
4, via a crafted H.323 packet
0, via the idAuthor parameter to (1) index.php and possibly (2) allpubs.php in publications/.
2, via the show parameter to (1) browse_ladies.php and (2) browse_men.php
2, via the rank parameter.
2, via the rank parameter.
2, via the rank parameter.
2, via the rank parameter.
2, via the n parameter.
2, via the letters parameter.
2, via the searchquery parameter.
2, via the catid parameter.
4, via a (1) cookid or (2) cookgid cookie.
4, via (1) the postevent parameter in a post action or (2) the _xzcal_y parameter.
2, via the (1) id parameter to product_desc.php
2, via the cat parameter.
5, via a long string in a subtitle (.srt) playlist file. NOTE: some of these details are obtained from third party information.
0, by listing the process and its arguments.
2, via the URI.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the name of an uploaded file. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the gameid parameter in a content action.
0, via format string specifiers in the nickname.
4, via a crafted string in a (1) .cue or (2) .m3u playlist file.
4, via a crafted request to the 0x80000034 IOCTL
2, via the topic title field.
2, via the (1) component and (2) priority parameters to buglist.php; and the (3) Username (4) E-mail
2, via the (1) newsuser parameter (User field) and (2) newspassword parameter (Password field).
4, via a base64-encoded file parameter.
4, via a .. (dot dot) in the (1) language parameter to show.php and (2) in parameter to advanced_search.php.
2, via the (1) UploadID parameter to videoint.php
4, via a .. (dot dot) in the TEMPLATE parameter.
2, via the (1) day parameter to show_matchs.php and (2) pageno parameter to persons.php.
2, via the nFileId parameter.
0, via the previous_page parameter
2, via the (1) tgs_language_id
0, via the q parameter to the default URI.
2, via directory traversal sequences in the a parameter.
2, via the TModel Key field.
2, via the items_number parameter.
4, via a long string in a (1) .pls or (2) .pl playlist file.
2, via the SRC attribute of an IMG element in a feed.
1, via crafted TeX commands.
4, via crafted pathnames on distribution servers for upstream source code used in Debian GNU/Linux packages.
0, via unspecified CGI parameter values
4, via a crafted XPM file that triggers a heap-based buffer overflow.
4, via a crafted GIF file
1, via JavaScript code with a long string value for the hash property (aka location.hash)
1, via JavaScript code with a long string value for the hash property (aka location.hash)
4, via unspecified vectors.
4, via a long URL in a .MP3 playlist file.
0," via attack vectors related to a """"malformed update url and a malformed update website."""""
2," via an HTTP URL request that contains a large number of dot """"."""" characters."
2, via unspecified vectors
3, via unspecified vectors.
2," via unspecified vectors that trigger a """"fork()/exec() bomb."""""
2, via an SMS message containing a malformed WAP Push message that triggers an ArrayIndexOutOfBoundsException exception
3, by referencing a crafted .eot file in the src descriptor of an @font-face Cascading Style Sheets (CSS) rule in an HTML document
4, via unspecified vectors.
4, via a crafted NLST (NAME LIST) command that uses wildcards
4, via a link in a Yahoo IM.
4, via unspecified vectors.
1, by referencing the control's CLSID in the classid attribute of an OBJECT element.
2, via the (1) N
0, via the systemid parameter
4, via a long MEDIA SIZE comment.  NOTE: it was later reported that there were additional vectors in htmllib.cxx and ps-pdf.cxx using an AFM font file with a long glyph name
2, via the prime_quick_style parameter to ucp.php.
2, via directory traversal sequences in the action parameter to the avatars page
2, via the portalid parameter to index.php.
4, via a URL in the dle_config_api parameter.
4, via a URL in the CONFIG[AdminPath] parameter.
2, via the navaction parameter to (1) news.php and (2) partneralle.php.
5, via a long string in a .plt playlist file.
4, via (1) core/select.php or (2) the city parameter to top_add.inc.php
4, via (1) the notice parameter to editform.php
2, via the id parameter.  NOTE: some of these details are obtained from third party information.
2, via the deptid parameter.
2, via the id parameter in a gamepanel action to index.php.
4, via a .. (dot dot) in the _GET[filename] parameter.
4, via a URL in the highlighter parameter.
2, via the (1) videoid parameter to tools/email.php and (2) redirect parameter to tools/login.php.
2, via the resman_startdate parameter.
3, by uploading a Java Archive (.jsp) file during a PUBLISH action
2, via the month parameter in a calendar action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the ID parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via an SLP invite message that lacks certain required fields
2, via unknown vectors
2, via unknown vectors that trigger heap corruption
1, via unspecified vectors
2, via unknown vectors
4, via a malformed reply to an EPSV command.
1, via vectors related to the embedding of these commands in the Authorization HTTP header
2, via unknown vectors
3, via vectors involving a crafted $MYSQL_BINPATH variable.
2, via unspecified vectors
5, by connecting to the file transfer port before the expected client does.
5, via zero-length Tunnel-Password attributes
4, via a crafted Option Acknowledgement (OACK) request.  NOTE: some of these details are obtained from third party information.
2, via the year parameter in a calendar action.
2, via the ID parameter.
0, via the comtext parameter
2, via the view_id parameter.
2, via the id parameter.  NOTE: some of these details are obtained from third party information.
3, via unspecified vectors.
4, via a .. (dot dot) in the image parameter.
4, via a .. (dot dot) in the tf parameter.
2, via the SearchWd parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the date parameter.
0, via the id parameter to (1) calendar.php
0, via the Browse parameter in a vote action.
4, via a .. (dot dot) in the fileName parameter.
2, via the (1) page
2, via the (1) pic_id parameter to includes/video_ad.php
0, via the replid parameter in a manw_repl add_form action to index.php
2, via the addr parameter.
2, via the search parameter in a search action to the default URI.
2, via unknown attack vectors.
4, via a long File1 argument in a (1) .pls or (2) .m3u playlist file.
2, via the (1) user parameter to user.php or (2) lookup parameter to search.php.
5, by uploading a file with an executable extension
4, via a URL in the chemin_lib parameter.
0, via the user_id parameter to (1) view.php
0, via unknown attack vectors
0, via unknown attack vectors
3, via unknown client-side attack vectors
4, via a modified user parameter to renew.php.
4, via a .. (dot dot) in the customizetemplate parameter in a direct request to admin/settemplate.php.
3, by uploading a file with an executable extension
2, via the (1) x and (2) y parameters.
2, via the fmid parameter in a view action.
2, via the (1) t parameter to forum.php
2, via the cat parameter.
4, via a URL in the file_save parameter.
2, via the search_term parameter.
2, via the (1) search parameter to list.php and (2) cat parameter to rss.php.
0, via the cat parameter to (1) rss.php and (2) opml.php.
4, via (1) the searchstr parameter in a search action; or the (2) nikname
2, via the id parameter in a project action to index.php.
2, via the search parameter.
0, via the id parameter to (1) rss.php and (2) search.php.
2, via the key parameter.
2, via the search parameter.
2, via the search parameter.
4, via a MIDI file (.mid) with a malformed header
2, via the term parameter.
2, via the id parameter.
0, via the id parameter to (1) demo.php and (2) forum.php
0, via the id parameter in a view_product action.
3, via the (1) id parameter to permalink.php and (2) year parameter to index.php.
2, via the ID parameter.
4, via a long string in a .mp3 file.
4, via a crafted Slideshow project (.psh) file
2, via the member_id parameter in an edit_user action to index.php.
4, via a URL in the page parameter.
4, via a long URL in a .m3u playlist file.
2, via the msg parameter.
2, via the id parameter.
0, via the replid parameter in a manw_repl add_form action.  NOTE: some of these details are obtained from third party information.
2, via the city parameter in a search action.  NOTE: some of these details are obtained from third party information.
4, via CRLF sequences and shell metacharacters in a filename in a directory that is checked by changetrack.
4," via a """"big size data"""" to the perf_counter_open system call."
2, via the (1) crafted number preferences that are not properly handled in the preference system (services/prefs.php)
4, via unspecified vectors.
4, via malformed OPCUA Service CallRequest packets.
2," via unknown vectors related to """"an uninitialized dissector handle"
4, via a long PlayerVersion property value.
0, via the id parameter in an spnews action to the default URI.  NOTE: some of these details are obtained from third party information.
0, via the action parameter to phprint.php.  NOTE: the query_string vector is already covered by CVE-2008-3101.3.
0, via the rssurl parameter in a Save action to index.php.
4, via a .. (dot dot) in (1) the module parameter to graph.php; or the (2) module or (3) file parameter to include/Ajax/CommonAjax.php
1, by composing an e-mail message with an attachment filename ending in (1) .php in installations based on certain Apache HTTP Server configurations
2, via the (1) year and (2) id parameters.
4, via a long string in a .M3U playlist file.
4, via a long string in a (1) .m3u or (2) .upl playlist file.
2, via the URI
5, by creating a Sales Order (SO) associated with that profile.
4, via (1) the search parameter in a search action
2, via the header of the topic in a comment.
2, via the last name field in a profile.
4, via a (1) RSS or (2) Atom feed
4, via a (1) RSS or (2) Atom feed
2, via an automatically submitted form containing a KEYGEN element
4, via a series of automatic submissions of a form containing a KEYGEN element
2, by calling the window.print function in a loop
5, via a long tel: URL in the SRC attribute of an IFRAME element.
2," via an input string composed of many \ (backslash) characters followed by a """" (double quote)"
2, via an input string composed of many alphabetic characters followed by a ! (exclamation point)
2, via an input string composed of an [ (open bracket) followed by many commas
3, via malformed packets.
3, via unspecified vectors.
4, via a ticket request.
1, via TIFF images containing large width and height values that trigger heap-based buffer overflows.
4, via a crafted sprmTDefTable table property modifier in a Word document.
4, via a crafted sprmTSetBrc table property modifier in a Word document
4, via a URL in the cs_base_path parameter.
4, via a URL in the FSPHP_LIB parameter to (1) FSphp.php
2, via the listingid parameter.
2, via the itemid parameter in a ViewDetails action
2, via the album_id parameter in an AlbumSongs action.
2, via the page parameter.
0, via the comp parameter to (1) index.php and (2) editComments.php
2, via the platform parameter.
2, via the Username field.
0, via the pid parameter in a propertycpanel action to index.php.
4, via a URL in the path parameter
4, via a .. (dot dot) in the target parameter to index.php.
0, via the id parameter in a sec list action
2, via the PATH_INFO.
4, via a flood of crafted TCP packets to port 1723.
4, via a URL in the baros_path parameter to (1) include/common_functions.php
4, via a URL in the sPath parameter.
0, via the stype parameter in an editsurvey action to index.php.
2, via the id_menu parameter.
2, via the (1) QUERY parameter to search.php and (2) USERNAME parameter to login.php.  NOTE: some of these details are obtained from third party information.
2, via the sName parameter (aka the name field).  NOTE: some of these details are obtained from third party information.
4, via a crafted Plot2D (.wp2) file.
4, via a URL in the wwwRoot parameter to (1) header.php
2, via the bid parameter in a mybudget action to index.php.
4, via a URL in the mosConfig_absolute_path parameter.
2, via the newsid parameter in a messages action to index.php.
2, via the Name field.
2, via the auction_id parameter.
0, via an unspecified parameter associated with Meta keywords in a blog entry.
4, via a long string in a .mor file.
2, via unknown vectors
1, via unknown vectors
1, via unspecified vectors
2, via the username2points parameter.
2, via the PropId parameter.
2, via unknown vectors
2, via unknown vectors
1, via unspecified vectors
2, via the cid parameter in a cat action to the home component.
0, via the cid parameter in a cat action to the home component.
2, via the s_r parameter.
2, via the show parameter.
2, via the (1) h_id
2, via the user_id parameter.
2, via the (1) important parameter to edit_profile.php and (2) pid parameter to report.php.
2, via the (1) return parameter to photo_view.php
2, via the maincat_id parameter.
4, via a URL in the id parameter.
4, via a long response to a PASV command.
4, via a URL in the AURORA_MODULES_FOLDER parameter.
4, via a .. (dot dot) in the path parameter.
0, via the path parameter to (1) index.php and (2) main.php
0, via the adult parameter in a showhoteldetails action to index.php.
2, by creating JavaScript web-workers recursively.
2, via the document.getSelection function.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
2, by reading the (1) Depends On or (2) Blocks field of a related bug.
1, via unspecified vectors
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors
4, via unknown vectors.
0, via the userid parameter in a profile action to index.php
0, via the m parameter to manager/index.php and (2) remote authenticated administrators to execute arbitrary SQL commands via the id parameter in an edit_link action to manager/tools.php.  NOTE: some of these details are obtained from third party information.
2, via the historymonth parameter.
2, via the (1) begin parameter and the (2) PATH_INFO.
2, via directory traversal sequences in the thCMS_root parameter.
4, via a URL in the fm_includes_special parameter.
2, via the subject field in a ticket.
4, via a crafted .wav file.
4, via a long string in a .pls playlist file.
2, via the username parameter in a login action.
3, via unknown vectors.
0, via the proyecto parameter in a verproyecto action to index.php.
2, via the (1) FORUM_ID or (2) CAT_ID parameter.  NOTE: this might overlap CVE-2005-1417.
4," via """"Markdown input."""""
0, via the id parameter in a student action to index.php.
0, via the id_document parameter to (1) repository_document.php
2, via the option parameter to the default URI (aka the main menu).
2, via the league parameter to index.php.
2, via the HTTP Referer header in a news.1 (aka news to email) action.
2, via an IMAP4 FETCH command.
0, via the user_id parameter in a videos action to index.php.
3, by uploading a file with an executable extension
4, via a packet to (1) TCP or (2) UDP port 20031 with a large value in an unspecified size field
4, via a long URL in a .m3u playlist file.
0, via parameters with names beginning with __ (underscore underscore) sequences
4, via unspecified vectors.
2, via unspecified requests that trigger responses containing the saved-image folder pathname.
2, via the filename of a .odt file in a Lotus Quickr place
2, via an HTTP request that lacks a handler
3, via unknown vectors.
1, via crafted Shockwave content on a web site.  NOTE: some of these details are obtained from third party information.
1, via crafted Shockwave content on a web site
1, via crafted Shockwave content on a web site
4, via a crafted web page that triggers memory corruption
2, via the name parameter.
0, via the p3 parameter to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a long hostname in an FTP server entry in a site backup file.  NOTE: some of these details are obtained from third party information.
2, via the PATH_INFO to the default URI.
0, via the host parameter to (1) the pinghost program
5, via (1) the JEXEC_OUTID parameter in a JEXEC_MODE_RELAY_OUTPUT action to the jexec program; the (2) act
0, via the cid[0] parameter in a teamdetail action to index.php.
4, via a URL in the pathToIndex parameter to (1) Calendar.php
2, via the PATH_INFO to (1) scrivi.php and (2) index.php.
2, via the mag_id parameter
2, via the mag_id parameter.
2, via the id parameter.
2, via the article_id parameter.
2, via the cat parameter.
2, via the (1) cat_id parameter to main.php and (2) game_id parameter to game.php.
0, via the test parameter in a preview action.
2, via the music_id parameter.
2, via the (1) rid and (2) tid parameters.
2, via the id parameter.
2, via the news_id parameter.  NOTE: the game_id vector is already covered by CVE-2008-4460.
2, via the (1) cook_user parameter to index.php and the (2) name parameter to modules.php.
4, via a .. (dot dot) in the mod_file parameter.
4, via a .. (dot dot) in the (1) _class parameter to admin.php and the (2) url parameter to install/install.php; and allow remote authenticated administrators to read arbitrary files via a .. (dot dot) in the (3) _htmlfile parameter to admin.php.
2, via the PATH_INFO.
2, via the listID parameter.
4, via a URL in the fs_jVroot parameter to (1) sites/site/pages/index.php
2, via the (1) date parameter to user_addfood.php
4, via (1) the cat_id parameter to courses_login.php
4, via (1) the page parameter to index.php; and allow remote authenticated administrators to execute arbitrary SQL commands via the (2) edit_id and (3) _p parameter in a news action to dnet_admin/index.php.
4, via a .. (dot dot) in the type parameter.
2, via the pseudo
4, via unspecified vectors.
1, via vectors related to kqueues
2, via the uid parameter in a show action.
0, via the fid parameter in a view_forum action
2, via the mode parameter.
2, via the id parameter.
2, via the (1) uname and (2) pword parameters.  NOTE: some of these details are obtained from third party information.
2, via the typematch parameter.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the url parameter.  NOTE: the researcher also suggests an analogous PHP remote file inclusion vulnerability
4, via a long string in a (1) .m3u or (2) .mpl playlist file.
4, via a long string in a (1) .m3u or (2) .mpl playlist file.
4, via a .. (dot dot) in the url parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) cname parameter to subclass.php and the (2) sn parameter to listads.php.
2, via the cn parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the DataDirectory parameter.
4, via a .. (dot dot) in the file parameter to index.php.  NOTE: in some environments
0, via the user parameter (aka the login name).
2, via an HTTP request with the addition of ::$DATA after the HTML file name.
4, via a long ABOR command.
0, via a full pathname with a drive letter in the currentPath parameter in a chooseDirectory action.
2, via the currentPath parameter in a chooseDirectory action.
2, via the (1) iaction or (2) node parameter.
2, via unspecified vectors in the staff control panel
2, via unspecified vectors
2, via the (1) SetLogFileName and (2) WriteToLog methods.
4, via a long File1 argument in a .pls playlist file
4, via a scene package containing a Scene Table of Contents (aka .scntoc) file with a Script_Content element
4, via a .max file with a MAXScript statement that calls the DOSCommand method
0, via the Value parameter in a GET request to cookie/.
2, via the login
5, via (1) the DCN Description field in the Accounts Receivables menu item for Add Transaction
2, via the (1) id and possibly (2) db parameters in a Delete action to the output of a Vendors>Reports>Search search operation.
4, via a .. (dot dot) in the countrycode field.
2, by setting the session identifier via a manipulation that leverages a second web server within the same domain.
2, via an HTTP request with a long first line that triggers a buffer overflow.  NOTE: this vulnerability reportedly exists because of an incorrect fix for CVE-2007-4060.
5, via a crafted RAR archive file that triggers heap corruption
4, via a crafted RAR archive file that triggers stack corruption
2, via the Cat_ID parameter.
4, via a REQUESTJET message with an invalid location.
0, via the email parameter in a subscribed action
3, via the (1) id parameter to placebid.php and (2) jobid parameter to post_resume.php.
2, via the postid parameter.
2, via the Cat_ID parameter
2, via the sid parameter.
2, via the bid_id parameter.
4, via a direct request to manage/phpinfo.php
2, via the clr parameter in a vote action.
3, by establishing a connection from a VNC client and then (1) disconnecting during data transfer
2, via the view parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified parameters.
2, via the (1) username and (2) password parameters.
4, via a long argument to the (1) LIST and (2) NLST commands
0, via the cat_id parameter to index.php.
2, via the group_id parameter in a group_members action to index.php.
2, via an HTTP request with the addition of ::$DATA after the HTML file name.
2, via the moudi parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the id parameter in a new_topic action.
2," via unspecified vectors related to the """"SITE SET TRANSFERPROGRESS ON"""" FTP command."
4, via a malformed argument to the SetSuperBuddy method.
2, via the page parameter.
2, via the (1) id parameter in a showItem action and (2) cid parameter in a show action to index.php.
4, via a large number of crafted NOOP commands.
0, via format string specifiers in the Host header.
4, via a .. (dot dot) in the (1) p and (2) s parameters.
2, via the (1) i parameter or (2) v parameters in a register action.
0, via the e parameter in an error action.
2, via the Username.
2, via the page parameter.
0, via the idea_id parameter to index.php.
4, via a long string in a .m3u playlist file.
4, via a (1) SMBv1 or (2) SMBv2 response packet that contains (a) an incorrect length value in a NetBIOS header or (b) an additional length field at the end of this response packet
5, via a .nfx file with a crafted (1) HostSize
4, via \.. (backwards slash dot dot) sequences in the third argument to the MakeHttpRequest method.
4, via a crafted (1) EmailField (email address) or (2) URLField (URL) that triggers a large amount of backtracking in a regular expression.
5, via a crafted name for a MySQL table.
1, via unspecified interface parameters.
4, via a crafted application
4, via a long URL with many / (slash) characters
0, via a full pathname in the configfile parameter to (1) update08.php or (2) update10.php.  NOTE: in some environments
4, via (1) the search_max parameter in a search action to the default URI
4, via a URL in the config_atkroot parameter.
4, via a long value in a (1) description or (2) keyword META tag.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a long value in a TITLE tag.
2, via the (1) user_id parameter to feedback.php; and the item_id parameter to (2) view_full_size.php
2, via the query string.
2, via the loginerror parameter.
3, by uploading a file with an executable extension
5, via a long URI in a playlist (.m3u) file.
2, via the UserName parameter.
4, via a comment.
4, via (1) the operation parameter to ReqWebHelp/advanced/workingSet.jsp
4, via unspecified vectors.
4, via a request to a crafted URI.
3, via unknown vectors.
2, via the p_p_id parameter.
4, via a malformed TrueType font in a document that trigger an integer overflow and a heap-based buffer overflow.
4, via a crafted packet to TCP port 7144.
2, via the query string.
2, via the content parameter.  NOTE: this was originally reported for tbmnet.php
2, via the (1) FileName
4, by sending a HTTP GET request to TCP port 8181 and closing the socket before the service can send a response.
2, via the idm parameter.
2, via the genres_parent parameter.
2, via the genres_parent parameter.
3, by uploading a file with an executable extension as a User Image
2, via the (1) id parameter to modules/bms/invoices_discount_ajax.php
2, via the PATH_INFO to (1) index.php and (2) modules\base\myaccount.php; and the PATH_INFO to (3) modules_view.php
4, via a direct request to (1) footer.php
2, via the (1) username parameter to config/edituser.php; (2) location
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
0, via the username parameter to config/changepw.php or (2) stop a virtual machine via the stop_vmname parameter to hardstopvm.php.  NOTE: some of these details are obtained from third party information.
2, via the pool1 parameter.  NOTE: some of these details are obtained from third party information.
3, via unknown vectors.
3, via unknown vectors.
2," via the file parameter with """"logs/"""" in between two . (dot) characters"
2, via the frmuser (aka Username) parameter.
0, via the last_message parameter to (1) add.php
4, via a crafted FormMax import (.aim) file.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unknown vectors.
3, via unspecified vectors.
1, via crafted dimensions of JPEG data in an SWF file.
2, via unspecified vectors
2, via unspecified vectors that trigger memory corruption.
2, via unspecified vectors that trigger memory corruption.
2, via an SWF file with a large exception_count value that triggers memory corruption
4, via unknown vectors.
2, via the frmpass (aka Password) parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2," via an invalid loginname (""""%%%"""") to _admin/index.php"
2, via the status_message parameter to (1) /news
0, via (1) the pid parameter
2, via the arcurl parameter.
4, via a long string in a .vib file.
4, via a long string in an .mp3 playlist file.
5, via a long string in a .sgp playlist file.
4, via a long string in a .M3U playlist file.
2, via an MP3 file with a long ID3 tag.  NOTE: some of these details are obtained from third party information.
2, via the (1) forum parameter to modules/forum/post.php and possibly (2) forum_id variable to modules/forum/class/class.permissions.php.
2," via the """"Filter/Banning"""" feature"
3, via unspecified vectors.
4, via a URL in the mosConfig_absolute_path parameter
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the GLOBALS[mosConfig_absolute_path] parameter to tests/ajcuser.php.
4, via a .. (dot dot) in the content_path parameter.
4, via a .. (dot dot) in the (1) p parameter to show.php and the (2) Template parameter to admin/pages/SiteNew.php.
4, via a long URL
3, via certain vectors.
4, via a crafted erf file
4, via pathnames in the SourceUrl and Source parameters to _layouts/download.aspx.
5, via a crafted domain name.
2, via the album parameter.
2, via the category parameter in a blogs action to index.php.
2, via the pid parameter in a product action to index.php.
4, via a long error message.
4, via a long error message.
2, via an invalid Error Code field in a packet.
3, via unknown vectors.
4, via a crafted MSG_PROTOCOL packet.
3, via unspecified vectors.
2, via the calendar parameter.  NOTE: some of these details are obtained from third party information.
4, via a Ruby (.rb) file containing a long string
2, via the PATH_INFO to the default URI in photos/tags.
3, via the (1) CreateFolder and (2) Copy methods.  NOTE: this might only be a vulnerability in certain insecure configurations of Internet Explorer.
4, via a long argument to the SetFontFace method.
4, via a crafted web page
0, via the s parameter (aka the selection variable).
0, via an invalid EXIF image.  NOTE: some of these details are obtained from third party information.
2, via the UserGUID parameter to home/index.asp and other unspecified vectors.
4, via a /\.. (slash backslash dot dot) in the URL.
2, via the (1) view and (2) section parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the UserGUID parameter to (1) Wizard_tracking.asp
4, via a crafted PSD file that triggers a heap-based buffer overflow.
2, via the sample parameter.
4, via a ..%2F (encoded dot dot slash) in the album parameter.
2, via the select parameter.
2, via the Name field in an invitation.
2, via an unspecified field that is copied to the HTML HEAD element.
3," via unspecified """"user-supplied information."""""
5, via a malformed compound document (aka cdf) file that triggers a buffer overflow.
5," via a """"Content-Disposition: attachment"""" designation"
2, via unspecified use of the Gears SQL API
5, via a page-local link
1," via unspecified vectors involving tcp_sendmsg processing """"ancillary data."""""
4, via a JavaScript loop that configures the home page by using the setHomePage method and a DHTML behavior property.
4, via a JavaScript loop that configures the home page by using the setHomePage method and a DHTML behavior property.
4, via a long USER command
4, via a long string at the end of a .wav file.
2, via the (1) title parameter to newprofile.html; the (2) firstname
3, via unknown vectors.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2008-4820.
4, via unspecified vectors.
0, via the uid parameter
0, via the testimID parameter in a display action to index.php.
2, via the det parameter.
1, by setting the adminLoggedIn cookie to true.
2, via the id parameter.
2, via the (1) user_id parameter to feedback.php
5, via a long string in a .m3u playlist file.
2, via the aid parameter in a showarticle action.
2, via the season parameter in a ladder action to index.php.
2, via the sid parameter in an sdetay action to index.php.
2, via the id parameter in a browse action
0, via the gallery_id parameter in a gallery_view action.
4, via a long 220 reply (aka connection greeting or welcome message).
4, via a long string argument to the (1) DisplayName
2, via an animated GIF file with a large image size
4, via a crafted DICOM file.
4, via an Oktalyzer file that triggers a heap-based buffer overflow.
4, via a long fileName parameter.
4, via a DICOM image with crafted dimensions
4, via a crafted 3D model in a Shockwave file.
4, via (1) an unspecified block type in a Shockwave file
4, via a KVM_X86_SETUP_MCE IOCTL request that specifies a large number of Machine Check Exception (MCE) banks.
4, via a crafted HDLC packet that arrives over ISDN and triggers a buffer under-read.
2, via certain game actions involving a wagon and a dual-headed engine.
1, via crafted packets.
1, via crafted zones.
0, via long strings that trigger heap-based buffer overflows
2, via the host parameter.  NOTE: this has also been reported as a shell metacharacter problem.
2, via the host parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) onok or (2) oncancel parameter to the logon program.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
1, via crafted BBCode tags.
2, via the URI.
4, via a node title.
2, via unspecified parameters to various .inc and .php files in (1) reporting/
2, via unspecified parameters to (1) bank_accounts.php
4, via (1) the PATH_INFO to area.php; the (2) pagina
1, via an APPE command to one socket in conjunction with a DELE command to a second socket.
1, via crafted arguments to IOCTL 0x80002024.
2, via directory traversal sequences in the view parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via multiple invalid SITE INDEX commands.
4, via vectors involving (1) the JSF Tree Control and (2) the JavaScript Resource Servlet.
1, via directory traversal sequences in an MKD command or (2) create files with any contents in arbitrary directories via directory traversal sequences in a file upload request.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a .. (dot dot) in the popup parameter.
2, via the id parameter in an item action to index.php.
2, via the aid parameter.
0, via the cat parameter in a thumbs action to index.php.
4, via unspecified vectors.
3, via unspecified vectors.
1, via unspecified node titles.
3, via node titles.
2, via the value field when viewing overridden variables.
1, via vectors related to (1) subscribing or (2) unsubscribing to mailing lists.
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse Python module in the current working directory
4, via a URL in the CRM_path parameter.
1, via unspecified vectors in (1) submitnews.php
4, via unspecified vectors.
4, via a URL in the GLOBALS[BASE] parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via certain byte sequences at the end of a URL.  NOTE: some of these details are obtained from third party information.
2, via the PATH_INFO.
2, via directory traversal sequences in the css parameter to (1) getjs.php and (2) getcsslocal.php; and include and execute arbitrary local files via the (3) group parameter to upload.php.
4, via a modified pageID parameter to ajax/deletePage.php or (2) delete arbitrary comments via a modified pageID parameter to ajax/deleteComment.php.
5, by uploading a file with a name containing a NULL byte.
4, via a URL in the GLOBALS[mosConfig_absolute_path parameter.
2, via an empty password.  NOTE: some of these details are obtained from third party information.
4, via a long URL in an M3U file.  NOTE: some of these details are obtained from third party information.
3, by uploading a file with an executable extension
2, via the author parameter to index.php.
0, by sending an APPE (append) command immediately followed by a DELE (delete) command without sending file data in between these two commands.
2, via the filename and text parameters.
5, via a crafted .ibkey file containing a long string.
0, by uploading or creating a large number of files or directories
2, via search terms that are not properly filtered before display in a custom results page.
1," by modifying the """"Data Input Method"""" for the """"Linux - Get Memory Usage"""" setting to contain arbitrary commands."
2, via the Category Access field.
2, via the (1) category and (2) Icon URL fields; or (3) inject arbitrary PHP code into data/ipban.php via the add_ip parameter.
4, via an orders-delete action to admin.php
4, via a p-delete action to admin.php
1, via unspecified vectors involving (1) String#ljust
3, via vectors involving unspecified Toolbar buttons and the eval function.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
1, by writing the message in between the document request and document load for a web page in a different domain.
4, via a long name.
2, via an unspecified parameter.
0," by setting the session identifier via a manipulation that leverages """"HTTP access to the RT server"
2, via the people picker tag.
4, via a .. (dot dot) in the filename parameter.
0, via the sitebid parameter to (1) home-f.asp and (2) opinions-f.asp; (3) sitebid
5, via a URL in the module_path parameter.
2, via the URI
5, via unspecified vectors.
3, via unspecified vectors.
2, via unknown attack vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
0, via an invalid date value in the from_date_day parameter to search.php
3, via unknown vectors.
4, via unknown vectors.
2, via the servercert parameter.
5, via a long URI value (aka url) in the Cascading Style Sheets (CSS) background property.
2, via unknown vectors
2, via unknown vectors
4, via a .. (dot dot) in the p parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a symlink attack on the /tmp/merkaartor.log temporary file.
2, via the (1) BackButton parameter to error_1; (2) wzConnFlag parameter to fresh_pppoe_1; (3) diag_pppindex_argen and (4) DiagStartFlag parameters to rpDiag_argen_1; (5) wzdmz_active and (6) wzdmzHostIP parameters to rpNATdmz_argen_1; (7) wzVIRTUALSVR_endPort
0, via the orderid parameter in a status action.
2, via the id parameter in a View_seminar action to index.php.
2, via an MP3 file with a long string in the (1) ID3v1
2, via directory traversal sequences in the controller parameter to index.php.
3, via the (1) X-Forwarded-For or (2) Client-IP HTTP header in a request to the default URI under admin/.
2, via the id parameter.
4, via a .. (dot dot) in the action parameter.
2, via the id parameter.
2, via the id parameter in a show action to index.php.
2, via the (1) cat and (2) file parameters in an editsite action
4, via a .. (dot dot) in the LANG parameter.
2, via the id parameter in an itempage action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) admin or (2) password field
5, via a long URL property value.  NOTE: some of these details are obtained from third party information.
4, via a URL in the pcConfig[smartyPath] parameter.
0, via the catid parameter
4, via a URL in the DOCUMENT_ROOT parameter.
4, via a long argument to the Initialize method.
2, via unspecified vectors related to the (1) tcp_do_getsockname or (2) tcp_do_getpeername function.
4, via a long string in a malformed .fig file that uses the 1.3 file format
4, via (1) the catid parameter in the PATH_INFO to the default URI or (2) the catid parameter to default.asp.  NOTE: this might overlap CVE-2009-0429.3.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via vectors associated with crafted arguments to the (1) RGN::run
4, via .. (dot dot) in the plugin parameter.
0, via the domain parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via the msg parameter.
4, via (1) the req parameter to login.php
4, via (1) the Test Case ID field to lib/general/navBar.php or (2) the logLevel parameter to lib/events/eventviewer.php.
4, via unspecified vectors.
4, via (1) the result parameter to register.php; (2) the user parameter to search.php; the (3) cat_msg
4, via a crafted PNG file.  NOTE: this might be the same issue as CVE-2007-2366.
2, via the date parameter.  NOTE: some of these details are obtained from third party information.
2, via the edit parameter.
4, via a direct request to (1) edCss.inc.php
2, via the created_by_alias parameter in index.php.
2, via the (1) cont_id and (2) courc_id parameters in a pregled action.  NOTE: some of these details are obtained from third party information.
4, via a direct request to admin.php.
2, via the cat parameter.
3, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
1," via vectors related to an """"escaping issue when processing AICC CRS file (Course_Title)."""""
2, via unknown vectors
4, via a malformed ext4 filesystem containing a super block with a large FLEX_BG group size (aka s_log_groups_per_flex value).
2, via the keyword parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sid parameter in a showcat action.
2, via the lang parameter.  NOTE: some of these details are obtained from third party information.
2, via the msg parameter.
4, via a direct request
4, by calling a SQL stored procedure in unknown circumstances.
1, by modifying the db2ra data stream sent in a request from the Load Utility.
4, via unspecified vectors.
4, via vectors involving the GET SNAPSHOT FOR DYNAMIC SQL command.
5, via unspecified vectors.
2, via unknown vectors
3, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the error parameter.
2, via the topic parameter in a topic action
2, via the (1) matchings[id] or (2) matchings[title] parameters in a Login action to an unspecified program
0, via vectors that trigger incorrect calls to the CRYPTO_cleanup_all_ex_data function
3, via malformed (1) JPEG or (2) PNG data in an MP3 file.
2, via the categoryid parameter.
2, via the id parameter.
4, via a long string argument.  NOTE: some of these details are obtained from third party information.
2, via long string arguments.  NOTE: some of these details are obtained from third party information.
0, via the cname parameter
2, via the add_blog action
0, via the yr parameter in a bmonth action.
2, via the contact category name.
4, via a menu description
4, via a crafted packet.
4, via a crafted packet that triggers a NULL pointer dereference
4, via a crafted packet
2, via unspecified vectors
1, via unspecified vectors
2, via the pa parameter.  NOTE: some of these details are obtained from third party information.
0, via directory traversal sequences in unspecified vectors.
3, via the (1) pid parameter in a code action to index.php and the (2) uid parameter in a view action to profile.php.
2, via the delete_poll action to index.php; and hijack the authentication of administrators for requests that (2) delete users via the manage action to admin.php
4, via unspecified vectors.
2, via unknown attack vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, by providing an arbitrary password to the admin interface.
2, via the PATH_INFO.  NOTE: some of these details are obtained from third party information.
2," via unspecified vectors related to the """"--maxlines"""" option and a crafted email message.  NOTE: some of these details are obtained from third party information."
3, by uploading a file with an executable extension followed by a safe extension
1," via vectors related to """"events not yet mailed."""""
4, via a deeply nested serialized variable
4, via a .. (dot dot) in the blog_language1 parameter.
4, via a key to csim_in_html_ex1.php
2, via the moduleid parameter.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
0, via the SEARCH parameter in a browse action.
4, via a .. (dot dot) in the cmd parameter.
2, via the secid parameter in a showcat action to index.php.
4, via a section name (aka the Name field).
2, via the product_id parameter in a shop.product_details shop.flypage action.
4, via a URL in the mosConfig_absolute_path parameter.
0, via the v parameter in a video action.
2, via the (a) 5 or (b) 9 field in a post action to ticket_function.php
4, via a .. (dot dot) in the include_file parameter.
2, via directory traversal sequences in the GLOBALS[nlang] parameter to (1) mod/poll.php and (2) mod/new.php.
0, via the QuizID parameter to (1) questions.asp
2, via the (1) catid parameter to wishlist.asp and the (2) linkid parameter to links.asp.  NOTE: vector 1 might overlap CVE-2005-1029.1.
3, by using a crafted psearch client to send requests that trigger a psearch thread loop
2, via the PATH_INFO.
4, via a direct request to admin/guestbook.admin.php.
2, via the (1) lat
3, by uploading a file with an executable extension
3, via the SaveFormat method.  NOTE: some of these details are obtained from third party information.
4, via a symlink attack on /var/log/videocache/vccleaner.log.
0, via the rid parameter to (1) index.php
2, via the PATH_INFO to (1) contact.php
4, via a long hn (hostname) parameter in a crafted HICP-protocol UDP packet.
2, via the search parameter.
4, via a crafted page parameter to misc.php
4, via a valemail action with the valmem set to a pre-assigned user ID
2, via the page parameter.
2, via the (1) PATH_INFO
2, via the groupboardid parameter.
5, via a URL in the CLASSPATH parameter to (1) bib_form.php
4, via a URL in the (1) GLOBALS[config][dir][plugins] parameter to plugins/address/admin/index.php
0, via the catid parameter to index.php.
2, via the aid parameter in an auction edit action to index.php.
2, via unspecified vectors
2, via the pid parameter.
2, via the PATH_INFO to (1) home.html or (2) lands.html.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unknown vectors
0, via vectors that trigger long arguments to an unspecified sub-application
0, via the i parameter to the ident program.
4, via a crafted request.
4, via a crafted request
4, via a crafted request with data that lacks an expected : (colon) separator
4, via a request that lacks expected separators
2, via the name field in a comment
4, via a .. (dot dot) in the page parameter to (1) helppage.php or (2) user/helppage.php.
2, via an inserted node.
0, via the search parameter to index.php.  NOTE: some of these details are obtained from third party information.
0, via the searchSongKeyword parameter in a SearchSong action.
4, via a realname (aka real name) element.
4, via a trailing encoded space character in a URI
5, by appending ::$DATA to the URI.
5, by appending a . (dot) character to the URI.
5, by appending a / (slash) character to the URI.
2, via the redirect parameter.
2, via the id parameter.
4, via a URL in the lang parameter to (1) newticket.php or (2) rempass.php
2, via the lang parameter.
5, via a URL in the lng parameter.  NOTE: this can also be leveraged to include and execute arbitrary local files via .. (dot dot) sequences.
2, via the PATH_INFO.
1, by setting the (1) pb_username (aka pb%5Fusername) and (2) level cookies.
2, via the (1) category_id parameter to forums.php
0, via the category_id parameter to (1) products.php
4, via a long string in a (1) .m3u or (2) .m3l playlist file.
0, via the func parameter to index.php.
0, via the campaign_id parameter in a results action to index.php.
2, via the PATH_INFO to index.php.
5, via a long string in a .m3u playlist file.
4, via (1) the url parameter to pop_send_to_friend.asp
2, via an unspecified request to protected/manager.cgi or (2) change the password of an administrative account.
2, via the name parameter.
2, via the from parameter.
2, via the 0-adminpass and 0-adminpass_2 parameters in a saveoptions action.
2, via the title parameter in a news action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) skype
4, via unspecified vectors.
2, via the id parameter to the default URI under news/.
2, via the order_id parameter in an order/order_print action to the default URI.
2, via the (1) module_id parameter in an admin/function_list action
2, via the tagcloud parameter in a tags action to (1) tagcloud_ell.swf
2, via the country_id parameter.
0, via the personel_sira parameter in a sirala action to index.php.
0, via the category_id parameter in a suggestions action to index.php.
0, via the c parameter to index.php.
0, via the Itemid parameter to index.php.
0, via the Itemid parameter to index.php.
0, via the id parameter to (1) yorumyaz.php and (2) blog.php.
2, via the id parameter.
2, via the id parameter in a grouplist action to index.php.
4, via a certain value of the admin_log cookie.
2, via the (1) sortby
4, via an MS-DOS reserved word in a URI
2, via the ip parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
2, via the sup_id parameter in a suppliers details action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the sup_id parameter in a suppliers details action.
0, via the user_id parameter in a users details action
0, via the id parameter in a category action to index.php.
4, via (1) the md parameter in an employer view_company action to index.php or (2) the oi parameter in an employer view_job action to index.php.
2, via the Email parameter (aka the username field).  NOTE: some of these details are obtained from third party information.
2, via the title parameter.
4, via a URL in the mosConfig_absolute_path parameter.
4, via a request to a URI ending in /dump/
5, via (1) the query string to jsp/dump.jsp in the JSP Dump feature
2, via the PATH_INFO to the default URI under (1) jspsnoop/
2, via the Password parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a URL in the MOA_PATH parameter to (1) _error_funcs.php
2, via the link_id parameter in a show_review action.
2, via the cat_id1 parameter.
2, via the hotel_id parameter to (1) hotel.php
0, via the sitetext_id parameter to (1) aboutus.php and (2) faq.php.
2, via the gameid parameter in a game action to index.php.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in an edit task to index.php.
2, via the id parameter in a show action to forummission.php.
4, via a URL in the root_path parameter
4, via a URL in the ACS_path parameter to (1) index.php and (2) admin.php in advanced_comment_system/. NOTE: this might only be a vulnerability when the administrator has not followed installation instructions in install.php. NOTE: this might be the same as CVE-2020-35598.
2, via the cat_id parameter
2, via directory traversal sequences in the conf[lang] parameter.
4, via a .. (dot dot) in the p_filename parameter
0, via the id parameter in a tags action to index.php.
5, via a crafted VP3 file that triggers an out-of-bounds read and possibly memory corruption.
4, via a crafted file that (1) bypasses a validation check in vorbis_dec.c and triggers a wraparound of the stack pointer
5, via a crafted MOV container with improperly ordered tags that cause (1) mov.c and (2) utils.c to use inconsistent codec types and identifiers
5, via a crafted file that triggers an infinite loop.
2, via unknown vectors that trigger a stack-based buffer overflow.
4, via unknown vectors.
5, via a crafted AVI file that triggers a divide-by-zero error.
4, via a crafted Vorbis file that triggers an out-of-bounds read.
3, via shell metacharacters to the ping command
4, via a .. (dot dot) in the lang parameter.
1, by appending them to a request to update the SNMP public community string.
2, via the username parameter
2, via the postatoda parameter to (1) rispondi.php and (2) scrivi.php
4, via a long string to /dhost/modules?I:.
4, via long sadminpwd and verifypwd parameters in a submit action to /dhost/httpstk.
4, via a non-numeric web port assignment in the management interface.  NOTE: this can be leveraged by non-authenticated attackers using CVE-2009-4657.
4, via a long string in a WAV file.
4, via a long GET request to TCP port 6660.
4, via a crafted ZIP file that is not properly handled when the victim uses the (1) Update or (2) Plug-In console menu item.
2, via the User.Theme.index parameter.
4, via a long argument to the AddAttachment method.
4, via a .. (dot dot) in the file parameter.
4, via a URL in the GLOBALS[RootPath] parameter to (1) Framework/EmailTemplates.class.php
2, via the formID parameter.
4, via a long ID3 tag in an MP3 file.  NOTE: some of these details are obtained from third party information.
4, via (1) the loginus parameter to Login.php or (2) the Old Password field to changepwd.php
1, by setting the room_phplanning cookie to a value associated with the admin account.
4, via a .. (dot dot) in the pg parameter.
2, via the user_id parameter.
4, via a modified user_id field.
4, via a long title in a FLAC file.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the search parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the PATH_INFO.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the st parameter.
2, via the st parameter.
2, via the id parameter in a vote action.
2, via directory traversal sequences in the id parameter in a dovote action. NOTE: some of these details are obtained from third party information.
2, via the sign parameter.
2, via the day parameter.
2, via the red_url parameter.
2, via the messageid parameter.
4, via the (1) txtkeywords and (2) cid parameters.
2, via the cid parameter.
0, via the id parameter to (1) rate.php and (2) postcomments.php.
2, via the slctCategories parameter.
0, via the pr parameter in a ulist action.
4, via a URL in the LANG parameter to (1) en.inc.php
0, via the fid parameter in a view_forum action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the fid parameter in a view_forum action.
0, via the fid parameter in a view_forum action.
4, via the (1) order parameter in a ulist action and the (2) fid parameter in a view_forum action.
0, via the codigo parameter to (1) aviso.php and (2) imprimir.php
2, via the PATH_INFO to (1) admin/auth.php and (2) file_uploader.php.
4, via a .. (dot dot) in the layout parameter.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
2, via the b parameter.
4, via (1) the cod_categoria parameter to categoria.php
2, via the PATH_INFO to cadastro_usuario.php.
2, via the Amount parameter.
2, via the language parameter.
2, via the (1) host parameter to stat/host.php
2, via the nodayshow parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the more parameter.
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) User and (2) Password parameters. NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the language parameter.
2, via the cid parameter.
4, via a .. (dot dot) in the file parameter.
2, via the username parameter.
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) pic_id parameter to includes/video_ad.php
2, via the id parameter.
2, via the album parameter.
2, via the username parameter in a login action.
2, via the username parameter in a login action.
2, via the q parameter.
4, via a URL in the language_id parameter.  NOTE: this can also be leveraged to include and execute arbitrary local files via directory traversal sequences.
4, via (1) the word parameter in a play help action to the faq module
2, via the (1) HistoryStorageObjectName and (2) HistoryKey parameters.
2, via the email parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) sortField
2, via the recordsPerPage parameter in a poll_default login action.
4, via a URL in the page parameter
0, via the parentID parameter in an act_OrderCategories action to wp-admin/post-new.php.
0, via the x parameter to (1) message_box.php and (2) request.php.
4, via a URL in the page parameter.
0, via the id parameter in a rubrik action.
4, via a URL in the go parameter.
2, via long arguments to the (1) XRMD
4, via a long string in a malformed playlist (.m3u) file.
4, via a long string in a malformed (1) .b4s or (2) .pls playlist file.
4, via a long string in a malformed playlist (.m3u) file.
5, via a long string in a malformed playlist (.m3u) file.  NOTE: some of these details are obtained from third party information.
4, via a long string in a .YUV file.
4, via a long string in a .BMX file.
5, via a long string in a .smi file.
2, via the (1) input_name and (2) input_text parameters. NOTE: some of these details are obtained from third party information.
4, via a crafted custom map.  NOTE: some of these details are obtained from third party information.
3, via unknown vectors.
0, via format string specifiers in the status code portion of an HTTP response.
4, via a URL in the spaw_root parameter to (1) blocks.php
4, via (1) the lang parameter in a sitemap action
0, via the treeId parameter to index.php.
2, via the newsid parameter in a view_item action to index.php.
2, via the HTTP Referer header to (1) admin/admin_config.php
2, via the (1) return parameter to pligg/login.php and the (2) HTTP Referer header to user_settings.php.
5, via a URL in the mosConfig_absolute_path parameter to (1) wp-comments-post.php and (2) wp-trackback.php.
1, via crafted FTP commands.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) letter parameter to addressbook.php
0, via the memid parameter to members.php.
3, by uploading a file with an executable extension via an addphotos action to adminpanel/index.php
3, via the (1) article_id parameter to view.php and the (2) a parameter in an event action to calendar.php
2, via the (1) order and (2) direction parameters to search.php.
2, via the pk parameter.
2, via the (1) kat parameter to side.asp
4, via a ..// (dot dot slash slash) in a DELE command.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) c parameter to index.php and the (2) id parameter to view.php.
1, by setting the g_admin cookie to 1.
4, via a .. (dot dot) in the vfolder parameter.
4, via a direct request to the MSP script
2, via the username parameter in a donate action.
2, via the URI to the MSP script.
4, via unspecified vectors.
4, via a .. (dot dot) in the filename parameter.
3, by uploading a file with an executable extension
3, by uploading a file with a double extension
3, by uploading a file with a (1) .php.pgif or (2) .php.pjpeg double extension
2, via the (1) do
2, via the fileop parameter.
3," via vectors related to an """"image upload form."""""
4, via a cp action.
4, via a change action.
3, via an admin_created action.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
1, via unknown vectors
4, via a crafted IOCTL 0x80012010 request to the DLPCryptCore device.
0, via a crafted parameter name
2, via the anticode parameter.
2, via the (1) sig[1] parameter to base/base_qry_main.php
4, via unspecified parameters.  NOTE: some of these details are obtained from third party information.
4, via a long argument to the SetIAPlayerName method.
4, via a long argument to the DiskType method. NOTE: this might overlap CVE-2007-1559.
2, via the (1) addNewDept
3, via vectors related to (1) the command_gsay function in server/c_party.C and (2) the book implementation.
3, via vectors involving an empty treasure list.
2, via the (1) userId parameter to tvserver/server/user/setPermissions.jsp
4, via a save action to tvserver/user/user.do
4, via a SceneURL property value with a URL for a .exe file.
0, via the sort parameter to index.php
3, via unspecified vectors.
2, via the result parameter.
2, via the showUid parameter. NOTE: the TYPO3 Security Team disputes this report
2, via the name parameter.
2, via the page parameter.
2, via the questionid parameter.
2, via the show parameter to (1) default.asp and (2) report.asp
2, via the idTableProduit parameter.
2, via the PATH_INFO.
0, via the id parameter to (1) show.php and (2) xml.php.
4, via a long string in a .usk file.
2, via the (1) search_name and (2) languages parameters.  NOTE: some of these details are obtained from third party information.
2, via the terms parameter.  NOTE: some of these details are obtained from third party information.
5, via a long URL in a .m3u playlist file.
2, via the q_id parameter to the answers script (aka answers.php).  NOTE: some of these details are obtained from third party information.
2, via the page parameter.
2, via the (1) req_username (aka Username) and (2) req_password (aka Password) parameters.  NOTE: some of these details are obtained from third party information.
2, via the forumid parameter.
2, via the (1) username and (2) password fields.
4, via a long Session cookie.
4," via a malformed request parameter that contains """"ctrl"""" characters."
5, via a direct request using the cid parameter.
3, via unknown vectors.
2, via unknown attack vectors.
4, via a crafted format string
4, via a crafted format string
0, via the ns parameter to zc.cgi.
3, via the (1) base_id or (2) course_id parameter in a search action.
2, via the msg parameter.
4, via a .. (dot dot) in the (1) file parameter to module/admin/files/show_file.php and the (2) path parameter to module/admin/files/show_source.php.
2, via the (1) pseudo
2, via the bookid parameter.
2, via the (1) title and (2) message parameters.
0, via the product_id parameter in a products.view action.
0, via the id parameter to (1) portfolio_genre.php and (2) news_id.php.
2, via the (1) password or (2) e-mail.
2, via unknown vectors
5, via a crafted PDF document containing a long name.
1, via crafted SCARD_SET_ATTRIB message data
1, via crafted SCARD_CONTROL message data
2, via the search parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) commentName
4, via HTTP requests.
1, via unspecified vectors
0, via vectors involving SSL VPN and PPPoE transactions
0, via Subject Alternative Name fields in an X.509 certificate
1, via unknown network traffic
4, via a login action during failover replication
4, via a high volume of SIP traffic
4, via malformed NAT-T packets
2, via long IKE attributes
4, via a large amount of small-packet data
1, via malformed TCP packets
0, by establishing many IPsec L2L tunnels from remote peer IP addresses
1, via TLS fragments
2, via the (1) showGroup parameter to (a) index.php and the (2) id parameter to (b) view.php
5, via a modified WBNEWS cookie
4, via a URL in the inc_dir parameter
2, via the New Question field.
4, via a long string in a .m3u playlist file.
4, via a long string in a .m3u playlist file.
2, via the (1) txtUserId (Username) and (2) txtPassword (Password) parameters.  NOTE: some of these details are obtained from third party information.
2, via the section parameter.
2, via the display parameter.
0, via (1) the id parameter to the default URI in an rss .xml action
2, via an onmouseover action in an img BBCode tag within a url BBCode tag.
0, via the user_id parameter in a user action to index.php.
2, via the (1) uid parameter
2, via the maincatid parameter in a showmaincatlanding action.
2, via the f parameter.
4, via (1) a view_adrates action with an invalid uid parameter
2, via the (1) address parameter to profile.php or the (2) description parameter to events/add_event.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via directory traversal sequences in the controller parameter in a messages action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the txtEmail parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
0, via directory traversal sequences in the Panel parameter.
2, via the idd parameter.
4, via unspecified vectors.
4, via a .. (dot dot) in the f parameter.
4, via a direct request to info.php
4, via a long string in a .wav file.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
4, via a long string in a .M3U playlist file.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, via the s parameter.
0, via the selectedCal parameter in a SwitchCal action.
4, via a .. (dot dot) in the box parameter.
4, via a URL associated with a nonexistent domain name
4, via a URL associated with a nonexistent domain name
4, via a URL in the main_content parameter.
4, via a .. (dot dot) in the filename parameter.
2, via the (1) where[]
2, via the (1) where[] parameter to search.php and (2) qc parameter to admin.php.
0, via the ID parameter to (1) category.php and (2) wcategory.php
2, via the (1) Keywords parameter to search.php and (2) SearchIndex parameter to browse.php.
2, via the Go parameter.
1, by setting the cookgid cookie value to 1
4, via a long GIOP request to TCP port 30000.
2, via the txtkeyword parameter in a search action.
4, via a submission.
2, via the job2 parameter.
2, via the ID parameter.
4, via a URL in the page parameter.
2, via the search parameter.
2, via the email address field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the Name field.
2, via unspecified parameters to .jsp pages.
2, via the targetid parameter.
4, via a symlink attack on unspecified temporary files.
4, via a crafted DTLS Cipher option during a reconnect operation.
3, by establishing and then immediately closing a TCP connection
3, by establishing and then immediately closing a TCP connection
5, by sending a QUIT command during a data transfer.
4, via unspecified vectors.
4, via a crafted request containing an empty uri field.
3, by syncing a large volume of data
5, via a malformed invitation document in a sync operation.
4, via a long URL
4, via a large number of calls over a long duration
2, by using an extension mobility (EM) phone to interact with the menu for SNR number changes
2, via mishandled quotation marks
4, via a symlink attack on a pdf#####.tmp temporary file.
0, by injecting this code into a cache file.
0, by deleting an item that is accessed through a connector
2, by checking out a document that is accessed through a connector
0, by accessing an entry in a calendar
5, by subscribing to an Atom feed
4, via a JPEG image containing an iCCP chunk with a negative embedded profile length.  NOTE: this is due to an incomplete fix for CVE-2006-7244.
4," via a Trojan horse executable file linked with a modified loader that omits certain LD_TRACE_LOADED_OBJECTS checks.  NOTE: the GNU C Library vendor states """"This is just nonsense. There are a gazillion other ways to introduce code if people are downloading arbitrary binaries and install them in appropriate directories or set LD_LIBRARY_PATH etc."""""
0, via vectors involving nested CDATA stanzas.
2, by reading the settings.php with the database passwords.
2, via an empty string argument.
5, by adding a nested group that contains the Distinguished Name (DN) of its parent entry.
4, via a malformed APE file.
4, via vectors related to a modified PHP_SELF variable
4, via unspecified vectors.
4, via a .. (dot dot) in a GET request.
2, via the cID parameter.
4, via a .. (dot dot) in the page parameter.
2, via the id parameter.
3, via unspecified vectors.
4, via a .. (dot dot) in the start parameter.
2, via the item parameter.
4, via a URL in the inc_ordner parameter.
2, via the Reason parameter.
2, via the outputType parameter.
2, via the bpe_nid parameter.
2, via the email variable.
4, via a long entry in a .pls file.
2, via partial HTTP requests
2, via partial HTTP requests
4, via a crafted request.
2, via the DOC parameter.
4, via a .. (dot dot) in the DOC parameter.
4, via a Trojan horse DLL in an unspecified directory
1, by using the 8BITMIME EHLO keyword in the SMTP session.
2, via an unspecified query.
4, via a crafted compressed file.
4, via a crafted packed file.
2, via an unspecified manipulation of the archive file format.
4, via a crafted file.
4, via a crafted file.
4, via a large file that is not properly handled during buffering.
4, via a login attempt with an incorrect password.
2, via an attachment with a crafted size.
4, via a crafted URL.
4, via a request containing an external entity declaration in conjunction with an entity reference
5, via a long URL in the [playlist] section in a .pls file
0, via format string specifiers in a LIST command.
4, via a large chunk size that triggers a heap-based buffer overflow.
4, via a crafted PowerPoint document
4, via a crafted PowerPoint document
5, via a crafted PowerPoint document
4, via a crafted PowerPoint document
4, via a crafted PowerPoint document
5, via a crafted MP4 audio file.
4, via a crafted DNG image.
4, via a crafted TIFF image.
1, via crafted format arguments.
1," via vectors related to """"HTML object element fallback content."""""
4, via a crafted XML document.
1, via HTML elements with right-to-left (RTL) text directionality.
2, via an HTML document with improperly nested tags.
3," via vectors related to """"callbacks for HTML elements."""""
5, via vectors related to the run-in Cascading Style Sheets (CSS) display property.
0, via vectors involving HTML IMG elements.
4, via a crafted document.
1, via crafted audio content with QDM2 encoding
1, via crafted audio content with QDMC encoding.
4, via a malformed .3g2 movie file with H.263 encoding that triggers an incorrect buffer length calculation.
4, via a crafted disk image with bzip2 compression.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors
1, via unknown vectors
3, via unknown vectors.
4, via a crafted request.
4, via (1) the rdReport parameter to rdpageimlogic.aspx
2, via the USERNAME parameter.
4, via a crafted QCP file that triggers a heap-based buffer overflow.
4, via a symlink attack on unspecified temporary files associated with a --hack_the_gibson update check.
2, via large size values in QCP audio content.
2, via the (1) username or (2) password parameter to (a) auth.php or (b) login_action.php.
1, via crafted FFFFFF45h Shockwave 3D blocks in a Shockwave file.
5, via a crafted .dir file that triggers an invalid read operation.
5, via a crafted .dir (aka Director) file that triggers an array index error.
4, via a crafted .dir (aka Director) file.
4, via a crafted SSH2 packet
4, via unspecified vectors.
4, via (1) the date1 parameter to pvm_messagestore.php
4, via a .. (dot dot) in the l parameter
2, via the javaVersion parameter.
4, via a symlink attack on the (1) /tmp/daemonout
5, via a .. (dot dot) in the controller parameter in a studieslist action to index.php.
2, via the id parameter in an article action to the com_content component
4, via a multipart/x-mixed-replace animation in which the frames have different bits-per-pixel (bpp) values.
0, via vectors involving certain indirect calls to the JavaScript eval function.
5, via a crafted HTML document
4, via a modified SWF file.
3, via unknown vectors.
4, via a modrdn call with a zero-length RDN destination string
0, by reading the error messages returned for requests that use the UserID parameter.
5, via a crafted web site that triggers memory consumption and an accompanying Low Memory alert dialog
5, by creating a symbolic link from an untrusted registry hive to a trusted registry hive
4, via a crafted Office document
1, via crafted media content
1, via crafted data to TCP port 80
5, by sending a process memory address and crafted data to TCP port 80
2, by calling the ViewProfile method with a crafted argument during an MSN Messenger session.
3, by uploading a file with an executable extension
2, via unknown attack vectors in which both the attacker and victim have an OpenID provider that discards identities during authentication.
4," via a """":help \t"""" private message to the MemoServ service."
3, via vectors related to omission of unspecified libraries from software updates.
4, via a crafted SecureWay 3.2 Event Registration Request (aka a 1.3.18.0.2.12.1 request).
4, via a crafted LDAP Search Request message.
4, via a crafted SKP file.
2, via the id parameter.  NOTE: some of these details are obtained from third party information.
2, via the catid parameter.
2, via the post_id parameter.
3, via unspecified vectors.
2, via unknown attack vectors.
3, via unspecified vectors.
2, via unknown attack vectors.
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
2," via unspecified vectors related to the """"SQL selection field"""" and """"typoscript."""""
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via unknown attack vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.  NOTE: this issue could not be reproduced by the vendor
4, via a long strFontName parameter to the DrawText method.
4, via a long string in a crafted LDAP message to a TCP port
4, via a long string in an invalid Client Hello message.
4, via a long URI in an HTTP OPTIONS request.
2, via an ogg file with a crafted Advanced SubStation Alpha Subtitle (.ass) file
2, via the order parameter.
3, by uploading a file with an executable extension
2, via the (1) gall and (2) levela parameters.
0, via the artid parameter in a display action to index.php.
0, via the id parameter in a detail action to index.php.
2, via the catid parameter in a show_category action to index.php.
2, via the gid parameter in a play_game action.  NOTE: some of these details are obtained from third party information.
0, via the gid parameter in a show_stats action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4," via a long string in an """"Authorization: Digest"""" HTTP header."
2, via format string specifiers in the encoding attribute of the XML declaration in a PROPFIND request.
2, via an HTTP request that lacks a method token.
2, via unknown vectors involving crafted packets.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted OpenDocument Text (ODT) file that triggers code execution when the macro directory structure is previewed.
4, via a crafted Debian source archive.
4, via a symlink attack.
4, via a username.
4, via a .. (dot dot) in the app parameter.
2, via unspecified parameters to (1) class.sessions_db.inc.php
4, via a crafted compressed file.
1, by performing incomplete downloads of the map.
1, via crafted message data
4, via shell metacharacters in a request.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
2, via the sid parameter.
2, via the pid parameter.
0, via the grp parameter in a gameserver action to index.php.
2, via the id parameter.
3, via the (1) cat parameter to index.php and the (2) note parameter to blog.php.
0, via the id parameter to index.php.
2, via the (1) subject parameter and (2) contents parameter (aka body) in an insertquestion action.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in a (1) category or (2) player action to index.php.
2, via the Document Name field.
4, via a .. (dot dot) in the controller parameter in a ccnewsletter action to index.php.
2, via the url parameter.
2, via the srvName parameter.
4, via unspecified parameters.
2, via the role parameter.
1, via crafted packets associated with transport information
4, via vectors related to the TIME2 behavior
1, via crafted filenames.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a crafted JP2 (JPEG2000) image
4, via a crafted NEF image.
4, via a crafted PEF image.
3, via vectors related to use of wheel group membership during access to the home directories of user accounts.
4, via a crafted PostScript document.
5, via a crafted movie file with H.261 encoding.
4, via a crafted movie file with H.264 encoding.
4, via a crafted movie file with RLE encoding
4, via a crafted movie file with M-JPEG encoding
4, via a crafted movie file with Sorenson encoding.
5, via a FlashPix image with a malformed SubImage Header Stream containing a NumberOfTiles field with a large value.
4, via a crafted FLC file
4, via a crafted genl atom in a QuickTime movie file with MPEG encoding
4, via a crafted PICT image.
1, via crafted color tables in a movie file
4, via a PICT image with a BkPixPat opcode (0x12) containing crafted values that are used in a calculation for memory allocation.
4, via a crafted MP4 podcast file.
0, by replacing an unspecified file with a Trojan horse.
4, via a crafted BMP image.
4, via a crafted applet.
4, via a large request with an incorrect authentication attempt
3, via multiple requests for a non-existent file using a long URI.
4, via a long NMEA data sentence.
3, via vectors related to using smbadm to join a Windows Active Directory domain.
4, via vectors related to using kclient to join a Windows Active Directory domain.
1, via unknown vectors
1, via vectors related to reading a (1) error log or (2) stack trace
2, via unknown vectors
4, via a malformed IKE packet
4, via a malformed SIP message
4, via a malformed SIP message
4, via a malformed SIP message
2, via unknown vectors
4, via a malformed packet
4, via a malformed packet
4, via a malformed session attribute
2, via unknown SIP traffic
0, via the f parameter
2, via the Stat_Radio parameter.
0, via the forums[] parameter in a search action.
2, via the nova_name cookie parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the blog parameter in an images action to index.php.  NOTE: a separate vector for the id parameter to detail.php may also exist.
2, via the (1) username and (2) password parameters.
2, via directory traversal sequences in a base64-encoded f parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the query parameter in the (1) question action
2, via the reports comment box in a continue_assess action.  NOTE: some of these details are obtained from third party information.
2, via the return parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, by sending more data than was requested
4, via a long (1) MKD
2, via an invalid packet that triggers incorrect preparation of an error token.
5, via a request from a kadmin client that sends an invalid API version number.
2, via the id parameter.
2, via the catid parameter in a display action to index.php.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the dest parameter.
0, via URL encoded characters in the filename extension
4, via a malformed message
0, via vectors involving the display of a blocked popup window during navigation to a different web site.
4, via a URL that specifies multiple protocols
4, via unknown a crafted SOAP request
3, via unknown vectors.
0, via the id parameter in a niusy action.
2, via the orderlinks parameter.
0, via the search parameter in a search action.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter.
4, via a large number of white space characters in the filename argument to the (1) SaveasMolFile and (2) ReadMolFile methods.
2, via directory traversal sequences in the page parameter.
4, via a direct request with a modified p parameter.
2, via the JMSDestination parameter in a queue action.
4, via a crafted (1) .orb or (2) .ov file.
4, via unspecified vectors.
0, via the pfid parameter in a catalog action.
2, via the s parameter.
2, via the cid parameter.
2, via the id parameter in an editunidad action to index.php.
2, via the nav_id parameter.
4, via a ./../.../ (modified dot dot) in the file parameter.
2, via the Password parameter.  NOTE: some of these details are obtained from third party information.
2, via the q parameter.
2, via the lang parameter.
5, via unspecified vectors.
2, via the ID parameter.
2, via the reloadFrame parameter.
2, via the search field.
2, via the message parameter.
2, via the user action to index.php
4, via a crafted .mpg file.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via the id parameter.
2, via unknown vectors
1, via netlink packets
2, via the argument.
2, via the user_id parameter to ajax/print.php.  NOTE: some of these details are obtained from third party information.
0, via the which parameter in a copy action.
4, via a URL in the langFile parameter.
1, by setting the jsessionid parameter to (1) index.php/Comment/Main
3, by uploading a file with an executable extension using the uploadform action
2, via the id parameter.
2, via directory traversal sequences in the (1) file parameter to libraries/jquery/js/ui/jsloader.php and the (2) files[] parameter to libraries/jquery/js/jsloader.php
2, via the cat_id parameter in a gamecatalog action.
0, via the cat_id parameter in a catalog action.
2, via the rental_id parameter in a CalendarView action.
0, via the cid parameter in a show action.
4, via a .LXO file containing a CHNL subchunk associated with an invalid length.
4," via """"incorrect channel control data."""""
4, via unspecified vectors.
2, via multiple connection attempts to a stopped queue manager.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unknown vectors.
4, via a symlink attack on an unspecified file.
4, via a crafted CC: header.
2, via the event_id parameter in an event action to index.php.
2, via the eid parameter in a question action to index.php.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a .. (dot dot) in the id parameter.
0, via the category_id parameter in a view_category action to index.php.
2, via the v parameter to index.php.
2, via the key parameter in a products action.
2, via an Excel file with a malformed WOPT (0x80B) record
5, by creating a page with a crafted URI.
4, via a .. (dot dot) in a non-initial pathname component in a filename within a .jar archive
4, via a symlink attack on .cache in a user's home directory
4, via unknown vectors.
2, via unknown vectors
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors related to Online Help.
2, via unknown vectors related to Online Help.
2, via unknown vectors related to Online Help.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors related to Data Service for Oracle E-Business Suite
2, via unknown vectors related to Data Service for Oracle E-Business Suite
2, via unknown vectors related to Address Book.
2, via unknown vectors related to the Kernel.
2, via unknown vectors related to the Kernel.
1, via unknown vectors related to Solaris Container Manager.
4, via unknown vectors.
2, via unknown vectors related to Mail.
2, via unknown vectors related to IP Filter.
2, via unknown vectors related to Address Book and Mail Filter.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors related to Mail
1," via vectors related to lack of """"XSS/CSRF Get Filter and Referer Check fixes."""""
3," via vectors related to lack of """"XSS/CSRF Get Filter and Referer Check fixes."""""
4, via unknown vectors.  NOTE: some of these details are obtained from third party information.  NOTE: there may be no attacker role
1, by pressing the Enter key at a certain time
0, via the BaseTarget parameter in an OpenPage action.  NOTE: this may overlap CVE-2010-0920.
1, via crafted data beginning with a byte sequence of 0x4c
1, via crafted data that includes a byte sequence of 0xdc
1, via crafted data
4, via a certain MKD command.
4," via a .. (dot dot) in the argument to the """"p4 add"""" command."
3," by using a """"p4 client"""" command in conjunction with the form-in trigger script."
2, via the nickname parameter.
2, via the id_forum parameter in a post action.
2, via the action parameter.
2, via the PATH_INFO to (1) index.php
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter in a jashowcase action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
0, via the id parameter to index.php.
0, via the pid parameter in a showcats action to index.php.
0, via the id_str parameter to (1) index.php and (2) a_index.php.
0, via the id_str parameter to (1) index.php and (2) a_index.php.
2, via the kontent_id parameter.
4, via a .. (dot dot) in the mod parameter.
2, via the course_ID parameter.
2, via the id parameter.
2, via the page parameter.
0, via directory traversal sequences in the id parameter.
2, via the errMsg parameter.
4, via unspecified vectors.
4, via unspecified vectors.
0, via the t parameter
0, via the id parameter in a rubrik action.
2, via the click parameter.
2, via the username parameter.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the id parameter.
0, via the id parameter to (1) video_show.php
4, via a URL in the url parameter.
2, via the folder parameter.
2, via the steamid parameter.
2, via the id_c[] parameter in a resadvsearch action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
1, via crafted embedded fonts in a Shockwave file.
1, via vectors related to improper handling of login failures by includes/login.php; and allow remote authenticated users to write to arbitrary files and execute arbitrary PHP code via vectors involving the (2) filename and (3) block parameters to view.php.
2, via directory traversal sequences in the f parameter.
4, via a crafted (1) ARGB
4, via a crafted DAT file
5," via a crafted FTP URI that causes unspecified """"test sequences"""" to be sent from client to server."
3, by uploading a .php.filetypesphp file.  NOTE: the vendor disputes the significance of this issue
3, via vectors involving (1) the folders feature in Site Explorer
0, via directory traversal sequences in the name attribute of a file element in a metalink file.
2, via directory traversal sequences in the name attribute of a file element in a metalink file.
4, via a .. (dot dot) in the langname parameter.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unknown vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
5, via a crafted WOFF file that triggers a buffer overflow
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unspecified vectors.
4, via unknown vectors.
4, via unknown vectors.
2, via directory traversal sequences in the p parameter.
2, via the isHttpPort parameter.
2, via the id parameter in a detail action to index.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) userid (username) and (2) password parameters.
0, via the id parameter in a singer action.
2, via the textcomment parameter (aka the Comment Box) in a noentryid action.  NOTE: some of these details are obtained from third party information.
2, via the (1) noentryid parameter to blog/index.php and the (2) p parameter to index2.php.
2, via the mday parameter.
2, via the (1) year and (2) month parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) year and (2) mday parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the RP parameter to (1) fa_default.asp and (2) en_default.asp.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the (1) domainid or (2) classid parameter in a class action.
2, via the id parameter.
0, via the seid parameter in a forums viewcat action.
2, via the id parameter.
2, via the q parameter.
2, via the catid parameter in a summary action to index.php.
2, via unspecified vectors
2, via the subj parameter.
0, via the subj parameter
2, via directory traversal sequences in the vbseourl parameter.
0," via encoded null bytes (""""%00"""") in the view parameter"
5, via unspecified vectors.
2, via the f parameter.
4, via a crafted MPEG2-TS frame
2, via unknown vectors related to truncating a file and an operation that is not interruptible.
2, via the id parameter.
2, via the action parameter.
2, via the (1) name
2, via the (1) us and (2) ps parameters.
2, via the id parameter.
2, via the error parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) txtgender and (2) txtlookgender parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a port number outside the range of the unsigned short data type
4, via a port number outside the range of the unsigned short data type
4, via a port number outside the range of the unsigned short data type
4, via a port number outside the range of the unsigned short data type
5, via a port number outside the range of the unsigned short data type
2, via the usr parameter.
5, via a URL in the req parameter.  NOTE: this can also be leveraged to include and execute arbitrary local files via .. (dot dot) sequences.
4," via a """"custom block title interface."""""
4, via a .. (dot dot) in the current_folder parameter.
2, via the (1) id parameter to joke.php and the (2) searchingred parameter to results.php.
2, via the cat parameter.
1, via unspecified vectors to index.php.
4, via a URL in the (1) pg parameter to index.php and the (2) path parameter to news/form.php.
4, via a .. (dot dot) in the l parameter.
2, via unknown vectors
1, via unknown vectors
2, via vectors that might involve compressed data
3,send selected keystrokes to
1, via unspecified vectors
2, via the $searchDate variable.
3, by placing a Trojan horse program at an unspecified location on the host OS disk.
4, via unspecified vectors.
4, via a URL in an input field associated with the className variable.
5, via vectors related to an attempted fuzzy nick match at the instant that a victim leaves a channel.
4, via a (1) large length value in an EAPOL packet or (2) long EAPOL packet.
3, via the (1) element or (2) defaultColor parameter to the Colour Picker page; the (3) formName parameter
1, by modifying the (1) attachment (aka attachments)
4, via a crafted (1) read (aka RRQ) or (2) write (aka WRQ) request
0, via a certain XML document that references a crafted web site in the SRC attribute of an image element
1, via vectors related to an array of long strings
0, via vectors involving document.write calls with long crafted strings.
4, via a JavaScript loop that attempts to construct an infinitely long string.
4, via a large integer in the numcolors attribute of a recolorinfo element in a VML file
5, via a long exception string in a throw statement
4, via a long string in a MARQUEE element.
4, via a symlink attack on the /tmp/CLEANUP temporary file
2, via the mode parameter.
3, via vectors related to JSON error messages.
5, via a crafted data:image/svg+xml URI.
0, via vectors that trigger an assertion failure in jstracer.cpp.
1, via vectors related to (1) propagation of deep aborts in the TraceRecorder::record_JSOP_BINDNAME function
5, via unspecified vectors.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via (1) a malformed request to the ws_man/xosoapapi.asmx SOAP endpoint or (2) a long string to the entry_point.aspx service.
2, via the subject field of a message
4, via a malformed SVG document.
0, via vectors involving WebKit JavaScript objects.
4, via unknown vectors.
3, via unknown vectors.
2, via an empty SVG element.
2, by modifying the textcha-question and textcha-answer fields to have empty values.
4," via a certain """"/Type /Action /S /Launch"""" sequence"
3, via unspecified vectors.
0, via the JMSDestination parameter in a queue action.
2, via an Excel file with a malformed RTD (0x813) record
2, via an Excel file with a malformed RTD (0x813) record that triggers heap corruption
2, via an Excel file with a malformed HFPicture (0x866) record
4, via a crafted Excel file
4, via a crafted Excel file
1, via crafted requests to the Help page that cause repeated restarts of the application pool
0, via the catid parameter to index.php.
4, via a URL in the (1) template
2, via directory traversal sequences in the com parameter to (1) cContactus.php
2, via the id_auk parameter.
2, via the id_auk parameter.
2, via the domain parameter.
4, via a URL in the DOCUMENT_ROOT parameter.
5," via vectors related to """"insertions of the URL"""" that occur during a redirection."
2, via the ThreadID parameter.
2, via the URI in a request to (1) AddPost.asp
2, via the user parameter in JSON data to api_jsonrpc.php.
4, via a crafted TIFF file.
4, via a crafted .dir (aka Director) file
4, via a crafted ATOM size in a .dir (aka Director) file.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via a crafted (1) .ASL
2, via directory traversal sequences in the f parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the calbums parameter.
2, via the host_id parameter.
2, via directory traversal sequences in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the w parameter to index.php.
1, via crafted XSLT constructs
4, via a crafted CAB archive that uses the Quantum (aka .Q) compression format.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via a crafted (1) GET
4, via a request associated with (1) renewal or (2) validation.
3," via vectors related to improper parameter quoting.  NOTE: some sources report that this is a vulnerability in a product named """"Apache SLMS"
4, via (1) the marca parameter to precios.php3 or (2) the where parameter in a delivery_courier action to control/abm_list.php3.
3, via the (1) tipo or (2) destino parameter to login_registrese.php3 in the Services section
4, via a request that has an appended long string containing an unspecified manipulation.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, by uploading a file with an executable extension followed by a safe extension
2, via the (1) id and (2) newlanguage parameters to site.php
2, via the userid parameter in a modboard action.
0, via the userid parameter in a modboard action
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the s_flaeche parameter.
2, via the albumid parameter.
0, via the fid parameter in a detail action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a large Content-Length value
0, via the id parameter in a detail action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the view parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php. NOTE: some of these details are obtained from third party information.
2, via unspecified vectors
1, via unknown vectors
2, via the PATH_INFO.
4, via a URL in the path_faqe parameter to (1) attachs.php
2, via the darstellen parameter.
2, via the project parameter in a projects action to index.php.
2, via the (1) admin_name and (2) admin_password parameters.
0, via the id parameter in a category action.
2, via the email parameter.
2, via the siteid parameter.
2, via the address parameter.
2, via the id parameter to index.php.
4, via a crafted help: URL
0, via format string specifiers in a (1) afp
3, via vectors related to page sizes.
0, by replaying the NTLM credentials of a client user
4, via a crafted text/plain file.
4, via a crafted font file.
2, via unknown vectors related to WebLogin.
2, via unknown vectors related to AjaxSearch.
2, via the export_item_id parameter.
4, via a crafted byte stream to the (1) A/52
4, via a crafted byte stream to the (1) AVI
2, via an empty location element in an XML Shareable Playlist Format (XSPF) document.
4, via a crafted archive.
4, via a crafted byte stream in an RTMP session.
3, via vectors related to a string in the search page's TITLE element
2, via the form_url parameter.
4, via a (1) -c or (2) -a option
4, via a long filename in a ZIP archive.
0, via the view parameter to index.php.
2, via the (1) add2cart
2, via the (1) currency_id_left
2, via the dsn[phptype] parameter.
4, via a URL in the path_om parameter to (1) collectivite.class.php
0, via the mid parameter in a menu_display action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the view parameter to index.php.
0, via the id parameter in a latest_sermons action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
0, via the moduleid parameter in a raw action to index.php.
0, via the module parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via the width attribute.
4, via the date_format_string parameter.
2, via the (1) billing address or (2) shipping address.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the id_nodo parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cbuser parameter in an awdwall action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
5, via a .. (dot dot) in the controller parameter to index.php.
2, via the cardID parameter in a view action to index.php.
2, via the id parameter.
0, via the id parameter to (1) download.php and (2) view_file.php.
2, via the id parameter.
4," via vectors related to """"developer tools."""""
4, via vectors related to a chrome://net-internals URI.
1, via vectors related to a chrome://downloads URI.
4, via unknown vectors.
1, via crafted Track Header (aka tkhd) atoms.
4, via a crafted PSD image with RLE compression.
2, via directory traversal sequences in the name attribute of a file element in a metalink file.
4, via (1) a large JPG image
3, via the (1) keyword or (2) article-id parameter in conjunction with a /admin/news/article/list PATH_INFO; the (3) keyword parameter in conjunction with a /admin/multimedia/set/list PATH_INFO; the (4) keyword or (5) fileId parameter in conjunction with a /admin/multimedia/file/list PATH_INFO; or the (6) name
4, via (1) a crafted PNG file
2, via the item argument.
4, via a crafted PNG image
2, via the tznMessage parameter.
2, via the password parameter to login.php.
2, via the bid[] parameter in a (1) lend_request or (2) save_lend_request action to index.php
4, via a crafted VP6 (1) video file or (2) video stream.
4, via a long call-back-url parameter in an op-client-interface-version action.
4, via a .. (dot dot) in the view parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the lang_global parameter to (1) firstvisit.php
2, via the id parameter.
4, via a .. (dot dot) in the task parameter.  NOTE: some of these details are obtained from third party information.
5, by appending a crafted string to an arbitrary URL associated with the Drupal site.
4, via a long string to TCP port 80.
5, via a q=admin/build/pages/nojs/enable/ value or (2) disable a page via a q=admin/build/pages/nojs/disable/ value.
3, via unknown vectors.
4, via unspecified vectors.
2, via the id parameter in a speakerpopup action to index.php.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors. NOTE: this might overlap CVE-2010-0462.
4, via a long message
4, via a malformed Contact header
4, via a malformed header
2, via unknown vectors
4, via a malformed header
2, via unspecified API calls.
2, via the RedirectUrl parameter.
4, via a // (slash slash) initial substring in a URI for (1) admin/index.jsp
2, via the websess parameter.
2, via directory traversal sequences in the client's DNS hostname (aka the REMOTE_HOST variable)
2, via the client's DNS hostname (aka the REMOTE_HOST variable)
1," via unspecified vectors involving """"Model-Specific Registers."""""
4, via (1) the CommenterURL parameter to PostCommentForm
4, via (1) the query string
2, via the (1) c
4, via a ZIP file containing an entry with a long filename.
2, via the id_sp parameter.
0, via the category parameter to index.php.
4, via a .. (dot dot) in the view parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the (1) user parameter (aka login field) and (2) passwd parameter (aka password field).  NOTE: some of these details are obtained from third party information.
2, via the (1) anyword and (2) cityname parameters.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) search
4, via a .. (dot dot) in the controller parameter to index.php.
4, via unspecified vectors.
5," via a POST request with the route parameter set to """"user/user/insert."""" NOTE: some of these details are obtained from third party information."
4, via a POST to admin/ with an update action.
1, via vectors related to (1) the Login-As feature or (2) when the global search feature is enabled
1, via vectors related to (1) the add_to_log function in mod/wiki/view.php in the wiki module
4, via a (1) file or (2) socket that provides configuration data with many entries
1, via vectors related to the search body and the results page for a search
2, via an invalid email address.
3, use Horde as a proxy to scan internal networks via a crafted request to an unspecified test script.  NOTE: this is only a vulnerability when the administrator does not follow recommendations in the product's installation documentation.
4, via a malformed PDF file
1, via crafted Cascading Style Sheets (CSS) strings that are processed as script by Internet Explorer.
2," via unknown vectors related to """"various administrator screens"
4, via a .. (dot dot) in the file parameter to module.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) username (aka login) and (2) password parameters.  NOTE: some of these details are obtained from third party information.
2, via the ComeUrl parameter.
2, via the sectionid parameter in an abc action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the hpId parameter.
2, via the (1) phpqa_user_c parameter to Arcade.php and the (2) id parameter to acpmoderate.php.
2, via the serv parameter.
5, via unspecified vectors.
4, via unspecified vectors.
4, via shell metacharacters in command-line arguments
4, via a comment.
4, via a malformed Extended Communities attribute.
4, via a malformed AS_PATHLIMIT path attribute.
3, via unspecified vectors.
0, via start tags that are placed within other start tags
0, via directory traversal sequences in a patch for a source-format 3.0 package.
4, via a crafted DXF file
5, via a ZIP file containing a file with a long filename.
5," via a crafted """"recieve jobs"""" request.  NOTE: some of these details are obtained from third party information."
4, via a symlink attack on the /tmp/ib_set_node_desc.sh temporary file.
2, via the cat parameter.
2, via the deptid parameter.
2, via the (1) category parameter or (2) search field.
4, via (1) the password field to login.php
2, via the adnum parameter.
4, via (1) the login field (aka the username parameter)
2, via the (1) login and (2) mail_address parameters.
2, via the (1) login field (aka agentname parameter) or (2) password field (aka agentpassword parameter).
2, via the (1) user and (2) pass parameters.
2, via the (1) name and possibly (2) message parameters.  NOTE: some of these details are obtained from third party information.
2, via the sid parameter in a News article modload action.
5, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
0, via the id parameter in a detail action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
0, via the katid parameter in a qpListele action to index.php.
0, via the id parameter in an agentproperties action to index.php.
5, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the id parameter.
2, via the id parameter.
2, via the iType parameter. NOTE: some of these details are obtained from third party information.
1, via JavaScript that writes <marquee> sequences in an infinite loop.
1, via JavaScript that writes <marquee> sequences in an infinite loop.
4, via (1) multiple inventory fields to the search form
0, via the feedid parameter in a categories action to index.php.
2, via the lng parameter.
2, via the primary_number parameter.
2, via the show parameter.
2, via the id parameter.
2, via the id parameter.
2, via the (1) data_search and (2) rpp parameters to index.php.
4, via vectors related to improper window management.
1, via vectors related to URL handling.
4, via a crafted JPEG image.
4, via vectors related to log files
4, via a crafted itpc: URL.
4, via vectors related to the rendering of an inline element.
4, via a mount request with a large integer in the pa_socket_namelen field.
4, via a crafted movie file.
4, via a crafted PDF file.
4, via a Trojan horse explorer.exe (aka Windows Explorer) program in a directory containing a file that had been downloaded by Safari.
4, via run-in styling in an element
4, via a crafted embedded font in a document.
4, via a crafted TIFF file.
0, via vectors involving HTML object outlines.
4, via a crafted image.
4, via a crafted GIF file.
1, via crafted reconnect authentication packets.
1, by creating files that are outside the bounds of a share.
4, via a long name of an embedded font in a document.
4, via a crafted embedded font in a document.
4, via a crafted embedded font in a document.
4, via a crafted PDF document.
5, via a crafted font in a PDF document.
3, via unspecified vectors.
4, via a crafted UDIF image.
4, via a bidirectional text string with ellipsis truncation.
4, via a crafted PIM packet.
4, via a crafted image.
4, via a crafted PSD image.
4, via a crafted RAW image.
5, by sending a large number of packets that exceed the maximum length.
4, via a COM_FIELD_LIST command with a long table name.
5, via a crafted magnet URL with a large number of (1) tr or (2) ws links.
0, via the id_auk parameter
2, via the id_auk parameter.
2, via directory traversal sequences in the controller parameter to index.php.
3, by causing a userspace interruption of an internal call
1, by using an object's __sleep function to interrupt an internal call to the shm_put_var function
3, by causing a userspace interruption of an internal function
2, via the s_email parameter.
5, by causing a userspace interruption of an internal function
4, via (1) the IP address to the cs_getip function in generate.php in the Captcha module
2, via the article_id parameter.
0, by calling these functions with an empty SQL query
4, via a crafted PostScript file.
2, via the id parameter.  NOTE: some of these details are obtained from third party information.
2, via the aid parameter in an agentlisting action to index.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php. NOTE: some of these details are obtained from third party information.
0, via the maincatid parameter in a showmaincatlanding action.
2, via the author parameter in a search action to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via an MPEG Layer-3 audio stream in (1) a crafted media file or (2) crafted streaming content
0, via vectors involving thread creation
2, via the metadata section of encrypted key data.
0, by interrupting the handler for the (1) ZEND_BW_XOR opcode (shift_left_function)
3, by causing a userspace interruption of an internal function
4, via a crafted first argument to the fnmatch function
2, via the chatrooms_ID parameter.
5, by sending a crafted message using TCP.
4, via a URL in the LibDir parameter to (1) lib/page/pageDescriptionObject.php
2, via the id parameter in a showgallery action.
2, via the artikel parameter.
2, via the id parameter
0, via the shipKey parameter to index.php.
4, via a MultiBitMap (MBM) file with a Paint Data Section that contains a malformed Encoding field.
4, via a Content-Length HTTP header that specifies a value too small for the amount of POST data
1, by using window.open to create a popup window for a crafted HTML document
1, via vectors related to Client Service for PTM and crafted packets to port 56015.
0, via the cid parameter to index.php. NOTE: some of these details are obtained from third party information.
2, via directory traversal sequences in the DOCUMENT_ROOT parameter to (1) news.php
5, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the controller parameter to index.php.
3, via unknown vectors.
4, via a long
1, via unspecified variables to jovgraph.exe
4, via unknown vectors.
4, via unspecified vectors.
2, via unspecified parameters to jovgraph.exe
5, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors
3, via unknown vectors.
2, via unknown vectors
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the view parameter to index.php.
4, via a .. (dot dot) in the view parameter to index.php.  NOTE: some of these details are obtained from third party information.
3, via unknown vectors.
0, via JavaScript code that creates multiple arrays containing elements with long string values
1, via JavaScript code that performs certain string concatenation and substring operations
0, via the q parameter in conjunction with a /news/search PATH_INFO.
2, via the URI.
2, via the mysql_host parameter.
4, via a URL in (1) the selected_language parameter to engine/inc/include/init.php
4, via a .. (dot dot) in the lang parameter.
4, use (1) op/op.EditUserData.php
2, via an ALTER DATABASE command with a #mysql50# string followed by a . (dot)
4, via a node title.
2, via the id parameter.
2, via the cl or possibly id parameter.
4, via (1) the id parameter in a view_inbox action to cp/cp_messages.php or (2) the id parameter to cp/edit_email.php.
2, via the p_id parameter.
2, via the kata parameter.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the file parameter.
4, via a long transport mode.
4, via vectors related to the administration and redirect pages.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the s parameter.
2, via the (1) description and (2) lastaction parameters.
2, via the encode parameter.  NOTE: some of these details are obtained from third party information.
0, via the Work_Order_Summary parameter (aka the request summary).  NOTE: some of these details are obtained from third party information.
2, via the sid parameter in a detail action to index.php.
2, via directory traversal sequences in the controller parameter to index.php.
4, via (1) the DOMAINID parameter to server/cookies.php or (2) the SERVER parameter to server/index.php.
2, via the categoryid parameter in a viewcategory action.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
3, via the reportList parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
5, via a .. (dot dot) in the controller parameter to index.php.
2, via the id parameter.
5, via a symlink attack on the emsnpic temporary file.
4, via a crafted TIFF file that triggers a buffer overflow.
4, via a (1) /%u0085/ or (2) /%u00A0/ URI.
3, via unspecified vectors.
1, via APPC data containing a GDSID variable with a GDS length that is too small.
4, via a crafted rra_id parameter in a GET request in conjunction with a valid rra_id value in a POST request or a cookie
4, via a stream context structure that is freed before destruction occurs.
4, via a crafted phar:// URI that is not properly handled by the (1) phar_stream_flush
2, via the c parameter.
4, via a .. (dot dot) in the mod parameter.
2, via the loginname parameter.
4, via a long HTTP GET request.
4, via a metalink file containing directory traversal sequences in the name attribute of a file element.
3, via vectors involving unload event handlers.
1, via vectors related to the Safe Browsing functionality.
3, via unknown vectors.
5," via vectors related to the """"drag + drop"""" functionality."
4, via a new_admin action.
5, via unknown vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via (1) apsetup.php
2, via the pbxadmin.web.PbxUserEdit bean.
4, via a crafted read request.
2, via JavaScript code containing an infinite loop that creates IFRAME elements for invalid news:// URIs.
0, via JavaScript code containing an infinite loop that creates IFRAME elements for invalid nntp:// URIs.
0, via JavaScript code containing an infinite loop that creates IFRAME elements for invalid news:// URIs.
2, via JavaScript code containing an infinite loop that creates IFRAME elements for invalid (1) news:// or (2) nntp:// URIs.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the id parameter.
5, via a URL in the cfg_admin_path parameter to (1) index.php
4, via a URL in the lang_file parameter.
4, via a .. (dot dot) in the view parameter to index.php.
4, via a .. (dot dot) in the view parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via the errmsg parameter.
3, via iCalendar data.
4, via a URL in the CONF_INCLUDE_PATH parameter to (1) forum/admin.php and (2) plotgraph/index.php in admin/modules/modules/
0, via the id parameter
2, via the (1) username or (2) password parameter.
2, via the (1) Username and (2) password fields.
4, via a URL in the page parameter.
0, via directory traversal sequences in the _SESSION[userLang] parameter to (1) elisttasks.php
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
3, via the itemid parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the PictureId parameter in an open action.
2, via the id parameter.
4, via a .. (dot dot) in the mode parameter.
2, via the msg parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the VL_include_path parameter.
0, via the modveh parameter to index.php.
0, via the pagina parameter to index.php.
4, via unspecified vectors.
3, by uploading a file with an executable extension
1, via vectors related to (1) xmlnode.value
4, via a zero-length client ID.
2, via unspecified vectors related to the SP_DEL_BAK_EXPIRED procedure in wdm_dll.dll
4, via unknown vectors.
4, via a symlink attack on a file in /var/lock/.
1," via vectors related to a """"wrong code generation interaction with GCC."""""
4, via unspecified vectors.
4, via a crafted search query.
1, via serialized data
4, via vectors involving extended characters in a username.
4, via unspecified parameters.
2, via the attemptid parameter.
4, via a crafted XML document.
2, via the id parameter in an article action to index.php.
2, via the (1) id parameter to admin/memberviewdetails.php and the (2) model parameter to videos.php.
2, via the page parameter.
2, via the bannerurl parameter.
4, via a .. (dot dot) in the controller parameter to index.php.
4, via shell metacharacters in the (1) data2 and (2) data3 parameters to (a) Debug_command_page.asp and (b) debug.cgi.
4, via a crafted Range header.
0, via the svr parameter to sysinfo/sysinfomain.htm.  NOTE: this can be leveraged with CVE-2010-1885 to execute arbitrary commands without user interaction.
2, via certain encoded directory traversal sequences that trigger memory corruption
4, via (1) the query string to the getenv sample program
4, via a .. (dot dot) in the name parameter.
2, via format string specifiers in the path (aka Password File) parameter.
2, via the theme parameter
2, via the (1) create or (2) edit form in the Communities component
2, via unspecified vectors
2, via the (1) keyword or (2) bannerid parameter in conjunction with a /admin/ad/banner/list PATH_INFO; and allow remote authenticated users
3, via unknown vectors.
4, via unknown vectors.
2, via the DSSignInURL cookie.
4, via a URL in the Location parameter.
2, via the page parameter.
3, via unknown vectors.  NOTE: some of these details are obtained from third party information.
2, via the IP field.
4," via a large """"ip textfield"""" size."
3, via unspecified vectors.
3, via unknown vectors.
2, via an HTML document that has a large colspan attribute within a table.
1, via vectors related to handlers for DOM mutation events
1, via vectors related to the node.innerHTML property of a TEXTAREA element.  NOTE: this might overlap CVE-2010-1762.
0, via vectors involving remote fonts in conjunction with shadow DOM trees
4, via a long third argument to the SetRegString method.
4," via (1) """"//"""" (multiple leading slash)"
1, via crafted arguments to the NtQueryAttributesFile function.
4, via a long GET request.
4, via a long write request.
4, via a .ptb file with a long font name.
0, via the state parameter in a listings action.
4, via a URL in the cat parameter.
2, via the (1) search
2, via the (1) search
2, via the page parameter.
2, via the page parameter.
4, via a crafted .indd file.
0, via a full pathname for a file within a .jar archive
3, by reading the default_create.log file that is associated with profile creation by the BBOWWPFx job and the zPMT.
4, via unknown vectors.
2, via unspecified vectors
4, via a large amount of chunked data that uses gzip compression.
4, via a long playlist entry in a .m3u file.
4, via a long Content-Length header.
4, via a long HEAD request.
2, via an HTTP request with a null byte followed by a .txt file extension.
2, via the download parameter.
4, via unknown vectors.
2, via the (1) username or (2) password parameter.  NOTE: some of these details are obtained from third party information.
2, via the categoryids[] parameter in an update_pages action.
4, via a URL in the tpl_base_dir parameter.
2, via the ItemID parameter.
4, via a long line in a .WAV file.
5, via a long URI in a GET request
4, via a crafted PNG file.
4, via a Sessions Setup AndX packet with a long AccountName.
2, via the course_id parameter.
2, via the message parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the course_id parameter.
2, via the p_id parameter.  NOTE: some of these details are obtained from third party information.
2, via the QuizType parameter
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in the current working directory.
4, via a Trojan horse executable file in the current working directory.
2, via unknown vectors
2, via unknown vectors
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
1, via unknown vectors
2, via unknown vectors related to Solaris Management Console.
0, via unknown vectors related to Administration Server.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors related to Kernel/VM.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
1, via unknown vectors
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
2, via the safe_html transform.
4, via a crafted POST request.
0, via an RTS URL to (1) explore/explore.jsp
2, via an LZH LHA file with a crafted header that is not properly handled during expansion.
2, via Unicode characters in a Connection HTTP header
2, via the PATH_INFO.
2, via the comment variable to modules/blog/index.php.
2, via the lang parameter to the default URI
4, via a long line in a song list (.maf file).
4, via a crafted SRT file with a long line after a time range.  NOTE: some of these details are obtained from third party information.
5, via an OJPEG image with undefined strip offsets
4, via a scenario that contains Lua functionality
1, by requesting traffic statistics when there is an active unauthenticated connection
3, via unknown vectors.
3, by connecting to the FTP server and providing a crafted (1) USER or (2) PASS command
4, via a URL in the (1) cook_lan cookie parameter ($lan_dir variable) or possibly (2) Sdb_type parameter.  NOTE: this was originally reported as remote file inclusion
2, via the term parameter.
2, via the videoid parameter.
2, via the videoid parameter.
2, via the mechant_id parameter.
2, via the store parameter.
0, via the id parameter in a cancel action.
0, via the post_id parameter in a modify action.
2, via the (1) website and (2) name parameters to index.php.
2, via the documentroot of a domain by appending a colon to it and setting the open basedir path to use that domain documentroot.
4, via vectors involving a 404 status code
4, via a crafted ARGF.inplace_mode value that is not properly handled when constructing the filenames of the backup files.
2, via the template argument to the /issue program.
5, via an e-mail message with invalid base64 data that begins with an = (equals) character.
4, via a crafted font file.
4, via (1) redirects
1, via HTTP header injection
2, via the data1 parameter.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the userid parameter.
2, via the (1) keyword parameter to category.php and the (2) password parameter to memberlogin.php.
2, via the tid parameter.
2, via the nwsid parameter.
2, via the id parameter.
0, via the view parameter to index.php.
2, via the question parameter in an add2 action to index.php.
2, via the username parameter to (1) index.php and (2) admin/index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted (1) ND_OPT_PREFIX_INFORMATION or (2) ND_OPT_HOME_AGENT_INFO packet.
4, via an X-Status message that lacks the expected end tag for a (1) desc or (2) title element.
4, via administrator screens.
4, via (1) a URL associated with a nonexistent domain name
0, via vectors involving names of temporary files.
4, via a long gitdir: field in a .git file in a working copy.
3, by using a large number of calls to the NtUserCheckAccessForIntegrityLevel function to trigger a failure in the LockProcessByClientId function
4, via a crafted Publisher 97 file
4, via a crafted PowerPoint 95 document
2, via the name parameter in an Add Category action.
4, via a crafted image in a PDB file.
2, via the title parameter to (1) storyrss.php or (2) story.php.
5, via a Director file containing a crafted pamm chunk with an invalid (1) size and (2) number of sub-chunks
4, via long (1) CabURL and (2) Location arguments to the Install3rdPartyComponent method.
4, via a long (1) DestURL or (2) SourceFile property value.
4, via a crafted Table of Contents (TOC) in a (1) NSV stream or (2) NSV file that triggers a heap-based buffer overflow.
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
4, via a long ServerResourceVersion property value.
4, via a crafted web page.
2, via the keyword parameter.
2, via the (1) jid parameter to view_current_job.php
2, via the keyword parameter.
2, via the song review field
2, via the chapter parameter.
5, by sending (1) LIST
4, via a malformed request.
2, via the pp_id parameter.
2, via the (1) comment parameter to add_comments.php
3, via shell metacharacters in the fn command. NOTE: some of these details are obtained from third party information.
5, via unspecified vectors.
2," via unspecified parameters to """"Commerce Organization Admin Console JavaServer pages."""""
4, via a crafted URL.
0, via vectors that trigger an FDC with an RM680004 Probe Id value.
3, via vectors involving access by the outbound messaging system to the RunTimeProfileCacheCmdImpl class
4, via a crafted font in conjunction with a DVI file that is processed by the thumbnailer.
4, via a crafted font in conjunction with a DVI file that is processed by the thumbnailer.
4, via a crafted font in conjunction with a DVI file that is processed by the thumbnailer.
0, via an invalid SVG document.
3, via unknown vectors.
2, via an invalid image.
3, by closing a Hypervisor Virtual Console device
4," via a javascript: URL and a """"fake click."""""
2, via an ended event handler that changes the SRC attribute of an AUDIO element.
2, via certain HTML content that has an unclosed SPAN element with absolute positioning.
3, via vectors involving (1) the Studio virtual appliance or (2) a virtual appliance created by the Studio virtual appliance.
3, via unknown vectors.
2, via the s parameter.
2, via the id parameter.
2, via the subTreeItem parameter.
2, via the (1) SectionID and (2) SearchTimestamp parameters to the search feature and the (3) SearchContentClassAttributeID parameter to the advancedsearch feature.
2, via the id parameter.
2, via directory traversal sequences in the (1) owa_action and (2) owa_do parameters.
0, via the Itemid parameter to index.php.
2, via the id parameter in a view action to index.php.
2, via directory traversal sequences in the view parameter to index.php.
5, via a URL in the mosConfig.absolute.path parameter to index.php.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the sub_catid parameter.
2, via the id parameter.
2, via the (1) PriceFrom
2, via the Id parameter.
2, via the ID parameter.
2, via the cf_id parameter.
2, via the (1) sbid parameter to products_details.php
4, via a review comment.
0, via the pid parameter to index.php.
2, via the parent parameter.
2, via the title parameter when adding a new blog
2, via the title parameter when (1) editing a new blog
2, via the search parameter.
2, via the search parameter.
4, via (1) the GetFromURL member or (2) a long argument to the RasIsConnected method.
0, via a long HTTP request to nnmrptconfig.exe.
4, via unknown vectors.
4, via a long OvJavaLocale value in a cookie.
3, via unknown vectors.
3, via unknown vectors.
2, via the album parameter.
2, via the album parameter.
0, via the id parameter to (1) ndetail.php and (2) print.php.
0, via the artist_id parameter in an addalbum action.
0, via the artist_id parameter
2, via the T parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted Word document that triggers memory corruption
4, via a long username field in the first handshake packet.
4, via a long mailbox name in a CREATE command.
4, via a crafted message
4, via a crafted message
0, via directory traversal sequences in a crafted data-renderer request.
2, via the (1) filter_set
4, via a query string containing a crafted ticket value.
4, via a .. (dot dot) in the default_cms_lang parameter to an admin script
4, via a malformed MSZIP archive in a .cab file during a (1) test or (2) extract action
2, via an HTML document with a .gif filename extension
5, via a malformed URL containing a % (percent) character in the domain name.
4, via a PING command that lacks an argument.
1, via crafted HTTP packets
1, via vectors related to the ORDER BY clause of the Client List screens
1, via spoofed TCP packets
1, via transit traffic on UDP port 5060
1, via transit traffic
1, via transit traffic
4, via a malformed SIP message
2, via the n-cat parameter.
2, via the Itemid parameter in a category action to index.php.
0, via the afmsg parameter to index.php.
0, via the viewform parameter in a (1) ferforms or (2) tferforms action to index.php
4, via a .. (dot dot) in the l parameter.
0, via the id parameter in a view action to index.php.
2, via the product_id parameter.
5, via a .. (dot dot) in the cid parameter to album.html.
2, via the (1) layout and (2) sortorder parameters.
2, via an invalid lang parameter
0, via the locale parameter to (1) CFIDE/administrator/settings/mappings.cfm
4, via unspecified vectors.
4, via unknown vectors.
4," via a count value associated with an """"undocumented structure"""" and the tSAC chunk in a Director movie."
4, via a crafted size value in a 0xFFFFFF45 RIFF record in a Director movie.
2, via unknown vectors that trigger memory corruption.  NOTE: due to conflicting information and use of the same CVE identifier by the vendor
4, via a length value associated with the tSAC chunk in a Director movie.
4, via a crafted (1) element count or (2) element size value in a file.
4, via unknown vectors.
3, via unknown vectors.
2, via an Object Identifier (aka OID) represented as a numerical string containing many components separated by . (dot) characters.
3, via shell metacharacters in the DRIVES parameter
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
2, via the (1) action parameter to testsdic and the (2) helpstring parameter to paramhelp.jsp.
2, via the id parameter.
2, via the id parameter
0, via the cid[0] parameter in a detail action to index.php.
2, via the course_id parameter in a detail action to index.php.
2, via the cid parameter in a video action to index.php.
0, via the Itemid parameter to index.php.
2, via the newsid parameter in a viewnews action.
0, via the _a parameter in a downloads action.
4, via unspecified vectors.
2, via the id parameter.
2, via the id parameter.
2, via the (1) emailid
4, via a URL in the mosConfig_absolute_path parameter.
0, via the id parameter to index.php.
2, via directory traversal sequences in the controller parameter to index.php.
0, via the id parameter in a golfcourses action to index.php.
2, via the id parameter.
0, via the id_cate parameter to index.php.
2, via the url parameter.  NOTE: some of these details are obtained from third party information.
2, via the ecPath parameter.
2, via the category parameter.
1, via multiple incomplete DIGEST-MD5 connection attempts.
4, via a modified PATH environment variable
4, via long command-line arguments
4, via a long eighth argument (HexString) to the LCDWriteString method.
4, via a long argument to the LoadProperties method.
2," via the ava_code cookie to the """"main page"
2," via unknown vectors related to """"unsafe substr() calls."""""
5, via a string that is inconsistent with the expected number of fields.
4, via a crafted phar:// URI that is not properly handled by the phar_stream_flush function
1, via vectors related to a PHP backtrace and error messages (aka debugging messages)
1, via crafted content
2, via ARP requests that trigger an ARP storm
1, via fragmented traffic
3, by pinging a virtual interface
4, via a series of SNMP requests
4, via a series of spoofed EAPoL-Logoff frames
4, via (1) the searchTerm parameter to ServiceRegistry/HelpSearch.do or (2) the queryItems[0].value parameter to ServiceRegistry/QueryWizardProcessStep1.do.
2, via the searchText parameter
1, via unspecified vectors
4, via a request to the /feed method
5, via a crafted HTML document that triggers the reading of a .ICA file.
2, via unknown vectors that trigger a NULL pointer dereference.
3, via unknown vectors.
1, via vectors related to sigcomp-udvm.c and an off-by-one error
4, via a malformed header in a RealMedia .IVR file.
1, via malformed sample data in a RealMedia .IVR file
1, via crafted (1) HX_FLV_META_AMF_TYPE_MIXEDARRAY or (2) HX_FLV_META_AMF_TYPE_ARRAY data in an FLV file.
4, via unknown vectors.
5, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
5, via unspecified vectors.  NOTE: a separate XSS issue for HP System Management Homepage (SMH) was originally assigned CVE-2010-3010 due to a CNA error
3, via unspecified vectors.
4, via unspecified vectors.  NOTE: this issue was originally assigned CVE-2010-3010 due to a CNA error.
0, via the role parameter
4, via a write operation on the last block of a large file
1, via vectors related to HTML5 canvas painting operations that occur during the application of transformations.
2, via an animated PNG image.
0, via the game_id parameter in a game_player action.
2, via the gameday parameter in an overview action.
4, via a GIOP packet with a crafted size
4, via a session on TCP port (1) 443 or (2) 1741
0, via a long parameter in a (1) HandleUpgradeAll
4, via a crafted (1) .wrf or (2) .arf file
4, via a crafted (1) .wrf or (2) .arf file
4, via a crafted (1) .wrf or (2) .arf file
4, via a crafted (1) .wrf or (2) .arf file
4, via a crafted BDF font file
1, via vectors related to (1) db_search.php
5, via a modified length value
4, via a long (1) username or (2) database name argument to the (a) mysql_connect or (b) mysqli_connect function.
2, via an empty USER command.
2, via the subdir parameter.
4, via a csrfmiddlewaretoken (aka csrf_token) cookie.
1, via unspecified vectors
4, via a crafted TIFF image.
4, via shell metacharacters in a message.
4, via a crafted URL
4, via (1) an action description
4, via a symlink attack on certain temporary files. NOTE: this issue exists because of an incomplete fix for CVE-2008-5313.
4," via """"..\"""" (dot dot backslash) sequences in a filename."
4," via a """"..\"""" (dot dot backslash) in a filename."
4," via a """"..\"""" (dot dot backslash) in a filename."
1, by using EMBED elements to pass parameters with long names.
4, via a long operation parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse iacenc.dll file in the current working directory
4, via a Trojan horse smmscrpt.dll file in the current working directory
4, via a Trojan horse (1) mso.dll or (2) GroovePerfmon.dll file in the current working directory
4, via a Trojan horse mfc71enu.dll file in the current working directory
4, via a Trojan horse executable file in the current working directory.
4, via a Trojan horse executable file
4, via a Trojan horse executable file in the current working directory.
4, via a Trojan horse executable file in the current working directory.
4, via a Trojan horse executable file in the current working directory.
4, via a Trojan horse DLL in the current working directory.
4, via a Trojan horse executable file in the current working directory.
4, via a Trojan horse DLL in the current working directory.
4, via a Trojan horse executable file in the current working directory.
3, via unknown vectors.
4, via a long NLST command.
4, via a custom field to the search page.
2, via an invalid address that is dereferenced as a pointer.
0, via vectors that trigger uncaught exceptions.
4, via a crafted buffer in a Word document
2, via the username_ex parameter to the surgeweb program.
4, via a crafted bookmark.
4, via a .. (dot dot) in the dflink parameter in a prevsell dwnfree action to index.php.
4, via a URL in the template parameter to (1) post.php
4, via a URL in the inc parameter.
4, via a URL in the (1) lang parameter to modules/guestbook/blocks/control.block.php
2, via the post_text parameter in a site custom_search action to index.php.  NOTE: some of these details are obtained from third party information.
4, via a URL in the includeFile parameter to (1) Config/Container.php and (2) HTML/QuickForm.php in fog/lib/pear/
4, via a URL in the include_path parameter to (1) checkout2-CYM.php
3, via category categorylist operations with (1) the catid parameter or (2) the catid parameter in a lists action.
2, via the frmQuestion parameter in a retrieve action
5, via a crafted Word document containing bookmarks that trigger use of an invalid pointer and memory corruption
4, via a Word document with crafted List Format Override (LFO) records
1, via malformed records in a Word document
5, via a crafted Word document that triggers memory corruption
5, via a crafted Word document that triggers memory corruption
4, via a crafted LPC message that requests an LRPC connection from an LPC server to a client
4, via a crafted Real Time Streaming Protocol (RTSP) packet
2, via an Excel document with crafted record information
3, via unknown vectors.
3, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via a crafted RSS feed.
4, via a server name.
4, via (1) the pcd parameter to edit_bug.aspx
4, via (1) the qu_id parameter to bugs.aspx
4, via a crafted (1) .wrf or (2) .arf file
4, by providing a crafted .atp file and then disconnecting from a meeting.  NOTE: since this is a site-specific issue with no expected action for consumers
2, via an Edit action to console/adminSecurityDetail.do followed by a save action to console/syncworkspace.do.
2, via the searchString parameter in a (1) showList or (2) Search action.
5, via a crafted width in an AMV file
4, via a crafted width in an NSV file.
4, via a long request.
3, via unspecified vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via (1) a plugin name
4, via ..%2f sequences in a URI.
4, via a URL in the (1) body
4, via a rose_getname function call
4, via shell metacharacters in the (1) aspell_path or (2) spellchecker_lang parameters.
2, via the lang parameter.
4, via unspecified vectors.
3, via unspecified vectors.
2, via an XML External Entity (XXE) attack to unknown vectors.
1, via vectors related to the SPLUNKD_SESSION_KEY parameter.
0, by setting an unspecified property of a stylesheet object
5, via a crafted Microsoft Office document that causes the HtmlDlgHelper class destructor to access uninitialized memory
4, via a Trojan horse DLL in the current working directory
3, via vectors related to the LD_LIBRARY_PATH environment variable.  NOTE: some of these details are obtained from third party information.
4, via a long argument to IOCTL 0x80030004.  NOTE: some of these details are obtained from third party information.
2, via the (1) Criteria field in an unspecified form related to catlgsearch.aspx or (2) user name to an unspecified form related to adminlogin.aspx.
3, via unknown vectors.
4, via a long e-mail address in an ORGANIZER:mailto header in an iCalendar calendar-invitation e-mail message
3, via unknown vectors.
2, via the (1) car_id parameter to index.php and (2) y parameter to include/images.php.
4, via a URL in the current_user_id parameter to (1) familynews.php and (2) settings.php.
2, via the totalRows_WADAProducts parameter.
2, via the id parameter in a view action to index.php.
2, via the sorting method.
5, via unspecified vectors.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the (1) desc
2, via the category_id parameter in a category action.
4, via a crafted PDF document.  NOTE: some of these details are obtained from third party information.
1, via vectors related to the length of a filename.
4, via (1) a crafted input file
3, via multiple Client-To-Client Protocol (CTCP) requests in a PRIVMSG message.
2, via the file parameter in a view_file action.
2, via the uri parameter.
4, via a .. (dot dot) in the file parameter.
2, via the (1) fields[website] parameter in the post comments feature in articles/a-primer-to-symphony-2s-default-theme/ or (2) send-email[recipient] parameter to about/.  NOTE: some of these details are obtained from third party information.
0, via the send-email[recipient] parameter to about/.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
4, via a %5C (encoded backslash) in the URL.
0, via the artid parameter in a printarticle action to mod.php
2, via the (1) id parameter to Default.aspx and the (2) type parameter to SearchResults.aspx.
3, via the tmpl parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, via the page parameter.
2, via the (1) title and (2) menutitle parameters. NOTE: this can be leveraged with CVE-2010-3483 to conduct attacks without authentication.
2, via the handle parameter to LightNEasy.php
2, via the userhandle cookie to LightNEasy.php
4, via a (1) ../ (dot dot slash)
4, via a %5C (encoded backslash) in the URL.
4, via a ... (triple dot) in the URL.
3, via the goback parameter.
4, via a .. (dot dot) in the usersnum parameter to admin/config.php
3, by establishing and then immediately closing a TCP connection
5, by establishing and then immediately closing a TCP connection
2, via unknown vectors related to su.
1, via unknown vectors related to Folders
3, via unknown vectors.
2, via unknown vectors related to Solaris Zones.
2, via unknown vectors related to Tooltalk.
2, via unknown vectors related to Web Container.
2, via unknown vectors related to InfiniBand.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
5, via unknown vectors.
1, via unknown vectors related to Administration.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable source that this is cross-site request forgery (CSRF) that 
2, via unknown vectors related to Administration.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors related to Webmail.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that the Kerberos implementation does not properly check AP-REQ requests
2, via unknown vectors related to Webmail.
2, via unknown vectors related to Kernel/File System.
3, via unknown vectors.
1, via unknown vectors related to XScreenSaver.
1, via unknown vectors related to Internal Operations.
2, via unknown vectors related to Processing.  NOTE: the previous information was obtained from the January 2011 CPU.  Oracle has not commented on claims from a reliable third party coordinator that this is SQL injection in rsynclogdird involving improper escaping of UTF-8 characters while processing log files.
3, via unknown vectors related to Import Server.  NOTE: the previous information was obtained from the January 2011 CPU.  Oracle has not commented on claims from the original researcher that remote attackers can read arbitrary files via a full pathname in the first argument to the ImportBodyText method in the EasyMail ActiveX control (emsmtp.dll).
3, via unknown vectors.
2, via unknown vectors related to Import Export Utility.
3, via unknown vectors related to Import Server.  NOTE: the previous information was obtained from the January 2011 CPU.  Oracle has not commented on claims from the original researcher that remote attackers can overwrite arbitrary files and execute arbitrary code via a full pathname in the first argument to the WriteJPG method in the NCSECWLib ActiveX control.
2, via the img parameter.
2, via the User ID parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
3, via unspecified vectors.
2, via directory traversal sequences in the (1) folder and (2) action parameters.
2, via the id parameter.
2, via the (1) id and (2) password (pw) parameters to (a) admin.php or (b) user.php.
4, via unspecified vectors.
4, via a crafted image.
4, via unspecified vectors.
4, via a crafted FLV video.
4, via a Director movie with a crafted rcsL chunk containing a field whose value is used as a pointer offset
3, via unspecified vectors.
1, by modifying the (1) innodb_file_format or (2) innodb_file_per_table configuration parameters for the InnoDB storage engine
4, via a join query that uses a table with a unique SET column.
4, via (1) IN or (2) CASE operations with NULL arguments that are explicitly specified or indirectly provided by the WITH ROLLUP modifier.
2, via certain arguments to the BINLOG command
1, by creating temporary tables with nullable columns while using InnoDB
1," by using the HANDLER interface and performing """"alternate reads from two indexes on a table"
1," by using EXPLAIN with crafted """"SELECT ... UNION ... ORDER BY (SELECT ... WHERE ...)"""" statements"
2, via directory traversal sequences in the lng parameter.
3," via vectors involving """"multiple encoded entities"
4, via a crafted POST request that creates a user account with arbitrary group memberships.
2, via unspecified parameters to the ScheduleTask method.
0, by using the client CLI on Linux
3, by executing a (1) user-defined function (UDF) or (2) stored procedure while using a different code page than the database server.
4, via a URL in the (1) meta or (2) phpincdir parameter
4, via a long .smil argument to the (1) tfile
4, via shell metacharacters in (1) cisco_dns_info or (2) cisco_domain_info data in a packet
4, via shell metacharacters in the cisco_banner (aka server_banner) field
3, via data in a TCP packet.  NOTE: this might overlap CVE-2010-3060.
0, via format string specifiers located after a | (pipe) character in a string.  NOTE: this might overlap CVE-2010-3059.
4, via vectors involving the (1) AGI_SendToLog (aka _SendToLog) function; the (2) group
2, via unknown vectors
2, via the Summary field
3, via unknown vectors.
4, via a crafted Microsoft Office document.
4, via a crafted Excel file.
4, via a crafted JP2 image.
4, via a crafted AVI file.
5, via a crafted movie file that causes an image sample transformation to scale a sprite outside a buffer boundary.
5, via a crafted MPEG movie file.
4, via a crafted MPEG movie file.
4, via a crafted Sorenson movie file.
4, via unspecified vectors.
4, via a crafted xar archive.
4, via a crafted PICT file.
4, via a crafted FlashPix file.
4, via a crafted panorama atom in a QuickTime Virtual Reality (QTVR) movie file.
4, via a crafted SHZ bytecode instruction
4, via a crafted URL in an ad.
2, via an HTML LINK element with a DNS prefetching property
4, via a crafted Temporary Mobile Subscriber Identity (TMSI) field.
3, by performing a user-variable assignment in a logical expression that is calculated and stored in a temporary table for GROUP BY
2, via multiple invocations of a (1) prepared statement or (2) stored procedure that creates a query with nested JOIN statements.
2, by calling the PolyFromWKB function with Well-Known Binary (WKB) data containing a crafted number of (1) line strings or (2) line points.
4, via (1) the rev parameter to the view script or (2) the query string to the login script.
4, via unspecified vectors.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via input to the (1) Add Pages
2, via unknown vectors
2, via unknown vectors
2, via the command parameter to the administration interface
4, via a saveNewUser action.
3, by replaying a session ID (aka SID) value.
4, via a long password.
1, by specifying an arbitrary command name as the first argument.
4, via a 404 HTTP status code.
2, via the (1) f and (2) fp parameters.
5, via a zero i_subpackets value in a Real Media file
0, by using the draft save feature in the Compose Mail component to upload a file with a .phtml extension
4, via a .. (dot dot) in (1) the lang_crm parameter to phprint.php or (2) the current_language parameter in an Accounts Import action to graph.php.
4, via (1) the username (aka default_user_name) field or (2) the password field in a Users Login action to index.php
4, via unspecified vectors.
4, via a crafted document
4, via a crafted document
3, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse executable file in the current working directory.
3, via unspecified vectors.
5, via unspecified vectors.
4, via a Trojan horse DLL in the current working directory.
2, via unknown vectors related to AjaxSearch.
2, via unspecified vectors related to AjaxSearch
4, via a crafted RPC request
4, via a crafted TIFF image in an Office document
4, via a crafted FlashPix image in an Office document
4, via a crafted FlashPix image in an Office document
4, via a crafted application
4, via a Trojan horse DLL in the current working directory
4, via a crafted argument to the AddContextRef method
2, via the (1) rs and (2) rsargs[] parameters.
2, via the ServiceClass field to the Edit Service Parameters page.
0, via vectors involving the Program Job Server and the Program Login property.
3, via unknown vectors.
3, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
4, via a crafted movie file.
5, via a crafted embedded Compact Font Format (CFF) font in a document.
5, by making a call from the Emergency Call screen
1, via vectors related to interaction between Software Update and distribution scripts.
4, via unspecified vectors.
3, via unknown vectors.
4, via a crafted document
0, by leveraging the ability to perform certain service calls.
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
5, by sending a redirect during the saving of a file.
4, via a Flash movie with a transparent Window Mode (aka wmode) property
0, by referencing an SVG document in an IMG element.
4, via a crafted EXPLAIN directive
1, via crafted font data in a compressed data stream
3, by connecting to TCP port 1315 and sending a packet with many integer fields
1, via unspecified vectors
1, via unspecified vectors
4, via a crafted Director (.dir) media file with an invalid element size
4, via a .dir file with a crafted mmap record containing an invalid length of a VSWV entry
4," via a .dir file with """"duplicated references to the same KEY* chunk"
4," via a .dir file containing """"duplicated LCSM entries in mmap record"
4, via unspecified vectors.
5, via a crafted web site
2, via unspecified vectors
2," via unknown manipulations related to the """"monkeysphere-authentication keys-for-user"""" command."
2, via the (1) mail
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via a crafted vCard file.
4, via unspecified vectors.
2, via an unspecified request that triggers disclosure of the full path.
5, via a long Login variable to the management web server.
3, via unknown vectors.
4, via (1) the parm1 parameter to ivt/ivtserver
4, via a long (1) SCPC_INITIALIZE
2, via the Id parameter.
2, via the User-Agent header to (1) index.php and (2) product-list.php.
3, via unspecified vectors.
2, via the (1) rssfeedURL parameter to manual/caferss/example.php and the sumb parameter to (2) modules/news/archive.php
4, via a Trojan horse shared library in the current working directory.
4, via (1) the filter_order parameter in a com_weblinks category action to index.php
4, via a crafted Reliable Datagram Sockets (RDS) request
4, via ..\ (dot dot backslash) and other sequences.
2, via the password parameter.  NOTE: some of these details are obtained from third party information.
4, via a malformed chunk in a Director file
4, via a Director movie with an IFWV chunk with a size field of 0
4, via a Director movie containing a GIF image with a crafted global color table size value
4, via a Director movie with a crafted CSWV RIFF chunk that causes an incorrect calculation of an offset for a substructure
2, via unspecified vectors
4, via a Director movie with a crafted 3D Assets 0xFFFFFF88 type record that triggers an incorrect memory allocation
0, via vectors involving text control selections.
4, via a crafted font.
0, by modifying the GROUP and ALLOWTOPICCHANGE preferences in the topic preferences for Main.AdminGroup.
2, via an unbind request that occurs during a certain search operation.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
1, via unspecified vectors
3, via vectors involving a TELNET IAC escape character to a (1) FTP or (2) FTPS server.
2," via unknown vectors related to an """"unloading bug."""""
4, via a crafted
4, via a long DELE command
4, via a long string in the first argument to the connect method.
4, via a .. (dot dot) in the URI.
4, via a // (slash slash) at the beginning of a URI
4, via a large number of requests in a short time interval.
4, via an ES_LIBRARY_PATH environment variable and a modified PATH environment variable
2, via the (1) ifnum or (2) ifname parameter
2, via the Send Trackbacks field.
4, via a long CHARSET_REGISTRY header in a BDF font file.
4, via a crafted PDF document
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a FIG image with a crafted color definition.
3, by establishing a bisocket control connection TCP session
2, via the catid parameter to index.php.
2, via the chatstart[USERTOID] cookie in a pull action.
4, via unspecified vectors.
0, via the catid parameter to index.php.
2, via the id parameter.
2, via the (1) name or (2) descr parameter in an (a) update_usergroup or a (b) store_nas action to admin.php.
2, via the livezilla parameter in a track action to server.php.
0, via the content parameter to wp-admin/post.php.
4, via shell metacharacters in the layout parameter in an operation/agentes/networkmap action to index.php.
4, via (1) the id_group parameter in an operation/agentes/ver_agente action to ajax.php or (2) the group_id parameter in an operation/agentes/estado_agente action to index.php
5, by using a page parameter containing a UNC share pathname
4, via (1) the page parameter to ajax.php or (2) the id parameter to general/pandora_help.php
4, via a URL in the argv[1] parameter.
4, via unspecified vectors.
0, via the downloads_id parameter in a download_now action to index.php.
4, via a crafted request to TCP port 2400.
0, via an LDSS packet with a long digest line that triggers memory corruption.
4, via a crafted ZCL packet
2, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
3, by uploading a .php file
4, via a long argument to (1) the GetDriverSettings2 method
2, via the Micro Blog (aka What Are You Working On?) field.
4, via unspecified vectors.
4, via a crafted TZID variable in a VCALENDAR message.
3, via variables in a VCALENDAR message
5, via a malformed FileSetLock request to port 524.
2, via unspecified LPR opcodes.
4, via a crafted request.
4, via a .. (dot dot) in the p parameter to index.php.
2, via the (1) default_news or (2) sponsors cookies
3, via arbitrary values of the auser and apass cookies.
1, via arbitrary values of the auser and apass cookies.
4, via a crafted data[_Token][fields] value that is processed by the unserialize function
4, via a packet with a timestamp whose value is 10 or less
4, via a symlink attack on the (1) /tmp/gnash-configure-errors.$$
4, via a symlink attack on temporary files that are generated when Cuneiform is invoked as the OCR engine.
4, via a crafted From address
2, via the db_type parameter
2, via an invalid db_type parameter
4, via a .. (dot dot) in the db_type parameter
5, by uploading a file with an executable extension
2, via the txtSiteId parameter.
2, via the module parameter.
2, via the (1) name
2, via the category parameter.
2, via the (1) note and (2) pg parameters
2, via the url parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) selStock parameter to search.asp and the (2) orderBy parameter to showAlllistings.asp.
2, via the event_id parameter in an alleventlist_more action to index.php.
2, via the (1) thread_title and (2) thread_description parameters in a message.
4, via a crafted LoadPlugin directory.
5, via a crafted MIDI file that triggers a buffer overflow.
3, via vectors related to the comment box.
1, via vectors related to improper allocation of memory for NSV metadata
1, via crafted (1) metadata or (2) albumart in an invalid MP4 file.
4, via a Matroska Video (MKV) file containing a string with a crafted length.
4, via a long Server header in a response to an HTTP request that occurs during parsing of a RealPix file.
2, via the giveRights_UserId parameter.
4, via a direct request
2, via the (1) firstname
4, via a direct request to (1) dash_widget.php and (2) register-plus.php
4, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) nome (nickname)
2, via an invalid argument.
5, via vectors related to non-whitespace characters preceded by newline characters
4, via unknown vectors.  NOTE: this issue exists because of an incomplete fix for CVE-2010-2761.
4, via (1) the id parameter in an olsrd.xml action to pkg_edit.php
4, via unknown vectors related to Server.  NOTE: the previous information was obtained from the January 2011 CPU.  Oracle has not commented on claims from a reliable third party researcher that this is a buffer overflow via a crafted XML soap request and a value that does not contain the expected 0x20 terminator character.
1, via unknown vectors related to Order Capture.
2, via unknown vectors related to Absence Management.
2, via unknown vectors related to Web Client
1, via unknown vectors related to Absence Management.
2, via unknown vectors related to Proxy.
2, via unknown vectors related to Ethernet and the Driver sub-component.
1, via unknown vectors related to Portal.
2, via unknown vectors related to Web Console.
1, via unknown vectors related to eProfile - Manager Desktop.
1, via unknown vectors related to the Kernel.
2, via unknown vectors related to Talent Acquisition Manager.
1, via unknown vectors related to the Kernel.
2, via unknown vectors related to Talent Acquisition Manager.
0, via unknown vectors related to RDS and Kernel/InfiniBand.
2, via unknown vectors related to Apache Plugin.
2, via unknown vectors related to Web Mail.
2, via unknown vectors related to SCTP and Kernel/sockfs.
1, via unknown vectors related to Fault Manager Daemon.
1, via unknown vectors related to Webmail.
4, via a crafted PDF document
4, via a direct request to phpinfo.php
3, via unknown vectors.
4, via vectors related to history handling.
4," via a """"dangerous file."""""
0, via malformed video content that triggers an indexing error.
0, via vectors involving SVG animations.
1, via vectors related to the handling of mouse dragging events.
1, via crafted arguments to the 0x88000080 IOCTL
0, via the ID parameter in an export action.
2, via the title parameter to (1) suggest-category.php and (2) suggest-listing.php.
1," by triggering use of an invalid SSL certificate and using the Internet Explorer interface to navigate through the filesystem via a """"Save As"""" dialog that is reachable from the """"Certificate Export"""" wizard."
2, via the __VIEWSTATE parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
2, via the v1 parameter.
4, via (1) a URL or (2) an aggregator feed title.
4, via a page path.
5, via a long serial-number field on a smart card
4, via a malformed start tag and end tag for a SCRIPT element
4, via a short p2pv2 packet in a DirectConnect (aka direct connection) session.
4, via an IRLMP_ENUMDEVICES getsockopt call.
3, via unspecified vectors.
3, by syncing a large volume of data.
3, by accepting a meeting invitation with an iNotes client and then accepting this meeting invitation with an iPhone client.
4, via a malformed document.
0, by omitting the Internet ID field in the person document
0, by sending many embedded objects in e-mail messages for iPhone clients.
3, via vectors involving (1) drop-down selection lists
2, via the (1) Load and (2) LoadTheme methods.
3, by triggering an Opera Unite update.
4, via a crafted argument to the ReleaseContext method
1, via vectors related to the emxFramework.FilterParameterPattern property.
4, via unspecified vectors.
5, via a long string in the second argument.
4, via a .. (dot dot) in the file_name parameter in an open request.
4, via a Trojan horse dwmapi.dll file in the current working directory.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a direct request to (1) header.php and (2) comments_items.php in system/admin/
0, via the nuser parameter in a registrate action.
2, via the error parameter.
4, via a direct request to (1) pages.php and (2) menu.php in includes/core_files and (3) extensions/login/frontend/pages/antihacker.php
4, via a .. (dot dot) in the site parameter to (1) index.php and (2) admin.php.
0, via the id parameter
2, via the (1) arac parameter to carsdetail.asp and the (2) marka parameter to twohandscars.asp.
2, via directory traversal sequences in the section parameter to index.php.
4, via unspecified vectors.
2, via the id parameter.
4, via a %uff0e%uff0e (encoded dot dot) in a URI.
4, via shift-reload actions.
3, by editing a post after it has been created.
3, via unknown vectors.
2, via the action parameter.
2, via the (1) countrycode parameter to contact.asp
2, via the (1) article parameter to kb.asp
0, via the id parameter
5, via a .. (dot dot) in the file parameter to module.php
2, via the ID parameter.
2, via the ID parameter.
2, via the i parameter.
2, via the id parameter.
0, via the rev parameter to (1) bin/viewrev/Main/WebHome and (2) bin/view/Blog
3, via unspecified vectors.
4, via unspecified vectors.
5, via a crafted background attribute within a cell in a TABLE element
1, by leveraging the ability to operate a CUSE server.
4, via a filename that is specified with a .. (dot dot) or full pathname
2, via newline injection attacks.
4, via a crafted CAB file
5, via unspecified vectors.
4, via a zero-length I/O request in a device ioctl to a SCSI device
0, by sending many Router Advertisement (RA) messages with different source addresses
1, via EIGRP traffic that triggers an EIGRP multicast storm
4, via a flood of packets
1, via multicast traffic
4, via a high volume of IPsec traffic
4, via a request for a document whose name contains space characters
3, via vectors involving a prepended space character
1, by making multiple incorrect LDAP authentication attempts
4, by sending a crafted SIP REGISTER message over UDP
0, by making many SIP calls
1, via multicast traffic
4, via a large number of LAN-to-LAN (aka L2L) IPsec sessions
2, via the (1) h and (2) t parameters to help.php
4, via a GIF file that contains many images
2, via the (1) filter_order or (2) filter_order_Dir parameter in a com_contact action to index.php
4, via vectors related to use of __set
4, via a large number of anti-aliasing steps in an argument to the imagepstext function.
4, via unspecified vectors.
2, via the PageId parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted .ogg file
4, via a MODBUS response packet with a crafted length field.
4, via a field that is added to a menu
0, via a large parameter in a LIST command.
4, via a Content-Type header containing (1) multiple items separated by ; (semicolon) characters or (2) crafted string data.
4, via a signed integer value in the Content-Type header.
4, via a long HTTP Host header to (1) gwpoa.exe in the Post Office Agent
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
5, via unspecified vectors.
5, via a long (1) LIST or (2) LSUB command.
2, via the (1) tag and (2) category parameters to index.php.
2, via directory traversal sequences in the controller parameter to index.php.
2, via unspecified vectors related to the view item page.
2, via the id parameter.
2, via the d parameter.
2, via the ECO_ID parameter.  NOTE: some of these details are obtained from third party information.
2, via the PropResort parameter.
0, via the probe parameter to (1) multi/city.asp in the Multi Agent System and (2) resulttype.asp in the Single Agent System.
2, via the cat parameter in a music action to index.php.
4, via a crafted .csv file
1, via crafted data in a session on TCP port 54321.
4, via a long PlayFileName property value.
4, via a crafted ABC file
2, via the query string.
4," via """"badly behaved applications"
2, via the pluginurl parameter.
0, via the from parameter to Main/WikiSandbox.  NOTE: some of these details are obtained from third party information.
0, via the id parameter
1, via crafted glob expressions that do not match any pathnames
0, via the submitnews_title parameter
1," by using the """"source code"""" feature in the customer interface."
3, by creating tickets.
4, via a .. (dot dot) in the task parameter to index.php.
0, via the cat_id parameter in a catalog action.
2, via the id parameter.
0, via the id parameter to viewforum.php.
0, via the id parameter
2, via the tid2 parameter.
2, via the wptouch_settings parameter to include/adsense-new.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) city
4, via a paged search
4, via a paged search that triggers improper mutex processing.
5, via a paged search that is interrupted by an LDAP Unbind operation.
2, via the album_id parameter.
2, via the frame parameter.
2, via the ID parameter.
2, via the (1) month and (2) year parameters in a jscalendar action to index.php.  NOTE: some of these details are obtained from third party information.
2, via the ev_id parameter in a details action to index.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) provinceid parameter to search.php and the (2) e parameter to resumeview.php.
2, via the (1) Username and (2) Password fields.
2, via directory traversal sequences in the uri parameter.
2, via the type parameter.
4, via a .. (dot dot) in the filepath parameter.
1, via crafted content:// URIs
1, via unspecified vectors
2, via the p parameter.
2, via the ID parameter.
4, via a URL in the theme_file parameter to (1) includes/window_top.php and (2) header.php
2, via the (1) user[msn]
2, via the (1) tids[] parameter to ajaxadmin.php and the (2) msgids[] parameter to ajaxmember.php.
0, by editing or creating vocabulary names
2, via the page parameter.
2, via the PATH_INFO to index.php.
2, via the url parameter.
2, via the M_NAME parameter.  NOTE: some of these details are obtained from third party information.
3, via the M_NAME parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) Title parameter to MapView.aspx; NetObject parameter to (2) NodeDetails.aspx and (3) InterfaceDetails.aspx; and the (4) ChartName parameter to CustomChart.aspx.
2, via the key parameter.
2, via the z_Residency parameter.
4, via a Trojan horse Wintab32.dll file in the current working directory.
4, via a Trojan horse uxtheme.dll file in the current working directory
2, via the (1) id parameter in a saved_search action and (2) item_types parameter in a show_item_search action in the search_management_manage subcontroller. NOTE: some of these details are obtained from third party information.
2, via directory traversal sequences in the controller parameter in a show_report action.
2, via the name_new parameter.
0, via the subject parameter (title field) in a saveTicket action to index2.php.  NOTE: some of these details are obtained from third party information.
2, via the event_id parameter in a register action.
4, via a long Syslog PRI message header to UDP port (1) 513 or (2) 514. Fixed in 7.2 Build 7020.
2, via the (1) HOST_ID
2, via the Name parameter.  NOTE: some of these details are obtained from third party information.
2, via the pageId parameter.
2, via the kat parameter.
2, via the (1) ts parameter to details.php and possibly the (2) ilceler parameter to index.php.
2, via the ItemID parameter.
2, via the ItemID parameter.
2, via the (1) url or (2) title parameter.
2, via the es_id parameter.
2, via the (1) post_content parameter to post/edit/2/p1.html
2, via the (1) ref or (2) poll_id parameter to index.php
0, via the reason parameter in a fail action.
0, via the id parameter in a viewInv action to index.php.
2, via the makale_id parameter.
2, via the tarih parameter.
2, via the itemid parameter.
4, via a .. (dot dot) in the showlang parameter.
2, via the blog_id parameter in a news action.
2, via the id parameter.
2, via the search parameter.
2, via the catid parameter in an item action to index.php.
2, via the post-title parameter.
0, via the cm_id parameter in an equip presenta action to index.php.
2, via the d_itemid parameter in an item_detail action to index.php.
2, via the forumID parameter.
4, via a .. (dot dot) in the bn parameter.
2, via the bn parameter.
2, via the editmenu parameter.
2, via the gender parameter.
4, via a long filename.
2, via the specific parameter.
2, via the id parameter.
2, via the (1) first_name
2, via the gid parameter.
2, via the postID parameter.
2, via the view parameter.
5, via a URL in the script_pfad parameter.
4, via a URL in the input_file parameter.
2, via the (1) category_name
2, use the (1) category_name
2, via the sitetitle parameter.
2, via the modhash parameter.
4, via a URL in the script_pfad parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unknown vectors.
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
2, via the category parameter in a details action.
2, via the name parameter.  NOTE: some of these details are obtained from third party information.
2, via the name parameter (aka the username field).  NOTE: some of these details are obtained from third party information.
2, via the REF_URL parameter.
2, via the X-Forwarded-For HTTP header in a send action.
0, via the moduleid parameter to index.php.
2, via the id parameter.
4, via a URL in the url parameter.
2, via the (1) height or (2) width parameter.
2, via the (1) squad or (2) showgame parameter to index.php.
2, via the searchStr parameter.
2, via the cat_name parameter in a view action to index.php.  NOTE: some of these details are obtained from third party information.
2, via the sbiz_id parameter.
2, via the a parameter.  NOTE: some of these details are obtained from third party information.
2, via the user parameter.  NOTE: the from parameter is already covered by CVE-2009-4562.
2, via the prodid parameter.
2, via the (1) q parameter to search.php or the (2) image parameter to image.php.
2, via the EventID parameter in a ViewEventDetails action.
2, via the sid parameter.
2, via the shopid parameter in a view action.
2, via the Keywords parameter.  NOTE: some of these details are obtained from third party information.
4, via a URL in the lang_path parameter.
0, via the BookmarkID parameter in an EditBookmark action.
2, via the (1) ArticleID or (2) LibraryID parameter.
2, via the words parameter.
4, via a URL in the config parameter to magazine.functions.php.
2, via the vehicletypeID parameter.
2, via the ad_ID parameter.
0, via the QuestionID parameter in a results action.
0, via the i parameter in an edit action to (1) contentAE.asp or (2) templatesAE.asp.
2, via the bid parameter.
4, via a URL in the actionPath parameter.  NOTE: this issue has been disputed by a reliable third party.
2, via the id parameter.
0, via the ct_id parameter in a timetrack action to index.php.
0, via the id parameter in a country action to index.php.
2, by placing it after a > (greater than) character.
0, via the firstCode parameter in a helpers action to index.php.
0, via the MailType parameter in a mail/auth/processlogin action.
4, via a .. (dot dot) in the folder_level parameter.  NOTE: this issue has been disputed by a reliable third party.
2, via the query parameter.
2, via the lid parameter.
2, via the id parameter.
2, via the sid parameter.
0, via the catid parameter to index.php.
2, via the (1) articleid or (2) catid parameter to index.php.
2, via the Itemid parameter in a categories action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a URL in the theme parameter.
2, via the id parameter.
0, via the PlayerID parameter in a player save action to index.php.
2, via the lid parameter.
4, via a URL in the class_path parameter to (1) file.php or (2) com_del.php.
2, via the id parameter in a showExpertProfileDetailed action to index.php.
0, via the id parameter to index.php.
2, via the products_id parameter.
2, via the keywords parameter.
4, via a URL in the path parameter.
2, by entering it in an unspecified window.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unknown vectors.
2, via the products_id parameter.
0, via the id parameter
3, via unspecified vectors.
3, via unspecified vectors.
2, via the page parameter.
2, via the password parameter.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unknown vectors.
2, via the order_by parameter.
4, via shell metacharacters in the Password field
0, via the query parameter in a Search action.
2, via the artID parameter.
0, via the Itemid parameter to index.php.
2, via the id parameter.
2, via the id parameter.
0, via the r parameter to index.php.
2, via the ypncat_id parameter.
3, via the f_search_keywords parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the id parameter.
2, via the ads description field in a showad action to index.php.
2, via the searchword parameter (aka Search Box field).  NOTE: some of these details are obtained from third party information.
2, via the mealid parameter to index.php.
2, via the image_id parameter.
2, via the image_id parameter.
2, via the pid parameter.
2, via the id parameter.  NOTE: some of these details are obtained from third party information.
2, via the var1 parameter.
2, via the id parameter.
4," via vectors involving the """"Enter Reference Number Below"""" text box."
4," via vectors involving the """"Enter Reference Number Below"""" text box."
2, via the doc_id parameter.
2, via the p parameter.
4, via a URL in the TMPL[path] parameter.
2, via the grp parameter.
0, via the Itemid parameter in a contact action to index.php.
0, via the Itemid parameter in a display action to index.php.
0, via the type parameter to add.html.
0, via the Itemid parameter to index.php.
0, via the detailed_results parameter to search_jobs.html.
2, via the Itemid parameter in an offer_view action to index.php
2, via the search parameter.
0, via the id parameter in a product action.
5, via a URL in the pathForArdeaCore parameter.  NOTE: some of these details are obtained from third party information.
2, via the section parameter.
2, via the myusername parameter (aka Username field) in a do_login action.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the u parameter.
2, via the limit parameter in an autartimonial action to index.php.  NOTE: some of these details are obtained from third party information.
2, via the category parameter.
2, via the profileCommentTextArea parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the cat1 parameter.
2, via the mid parameter.
2, via the ContactID parameter.
0, via the pid parameter in a matchp action.
2, via the session parameter.
2, via the session parameter.
2, via the id parameter.  NOTE: some of these details are obtained from third party information.
2, via the Lid parameter.
2, via the ladder[id] parameter.
2, via the alb parameter.
2, via the match parameter.
2, via the account parameter.
2, via the sid parameter.
2, via the alb parameter.
2, via the page parameter.
2, via the intGroupID parameter.
2, via the view parameter to index.php.
2, via the intDivisionID parameter.
2, via the fld_path parameter.  NOTE: some of these details are obtained from third party information.
2, via the type parameter.  NOTE: some of these details are obtained from third party information.
2, via the type parameter.  NOTE: some of these details are obtained from third party information.
2, via the catid parameter in an item action to index.php.
2, via the show parameter in a web action.
2, via the lang parameter in a web action.
2, via the sstring parameter (aka the Search Box).  NOTE: some of these details are obtained from third party information.
0, via the catid parameter in a bfquiztrial action to index.php.
2, via the CatDisplay parameter.
2, via the planid parameter.
2, via the txtHomeSearch parameter (aka the search field).  NOTE: some of these details are obtained from third party information.
2, via the type parameter.
2, via the article_id parameter.
4, via a URL in the abspath parameter.
2, via the loginid parameter (aka the UserName field).  NOTE: some of these details are obtained from third party information.
4, via a URL in the DIR_NUCLEUS parameter.  NOTE: some of these details are obtained from third party information.
2, via the id parameter in a plugin action.
2, via the cid[] parameter in an editItem action to administrator/index.php.  NOTE: some of these details are obtained from third party information.
2, via the cid[] parameter in an editItem action to administrator/index.php.
2, via the catid parameter.
2, via the p parameter.
2, via the id parameter.
2, via the name parameter to index.php.
2, via the nav_time parameter.
2, via the computerName parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the content parameter in an edit action to admin/index.php.
2, via the val[] parameter.
2, via the prodid parameter in a prod_desc action to index.php.
2, via the message parameter.
2, via the id parameter.
0, via the face_id parameter in a show_face action to index.php.
2, via the tipodoc_id parameter.
2, via the res_id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the album parameter in a photos action.
2, via the id parameter.
2, via the maxarticles parameter.
2, via the c parameter.
2, via the ratearticleselect parameter.
4, via (1) the Additional Information field to challenge.php
4, via a modified newsid parameter in a printnews action.
4, via a crafted IOCTL_ASWFW_COMM_PIDINFO_RESULTS DeviceIoControl request to \\.\aswFW.
4, via a long URL in a .pls file.
2, via the url parameter in an Add action to modules.php.
4, via a .. (dot dot) in the style parameter.
1," via vectors related to """"form action requests"""" using a controller."
1, via destructive controller actions
1, via vectors related to admin/security.
2, by changing the extension of an uploaded file.
1, by saving data using the email address (ID) of another user.
1, via vectors related to DataObjectSet pagination.
2, via the keywords parameter in a (1) do_search action to search.php or (2) do_stuff action to private.php.  NOTE: the vendor disputes this issue
4, via a crafted TNEF file
4, via a crafted PDF file.
4, via a crafted reply in the (1) TLS_readline or (2) SSL_readline function
4, via a Bitcoin transaction containing an OP_LSHIFT script opcode.
4, via a Bitcoin transaction containing multiple OP_CHECKSIG script opcodes.
4, via a crafted Bitcoin transaction.
1, by leveraging administrative privileges to execute an unspecified Metasploit Framework module.
4, via a crafted sequence of characters in a URI.
4, via a large volume of traffic.
4, via a long URL.
4, via a crafted file.
2, via the (1) debug_memory parameter to core/control/Director.php or (2) debug_profile parameter to main.php.
4, via a long strDelimit parameter.
4, via a Trojan horse HomeUtils9.dll file in the current working directory
4, via a Trojan horse DwmApi.dll file in the current working directory
4, via a Trojan horse wintab32.dll file in the current working directory
4, via a Trojan horse (1) dbicudtx11.dll
4, via a Trojan horse bwsconst.dll file in the current working directory
4, via a Trojan horse DLL in the current working directory
4, via a Trojan horse PlayRIplA6.dll file in the current working directory
4, via a Trojan horse WNASPI32.DLL file in the current working directory
4, via a Trojan horse (1) eclipse_1114.dll or (2) emser645mi.dll file in the current working directory
4, via a Trojan horse (1) java_msci.dll or (2) msci_java.dll file in the current working directory
4, via a Trojan horse (1) mfc71enu.dll or (2) mfc71loc.dll file in the current working directory
4, via a Trojan horse (1) java_msci.dll or (2) msci_java.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) exceptiondumpdll.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse patchani.dll file in the current working directory
4, via a Trojan horse objectassisten_US.dll file in the current working directory
4, via a Trojan horse .dll file in the current working directory
4, via a Trojan horse Fwpuclnt.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) SWiSHmax3res.dll file in the current working directory
4, via a Trojan horse myuser.dll file in the current working directory
4, via a Trojan horse (1) wscapi.dll or (2) vclib32.dll file in the current working directory
4, via a Trojan horse Fwpuclnt.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory.  NOTE: some of these details are obtained from third party information.
4, via a Trojan horse wmaudsdk.dll file in the current working directory
4, via a Trojan horse (1) wbtrv32.dll or (2) w3btrv7.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse BESExtension.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse rio500.dll file in the current working directory
4, via a Trojan horse wintab32.dll file in the current working directory
4, via a Trojan horse (1) mptools.dll
4, via a Trojan horse VersionCheckDLL.dll file in the current working directory
4, via a Trojan horse ssleay32.dll file in a certain directory.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a Trojan horse HDJAPI.dll file in the current working directory
4, via a Trojan horse (1) MFC90ENU.DLL or (2) MFC90LOC.DLL file in the current working directory
4, via a Trojan horse ztv7z.dll file in the current working directory
4, via a Trojan horse homeutils9.dll file in the current working directory
4, via a Trojan horse mfc71loc.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse mfc80loc.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) CrlRib.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) IBFS32.DLL file in the current working directory
4, via a Trojan horse MtxParhVegasPreview.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) MFC71LOC.DLL file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse wintab32.dll file in the current working directory
4, via a Trojan horse (1) RSRC32.dll or (2) dwmapi.dll file in the current working directory
4, via a Trojan horse wintab32.dll file in the current working directory
4, via a Trojan horse vnclang.dll file in the current working directory
4, via a Trojan horse pcrypt0406.dll file in the current working directory
4, via a Trojan horse quserex.dll file in the current working directory.  NOTE: some of these details are obtained from third party information.
4, via a Trojan horse (1) nnoteswc.dll or (2) nlsxbe.dll file in the current working directory
4, via a Trojan horse httrack-plugin.dll file in the current working directory
4, via a Trojan horse wnaspi32.dll file in the current working directory
4, via a Trojan horse ArmAccess.dll file in the current working directory
4, via a Trojan horse daemon.dll file in the current working directory
4, via a Trojan horse TRACE32.DLL file in the current working directory
4, via a Trojan horse (1) srcsrv.dll or (2) GSAutoTester.DLL file in the current working directory
4, via a Trojan horse Assist.Dll file in the current working directory
4, via a Trojan horse (1) wnaspi32.dll or (2) ntaspi32.dll file in the current working directory
4, via a Trojan horse wnaspi32.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse (1) libgif-1.1.0.dll or (2) libhav-1.0.1.dll file in the current working directory.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory.  NOTE: some of these details are obtained from third party information.
4, via a Trojan horse wpcap.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse wintab32.dll file in the current working directory
4, via a Trojan horse tbbmalloc.dll file in the current working directory
4, via a Trojan horse (1) ibfs32.dll or (2) amt_cdb.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via unspecified vectors.
4, via unspecified vectors.
4, via a large integer in the ratearticleselect parameter.
2, via the (1) viewType and (2) sort parameters in a browse action to livelink/livelink; and the (3) nodeid
3, via the (1) User parameter in the edit user profile feature to manageuser.php
2, via the edituser action.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the id parameter.
4, via a crafted packet to TCP port 7777.
5, via a long string in the first argument.
3, by providing a crafted error message for a (1) FTP or (2) SSH connection attempt.
4, via a plugin's author field
4, via a crafted .mppl file.  NOTE: it has been reported that the overflow is in the lpFileName parameter of the CreateFileA function
5, via a long file name in a zip archive.
4, via a long URI in a HEAD request.
2, via the title option.
4, via a crafted instruction that triggers an L2 emulation failure report
0, via the searchstring parameter to news/index.
1, via a data array to news/saveCategories or (2) modify credentials via a data array to admin/saveUser.
4, via a top_height cookie.
5, via (1) the file_name parameter in an attachment action
1, by specifying the administrator's e-mail address in the email parameter.
4, via a validate action to admin/settings.php
4, via a configuration action to admin.php
0, via the search parameter in a search action to index.php.
5, via a crafted WAR pathname in the filename parameter in conjunction with WAR content in the POST data
4, via a zenworks-fileupload request with a crafted directory name in the type parameter
4, via a long job title.
4, via a crafted Velocity template.
5, via unspecified vectors.
0, via the ordering parameter to index.php.
4, via a symlink attack on (1) pimd.dump when a USR1 signal is sent
2, via the (1) To or (2) From e-mail address in an OMP request to the Greenbone Security Assistant (GSA).
4, via a crafted CDG video.
4, via a Trojan horse IEShims.dll in the current working directory
1, via crafted Cascading Style Sheets (CSS) comments
4, via .. (dot dot) sequences in the help command
2, via the R parameter.
5, via unknown vectors.
4," via a ./.../ sequence in the """"extra"""" parameter to the help command"
4, via vectors related to gfx/layers/d3d10/ReadbackManagerD3D10.cpp and unknown other vectors.
0, by accessing an object that (1) was not properly initialized or (2) is deleted
4, via a crafted RealTimeData record
1, via vectors related to the dragging of content.  NOTE: this might overlap CVE-2011-0778.
4, via a crafted International Color Consortium (ICC) profile in a JPEG image.
4, via Wi-Fi frames on the local wireless network
0, via format string specifiers in a (1) display dialog or (2) display alert command in a dialog in an AppleScript Studio application.
4, via a document that contains a crafted embedded OpenType font.
4, via a document that contains a crafted embedded TrueType font.
5, via a document that contains a crafted embedded Type 1 font.
5, via a document that contains a crafted SFNT table in an embedded font.
5, via a document that contains a crafted embedded font.
4, via a crafted XBM image.
0, via an Excel spreadsheet with a crafted formula that uses unspecified opcodes.
4, via a crafted name of an executable file.
4, via a crafted JPEG2000 image.
3, via vectors involving a cross-site redirect.
4, via a crafted Canon RAW image.
4, via a crafted TIFF image with JPEG encoding.
4, via a crafted web site.  NOTE: this may overlap CVE-2011-1202.
4, via Wi-Fi frames on the local wireless network.
4, via a crafted embedded TrueType font.
2, via an image containing a crafted embedded ColorSync profile that triggers a heap-based buffer overflow.
4, via a CFString object that triggers a buffer overflow.
4, via a crafted embedded Type 1 font in a PDF document.
0, by using the root directory as the starting point of a recursive listing.
4, via a crafted TIFF image.
4, via a crafted JPEG2000 image.
0, via vectors involving uppercase strings.
4, via a crafted Microsoft Office document.
5, via a crafted RIFF WAV file.
1, via crafted sample tables in a movie file.
4, via a crafted movie file.
4, via a crafted JPEG file.
4, via a crafted web site.
4, via a crafted QuickTime movie file.
4, via unspecified vectors.
5, via a crafted TIFF image with CCITT Group 4 encoding.
3, via vectors involving a URL that contains a username.
4, via vectors related to improper canonicalization of URLs within RSS feeds.
4, via a crafted pict file.
4, via a crafted GIF file.
4, via a crafted H.264 movie.
1, via crafted STSC atoms in a QuickTime movie file.
1, via crafted STSS atoms in a QuickTime movie file.
1, via crafted STSZ atoms in a QuickTime movie file.
1, via crafted STTS atoms in a QuickTime movie file.
1, via crafted track run atoms in a QuickTime movie file.
4, via a crafted PnSize opcode in a PICT file that triggers a stack-based buffer overflow.
4, via a crafted image description associated with an mp4v tag in a movie file.
5, via a malformed displayWidth option in the arg parameter.
2, via large values of variables to jovgraph.exe.
4, via a long (1) Source Node or (2) Destination Node variable.
4, via a long COOKIE variable.
4, via a long data_select1 parameter.
4, via a long nameParams parameter
4, via a long (1) schdParams or (2) nameParams parameter
4, via a long text1 parameter.
4, via a long schd_select1 parameter.
0, via format string specifiers in input data that involves an invalid template name.
1, via network traffic to TCP port 5001 or 5002
2, via unspecified message types.
3, via unknown vectors.
4, via (1) the logType parameter to Contents/exportlogs.asp
4, via a malformed request packet that does not trigger a response packet.
4, via a crafted configuration file in a backup archive.
4, via a crafted header field in a message.
1, by inserting an invalid message into the queue.
1, via vectors related to the lack of an error page for an application.
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via directory traversal sequences in the fileID parameter.
4, via a crafted HTML document.
1, via crafted ICC chunks in a PDF file
4, via a crafted TZNAME variable in a VCALENDAR attachment in an e-mail message
4, via a long HTTP request for a .css file.
2, via unspecified vectors
4, via a crafted web site.
0, via a long parameter to the (1) Open
1, via crafted HTTP headers.
1, via directory traversal sequences in HTTP GET requests
1, via vectors related to the DOM implementation
1, via crafted TCP packets
1, via crafted TCP packets
4, via a long string in a POST request.
4, via a malformed request
4, via a malformed request
4, via a malformed request
4, via a malformed request
4, via a malformed SOAP request in conjunction with a spoofed TelePresence Manager that supplies an invalid IP address
4, via a TCP request
4, via a malformed SOAP request
4, via a crafted request to the Java RMI interface
4, via a request to TCP port 443
4, via a malformed request
4, via a malformed request
4, via a symlink attack on unspecified files in the .pc directory.
4, via a long request to TCP port 777.
4, via a crafted URI
4, via a crafted palette-based PNG image that triggers a buffer overflow
0, via an invalid size argument
4, via unspecified vectors.
2, via the (1) user or (2) pw argument.  NOTE: some of these details are obtained from third party information.
0, via the cid parameter to (1) admin/bw_per_month.php or (2) client/bw_per_month.php.
2, via the edssh_account parameter in a deletesshaccount Delete action.
2, via the Pieforms select box.
4, via a symlink attack on a directory under /var/lib/php5/.
4, via a large number of RARs.
1, via crafted packets
4, via unspecified vectors.
4, via a Trojan horse executable file in the current working directory.
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
4, via a Trojan horse executable file in the current working directory.
3, via unspecified vectors.
3, via unknown vectors.
3, via shell metacharacters in a hostname obtained from a (1) DHCP or (2) XDMCP message.
4, via unspecified vectors.
4, via a PDF document.
4, via a PDF document that triggers an out-of-memory error.
1, via vectors related to PDF shading.
2, via the pathinfo parameter.
0, via blobs that trigger a certain file size
1, via vectors related to malformed router caches and improper handling of integer values.
4, via a long line in a .mamx file.
4, via a long line in a MIDI (.mid) file.
4, via a .. (dot dot) in the aXconf[default_language] parameter.
2, via unknown vectors related to the index page.
2, via the oid parameter in an add_other action.
0, via the id parameter to index.php.
2, via the team_id parameter.
4, via a packet with a large data size to TCP port 1530.
4, via a crafted request that is not properly handled by the KiFastCallEntry hook.
2, via the bid parameter.
2, via the id parameter.
4," via a subtitle with an opening """"<"""" without a closing """">"""" in an MKV file"
2, via unspecified vectors related to the sprintf function.
0, via the Target parameter in a /entry/signin action.
4, via a long request.  NOTE: this issue exists because of a CVE-2005-3534 regression.
5, via a crafted MKV (WebM or Matroska) file that triggers memory corruption
2, via an edit access_permissions action to index.php.
2, via the username parameter.
4, via (1) the token parameter to portal/Help.jsp or (2) the URI in a console/apps/sepm request.
2, via the (1) refreshRateSetting parameter to IMManager/Admin/IMAdminSystemDashboard.asp
4, via unspecified vectors.
1, via unspecified vectors
4, via a Director file with a crafted DEMX RIFF chunk that triggers incorrect buffer allocation
4, via a crafted PFR1 chunk that leads to an unexpected sign extension and an invalid pointer dereference
4, via a Director movie with a large count value in 3D assets type 0xFFFFFF45 record
4, via a large array length value in the ActionScript method of the Function class.
1, via crafted parameters to an unspecified ActionScript method that cause a parameter to be used as an object pointer
2, via unspecified vectors
2, via unspecified vectors
4, via a PFR1 chunk containing an invalid size value that leads to an unexpected sign extension and a buffer overflow
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via a Trojan horse DLL in the current working directory.
4, via a crafted font.
1, via unspecified vectors related to a constructor for an unspecified ActionScript3 object and improper type checking
4, via unspecified vectors.
4, via unspecified tags.
3, via unknown vectors.
3, via the cfform tag.
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted Audition Session (aka .ses) file.
1, via crafted data in unspecified fields in the TRKM chunk in an Audition Session (aka .ses) file
2, via the ftpserver parameter (FTP-Server field) to the sicore/updates/optionssav operation for index.php.
2, via the (1) what1
2, via the N action.
0, via the modelid parameter to flash_upload.php.
0, via the where_time parameter in a get action.
2, via the cat parameter.
2, via the RunProgram function to TCP port 6542.
5, via unknown vectors.
2, via an OMP request to OpenVAS Manager.  NOTE: this issue can be leveraged to bypass authentication requirements for exploiting CVE-2011-0018.
5, via a client master key packet in which the sum of unspecified length fields is greater than a certain value.
5, via a crafted 0x80000064 IOCTL request that triggers an assertion failure.  NOTE: some of these details are obtained from third party information.
4, via a crafted web page
4, via a crafted application that triggers a NULL pointer dereference
0, by uploading an executable file via the UploadDirectory and Accepted Extensions fields in the getImagefile component of EasyEdit.cfm.
2, via an HTML form with a select element that contains a large number of children.
2, via unknown content on a web page
4, via a filename associated with a file upload.
4, via a / (slash) character in a key in a session cookie
4, via a crafted slot value.
3, via vectors related to (1) the Quick/Bulk Edit title (aka post title or post_title)
4, via a modified attachment_id parameter.
4, via a symlink attack on a /tmp/feh_ temporary file.
0, via an IGMP packet
2, via the GECOS field.
0, via a full pathname in the sources_list argument
4, via a symlink attack on a (1) dmrc or (2) face icon file under /var/cache/gdm/.
4, via a filename
2, via the User-Agent HTTP header in an id=- query to a .cfm file.
0, via an id parameter containing a JavaScript onLoad event handler for a BODY element
4," via vectors involving a """"tag script."""""
4, via an id=- query to a .cfm file
4, via shell metacharacters in an e-mail address.
2, via the rss_url parameter.
2, via the (1) installer or (2) image editor.
4, via a crafted IP Conduit packet to TCP port 2400.
2, via the PortRule_Name parameter.
4, via a ..%2f (encoded dot dot slash) in a URI.
4, via a crafted request to port 1882
2, via the (1) recaptcha_opt_pubkey
2, via the (1) wp_relatedposts_title
0, by leveraging an ability to inject arguments into a (1) getpeername
1, via crafted glob expressions in STAT commands in multiple FTP sessions
4, via a crafted command line.
2, via the Windows XP variable in a file.
2, via the image parameter.
4, via a direct request to (1) includes/ping.php and (2) includes/spamping.php
4, via a non-existent file in the image parameter
1, via vectors related to the stat system call.
1, via vectors related to image loading.
3," via vectors involving a """"bad volume setting."""""
3, via vectors related to audio.
1, via unknown vectors related to Service Level Agreements.
3, via unknown vectors.
2, via unknown vectors related to wbem.
1, via unknown vectors related to Administration and Monitoring.
1, via unknown vectors related to Midtier Infrastructure.
2, via unknown vectors related to cp.
2, via unknown vectors related to PeopleTools.
1, via unknown vectors related to Application Portal.
2, via unknown vectors related to Globalization - Automotive.
2, via unknown vectors related to Security.
2, via unknown vectors related to File Processing.
2, via unknown vectors related to Authentication.
2, via unknown vectors related to Web Proxy Agent.
2, via unknown vectors related to Authentication.
2, via unknown vectors related to Order Capture.
2, via unknown vectors related to Enterprise Learning Mgmt.
1, via unknown vectors related to ePerformance.
1, via unknown vectors related to ePerformance.
2, via unknown vectors related to Pension Administration.
2, via unknown vectors related to Talent Acquisition Manager.
1, via unknown vectors related to Global Payroll - North America.
2, via unknown vectors related to Global Payroll - Spain.
2, via unknown vectors related to Global Payroll Core.
1, via unknown vectors related to 2D.
2, via unknown vectors related to SAAJ.
2, via unknown vectors related to NIO.
4, via goform/login
3, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unspecified vectors.
4, via a modified (1) PATH or (2) LD_LIBRARY_PATH environment variable.
4, via a .. (dot dot) in the (1) awcm_theme or (2) awcm_lang cookie to (a) index.php or (b) header.php.
5, via a URL in the Target parameter to an unspecified component
0, via the p parameter to an unspecified component
5, via unspecified vectors.  NOTE: it is possible that this overlaps CVE-2011-0535.
5, via a cai:// URL containing a --launcher.library option that specifies a UNC share pathname for a DLL file
4, via a GIOP getEnvironmentString request
4, via a GIOP client request
4, via a long name parameter in a Content-Type header in a malformed Notes calendar (aka iCalendar or iCal) meeting request
2, via long arguments in a filename parameter in a malformed MIME e-mail message
4, via a long string in an LDAP Bind operation
2, via long filenames associated with Content-ID and ATTACH:CID headers in attachments in malformed calendar-request e-mail messages
4, via non-printable characters in an envelope sender address
3, via an EXEC_SETUP command that references a UNC share pathname.
2, via unspecified vectors
4, via (1) the extn parameter to iptm/advancedfind.do
4, via (1) the CCMs parameter to iptm/PRTestCreation.do or (2) the ccm parameter to iptm/TelePresenceReportAction.do
2, via the device parameter
2, via the tag parameter
2, via unspecified vectors
4, via a .. (dot dot) in the file parameter
0, via vectors involving SVG font faces.
2, via unspecified XML data.
4, via shell metacharacters in a hostname obtained from a DHCP message.
1, via crafted Visual Basic for Applications (VBA) data in a Microsoft Office document.  NOTE: some of these details are obtained from third party information.
4, via a crafted LDM partition table.
4, via a string composed of a % (percent) character followed by invalid hex characters
2, via the sysplugins/smarty_internal_compile_private_special_variable.php file.
2, via the name of a shared report.
4," via vectors related to the """"Confirm New Page scene."""""
4, via a symlink attack on a /tmp/feh_ temporary file
1, via crafted arguments in the USELASTCOMMITTED session environment option in a SQL SET ENVIRONMENT statement.
2, via the mod parameter to the fullcontrol program.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
4, via (1) the messageString parameter in a WebMessage action or (2) the PATH_INFO.
0, by providing the name of a hidden WiFi network that does not respond to connection attempts.
4, via unknown vectors.
3, via the (1) search_max parameter in a search action to index.php
2, via the id parameter.
4, via a crafted Macho-O file.
4, via a crafted Mach-O file.
2, via the session.user_id parameter to media.cfm.
2, via the wsnuser cookie to index.php.
2, via the time parameter.
2, via the (1) sContext
2, via the (1) id or (2) data[title] parameters in an edit action to files.php
2, via the aidDB[] parameter.
2, via long arguments to the (1) PlayURL or (2) PlayURLWithLocalPlayer methods.
4, via unspecified vectors.
4, via a symlink attack on a /tmp/crontab.XXXXXXXXXX temporary file and (2) perform MD5 checksum comparisons on arbitrary pairs of files via two symlink attacks on /tmp/crontab.XXXXXXXXXX temporary files.
4, via a command-line argument composed of a directory name concatenated with a directory traversal sequence that leads to the /etc/crontab pathname.
2, via the device parameter.
4, via a crafted .mp3 file that is played during bookmark creation.
4, via a large third argument to the shmop_read function.
4, via a .. (dot dot) in the p parameter in a preview action to index.php
3, via the (1) findfid
4, via (1) a delivery address and possibly (2) a PIN.
2, via the authReasonCode parameter in an OpenDatabase action.
4, via unknown vectors.
1, via unspecified vectors
3, via vectors involving a TEXTAREA element.
2, via unspecified vectors
3, via vectors related to blocked plug-ins.
0, via vectors involving socket options.
4, via a malformed SSH message.
4, via a malformed 6LoWPAN IPv6 packet.
4, via a pcap-ng file that contains a large packet-length field.
3, via vectors involving self-referential ASN.1 CHOICE values.
5, via a crafted .pcap file.
4, via a symlink attack on the package.xml file
0, by using the same variable for multiple arguments.
4, via a malformed DOCTYPE declaration.
1, via malformed XML comments.
2, via an unexpected URI scheme
0, by reading uninitialized data in the ah field of an Acorn Universal Networking (AUN) packet.
1, by leveraging connectivity to an IrDA infrared network and sending a large integer value for a (1) name length or (2) attribute length.
2, via unspecified vectors
1, via unspecified vectors
1, via vectors related to the handling of DOM URLs.
3, via unknown vectors.
1," via vectors related to """"document script lifetime handling."""""
2, via unknown vectors that trigger an out-of-bounds write.
2," via unknown vectors that trigger use of a malformed """"out-of-bounds structure."""""
2," via unspecified vectors that """"corrupt the system state"
0, via vectors involving access to an object
2, via the URI
5, via a crafted PowerPoint document
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
1, via vectors related to plug-ins.
3, via vectors related to linked lists and a database.
4, via unspecified vectors.
0, by rejecting IIOP requests at opportunistic time instants
1, by performing close operations via network connections to a queue manager.
5, via network connections associated with a NULL return value from a synchronous JMS receive call.
0, by sending many UDP messages.
0, by sending many JSP requests that trigger large responses.
3, by accessing a JSP page of an application that is repeatedly stopped and restarted.
3, by using a Lightweight Third-Party Authentication (LTPA) token for authentication.
1, via encrypted SOAP messages.
3, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
1, via unspecified vectors
4," via vectors related to """"downloading graphic files from the bulletin board system."""""
4, via a crafted mim file.
0, via invalid URLs that trigger creation of error pages.
4," via a Trojan horse .exe file in a folder selected by the """"Open containing folder"""" menu item."
3, via unspecified vectors.
0, via the type_name parameter to Members/ipa/createObject.
4," via """"dynamic SQL parameters."""""
1, via unknown vectors
1, by leveraging access to a Low integrity process
2, via an application that uses a crafted length parameter in a request to the pvrsrvkm device.
2, via an application that triggers kernel memory corruption using crafted user data to the pvrsrvkm device.
3, via unknown vectors.
2, via the logoutExitPage parameter.
4, via a crafted Administration Console request.
4, via unspecified vectors.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-1308.
2, via the code parameter.
4, via a crafted ZIP archive.
0, via vectors that trigger an Unknown Error document
3, via unspecified vectors.
4, via a crafted REGION record in a PICT file.
3, via unknown vectors.
4, via a crafted Notes RPC packet.
1, via vectors associated with HTML e-mail messages
2, via unknown vectors
4, via unspecified vectors.
2, via the (1) Language parameter to Pages/login.aspx
1, via vectors related to float rendering.
4, via vectors involving blobs.
1, via vectors related to the ruby element and Cascading Style Sheets (CSS) token sequences.
4, via unknown vectors.
4, via vectors involving (1) a navigation error or (2) an interrupted load.
3, via unknown vectors.
4, via vectors involving a redirect and a manual reload.
4, via a crafted HTML document.
2, via the htmlpluginelement.cpp plugin.
4, via a large integer in the first argument to the cal_from_jd function.
2, via an invalid argument
4, via (1) plaintext data to the openssl_encrypt function or (2) ciphertext data to the openssl_decrypt function.
3, by accessing an ftp:// URL during use of an HTTP proxy with the FTP wrapper.
4, via a ziparchive stream that is not properly handled by the stream_get_contents function.
5, via a malformed archive file that triggers errors in zip_fread function calls.
2, by entering an unspecified button sequence at boot time.
0, by leveraging write access to /dev/sequencer.
0, by leveraging write access to /dev/sequencer.
2, via the chng_uid parameter.
2, via the (1) sender_name or (2) sender_email parameter in a Feedback action to modules.php.
3, by composing FAC_NATIONAL_DIGIS data that specifies a large number of digipeaters
4, via a blog title.
2, via the searchText parameter.
2, via unknown vectors related to Administration.
4, via a request containing crafted parameters.
4, via a request containing crafted parameters.
4, via unspecified vectors.
2, via the (1) limit or (2) offset field.
2, via the layer parameter.
2, via the username field
4, via a crafted TGS request that triggers an error other than the KRB5_KDB_NOENTRY error.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
0, via the s parameter to (1) a_viewusers.php or (2) keysearch.php; and allow remote authenticated administrators to execute arbitrary SQL commands via the (3) id or (4) start parameter to pending.php
0, via the aid parameter
2, via the pdfa parameter.
2, via the pid parameter to an unspecified component
2, via unspecified vectors
1, via unspecified vectors related to a crafted POST request. NOTE: some sources have reported this issue as SQL injection
4, via (1) a long username in an On_FC_CONNECT_FCS_LOGIN packet
1, via crafted (1) On_FC_MISC_FCS_MSGBROADCAST and (2) On_FC_MISC_FCS_MSGSEND packets
4, via ..\ (dot dot backslash) sequences to TCP port 12401.
4, via ..\ (dot dot backslash) sequences in opcodes (1) 0xa and (2) 0x17 to TCP port 12397.
1, via crafted (1) ListAll
4," via (1) a trailing """"."""""
4, via .. (dot dot) sequences in admin-defined commands.
4, via a %2f..%2f (encoded slash dot dot slash) in a URI.
4, via a crafted .pcap file.
2, via unspecified vectors
4, via unspecified vectors
0, via vectors involving the (1) UnAssignFunctionalRoles
1, via directory traversal sequences in the GUID parameter in an upload request to FileUploadHandler.ashx.
2, via certain flags arguments
4, via a long UTF8 string that is used in an fnmatch call with a crafted pattern argument
4, via (1) the reportName or (2) uniqueId parameter to CoreViewerInit.js
5, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
2, via unknown vectors in (1) Crm/Controller.php
0, via the q parameter in a list action.
4, via ..%2F (encoded dot dot) sequences in the url parameter.
0, by reading the configuration file.
5, by visiting recreate.php and then visiting index.php.
4, via a crafted MP4 file.
4, via unspecified vectors.
4, via a crafted uri parameter in a printer-url.
5, via a crafted profile-time parameter in a printer-url.
4, via a crafted profile-name parameter in a printer-url.
4, via a crafted file-date-time parameter in a printer-url.
4, via a crafted driver-version parameter in a printer-url.
4, via a crafted core-package parameter in a printer-url.
4, via a crafted client-file-name parameter in a printer-url.
4, via a crafted iprint-client-config-info parameter in a printer-url.
4, via a crafted op-printer-list-all-jobs parameter in a printer-url.
4, via a crafted op-printer-list-all-jobs cookie.
1, via crafted header length variables.
4, via unspecified vectors.
5, via (1) a long SRC property value to the PPSViewer ActiveX control in PPSView.ocx before 1.0.0.7 or (2) a long Title property value to the UOMWV_Helper ActiveX control in UOMWV_HelperActiveX.ocx before 11.5.0.1.
1, via unspecified vectors
4, via the PATH_INFO to projects/hg-helloworld/news/.  NOTE: some of these details are obtained from third party information.
3, via unknown vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via shell metacharacters in the -e argument.
4, via a crafted ABC file.  NOTE: some of these details are obtained from third party information.
0, via format string specifiers in data used in DKIM logging
4, via a crafted (1) TAR archive or (2) ISO9660 image.
5, via a PSP_COMP_RLE (aka RLE compression) image file that begins a long run count at the end of the image.  NOTE: some of these details are obtained from third party information.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2010-4543.
1, via unspecified network traffic.
4, via unspecified vectors.
4," via a crafted SVG document that leads to a """"stale pointer."""""
1, via crafted dimensions.
4, via a crafted HTML document containing a FORM element.
1, via crafted JavaScript code that calls the removeChild method during interaction with a FRAME element.
3, via unknown vectors.
3, via unknown vectors.
4, via a crafted HTML page.
1, via vectors related to incorrect integer calculations during float handling.
3, via unknown vectors.
1, via vectors related to extensions.
1, via vectors related to extensions.
3, via unknown vectors.
3, via unknown vectors.
3, via vectors related to extensions.
4, via a cn=changelog search.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a mount.ecryptfs_private mount with a mismatched uid.
3, via unspecified vectors.
0, via the origurl parameter to a (1) view script or (2) login script.
4, via unspecified vectors.
4, via a TCP connection
2, via an application involving a popup control and a custom DependencyProperty property
2, via an application involving (1) subscriptions to an INotifyDataErrorInfo.ErrorsChanged event or (2) a TextBlock or TextBox element.
4, via a crafted length field in a packet.
4, via vectors related to a received action.
4, via a long mode field.
1, via crafted packet content accompanying a (1) DATA or (2) ERROR opcode.
4, via a (1) large or (2) invalid opcode field
4, via a long syslog packet
3, via unknown vectors.
4, via unspecified vectors.
4, via a request containing crafted parameters.
4, via a crafted request
4, via a 0x0A0BF007 packet.
4, via vectors involving unspecified requests
4, via a post
2, via an invalid request.
4, via a crafted font in a PDF document.
4, via unspecified vectors.
4, via unspecified vectors.
1, via crafted TCP message traffic.
1, via crafted TCP message traffic to (1) PRProficyMgr.exe in Proficy Server Manager
4, via a crafted policy that triggers creation of a long port list.
3, by causing a negotiation failure
5, via . (dot) characters in a pathname that is used for a file transfer in an Internet game.
5, via a chfn command that changes the real (aka Full Name) field
0, via a long pathname for a UNIX socket.
4, via a crafted table name that triggers improper HTML rendering on a Tracking page
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
0, via malformed HTML markup
2, via an attribute of a (1) P
5, via a Trojan horse DLL in the current working directory
4, via a parameter in a data source
4, via a Trojan horse DLL in the current working directory
4, via a crafted spreadsheet
4," via a """"trial and error"""" attack"
4, via a crafted TrueType font file
5, via a Trojan horse DLL in the current working directory
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted STYLE element in an e-mail message.
2, via an unspecified request to UDP port 2638
4, via an ICMPv6 Echo Request packet containing a Hop-by-Hop (HBH) extension header (EH) with a 0x0c01050c value in the PadN option data
1, via crafted ICMP packets
4, via a crafted message.
4, via unknown vectors.  NOTE: as of 20110510
3, via unspecified vectors.
4, via a (1) CP_RIGHTSOURCE or (2) bdclient_Inventive cookie to the default URI under inventivex/managetraining/
5, via (1) a CP_ENLARGESTYLE cookie to the default URI under inventivex/managetraining/ or (2) unspecified input to authenticate_ad_setup_finished.cfm.
4, via unspecified vectors.
1, by leveraging access to a privileged account.
0, via an arbitrary parameter value to a .action URI
4, via a long string in the argument.  NOTE: some of these details are obtained from third party information.
3, via unknown vectors.
4, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified vectors
4, via a crafted tSAC chunk
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
3, via unspecified vectors.
1, via unspecified vectors related to rcsL substructures
5, via a crafted subrecord in a DEMX chunk
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted GIF file.
4, via unspecified vectors.
4, via a long subject line in an e-mail message that is represented in a .eml file.
3, via vectors involving a leading and trailing & (ampersand) character
2, via certain parameters to (1) Admin/frmSite.aspx
4, via a direct request for the (1) Admin/
4, via a crafted string
5, by creating a /var/lib/chromeos-aliases.conf file and placing commands in it.
4, via unspecified vectors.
0, via the expand parameter
2, via the arsc_link parameter.
2, via the (1) arsc_user parameter to base/admin/edit_user.php
4, via a symlink attack on (1) a /tmp/fab.*.tar file or (2) certain other files in the top level of /tmp/.
2, via unspecified vectors that trigger a heap-based buffer overflow.
4, via a crafted file
2, via the utimeout option.
4, via a crafted call.
4, via a crafted call.
4, via a crafted packet to TCP port 20222
2, via unknown vectors
2, via unknown vectors
4, via unspecified vectors.
3, via unspecified vectors.
4, via unknown vectors.
2, via unknown vectors related to Analytics Server.
1, via unknown vectors related to Receivables.
4, via unknown vectors.
2, via unknown vectors related to Administration.
3, via unknown vectors.
2, via unknown vectors related to Outside In Filters.
2, via unknown vectors related to Attachments / File Upload.
2, via unknown vectors related to Search.
1, via unknown vectors related to Purchasing.
1, via unknown vectors related to Global Payroll Core.
3, via unknown vectors.
1, via unknown vectors related to Payables.
2, via unknown vectors related to ePerformance.
1, via unknown vectors related to LiveUpgrade.
2, via unknown vectors related to Trusted Extensions.
1, via unknown vectors related to xscreensaver.
2, via unknown vectors related to Zones.
2," via unknown vectors related to """"Oracle validated."""""
2, via unknown vectors related to JavaServer Pages.
0, via unknown vectors related to Email Marketing.
2, via unknown vectors related to Delegated Administrator.
4, via a .usr (aka Virtual User script) file with long directives.
5, via a crafted length value in an a packet that triggers a heap-based buffer overflow
4, via unspecified vectors.
2, via an AT phonebook transfer.
0, via vectors involving SVG fonts.
4, via vectors related to text selection.
0, via vectors involving SVG use elements.
2, via unknown vectors
1, via unknown vectors
2, via an SVG element containing an HTML-encoded entity.
3, via unknown vectors.
3, via unknown vectors.
1, via crafted ICMPv6 packets.
4, via a fragmented IPv6 packet in which the Router Advertisement (RA) message is contained in the second fragment
4, via a crafted opcode 13 request that triggers use of the LaunchCompoundFileAnalyzer class to send request data to the System.getRunTime.exec method.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unspecified vectors.
5, via a crafted .dir media file.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted (1) .grd or (2) .abr file
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
1, via vectors related to the loading of modules from different domains.
3, via vectors involving the cfform tag.
2, via directory traversal sequences in a request.
2, via the arsc_message parameter.
4, via shell metacharacters in the (1) --vmlinux
4, via a .. (dot dot) in the --save argument
4, via a crafted --session-dir argument in conjunction with a symlink attack on the opd_pipe file
4, via a /.\../\../\ sequence in a path.
0, via format string specifiers in unspecified string fields
2, via unspecified vectors
5, via a crafted command line.
2, by triggering creation of PTE pages.
4, via (1) the query string to the com_contact component
4, via a link.
4, via a malformed .eds file.
0, via invalid JSON data
4, via a symlink attack on an unspecified file in /tmp/.
4, via a crafted write operation
4, via a long location parameter to the getxml program
4, via a crafted Call ID
2, via unspecified vectors
1, via crafted parameters to web forms
2, via an IPv4 packet
0, via malformed SIP packets on a NAT interface
4, via network traffic
4, via a malformed HTTP response to a request for service installation
4, via a crafted Real Media file.
4, via a crafted AVI media file.
4, via a long argument.
4, via a UNC share pathname in the MPlayerPath parameter.
1, via crafted input fields
4, via a long CSEC HTTP response header.
4, via a crafted Content-Length HTTP header
4, via a long id parameter in a (1) String or (2) Int tag in a FotoSlate Project (aka PLP) file.
4, via vectors involving an SVG filter
4, via a crafted web page that is visited with Google Chrome or Mozilla Firefox
4, via a crafted web page that is visited with Google Chrome or Mozilla Firefox
4, via a crafted web page that is visited with Google Chrome or Mozilla Firefox
0, via an unspecified parameter
0, via an unspecified parameter
4, via a crafted web page.
2, via unknown content on a web page
4, via a non-array object that contains initial holes.
2, via vectors involving a path on which many characters are drawn.
2, via unknown content on a web page
2, via unknown content on a web page
3, via vectors related to selecting a text node
2, via web script that moves a (1) AUDIO element or (2) VIDEO element between windows.
4, via a gradient with many stops
0, via vectors involving SVG animation.
3, via vectors related to form layout.
4, via unknown vectors.
4, via unknown vectors.
4, via a large table
4, via a SELECT element that contains many OPTION elements.
3," by using """"injected script"""" to set the SRC attribute of an IFRAME element."
2, via unknown content on a web page
2, via unknown content on a web page
4, via a crafted web page that is not properly handled during a reload occurring after the opening of a popup of the Easy Sticky Note extension.
3, via vectors involving a Certificate Revocation List (CRL) file
2, via unspecified third party applications.
3, via vectors involving use of the :hover pseudo-class
2, via unknown content on a web page
2, via unknown content on a web page
2, via unknown content on a web page
2, via an HTML document that has an empty parameter value for an embedded Java applet.
1, by setting the FACE attribute of a FONT element within an IFRAME element after changing the SRC attribute of this IFRAME element to an about:blank value.
4, via a crafted table name.
0, by uploading an executable file.
2, via unknown vectors
2, via unknown vectors
4, via a crafted DNS domain name.
2, via the (1) Directory.Item.name or (2) Directory.Item.displayName parameter.
4, via a negative BYWEEKNO property in a weekly RRULE variable in a VCALENDAR attachment in an e-mail message.
4, via a crafted yearly RRULE variable in a VCALENDAR attachment in an e-mail message.
5, via a SIP packet with a Contact header that lacks a < (less than) character.
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors related to manipulation of a URL.
5, via unspecified vectors.
3, by trying to login to DOORS Web Access with a new user account that has never been used for a DOORS login.
4, via a crafted .lwp file.
1, via vectors related to a listing that shows nodes but lacks a JOIN clause for the node table.
2, via the user field.
2, via the username parameter to the passwd program (aka the user field to the Change Password page).
5, via a crafted s_ext_ctrls operation with a (1) V4L2_CID_RDS_TX_PS_NAME or (2) V4L2_CID_RDS_TX_RADIO_TEXT control ID.
4, via vectors related to OGC filter encoding.
4, via (1) the URI to includes/application.php
2, via the filename associated with the rename hint.
4, via a crafted DOC file that triggers an out-of-bounds read in the DOC sprm parser.
4, via shell metacharacters in a hostname obtained from a DHCP message.
0, via directory traversal sequences in an export type field
4, via an e-mail message that is not properly handled during certain hash calculations.
5, via .. (dot dot) sequences in a zip file.
4, via a glob expression with the GLOB_ALTDIRFUNC flag
2, via the spring-security-redirect parameter.
3, by sending a crafted message over TCP.
2, via unspecified vectors
0, via the action parameter to (1) the default URI or (2) includes/javascript.php
4, via a ..%2F (encoded dot dot slash) in the action parameter to the default URI.
3, via unknown vectors.
0, via a full pathname in an SRS OPERATION 4 CMD 5 request to /FSF/CMD.
4, via unspecified vectors.
4, via a \n (newline) character
3, via vectors involving (1) the empty trash implementation and (2) the Index Order (aka options_order) page
4, via unspecified vectors.
4, via a .. (dot dot) in the FILENAME parameter.  NOTE: this might overlap the US-CERT VU#543310 issue.
3, by using 179 as the source port of a packet.
1," via unspecified data associated with a """"true"""" authentication status"
4, via a modified request to the LSRoom_Remoting.doCommand function in gateway.php.
2, by placing it in a user-owned .htaccess file
1, via vectors related to (1) URI attributes and (2) the External Feed component
4, via a modified replyto parameter.
3, via vectors related to syslog logging.  NOTE: some of these details are obtained from third party information.
5, via a .. (dot dot) in the file parameter
4, via a request for the GL program log
3, via unknown vectors.
3, via vectors related to instantiation of the Pepper plug-in.
4, via vectors involving floating styles.
2, via unknown vectors that trigger an out-of-bounds write.
1, via vectors related to float removal.
1, via vectors related to media selectors.
1, via vectors related to resource caching.
1, via vectors related to HTML range handling.
4, via a crafted web site.
1, via vectors related to the frame loader.
3, via unspecified vectors.
1, via vectors related to display box rendering.
2, via vectors related to handling of the base URI.
4, via vectors involving a line box.
3, via vectors involving counter nodes.
0, via vectors involving custom fonts.
3, via vectors related to empty origins.
1, via vectors related to text searching.
4, via vectors involving uniform arrays.
1, via vectors related to the certificate cache.
1," via vectors related to """"unusual user interaction."""""
3, via vectors related to unload event handling.
4, via a crafted document.
1, via vectors related to the forward button.
4, via unspecified vectors.
1, via vectors related to plug-in handling.
1," via vectors related to """"ruby / table style handing."""""
1, via vectors related to the focus controller.
1, via vectors related to table styles.
4, via a crafted HTML page.
4, via vectors involving a text line box.
5, via vectors related to the Google V8 bindings.
2, via the sample .doc document that incorporates a user-defined toolbar.
4, via a .docx document with empty bullet styles for parent bullets.
4, via a certain sample document.
2, via complex graphics in a presentation.
2, via unspecified vectors that trigger an undefined value of a certain error field
0, via vectors involving the base variable
0, via an empty Itemid array parameter to index.php
4, via a large .xls spreadsheet with an invalid Value reference.
4," via a long command line argument. NOTE: this is only a vulnerability in limited scenarios in which tcptrack is """"configured as a handler for other applications."""" This issue might not qualify for inclusion in CVE."
2, via the backurl parameter.
5, via a negative size value in an ioctl call.  NOTE: this may be a vulnerability only in unusual environments that provide a privileged program for obtaining the required file descriptor.
4, via a modified PBS_O_HOST variable to the qsub program.
4, via a copy of a short string.
2, via the zorder parameter.
2," use the """"GTK_MODULES"""" environment variable to possibly execute arbitrary code."
2, via the _mbox parameter to the default URI.
4, via a parameter
4, via unspecified vectors.
4, via a URL in the initialURI parameter.
2, via the username parameter.
4, via a crafted SIPR stream.
4, via a local HTML document.
4, via a crafted QCP file.
4, via a crafted FactoryTalk Diagnostics Viewer (.ftd) configuration file
4, via unspecified vectors.
4, via a crafted packet to TCP port 22202.
4, via a crafted UDP packet.
4, via a crafted *FoomaticRIPCommandLine field in a .ppd file
1, via crafted mapfile data.
3, via unknown vectors.
2, via JavaScript code containing a large RegExp expression.
2, via an unspecified WebGL test case that triggers a memory-allocation error and a resulting out-of-bounds write operation.
0, by specifying an arbitrary filename in the MyCioScan.Scan.ReportFile parameter
4, via (1) the newtopic parameter in a WebCreateNewTopic action
3, via unknown vectors.
4, via vectors involving counter nodes
5, via vectors related to database handling.
3, via vectors related to path rendering.
4, via a crafted Matroska video (aka MKV) file.
3, via vectors related to subframe loading.
3, via vectors related to drag-and-drop operations.
2, via an empty X.509 certificate.
1, via vectors related to the handling of SVG values.
4, via vectors involving an SVG document.
0, via vectors involving SVG use elements.
1, via vectors related to multi-column handling.
4, via vectors related to quote handling.
1, via vectors related to the handling of class attributes.
1, via vectors related to the handling of table sections.
1, via vectors involving a flexbox (aka flexible box) in conjunction with the floating of elements.
0, via vectors involving SVG animation elements.
0, by leveraging an error in the plug-in loading mechanism.
1, via vectors related to the :first-letter pseudo-element.
4, via vectors related to the cross-fade function.
1, via vectors related to block splitting.
3," via vectors involving a """"magic iframe."""""
4, via a crafted OpenType file.
1, via vectors related to SVG clipping.
1, via vectors related to replacement of IFRAME elements.
3, via vectors related to run-in boxes.
1, via vectors related to line boxes.
1, via vectors related to the Google V8 bindings.
4, via unknown vectors.
1, via vectors related to pop-up windows.
3, via vectors related to the handling of SVG resources.
1, via vectors related to the handling of media.
5, via vectors related to style-application commands.
3, via vectors related to focus handling.
0, via vectors involving the script bindings
1, via vectors related to the floating of elements
3, via unspecified vectors.
5, via vectors related to the floating of elements
3, via vectors involving a STYLE element.
3, via vectors involving tables.
1, via vectors related to worker processes.
3, via unknown vectors.
2, via unknown vectors that trigger an out-of-bounds write.
0, by leveraging an error in the GTK implementation of the omnibox.
1, by leveraging an out-of-bounds write error in the implementation of sampled functions.
3, via vectors involving a malformed name for the font encoding.
3, via vectors related to the :first-letter pseudo-element.
1, via vectors related to the browser cache.
0, via vectors that trigger out-of-bounds write operations.
0, via an invalid encrypted document.
0, via vectors that trigger unknown function calls.
4, via canonical redirects.
2, via many crafted DMA requests that are denied by the IOMMU
4, via a long second argument to the ValidateUser method.
4, via a long string of white spaces at the beginning of the ~/.pam_environment file.
4, via a symlink attack on ~/.dmrc.
3, via unknown vectors.
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
3, via unspecified vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
3, via unknown vectors.
4, via a long (1) hostname or (2) port field.
2, via an opcode 0x6c request.
2, via an opcode 0x4c request.
4, via a (1) table name
4, via a file: URL in a message.
2, via the Content-Type header.
3, via shell metacharacters in mailing list tunable options.
0, via the addrlink parameter to shared/inc/forms/domain_info.php.  NOTE: CVE-2011-3197 has been SPLIT due to findings by different researchers. CVE-2011-5272 has been assigned for the vps_note parameter to dtcadmin/logPushlet.php vector.
3, via the (1) message body of a support ticket or unspecified vectors to the (2) DNS and (3) MX form
4, via a long TAG in a legacy syslog message.
4, via a symlink attack on (1) /tmp/hammer.log (aka the HH_LOG file) or (2) the REPORT_LOG file.
4, via a crafted NNTP command.
4, via a crafted disk image.
4, via a crafted FlashPix file.
4, via a crafted FLIC movie file.
4, via a crafted movie file.
4, via a crafted PICT file.
4, via a crafted font table in a QuickTime movie file.
4, via a crafted movie file with FLC encoding.
4, via a crafted movie file with JPEG2000 encoding.
1, via crafted TKHD atoms in a QuickTime movie file.
2, via an invitation note.
4, via a crafted Microsoft Word document.
4, via a crafted Excel spreadsheet.
1, by executing the vfs.file.cksum command for a special device
2, via an invalid srcfld2 parameter to popup.php
4, via a modified srctbl parameter.
4, via a long salt argument
4, via a sequence of crafted ICMP packets
1, via crafted TCP packets to port 4786
4, via a fragmented GRE packet
1, via unspecified vectors
1, via unspecified vectors
2, via the User-Agent HTTP header
1, via crafted traffic to TCP port 443
1, via unspecified vectors
2, by sending crafted RTSP packets over TCP
4, via a crafted WRF file.
4, via unspecified parameters.
5, via a Link State Update message with an invalid IPv6 prefix length.
2, via trailing zero values in the Link State Advertisement (LSA) header list of an IPv6 Database Description message.
5, via (1) a 0x0a type field in an IPv4 packet header or (2) a truncated IPv4 Hello packet.
1, via an invalid Link State Advertisement (LSA) type in an IPv4 Link State Update message.
5, by sending a crafted BGP UPDATE message over IPv4.
4, via a crafted PDF document that uses flate compression.
2, via the Referer HTTP header.
4, via a crafted CMD_INSERT_ORDER command.
1, via vectors related to (1) NAME
4, via (1) a crafted BMP file with RLE compression or (2) crafted dimensions in a BMP file.
4, via a crafted Client-To-Client Protocol (CTCP) request
2, via the PATH_INFO
4, via a .. (dot dot) in the action parameter
2, via the (1) os
4, via a Trojan horse Lua script in an unspecified directory.
2, via the num parameter in a browse action to index.cgi.
2, via an RPC packet
2, via the (1) id
1, by sending an AUTHINFO USER command without sending an additional AUTHINFO PASS command.
2, via an applet whose origin has the same second-level domain
2, via an ISAKMP message with an invalid KEY_LENGTH attribute
4, via unknown vectors.
4, via unspecified vectors.
3," via vectors related to """"the web page to be output."""""
4, via a crafted feed
4, via a crafted attribute length field in a class file
0, via unspecified actions related to Extended Validation and loading content from trusted sources in an unspecified sequence that causes the address field and page information dialog to contain security information based on the trusted site
3, via the (1) informixserver
2, via the real_name parameter.
2, via the (1) country1
2, via the page parameter.
4, via a Trojan horse DLL in the current working directory
5," via a crafted web site that leverages an unspecified """"binary behavior"""" in Internet Explorer"
4, via a crafted Publisher file that leverages incorrect handling of values in memory
4," via a file accompanied by a """"Content-Disposition: attachment"""" HTTP header."
5, via a long tel: URL that triggers a large size for the acceptance dialog.
3, via unspecified vectors.
4, via a crafted embedded Type 1 font in a document.
4, via a crafted font in a document.
4, via a crafted movie file with H.264 encoding.
4, via a crafted embedded font in a document.
1, via crafted DNS data.
4, via a crafted rdrf atom in a movie file that triggers a buffer overflow.
4, via a crafted PNG file.
1, via unspecified vectors
5, via a malformed capture file that leads to an invalid root tvbuff
4, via a crafted request to UDP port 48899
4, via a .. (dot dot) in an HTTP GET request.
4, via a malformed (1) mwc chart
5," via a crafted rna packet with a long string to TCP port 4446 that triggers (1) """"a memset zero overflow"""" or (2) an out-of-bounds read"
4, via a long command to port 11234
4, via a negative Content-Length field.
4, via a crafted NETB packet to UDP port 20034.
5, via long (1) domain
4, via (1) a long StyleTemplate element in a QUO
3, via shell metacharacters in the (1) BF
2, via the XF function
4, via a long request.
4, via an EIDP packet with a large size field
5, via a ..\ (dot dot backslash) in an HTTP request.
4, via a negative or large Content-Length value.
4, via a request with a trailing (1) space or (2) %2e (encoded dot).
2, via unknown vectors related to Authentication.
1, via unknown vectors related to Messaging Server.
1, via unknown vectors related to BI Platform Security.
2, via unknown vectors related to Process File System (procfs).
0, via unknown vectors related to Authentication.
2, via unknown vectors related to User Interface.
2, via unknown vectors related to User Interface.
2, via unknown vectors related to Candidate Gateway.
2, via unknown vectors related to eProfile.
2, via unknown vectors related to Talent Acquisition Manager.
2, via unknown vectors related to eDevelopment.
1, via unknown vectors related to Zones.
1, via unknown vectors related to Outside In Filters.
2, via unknown vectors related to Kernel/Performance Counter BackEnd Module (pcbe).
1, via unknown vectors related to Administration.
1, via unknown vectors related to Calendar Server.
3, via unknown vectors related to Session.  NOTE: this CVE identifier was accidentally used for a Concurrency issue in Java Runtime Environment
2, via unknown vectors related to Calendar Server.
1, via unknown vectors related to Calendar Server.
4, via a long tHPRAgentName parameter in an fmHttpPostRequest OpenForm action to WebAdmin.nsf.
0, via the PanelIcon parameter in an fmpgPanelHeader ReadForm action to WebAdmin.nsf.
0, via the action parameter
4, via a direct request to the /server URI
4, via a Resource Record (RR) with an unknown type containing input that is longer than a specified length.
4, via a crafted row that triggers an improperly constructed confirmation message after inline-editing and save operations
4, via a (1) database name
4, via (1) a web page title
4, via a negative value in a label_len value.
4, via unspecified vectors.
3, via vectors involving a (1) HTML entity or (2) display name.  NOTE: some of these details are obtained from third party information.
4, via a symlink attack on /tmp/.cesf.
4, via (1) a crafted ASF file
3," via vectors related to """"recursion level"""" and (1) libclamav/bytecode.c and (2) libclamav/bytecode_api.c."
3,use this flaw to
4, via a crafted alias (aka nickname).
4, via (1) a modified FolderRights parameter to doccab/doclist.jsp
4, via an array-typed js_frame parameter to phpmyadmin.css.php
1, via crafted text with Shift JIS encoding.
3, via unknown vectors.
0, via vectors involving HTTP 0.9 errors
4, via (1) the siteid parameter to logbook.asp
2, via the (1) fname
4, via (1) the txtConferenceID parameter to HostLogin.asp
5, via (1) the g parameter to Conference/Audio/AudioResourceContainer.asp or (2) the txtConferenceID parameter to Login/HostLogin.asp.
2, via the BoxSerial parameter.
4, via a Trojan horse mfc70enu.dll or mfc80loc.dll in the current working directory.
4, via a Trojan horse dwmapi.dll
1, by reading the NetSaro.fdb file.
5, by appending a %00 character to a URL.
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
5, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
5, via a direct request to a .php file
1, via crafted array parameters in a request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
5, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
5, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a direct request to a .php file
4, via a crafted date-time string in a .ics attachment.
4, via a crafted DVRobot.dll file in a manifest directory on a web server.
2, via the file name
2, via the search_string parameter.
2, via an uploaded file with a crafted file name.
0, via the application_name parameter in a save action.
5, by uploading a PHP file
2, via an AVI file with a crafted value for (1) the number of streams or (2) the size of the RIFF INFO chunk
2, via the Referer header to (1) admin/login.php and (2) admin/404.php; the (3) q parameter to search.php; the (4) theme_name parameter to theme_settings.php
4, via a .. (dot dot) in the preview parameter to index.php.
2, via the (1) u parameter to fp.php
1, by setting the dXNlcm5hbWU cookie.
2, via the uid parameter.
4, via (1) a double-encoded key parameter in the URI in 2.7.x
4, via a crafted SNMP packet.
2, via the s parameter.
2, via the cpage parameter.
2, via the s parameter.
2, via the cpage parameter.
2, via the s parameter.
2, via the s parameter.
2, via the s parameter.
2, via the s parameter.
2, via the s parameter.
2, via the cpage parameter.
2, via the s parameter.
3, via the PATH_INFO to index.php.
2, via the PATH_INFO to index.php.
2, via the s parameter.
2, via the cpage parameter.
2, via the PATH_INFO to index.php.
2, via an application that calls the FrameworkListener::dispatchCommand method with the wrong number of arguments
4, via unspecified vectors.
4, via vectors related to worker process initialization.
3, via vectors related to media buffers.
4, via vectors related to counters.
1, via vectors related to stale Cascading Style Sheets (CSS) token-sequence data.
3, via vectors related to editing operations in conjunction with an unknown plug-in.
3, via unknown vectors.
3, via vectors related to video source handling.
5, via a crafted stream.
4, via a crafted stream.
1, via vectors related to shader variable mapping.
1, via vectors related to editing.
1, via vectors related to bidirectional text (aka bidi) handling.
4, via unspecified vectors.
4, via unspecified vectors.
1, via vectors related to SVG filters.
4, via vectors related to Range handling.
4, via vectors related to PDF fonts.
4, via unknown vectors.
0, via vectors involving animation frames.
1, via vectors related to glyph handling.
1, via vectors related to DOM selections.
4, via vectors related to a navigation entry and an interstitial page.
3, via unknown vectors.
1, via vectors related to DOM handling.
4, via crafted vp3 data.
4, via vectors related to a crafted image size.
4, via vectors related to an uninitialized block index
1, via crafted Smacker data.
1, via crafted Supplemental enhancement information (SEI) data
1, via crafted Dirac data.
4, via a crafted value in the reference pictures number.
4, via vectors that trigger a large amount of database usage.
2, via vectors that trigger the aborting of an IndexedDB transaction.
0, via vectors involving PDF documents.
3, via unknown vectors.
0, via vectors that trigger a crash of a utility process.
4, via vectors related to error handling for Cascading Style Sheets (CSS) token-sequence data.
4, via a crafted certificate.
0, via vectors involving Cascading Style Sheets (CSS) token sequences.
3, via vectors related to layout of SVG documents.
1, via vectors related to mousemove events.
4, via unspecified vectors.
2, via an invalid bitstream in a Chinese AVS video (aka CAVS) file
2, via an invalid bitstream in a Chinese AVS video (aka CAVS) file
4, via a long filename in a response to a LIST command
4, via unknown vectors.
2, via the (1) commentemail
3, via unknown vectors.
4, via a URL in the abspath parameter.
3, via vectors related to cookies.
1," via vectors related to """"web form entries."""""
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified functions.
2, via unknown network traffic.
1, via crafted TCP packets.
4, via unspecified vectors.
4, via a crafted feed.
4, via a crafted string.
4, via unspecified vectors.
2, via unspecified vectors
4, via a crafted WRF file.
2, via an unspecified closing sequence
2, via unspecified vectors
1, via malformed UDP traffic on port 465
1, by making authentication attempts that exceed the configured limit
1, via SNMP requests
4, via unspecified vectors.
2, via the id parameter.
4, via a symlink attack on a temporary lock file
4, via a crafted ASF packet.
1, via invalid data in unspecified fields of a project file.
4, via a crafted packet.
4, via a long string in an RPC request to TCP port 4592.
1, by leveraging database write access.
4, via a crafted packet to TCP port 12401.
4, via a crafted 0x15 (aka Remove File) operation for a file with a long name.
4, via a Trojan horse DLL in the current working directory.
2, via the postpreservationdata parameter.
5, via a bind system call with a long pathname for a UNIX socket.
4, via a crafted value.
2, via the PATH_INFO.
2, via an empty password.
4, via a crafted username.
1, via vectors related to the (1) quick_outI1_continue and (2) quick_outI1 functions.
4, via an _debug command.
0, via the orderby parameter (aka sortby variable) in a query_engine action to cmd.php
4, via a zero-length string that triggers a heap-based buffer overflow
5, by making a large number of connections until the overflow occurs and an ID of another user is provided.
4, via a malformed packet.
4, via a symlink attack on ~/.Xauthority.
1, via XML data containing external entity references
1," via vectors related to """"filters/arguments on certain types of views with specific configurations of arguments."""""
4, via a .. (dot dot) in the service_name argument to the pam_start function
3, via vectors involving an error that occurs after an FTP data transfer.
4, via a crafted 0x2f packet.
1, via vectors related to save
4, via a Trojan horse DLL in the current working directory
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
4, via a crafted login request.
4, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via crafted form data.
4, via a long filename parameter in an uploadfile action to Default.asp.
1, via crafted form data.
4, via a crafted alias (aka nickname) in a /me event
2, via the project parameter to teamserver/faces/home.jsp.
4, via (1) an e-mail address field or (2) a cookie
3, via vectors involving image files
3,upload arbitrary RPM files. Affected releases are SUSE open build service prior to
2, via unspecified vectors
4, via a crafted client-file-name parameter in a printer-url
4, via a long realm field
4, via a crafted EnteredAttrName parameter
4, via a long e-mail address in an Address Book (aka .NAB) file.
4, via long packets.
4, via a crafted application
4, via a crafted attributes-natural-language field.
3, via shell metacharacters in the (1) pid1 or (2) pid2 parameter in a stop_remote_support action.
4, via a crafted oozimsrememberme cookie.
2, via the cookieName variable.
4, via a crafted document.
4, via a crafted document.
4, via a crafted PDF document.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via a crafted QCELP stream.
4, via a malformed AAC file.
4, via unspecified vectors.
4, via unknown vectors.
4, via a crafted sample size in a RealAudio file.
4, via a crafted sample height.
3, via unknown vectors.
4, via a crafted RTSP SETUP request.
2, via an invalid codec name.
1, via crafted channel data.
4, via a crafted length of an MLTI chunk in an IVR file.
4, via a crafted width value in an MPG file.
4, via a malformed header in an MP4 file.
1, via crafted video dimensions in an MP4 file.
4, via a crafted MP4 file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse executable file in a directory that is accessed for reading an extensionless file
4, via (1) the group parameter to goform/AddGroup
1, via unspecified vectors
4, via (1) a crafted company name
2, via an AT phonebook transfer.
4, via a crafted name of an object within a more object on a wiki page.
4, via unspecified vectors.
2, via the (1) sort or (2) show parameter.
4, by visiting a user-context page.
1, via vectors involving (1) Flash Video (aka FLV) files and (2) YouTube videos.
1, via vectors related to URL encoding.
4, via a series of crafted ratings operations.
4, via a series of crafted comments operations.
4, via a wiki comment.
4, via a beep operation.
4, via a URL that specifies a zero wait time for message refreshing.
1, via crafted data.
2, via the section parameter.
0, by leveraging the guest role and making a direct request to a URL.
0, via vectors involving the (1) diff viewer or (2) screenshot component.
4, via a long response.
4, via a stanza with a publish tag that lacks a node attribute.
4, via (1) the username parameter in a setup action to admin/company.php
4, via unspecified vectors.
2, via the (1) from parameter to index.php or the (2) page_no parameter to recentchanges.php.
2, via the PATH_INFO to index.php in a (1) teachers.html or (2) teachers/ action.
2, via the lang variable.
4, via (1) the profile parameter to extensions/profiledevkit/content/content.profile.php
0, via the filter parameter to (1) symphony/publish/comments or (2) symphony/publish/images.  NOTE: this issue can be leveraged to perform cross-site scripting (XSS) attacks via error messages.  NOTE: some of these details are obtained from third party information.
4, via a URL in the wpabs parameter.
1, via crafted parameters.
1, via vectors related to color devices and (a) device id
1, via format string specifiers that are not properly handled when creating CGI error messages using the cgi_error API function.
5, via a series of requests involving the (1) curid or (2) oldid parameter.
1, via crafted base64 input that triggers an out-of-bounds read with a negative index.
4, via a .. (dot dot) in the (1) ln parameter to faces/javax.faces.resource/web.xml or (2) the PATH_INFO to faces/javax.faces.resource/.
4, via unspecified vectors.
4, via unspecified vectors.
5, via a delete_product_confirm action to product.php or (2) disable a product via a setflag action to categories.php.
2, via unspecified vectors
5, via a .. (dot dot) in the command_name parameter.
4, via unspecified vectors.
2, via the default_comment_display parameter in an update action.
4, via a non-initial .. (dot dot) in the file parameter
4, via a delete operation
2, via PHP sequences in a crafted order parameter in a pagelist directive
2, via the path info to (1) tiki-remind_password.php
2, via the path info to (1) tiki-admin_system.php
1, by leveraging access to a privileged account.
1, via vectors related to a hidden redirect URL.
4, via a crafted .plf (aka playlist) file.
4, via a flag=detect request.
3, by sending a UPnP AddPortMapping action in a SOAP request to the WAN interface
3, by sending a UPnP AddPortMapping action in a SOAP request to the WAN interface
5, by sending a UPnP AddPortMapping action in a SOAP request to the WAN interface
5, by sending a UPnP AddPortMapping action in a SOAP request to the WAN interface
4, via a crafted numrlvls value in a coding style default (COD) marker segment in a JPEG2000 file.
4, via unspecified vectors.
4, via a crafted web page.
4, via a crafted web page.
1, via crafted string input.
5, via unspecified parameters.
3, via unspecified parameters.
4, via a long string value in unspecified parameters.
4, via a long string value in unspecified parameters.
4, via a long serialid field in an _licensekey command
1, via crafted content in a (1) get_target_ocx_param or (2) send_target_ocx_param command.
2, via the Save method.
4, via a crafted packet to TCP port 50777
4, via a series of connections and disconnections on TCP port 1101
5, via a crafted op-code 3 packet.
5, via a crafted packet to TCP port (1) 12397 or (2) 12399.
0, via the func parameter to (1) ldap.php or (2) search.php.
0, via the rs parameter in a mailbox Drafts action.
2, via the (1) rs or (2) rsargs[] parameter in a mailbox Drafts action to the default URI.
4, via a .. (dot dot) in the (1) set or (2) module parameter to (a) OM/Core/Site/Admin/Application/templates_modules/pages/info.php
2, via the (1) address or (2) relativ_base_dir parameter to modules/mondialrelay/googlemap.php; the (3) relativ_base_dir
2, via the name parameter.
3, via arbitrary parameters.
2, via the description field of (1) a new vote or (2) the eject member proposal feature.
0, via the return_to parameter
4," via (1) """" (double quote) and newline characters in an org name or (2) """" (double quote) characters in an e-mail address"
1, via crafted input to the regexres and regex parameters.
0, via the onlyforuser parameter in an index action to index.php.
2, via unspecified vectors related to signing a petition.
2, via the PATH_INFO to admin/index.php.  NOTE: some of these details are obtained from third party information.
2, via the Referer HTTP header in a request to a post that does not exist.
2, via the mod parameter in a module action.
4, via a crafted offset_val value in an EXIF header in a JPEG file
2, via the message parameter in a gv_send action to index.php
2, via the URI.
2, via the image2 parameter.
2, via the id parameter in a timereturns action to index.php.
0, via the id parameter in a showEO action to index.php.
4, via unspecified vectors.
0, by visiting the history and deletion user interface.
4, via a redirection URL.
4, via a crafted batman-adv ICMP packet.
4, via a symlink attack on .rocksndiamonds/cache/artworkinfo.cache under a user's home directory.
4, via a crafted URL.
0, via the gname parameter (aka host groups name) to (1) hostgroups.php and (2) usergrps.php
1, via template parameters
4, via a symlink attack on a certain file in /tmp/.
2, via the page parameter.
2, via the i parameter.
4, via (1) a crafted database name
4, via (1) the username parameter to login-x.php
4, via shell metacharacters in an argument
4, via a .. (dot dot) in the fname parameter in a view action.
4, via a .. (dot dot) in a URI to (1) Splunk Web or (2) the Splunkd HTTP Server
2, via the (1) code or (2) raw BBcode tags.
1, via vectors related to an unspecified CGI program used with the Apache HTTP Server.
2, via the uid parameter to index.php.
2, via the (1) viewname parameter in a CalendarAjax action
2, via the SearchField parameter in a search action to (1) _partner_list.php
2, via the id parameter.
4, via unspecified vectors.
2, via unspecified content on a web page
4, via unknown vectors.
2, via unspecified content on a web page
4, via a crafted SWF file
4, via a crafted SWF file
4, via a .. (dot dot) in the filesignature in a GetPhotoStatus request.
2, via the (1) instname parameter to the VsiTestScan servlet and (2) name parameter to the VsiTestServlet servlet.
3, via unspecified vectors.
2, via the (1) SITE_NAME parameter to admin_index.php
2, via the (1) pixie_user parameter and (2) Referer HTTP header in a request to the default URI.
4, via a .. (dot dot) in the (1) lang or (2) result parameter.
4, via a ..\ (dot dot backslash) in an HTTP request.
4, via a .. (dot dot) in the _ID parameter to (1) catalog/shopping_cart.php or (2) catalog/content.php.
4, via a \.. (backslash dot dot) in the URL.
4, via a crafted RMD (aka rmdir) command.
3, by specifying a session ID.
0, via a long filename in a (1) RRQ or (2) WRQ operation.
4, via a .. (dot dot) in the Filename field of an RRQ operation.
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
1, via crafted input to a PHP script
4, via a direct request to wysiwyg/fckconfig.js.  NOTE: CVE disputes this issue because ASP is only used in a JavaScript comment.
1, via crafted input to a PHP script
0, via the login parameter to preferences.html.
1, via unspecified vectors
1, via crafted URL parameters
2, via the host parameter.
4, via a crafted IDB file
4, via a pathname in the URI.
4, via a crafted size value in a packet.  NOTE: it was originally reported that the affected product is HP Diagnostics Server
5, via a crafted request containing a large value in a length field.
2, via the username parameter.
2, via the (1) sortfield
2, via the id parameter.
4, via a .. (dot dot) in the controller parameter to index.php.
2, via the service parameter.
2, via the (1) var1 and (2) keyword parameters.
4, via a .. (dot dot) in the var1 parameter.
2, via the id parameter in a fnd_home action to index.php.
2, via the (1) language[]
2, via the templatefile parameter to (1) submitticket.php and (2) downloads.php
2, via the str parameter.
2, via the str parameter.
2, via an invalid action and a ../ (dot dot slash) in the templatefile parameter.
2, via the PATH_INFO to (1) index.php
4, via unspecified vectors.
4, via (1) snippets in a user comment
2, via the (1) contract parameter in a results action and (2) imm parameter in a show action to index.php.
2, via the login_username parameter.
2, via the user parameter to process.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) p parameter to redirect.php and (2) box parameter to includes/TrueColorPicker/index.php
5, by uploading a file with an executable extension
0, via the category_id parameter to index.php.
2, via the (1) listing_title
4, via a ..%2f (encoded dot dot) in the file parameter in a download action.
4, via unspecified vectors.
4, via a request for a crafted URI.
4, via a certificateslist cookie to notification@/.
1, via crafted song message data in an Impulse Tracker (IT) file.  NOTE: some of these details are obtained from third party information.
4, via a MODBUS 125 function code to TCP port 502.
4, via a malformed .NET RPC packet on TCP port 58723.
1, via crafted requests to TCP port 4840.
4, via a crafted project (aka .pra) file.
4, via a crafted HTTP request.
2, via an unspecified command in an HTTP request.
2, via the username field.
4, via a SELECT statement with a ROWNUM condition involving a subquery.
1, by sending many openwire failover:tcp:// connection requests.
2, via the HTTP_REFERER header to (1) components/com_content/views/article/tmpl/form.php
2, via the PATH_INFO.
3, via access to /proc/interrupts.
3, via access to /dev/pts/ and /dev/tty*.
2, via the page parameter.
4, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
2, via the cm_group parameter.
0, via the PATH_INFO parameter to (1) index.php and (2) loader.php.
3, by changing a nickname while in an XMPP chat room.
2, via unknown attack vectors.
2, via the (1) subgroup or (2) conf_group parameters.  NOTE: this vulnerability might require a user-assisted attack or a bypass of a CSRF protection mechanism.
2, via the user_field parameter.
2, via the user_include parameter.
4, via a ..%2f (encoded dot dot slash) in the type parameter.
2, via the id parameter.
2, via the lang parameter.
4, via a URL in the forward parameter.
1, via vectors related to the use of the yaml.load function instead of the yaml.safe_load function
2, via the (1) s or (2) p parameters to index.php.
4, via unspecified vectors.
2, via the QUERY_STRING to template placeholders
4, via unspecified vectors.
4, via a TreeMultiselectField that includes admin groups when adding a user to the selected groups.
5, via a crafted cookie in a user comment submission
4," via (1) a trailing . (dot) or (2) certain """"$index_allocation"""" sequences in a request."
4, via a crafted IPC packet to TCP port 20101.
4, via a .fdx or .fdxt file with long (1) Word
4, via a long request to TCP port 4659.
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension using the upload action to index.php
4, via a crafted PnSize value in a MOV file.
4, via a large size value in the packet header
4, via (1) a crafted Content-Length in an HTTP POST or (2) an invalid HTTP request method.
4," via shell metacharacters in the PINGADDRESS parameter for a """"u"""" action."
0, via the cID parameter to a statusconfirm action in admin/customers.php and (2) grant permissions to users via the cID parameter to a save action in admin/accounting.php.
2, via the status parameter.
2, via the PATH_INFO to the search program
2, via the config parameter.
4, via (1) the tag parameter to editTag.yaws
2, via the name parameter to index.php.  NOTE: some of these details are obtained from third party information.
2, via unspecified vectors related to the profiler.
3, via the (1) entry parameter to delete.php or (2) category parameter to index.php.
2, via unspecified vectors
2, via the (1) dfuserid and (2) dfpassword parameters.  NOTE: some of these details are obtained from third party information.
4, via a crafted 0x87342000 IOCTL request to the WMDriver device.
0, via the username parameter to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the (1) username and (2) password parameters to login.php
2, via the config parameter to (1) nalozi_naslov.php and (2) widget.dokumenti_lista.php.
2, via the (1) d parameter in a blocks action and (2) post_id parameter in an edit-post action to index.php.
2, via the instructors parameter.  NOTE: the original disclosure also mentions the section_title parameter
4, via a long string in an MP3 file
2, via the page_info_message parameter.
2, via the style parameter.
2, via the tableid parameter.  NOTE: some of these details are obtained from third party information.
3, by uploading a file with an executable extension using (1) uploadify/upload_admin_avatar.php or (2) uploadify/upload_profile_avatar.php
4, via a long response to a download request.
3, by specifying a non-existent directory using \ (backslash) characters in an HTTP GET request.
4, via a crafted SmartType element
5, by submitting a crafted ticket
1, via vectors related to web messaging.
2, via the file name
4, via user_delete.php and other unspecified programs.
3, by uploading a file with an executable extension
5, via (1) the file name to incident_attachments.php; (2) unspecified vectors in link_add.php
2, via the (1) exc[] parameter to report_marketing.php
2, via the (1) start parameter to portal/kb.php; (2) contractid parameter to contract_add_service.php; (3) id parameter to edit_escalation_path.php; (4) unlock
3, via the (1) mode parameter to contact_support.php; (2) contractid parameter to contract_add_service.php; (3) user parameter to edit_backup_users.php; (4) id parameter to edit_escalation_path.php; the Referer to (5) forgotpwd.php
4, via a direct request using the save action
3, by uploading a file with an executable extension
4, via a URL
3, via unspecified vectors.
2, via the s2member_pro_authnet_checkout[coupon] parameter (aka Coupon Code field).
3, by uploading a file with an executable PHP extension
3, via unspecified vectors.
3, via unknown vectors.
1, via unknown vectors
2, via the (1) tableType or (2) blindTarget parameter to view.php
2, via unspecified vectors
4, via a crafted cs_anams parameter in a CONTENT_STORE_ADMIN_REQ packet.
2, via the id parameter.
2, via unspecified vectors
0, via the id parameter to index.php.
2, via the custom_text parameter.  NOTE: some of these details are obtained from third party information.
2, via the (1) searchType and (2) searchString parameters
2, via the id parameter.
4, via unspecified vectors.
0, via the SearchField parameter in a search action to (1) category_list.php
0, via the SearchField parameter in a search action to (1) _authors_list.php
0, via the hal parameter to (1) the data module in alumni.php; or the (2) lih_buku
0, via the storeid parameter to index.php.
2, via the catid parameter.
2, via the (1) zoneid or (2) scope parameter.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted .PST file.
4, via a crafted compressed file.
0, via vectors involving the HTTP TRACE method.
2, via the page parameter to (1) inc-options/deinstall_options.php
4, via a long response string.
2, via the language parameter.
4," via vectors related to """"usernames via AJAX."""""
3, by uploading a file with a double extension
2, via the (1) coursereportuiconfig[name] or (2) coursereportuiconfig[description] parameters to index.php.
2, via the (1) TopicID parameter to viewtopic.php
2, via the username parameter in a viewprofile action.
2, via the id parameter.
2, via the (1) start parameter to (a) tags.php
4, via a .. (dot dot) in the module parameter in an export_page action.
2, via the (1) tf_delegation
2, via the (1) tf_name
4, via a direct request to test.php
2, via the (1) sel_domain_id or (2) action parameter to obm.php; (3) tf_user parameter in a search action to group/group_index.php; (4) tf_delegation
4, via a symlink attack on /tmp/graph.dot.
2, via the selected document
5, by uploading a file with a (1) php5
2, via the (1) testaddr or (2) testpass parameter to auth-settings.php; (3) hostname
2, via the (1) ipaddress or (2) domain parameter to setup-network.php
4, via a Trojan horse ShellIntMgrPFMU.dll file in the current working directory
4, via a Trojan horse (1) Wintab32.dll or (2) CV11-DialogEditor.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
4, via a Trojan horse MFC80LOC.DLL file in the current working directory
4, via a Trojan horse ijl15.dll file in the current working directory
4, via a Trojan horse ztvunrar36.dll file in the current working directory
4, via a Trojan horse DLL in the current working directory
4, via a Trojan horse (1) DVBSKNLANG101.dll or (2) DvZediTermSrvInfo004.dll file in the current working directory
0, via the sub_group parameter
2, via the site parameter.
3, by uploading a file with an executable extension followed by a safe extension
4," via a .ASX file with a long URI in the """"ref href"""" tag.  NOTE: this issue exists because of a CVE-2007-0707 regression."
4, via a long string in a login sequence.
5, via a crafted file name in a LIST command response.
4, via a long string to the (1) USER
4, via a long string to the DriverName parameter.
2, via the id parameter.
2, via the scheduleID parameter.
4, via a long track name in an m3u playlist.
2, via the (1) src and (2) name parameters in a p2g project file.
5, via a long string in the title field in a bed file.
2, via the (1) id parameter to the admins (2) blocks
2, via the page parameter.  NOTE: some of these details are obtained from third party information. NOTE: this has been disputed by a third party.
3, via the cdwidgetid parameter.  NOTE: some of these details are obtained from third party information.
2, via the action parameter.  NOTE: the vendor disputes this issue
2, via the where_clause parameter to (1) index.php
2, via the (1) node parameter to nnm/mibdiscover; (2) nodename parameter to nnm/protected/configurationpoll.jsp
2, via the comment parameter.
2, via the item_id parameter.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
0, via the PATH_INFO parameter to (1) signup.php
0, via the slug parameter
0, via the slug parameter
2, via the domain parameter
3, via the SearchFor parameter.  NOTE: some of these details are obtained from third party information.
2, via the msg parameter.
2, via the (1) name and (2) msg parameters.  NOTE: some of these details are obtained from third party information.
2, via the unmount command to batchmnt.exe.
2, via the name parameter.  NOTE: some of these details are obtained from third party information.
2, via the notes parameter.
2, via the tcp_name_post_XXXXX parameter.
4, via a .. (dot dot) in the wpabs parameter to (1) app/options-view_log-iframe.php or (2) app/options-runnow-iframe.php.
4, via a ..%2F (encoded dot dot slash) in the theme parameter.
2, via the title field.  NOTE: some of these details are obtained from third party information.  NOTE: this might overlap CVE-2012-5452.
2, via the (1) user name or (2) password field.
2, via the (1) login[username] parameter to index.php
2, via the PATH_INFO to (1) index.php
2, via the id parameter.
2, via the active parameter.  NOTE: some of these details are obtained from third party information.
3, via unknown vectors.
0, via the id parameter to index.php.
4, via a .. (dot dot) in the filename parameter.
0, via the lang parameter to index.php.
2, via the path parameter to (1) comp.php
2, via the rub parameter.
3, via unknown vectors.
3, via unspecified vectors.
3, via unknown vectors.
4, via a long PRIO field in a message to UDP port 514.
2, via the ss parameter.
2, via the PATH_INFO.
2, via the (1) login parameter to sys/login/index or (2) memberLoginName parameter to sys/login/member.
1," via crafted """"Rows Per Strip"""" and """"Samples Per Pixel"""" values in a TIFF image file."
2, via the userId parameter.
2, via the hostname in a hypertext link.
2, via an external entity reference in a Java Architecture for XML Binding (JAXB) input
4, via a logged shell command.
0, via the url parameter in a lostpw action.
0, by supplying an authorization header.
2, via the (1) PATH_INFO
2, via the (1) twitter_id parameter related to the Twitter widget and (2) facebook_id parameter related to the Facebook widget.
2, via the (1) uniqcode or (2) isAdmin parameter to index.php; or the (3) PATH_INFO to lib/controllers/centralcontroller.php.
2, via the id parameter.
2, via the page parameter.
0, via the pageTitle parameter to admin/showReport.shtml.
2, via the CategoryID parameter.
2, via the server parameter.
2, via the xml_or_all parameter.
2, via the snum parameter.  NOTE: this has been disputed by a third party.
4, via a validation message.
0, via the vps_note parameter to dtcadmin/logPushlet.php.  NOTE: this issue was originally part of CVE-2011-3197
4, via a .. (dot dot) in the pkg parameter in a do_install action to dtc/.
4, via shell metacharacters in the dtcpkg_directory parameter in a do_install action to dtc/.
2, via the database_name parameter.
2, via the (1) afs_type
2, via the afs_bar_right parameter.
4, via a \n (newline) character in an HTTP header.
4, via a long trickle-up to (1) client/cs_trickle.cpp or (2) db/db_base.cpp.
0, via the IP parameter in a Run action.
4, via a request to cgi-bin/shutdown.cgi.
5, via (1) the ActionType parameter to Bug.php
2, via the rA array parameter.
2, via the (1) hesk_settings[tmp_title] or (2) hesklang[ENCODING] parameter to inc/header.inc.php; the hesklang[attempt] parameter to (3) inc/assignment_search.inc.php
4, via a long argument to the (1) cmdExport
4, via a pathname in the argument.
4, via a pathname in the first argument.
4, via a pathname in the first argument.
4, via a pathname in the argument.
4, via a pathname in the first argument.
4, via a long argument.
2, via the nick parameter.
4, via (1) the msg parameter to default.php or (2) the username parameter to chat_form.php.
2, via the role parameter to users/create/
4, via (1) the referer parameter to index.php
4, via certain admin_ parameters.
4, via (1) the story_url parameter to add_story.php
4, via a cms_username cookie.
4, via (1) the poll_id parameter to customizer.php or (2) the customize parameter to poll.php.
4, via (1) the rcopy parameter to cgi-bin/admin/rubrikadmin.cgi
4, via a setup action.
2, via the action parameter.
2, via the (1) cdnvote_post_id or (2) cdnvote_point parameter.
2, via the id parameter.
4, via a .. (dot dot) in the id parameter.
2, via the data[text] parameter.
0, via the returnurl parameter to (1) register.aspx
2, via the (1) id or (2) password parameter to the password_reset program.
4, via a direct request
4, via a user save action.
4, via a user save action.
2, via the content parameter.
4, via a save_post action to admin/news/saveNEWS_ID/
4, via a large string of 0s.
4, via a symlink.
3, by drawing a 2x1 ellipse.
4, via a Trojan horse executable file in the current working directory
2, via JavaScript sequences in a URL
4, via a crafted TiVo (TY) file.
5, by modifying a certain type field within a scoreboard shared memory segment
4, via a crafted DCC RESUME request.
2, via the retryURL parameter.
4, via a series of fragmented RLC packets.
2, via the wicket:pageMapName parameter.
3, by connecting to the server and not finishing the (1) authorization phase or (2) map download
0, via vectors that trigger incorrect iocb management.
2, via an agent registration request without a security token.
4, via a long SerialNumber field in a property list.
5, via a Novell capture file containing a record that is too small.
2, via the boxToReload parameter.
2, via unknown vectors related to Web
4, via unknown vectors.
2, via unknown vectors related to Sales.
2, via unknown vectors related to ePerformance.
1, via unknown vectors related to Administration.
2, via unknown vectors related to Talent Acquisition Management.
1, via unknown vectors related to Content Server.
2, via unknown vectors related to Web
1, via unknown vectors
3, via unknown vectors related to ePerformance.
2, via unknown vectors related to Web
2, via unknown vectors related to Upgrade Change Assistance.
2, via unknown vectors related to Web
1, via unknown vectors related to Web
2, via unknown vectors related to Web
2, via unknown vectors related to ksh93 Shell.
1, via unknown vectors
1, via unknown vectors
1, via unknown vectors related to Kernel.
2, via unknown vectors related to Web Container.
2, via unknown vectors related to Web.
1, via unknown vectors related to Web.
2, via unknown vectors related to Web
2, via unknown vectors related to Shared Folders.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
4, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
1, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
2, via JavaScript sequences in a URL
2, via JavaScript sequences in a URL
4, via a crafted URL
4, via a series of crafted packets
5, via a crafted EMF image in an Office document
4," via a crafted HTML document that is not properly handled during a """"Print table of links"""" print operation"
0, via vectors involving crafted XAML glyphs
4, via a crafted application that binds an IPv6 address to a local interface
4, via a crafted URL.
4, via a Trojan horse DLL in the current working directory.
4, via a crafted HTML document.
2, via an embedded (1) JPEG or (2) PNG image object in a Symphony document that triggers a heap-based buffer overflow
3, via vectors related to an Asset Information file.
4, via (1) a SOAP message to the Printer.getPrinterAgentKey function in the SoapServlet servlet
4, via a long profile string in a WorkStation (aka .ws) file.
1, via crafted data.
4, via a crafted UDP DNS response.
4, via IGMP packets.
2, via the file name in a (1) .dsc or (2) .changes file.
5, via a crafted tarball file name in the top-level directory of an original (.orig) source tarball of a source package.
4, via shell metacharacters in the file name argument.
4, via a crafted length value in a Channel Definition Format (CDF) or Compound File Binary Format (CFBF) document.
2, via the READLINE address.
2, via the (1) author or (2) authorurl meta tags.
4, via a crafted packet.
4, via a Trojan horse DLL in the current working directory
4, via a Trojan horse DLL in the current working directory
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted session on TCP port 14000 to (1) ihDataArchiver.exe or (2) ihDataArchiver_x64.exe.
4, via a crafted TCP session on port 12299.
4, via a crafted TCP session on port 12401.
4, via a malformed URL.
5, via a malformed URL.
3, via unknown vectors.
4," via a direct request to a URL.  NOTE: the vendor reportedly """"does not consider it to be a security risk."""""
4, via a crafted URL.
4, via unspecified vectors.
5, via a modified stream identifier to a function.
0, via format string specifiers in a message string.
0, by leveraging the ability to write arbitrary content to any pathname.
1, via crafted string input.
1, via vectors involving an HTML document on the server.
1, via crafted offset and count values in the ResolutionUnit tag in the EXIF IFD0 of an image.
5, via a crafted image whose IFD contains IOP tags that all reference the beginning of the IDF.
4, via a Link State Update (aka LS Update) packet that is smaller than the length specified in its header.
5, via a Link State Update (aka LS Update) packet containing a network-LSA link-state advertisement for which the data-structure length is smaller than the value in the Length header field.
4, via (1) the jsonRequest parameter to Direct/Process
4, via a zero value in the component count of an EXIF XResolution tag in a JPEG file
4, via a JPEG image with a crafted sequence of restart markers.
4, via shell metacharacters in the timestamp parameter for an install action.
4, via shell metacharacters in the password parameter.
2, via error messages that are triggered by (1) a malformed hoststatustypes parameter to status/service/all or (2) a crafted request to config.
4, via a crafted pathname for a file.
4, via (1) a long bstrUrl parameter to the StartModule method
4, via a crafted lModule parameter that triggers use of an arbitrary memory address as a function pointer.
4, via a crafted (1) hetro file to the getnum function in util/heti_main.c or (2) PVOC file to the getnum function in util/pv_import.c.
4, via a crafted request that triggers a heap-based buffer overflow
2, via the merge parameter.
4, via a (1) session_id cookie in a request to the get_cookie_value function in response.c
4, via a (1) SGI32LogLum compressed TIFF image or (2) SGI32LogLum compressed TIFF image with the PhotometricInterpretation encoding set to LogL.
4, via a crafted PCT image.
5, via a .fpx file containing a crafted FlashPix image that is not properly handled during decompression.
5, via a crafted ImageLeftPosition value in an ImageDescriptor structure in a GIF image.
0, via the ns parameter in a medialist action to lib/exe/ajax.php.
4, via a long URL in the first argument (aka the sURL argument).
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, by leveraging exploitation of CVE-2012-0294.
4, via unspecified vectors.
4, via unspecified vectors.
3,upload arbitrary code to
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in the current working directory.
4, via a crafted backup file.
4, via (1) web content or (2) e-mail content.
4, via unspecified vectors.
2, via an RSS feed.
4, via a Trojan horse executable file in a directory that is accessed for reading an extensionless file
4, via a crafted application.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a malformed SIP message
4, via a crafted SIP packet
1, via unspecified vectors
2, via the header parameter to the default URI under admin/
1, via malformed network traffic
2, via unspecified vectors
2, via an upload request to an unspecified URL
1, via unspecified vectors
0, by leveraging the Help Desk Administrator role
0, via vectors involving SIP messages that arrive after an upgrade
3, by triggering a large number of stale connections that result in an incorrect value for an MPF connection count
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via an AUTHENTICATECONNECTION command that (1) lacks a password field or (2) has an empty password.
4, via a negative 64-bit value in a certain size field.
1, via crafted packets.
2, via the User.interface parameter.
4, via an op-client-interface-version action.
2, via an image name.
3, via unspecified vectors.
4, via a crafted file.
0, via directory traversal sequences in a request.
3, via vectors related to a tmp/ directory.
5, via a crafted (1) file name or (2) directory name.
4, via unspecified vectors.
1, via crafted characters in an HTTP request.
4, via unknown vectors.
4, via unknown vectors.
5, via (1) a pointer argument to the SetEngine method or (2) an XPItem pointer argument to an unspecified method.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
2, via unknown vectors
4, via unknown vectors.
2, via unknown vectors related to Core-Base.
1, via unknown vectors related to Enterprise Config Management.
3, via unknown vectors.
1, via unknown vectors related to eCompensation Manager Desktop.
2, via unknown vectors related to Redirects
2, via unknown vectors related to Human Resources.
2, via unknown vectors related to Java Business Objects.
2, via unknown vectors related to core.
0, via unknown vectors related to eProcurement.
2, via unknown vectors related to Enterprise Portal.
2, via unknown vectors related to User Config Management.
2, via unknown vectors related to Receivables.
2, via unknown vectors related to Change Password Page.
2, via unknown vectors related to eCompensation.
1, via unknown vectors related to Administration.
2, via unknown vectors related to Core
1, via unknown vectors related to Core
2, via unknown vectors related to Core
2, via unknown vectors related to Billing.
2, via unknown vectors related to Candidate Gateway
2, via unknown vectors related to Core
2, via unknown vectors related to Install/smpatch.
2, via unknown vectors related to Core
2, via unknown vectors related to InnoDB.
2, via unknown vectors related to Core.
2, via unknown vectors related to Core-Help.
2, via unknown vectors related to Core.
1, via unknown vectors related to Server Optimizer.
2, via unknown vectors related to Core.
2, via JavaScript code that calls the (1) pushState or (2) replaceState method.
5, via a crafted catalog file in an HFS disk image.
4, via a slide-to-dial gesture.
4, via a crafted racoon configuration file.
5, via vectors involving a temporary file.
4, via unspecified vectors.
4, via a crafted message.
1, via crafted audio sample tables in a movie file that is progressively downloaded.
4, via a crafted MPEG file.
4, via a crafted MPEG file.
4, via a crafted movie file with JPEG2000 encoding.
1, via crafted input.
4, via a crafted TeXML file.
4, via a crafted text track in a movie file.
4, via a crafted movie file with H.264 encoding.
4, via a crafted QTMovie object.
4, via a crafted QTVR movie file.
4, via a crafted movie file with RLE encoding.
4, via a crafted movie file with Sorenson encoding.
4, via a crafted sean atom in a movie file.
4, via a crafted .pict file.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted .m3u playlist.
4, via a feed:// URL.
4, via a feed:// URL.
4, via a crafted file containing PSD record types
5, via a crafted file containing PSD record types
1, via crafted ticket data
2, via unspecified requests to (1) aspnet_client or (2) evserver/createcontrol.js.
4, via a crafted type_offset value in a TCP packet to port 30003.
2, via an add action to familynews.php or (2) add a prayer via an add action to prayers.php.
1, via crafted text input to a coach that is configured with a document attachment control section.
4, via unspecified vectors.
4, via unspecified vectors.
0, via the ScheduleParam parameter to the webreports program.
4, via a crafted URL.
1, via unknown vectors
2, via unknown vectors
5, by uploading a .aspx file
3, via unspecified vectors.
4, via unspecified vectors.
4, via a malformed LDAP paged search request.
4, via a request to a (1) snoop
4, via unspecified vectors.
2, via unspecified vectors
5, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
4, via a crafted URL
1, via unspecified vectors
1, via unspecified vectors
4, via a crafted TrueType font.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
1, via crafted input to an application that attempts to perform Tidy::diagnose operations on invalid objects
2, via the (1) dbhost
4, via a symlink attack on a .augnew file.
2, by triggering many strtotime function calls
2, via the (1) composeCache
3, by searching for posts.
0, by leveraging the teacher role.
3," via vectors related to """"serious errors in the usage of snprintf()/vsnprintf()"""" in which the return values may be larger than the size of the buffer."
2, by sending an empty UsernameToken as part of a SOAP request.
3, via vectors involving a series of TCP connections that triggers use of many open file descriptors.
2, via format string sequences in the program name for sudo.
4, via (1) the pw parameter to the pacrypt function
4, via a negative value in a region offset of a package header
2, by making many connection requests.
2, via unknown vectors
1, via unspecified vectors
2, via unknown vectors
2, via unspecified vectors
4," via (1) unspecified """"corrupt input"""" or (2) by """"starting decoding from a P-frame"
4, via unspecified vectors.
4, via a UTF-8 line from server containing characters outside of the Basic Multilingual Plane (BMP).
2, via the (1) address or (2) threadid parameters to operator/ban.php; or (3) geolinkparams
0, via the base parameter in a query_engine action to cmd.php.
2," via unknown vectors related to """"administrator."""""
3, via unknown vectors.
2," via unspecified vectors related to """"administrator."""""
2, via the Location variable.
4, via a crafted media file.
4, via a crafted media file
5, via a crafted JPEG2000 image that triggers an incorrect check for a negative value.
4, via a crafted mpg file that triggers memory corruption involving the v_off variable
2, via unspecified vectors related to the curtileno variable.
4, via unspecified vectors.
4, via a crafted Vorbis file
5, via a URL in the (1) r parameter to switch.php or (2) goto parameter to admin/login.php.
2, via the (1) captchaField
2, via the (1) explain parameter to explanation.php or the (2) photos_only
4, via a crafted message sent to an XML service that causes hash table collisions.
4, via a crafted message to an XML service
4, via unspecified fields.
2, via the map parameter.
2, via the f parameter.
4, via a JPEG2000 (JP2) file with a crafted Quantization Default (QCD) marker segment.
4, via a .. (dot dot) in the dwn_file parameter.
0, via the url parameter and possibly the nom parameter.
2, via the PATH_INFO to (1) forum/register.php or (2) forum/logon.php.
2, via the submit parameter.
4, via a direct request to cgi-bin/loader.
2, via the (1) Username or (2) MailBox Name.
4, via a long string in an amr file.
2, via the gameid parameter in a detail action to index.php.
0, via the id parameter in a showkat action to index.php.
4, via a .. (dot dot) in a filename in the neoaxis_web_application_win32.zip ZIP archive.
2, via the link_href parameter.
1, via unspecified vectors
4, via a crafted serialized object in the (1) cookieName to lib/banners/bannerlib.php; (2) printpages or (3) printstructures parameter to (a) tiki-print_multi_pages.php or (b) tiki-print_pages.php; or (4) sendpages
3, via unspecified vectors.
2, via the passw parameter.  NOTE: Some of these details are obtained from third party information.
2, via the Region title.
1, via crafted dimensions of a skin file
4, via a crafted image in a chat message
1, via malformed requests to the (1) FTP server or (2) HTTP server.
4, via unspecified vectors.
2, via the message parameter.
4, via a URL in the tt-abspath parameter.
2, via the PageID parameter.
0, via the req_spec_id parameter to (1) reqSpecAnalyse.php
0, via vectors involving the (1) Endpoint Monitor
1, via crafted authentication credentials.
1, by leveraging GPU device-node read/write privileges.
4, via a uname system call in conjunction with a UNAME26 personality.
2, via the sCategory parameter to index.php
2, via the (1) sCity
2, via the Title parameter.  NOTE: some of these details are obtained from third party information.
4, via a JPEG2000 (JP2) file with a crafted Quantization Default (QCD) marker segment.
4, via a JPEG2000 (JP2) file with a crafted Quantization Default (QCD) marker segment.
2, via the organization field in a profile
2, via the file parameter.
4, via a .. (dot dot) in the r parameter to index.php.  NOTE: Some of these details are obtained from third party information.
4, via the price_from parameter.
2, via the id parameter in a view action to index.php.
2, via the (1) to_userid parameter to modules/pm/pmlite.php or the (2) current_file
2, via the PATH_INFO to (1) notifications.php
4, via a .. (dot dot) in the icmsConfigPlugins[sanitizer_plugins][] parameter.
2, via the PATH_INFO to (1) login.php
2, via the PATH_INFO to index.php.
3, via certain Settings[] parameters.
4, via a .. (dot dot) in the formname parameter to (1) contrib/acog/print_form.php; or (2) load_form.php
4, via shell metacharacters in the file parameter.
2, via the sortableList parameter.
2, via the (1) msg parameter in an external action to zp-core/admin.php
4, via a .. (dot dot) in the class parameter to (1) index.php or (2) admin/index.php.
4, via an addTopic action.
4, via a .. (dot dot) in the language parameter.
3, via the group_id parameter.
2, via the (1) message parameter to admins/login/forgot/index.php
3, via the (1) content parameter to includes/ajax.php or (2) body parameter to includes/error.php.
2, via the pid parameter.
4, via a large integer argument to the (1) Int32Array
2, via the (1) text
2, via the comment parameter to a blog
2, via the (1) name or (2) lastName parameter to struts2-showcase/person/editPerson.action
4, via (1) the name parameter to struts-examples/upload/upload-submit.do
4, via a crafted To header in a SIP INVITE message.
4, via a malformed LPD request.
3, by uploading a ZIP file containing a PHP file
1, by setting the HTTP_REFERER to a certain value
2, via the (1) ip_addr[0][1]
2, via the from parameter.
2, via the (1) XWiki.XWikiComments_comment parameter to xwiki/bin/commentadd/Main/WebHome
2, via the (1) visitor_language parameter to register.php or (2) message parameter.
2, via the cat_parent_id parameter in an addcat action.
4, via a URL in the redirect parameter.
4, via a .. (dot dot) in the file parameter.
2, via the (1) username or (2) password parameters.
2, via the export parameter.
2, via the q parameter.  NOTE: some of these details are obtained from third party information.
5, via a crafted URL containing text that is used within a modal popup.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unspecified vectors.
4, via a message.
4, via a URL in the sub_type parameter.
2, via the (1) login_data parameter to admin/auth.php; (2) nb parameter to admin/blogs.php; (3) type
2, via unspecified vectors
4, via a .. (dot dot) in the file parameter in an Online_help action.
2, via the (1) domainName parameter to jsp/AddDC.jsp or (2) operation parameter to DomainConfig.do.
4, via a JPEG2000 (JP2) file with a crafted Quantization Default (QCD) marker segment.
4, via a JPEG2000 (JP2) file with a crafted Quantization Default (QCD) marker segment.
4, via a JPEG2000 (JP2) file with a crafted Quantization Default (QCD) marker segment.
2, via the tracking code
4, via an admin.newuser action to index.php.
0, via the value_title parameter
2, via the (1) tags or (2) term parameters.
4, via unspecified vectors.
2, via the (1) period parameter to showHistoryData.do; (2) selectedNetwork
2, via the (1) viewId parameter to fault/AlarmView.do or (2) period parameter to showHistoryData.do.
4, via unspecified vectors.
2, via the ExportSettings method.
2, via the title bar.
0, via the id parameter in an rc-content action to index.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the page parameter
2, via the PATH_INFO.
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2," via unspecified vectors related to improper """"protection"""" of the """"backup output directory."""""
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a symlink attack on a temporary file used by (1) configure or (2) examples/dhcp-client-script.
4, via a relative pathname in a URL for a Wicket resource that corresponds to a null package.
4, via a crafted (1) build log or (2) build status that contains an escape sequence for a terminal emulator.
2, via the file path when adding a new connection.
4, via a crafted sampleRate in an ape file
4, via a crafted vendorLength field in an ogg file.
2, via the (1) user
4, via a .. (dot dot) in the select_users_template parameter to index.php.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a null password.
2, via the search_terms parameter.
3, by uploading a file with a PHP extension
4, via a large number of crafted XML files.
4, via a large number of crafted XML files that cause improperly-handled reallocation failures when expanding entities.
0, via format string specifiers in a (1) YAML stream to the Load function
3, by uploading a file with an executable extension
4, via a zip archive with the number of directories set to 0
2, via the size and offset values for the central directory in a zip archive
4, via a crafted S/MIME message
2, via the KP_RETURN keybinding
3, via vectors involving a stream_close method call during use of a custom stream wrapper.
4, via a crafted SWF file
4, via a 4-byte utf-8 sequence.
4, via a crafted backend response
4, via a long string in an HTTP Digest Authentication header.
1, via crafted offset value in the ResolutionUnit tag in the EXIF IFD0 of an image.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-0247.
1, via crafted IOP tag offsets in the IFD in an image.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-0248.
2, via the (1) type or (2) querystring parameters to private/en/error or (3) name parameter to private/en/locale/index.
4, via a long file name in an engine sample attribute in an xml configuration file.
4, via a crafted database name.
3, by uploading a file with an executable extension via a PutUpdateFileCore command in a RunAMTCommand SOAP request
4, via a .. (dot dot) in the filename parameter in a SetTaskLogByFile SOAP request.
1," via crafted """"image dimension values"""" in a BMP file"
1, by uploading contents of the file with an executable extension via a create action
4, via a URL in the (1) BASE_path parameter to base_ag_main.php
5, via a URL in the (1) fileType parameter to optimizer/index.php
4, via a save_user action.
4, via a URL in the abspath parameter.
2, via large dimension values in a (1) JPG image to the ImportGR in the JPG image filter module (HncJpeg10.flt) or (2) PNG image to the PNG image filter module (HncPng10.flt)
4, via a .. (dot dot) in the module parameter to frontend/js.php.
2, via the (1) report parameter to blog/settings or (2) error parameter to users/index.
2, via the highlight parameter.
2, via the id parameter.
2, via the filecat parameter.
2, via the view parameter.
2," via the create field in a """"Create a group"""" action."
2," via the create field in a """"Create a group"""" action."
2, via an add action or (2) change the contents of a file via a dit action.
2, via the team parameter to (1) prospects.php
2, via unspecified vectors to the (1) notes and (2) tickets components.
2, via the (1) ticket parameter to tickets.php
2, via an update action
4, via a .. (dot dot) in the File command.
4, via a long string to TCP port 23.
2, via the PATH_INFO.
2, via the (1) memberslist parameter (aka Member List) in list.php or (2) rowid parameter to adherents/fiche.php.
4, via a .. (dot dot) in the (1) file parameter to document.php or (2) backtopage parameter in a create action to comm/action/fiche.php.
4, via a settings action; (3) add a page via an editpage action
4, via a malformed URL.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-0234.
3, via unknown vectors.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-0235.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted cookie.
4, via a feed
4, via unspecified vectors.
4, via unspecified vectors.
4, via a modified url_account parameter
2, via the standalone parameter.
4, via a crafted AVI file.
4, via a .. (dot dot) in the logfilename parameter to (1) b2b/admin/log.jsp or (2) b2b/admin/log_view.jsp in the Internet Sales (crm.b2b) component
2, via the _loadPage parameter.
2, via unspecified vectors
5, via unspecified vectors.
0, via the id parameter to index.php.
3, via the (1) title or (2) body parameter to admin/preview.
4, via a delete action in the user module
2," via the """"url"""" parameter."
2, via the (1) data_file or (2) settings_file parameter to ammap.swf
2, via the (1) data_file or (2) settings_file parameter to ampie.swf; the message element in the chart_data parameter to (3) amcolumn.swf
2, via the sysPassword parameter.
1, via crafted transit traffic
4, via malformed show-macstats parameters
1, via crafted transit traffic
1, by sending packets at a high rate
1, by completing local web authentication quickly
2, via an attempted SSH session
4, via a crafted FCIP header
0, by sending malformed UDP packets to the CERPT port
3, via IAPP 0x3281 packets
3, via IGMP packets
0, via a malformed SNMP request to a Fabric Interconnect (FI) device
4, via a malformed SNMP request to a Fabric Interconnect (FI) device
4, via a crafted packet
4, via a crafted (1) SMS message
4, via a publish action.
5, via a member_new action to my_admin/admin1_members.php or (2) modify the default site title via a save action to my_admin/admin1_configuration.php.
2, via the user field to cgi-bin/ConfigManApp.com.
4, via a POSIX TAR file with an initial [aliases] character sequence. NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different TAR parser implementations.
2, via an Office file with a \50\4B\53\70\58 character sequence at a certain location.
2, via an Office file with a ustar character sequence at a certain location.  NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different Office parser implementations.
2, via an EXE file with a modified value in any of several e_ fields.  NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different EXE parser implementations.
4, via a CAB file with a modified vMajor field.  NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different CAB parser implementations.
4, via a CAB file with a modified reserved2 field.  NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different CAB parser implementations.
4, via a CAB file with a modified vMinor version field.  NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different CAB parser implementations.
4, via a crafted reset interval in the LZXC header of a CHM file.  NOTE: this may later be SPLIT into multiple CVEs if additional information is published showing that the error occurred independently in different CHM parser implementations.
4," via a request with a trailing """"?"""" character"
4, via a long URL in an HTTP request.  NOTE: some of these details are obtained from third party information.
2, via an invalid version number in an HTTP request
3," by uploading a file with an executable extension that is not """".php"""""
2, via the (1) editor or (2) callback parameters to lib/pkp/lib/tinymce/jscripts/tiny_mce/plugins/ibrowser/ibrowser.php in the iBrowser plugin
2, via the (1) path or (2) line parameters.
4, via a .. (dot dot) in the file parameter.
2, via the form_single_user_login parameter.
2, via an add action to admin/users/add or (2) modify a web page via a save action to admin/pages/edit/web_page_name.
4, via a crafted palette index in a CMAP record of a JPEG image
4, via a NULL byte in a password string.
2, via the comment section.
2, via the hspSummaryId parameter to plugins/ajaxCalls/haltResumeHsp.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) newHspStatus parameter to plugins/ajaxCalls/haltResumeHsp.php
5, via unspecified vectors.
4, via a crafted URL.
4, via a crafted log-file entry.
4, via unknown vectors.
4, via unspecified vectors.
4, via a crafted web site that triggers access to an object that (1) was not properly initialized or (2) is deleted
1, via crafted SWF content
4, via a crafted web site
4, via a crafted web site
2, via the name parameter to photo/photo_one.php.
4, via a crafted X.509 certificate.
4, via unspecified vectors.
5, via a crafted Composite Document File (CDF) file that triggers (1) an out-of-bounds read or (2) an invalid pointer dereference.
4, via a request to the Block module or (2) unblock a user via a request to the Unblock module.
4," via a crafted page with """"forged strip item markers"
4, via a crafted file header field in a media file
4, via a long server name.
4, via a long email address.
1, via crafted parameters in a destination URL.
4, via a malformed packet.
4, via a crafted packet.
5, via a packet containing an invalid pointer value that triggers an incorrect memory-allocation attempt.
4, via unspecified vectors.
2, via the (1) name or (2) type of a function.
2, by setting the userkey cookie to 1.
2, via the (1) curstr parameter in the findUsers function
0, via the do parameter to index.php.
4, via a large component count for certain EXIF tags in a JPEG image.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-0259.
4, via unspecified vectors.
2, via the keywords parameter.
4, via (1) a direct request to plugins/visiblehookpoints/index.php
4, via a .. (dot dot) in the type parameter.  NOTE: this vulnerability can be leveraged to upload arbitrary files.
4, via (1) a parameter array in freemarker templates
3, via unspecified vectors.
3, via unspecified vectors.  NOTE: Some of these details are obtained from third party information.
4, via unspecified vectors.
3, via taxonomy terms.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the name parameter.
0, via the EMBEDLOOKUP parameter for Blip.tv links.
3, via unspecified vectors.
3, via unspecified vectors.
2, via the (1) sku or (2) title parameters.
0, via the title parameter when (1) adding or (2) updating a category.
4, via unspecified vectors.
2, via the (1) title parameter in faq.admin.inc or (2) detailed_question parameter in faq.module.
4, via unspecified vectors.
4, via unspecified vectors.
2," via unspecified vectors related to """"the vocabulary's help text."""""
2, via unspecified vectors
2, via the title parameter in (1) data.views.inc and (2) data_ui/data_ui.admin.inc.
2, via unknown attack vectors.
2, via the Site table prefix field.
2, via the class name.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted certificate list.
2, via the (1) username parameter in a process action to admin/login.php; (2) pageTitle
2, via the username parameter in a process action to admin/login.php or (2) remote administrators to execute arbitrary SQL commands via the status parameter to admin/stats_monthly_sales.php or (3) country parameter in a process action to admin/create_account_process.php.
4, via a .. (dot dot) in the module parameter.
4, via a SaveSQL action.
4, via a .. (dot dot) in the lang parameter.
2, via the country parameter.
2, via the password parameter.
3, via unknown vectors.
2, via unknown vectors related to Siebel Apps - Multi-channel Technologies.
3, via unknown vectors related to Core.
2, via unknown vectors related to Installation.
2, via unknown vectors related to Server Optimizer.
0, via unknown vectors related to Partition.
2, via unknown vectors related to Siebel UI Framework.
2, via unknown vectors related to Highly Interactive Web UI.
3, via unknown vectors.
2, via unknown vectors related to Server Optimizer.
4, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors related to Libraries.
2, via unknown vectors related to Portal Framework.
2, via unknown vectors related to UI and Visualization.
2, via unknown vectors related to UI Framework
1, via unknown vectors related to Server Optimizer.
2, via unknown vectors related to Oracle Maps.
2, via unknown vectors related to Web Server.
1, via unknown vectors related to User Administration Pages.
2, via unknown vectors related to UI Framework
2, via unknown vectors related to Outside In Filters.
2, via unknown vectors related to Candidate Gateway
2, via unknown vectors related to Oracle Maps.
2, via unknown vectors related to UI Framework
3, via vectors related to PeopleBooks - PSOL.
3, via unknown vectors.
1, via unknown vectors related to InnoDB.
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors related to UI Framework
1, via unknown vectors related to UI Framework.
2, via unknown vectors related to Branded Zone.
1, via unknown vectors related to Outside In Filters
3, via unknown vectors related to Outside In Filters
1, via unknown vectors related to Outside In Filters
4, via unknown vectors related to Outside In Filters
2, via unknown vectors related to Outside In Filters
1, via unknown vectors related to Outside In Filters
2, via unknown vectors related to Outside In Filters
1, via unknown vectors related to Outside In Filters
4, via a crafted MMS:// stream.
4, via a crafted Real RTSP stream.
2, via the state parameter.
2, via the id parameter.
2, via the SEARCH parameter to index.php.
2, via the category parameter.
2, via the (1) TREF_email_address or (2) TR_name parameters.
2, via the (1) url bar or (2) picture bar.
4, via a long string in a GET request without an HTTP version number.
0, via the eid parameter in a profile action to index.php.
4, via unspecified vectors.
3, via unknown vectors.
2, via the (1) URL
2, via the (1) cus_email parameter in a cust_lostpw action; or (2) help_name
3, via the (1) surname or (2) firstname parameters to modules/members/addmember.php; or (3) groupdescription or (4) groupname parameters to modules/groups/addgroupform.php.
5, via a full pathname in the file parameter to index.php.
4, via shell metacharacters in the query parameter
4, via a crafted EXIF IFD in a TIFF image.
4, via a crafted HTTP request.
1, by sending data to TCP port (1) 5050 or (2) 24004.
5, by sending a large amount of data to TCP port 24006.
4, via a session on TCP port 12000.
5, by sending a large amount of data to TCP port 12000.
4, via a Trojan horse DLL in the current working directory.
3, by leveraging a BGP peering relationship and sending a malformed Outbound Route Filtering (ORF) capability TLV in an OPEN message.
4, via a Trojan horse DLL in the current working directory.
5, via (1) the loginname parameter in a forgotpass action or (2) the username parameter.
4, via a crafted (1) XSLT or (2) Velocity template.
4, via unspecified fields.
4, via a crafted packet to TCP port 555.
4, via a crafted packet to TCP port 555.
5, via a crafted packet to (1) TCP or (2) UDP port 2001.
0, via the cms_tpv_view parameter to wp-admin/options-general.php.
2, via the (1) title parameter to app/view/agenda-widget-form.php; (2) args
4, via a crafted DNS query that uses compression.
4, via a .. (dot dot) in the (1) pluginName or (2) pluginPath parameter in a get_template action. NOTE: some of these details are obtained from third party information.
1, by leveraging access to a sandboxed process
1, via crafted RAP response packets
1, via crafted RAP response packets
4, via a crafted URL
4, via a crafted URL
4, via a crafted application
1, via crafted character sequences with EUC-JP encoding
4, via a crafted Visio file
1, via crafted XML data that triggers access to an uninitialized object in memory
0, via an unspecified parameter
2, via the user id number to admin/user/delete; (2) delete pages via the page id number to admin/page/delete; delete the (3) images or (4) themes directory via the directory name to admin/plugin/file_manager/delete
2, via the (1) user[name]
2, via the (1) First name
4, via a showcats action.
4, via a request to index.php/profile-edit-save or (2) hijack the authentication of administrators for requests that add a new page via a request to admin/pages-new-save.
4, via unknown vectors.
2, via the (1) to_group parameter to group.php or (2) id parameter to vcard.php.  NOTE: the edit.php vector is already covered by CVE-2008-2565.
2, via the from parameter.  NOTE: the index.php vector is already covered by CVE-2008-2566.
3, via an e-mail attachment with an executable extension
4, via a .. (dot dot) in the Attachment[] parameter.
4, via a %0A sequence followed by a .. (dot dot) in the file parameter.
4, via a direct request to install/info.php
2, via the pskValue parameter.
4, via admin/formFilter
4, via a small window for the download dialog.
2, via the (1) history.pushState and (2) history.replaceState functions in conjunction with cross-domain frames
1, by triggering the launch of a dialog window associated with a different domain.
4, by triggering a page reload followed by a redirect to a different domain.
1, via crafted styling that causes page content to be displayed outside of the intended content area.
2, via the setting[admin_email] parameter to admin/setting.
2, via the f_country_code parameter.
2, via the (1) Back parameter to admin/ad.php
4, by canceling a page load.
4, via a request to auth/process.php
2, via the email parameter (aka Email address field) in an edit_user configuration action.
0, via the TR_title parameter in an edit action.
3, via unspecified vectors.
4, via a malformed URL.
4, via (1) the evtvariablename parameter in an evts.xml action to kw.dll
2, via the email parameter (aka the Email Address field in the Edit User template).
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unknown vectors.
3, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via a crafted TIFF (aka .TIF) file.
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
4, via a long Collada asset element in a DAE file
4, via unknown vectors.
2, via unknown vectors related to formAPI.
3, via unspecified vectors.
4, via unspecified vectors.
1," via unknown vectors involving """"not checking tokens."""""
3, via unspecified vectors.
2, via the q parameter.
5, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) node_title or (2) nodequeue_title parameter.
2, via the (1) wl_reveal or (2) q parameters.
2, via the block title.
4, via unspecified vectors.
2, via unknown attack vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2," via unknown vectors """"outside of the Form API."""""
4, via a user signature.
2, via the q parameter.
4, via shell metacharacters in an href attribute.
2, via the jig parameter.
0, via format string specifiers in certain data chunk values in an aircraft xml model to (1) fgfs/flightgear/src/Cockpit/panel.cxx or (2) fgfs/flightgear/src/Network/generic.cxx
4, via a (1) long string in a rotor tag of an aircraft xml model to the Rotor::getValueforFGSet function in src/FDM/YASim/Rotor.cpp or (2) a crafted UDP packet to the SGSocketUDP::read function in simgear/simgear/simgear/io/sg_socket_udp.cxx.
4, via a symlink attack on a temporary latex file
2, via the guest console.
5, via a crafted property name in a dbus message.
4, via a file with many repeating inputs.
2, via the (1) search field
5, by deleting a record and using HANDLER READ NEXT.
4, via a symlink attack on temporary files with predictable names.
2, via the (1) username or (2) password parameters.
2, via the page parameter in an activity_widget_filter action.
4, via a long string to an unbuffered stream such as stderr.
2, via the u parameter.
5, via unspecified vectors.
0, via format string specifiers in an input device name.
2, via the target parameter in an edit action.
4, via a .. (dot dot) in the to parameter.
4, via shell metacharacters in a (1) sendmail or (2) exim delivery.
4, via a PDF containing an escape sequence for a terminal emulator.
2, via the sessionid cookie.
2, via many image requests with large values in the (1) size_x or (2) size_y parameters.
4, via a long packet.
4, via unspecified vectors.
3, via unknown vectors.
4, via (1) the u_email parameter (aka Authors Email field) to manager/users.php
2, via the (1) Command Line Interface or (2) Graphical User Interface
1, via TCP packets to unspecified ports.
4, via an invalid parameter.
2, via the File Description field.
0, via the selectedModuleOnly parameter in a state_viewmodulelog action to the ModuleServlet URI.
2, via the updateRegn parameter.
4, via a crafted notes:// URL.
4, via a long argument.
5, via a long argument to the (1) Attachment_Times or (2) Import_Times method.
4, via a workspace query.
3, via vectors involving a username in a URI
4, via a .. (dot dot) in the language parameter.
2, via the (1) section parameter in the configuration module
4, via a flood of TCP SYN packets
2, via the menuaction parameter to etemplate/process_exec.php.  NOTE: some of these details are obtained from third party information.
0, by providing an arbitrary allowed hostname in the Host HTTP header.  NOTE: this issue might not be reproducible
0, by providing an arbitrary allowed hostname in the Host HTTP header.  NOTE: this issue might not be reproducible
2, via an opcode 0x21 request.
4, via a crafted file
1, via vectors related to file browsing and file extraction.
3, by uploading a malicious file.
4, via a ..%2F (encoded dot dot slash) in the default_lang parameter.
0, via the login parameter in an add_new_user action.
0, via the id parameter to index.php
2, via the userid parameter in an edit action.
1, via vectors related to (1) javascript innerHTML as used when generating login forms
2, via an XML external entity (XXE) injection attack
2," via unspecified vectors related to """"arguments to external commands."""""
5, via a crafted (1) .dsc or (2) .changes file
4, via a crafted (1) .dsc or (2) .changes file
0, by uploading an XML file with the xhtml extension
0, by modifying the path to clamav.  NOTE: this can be exploited without authentication by leveraging CVE-2012-2243.
4, via account/delete.php.
4, via vectors related to artefact/file/ and a crafted SVG file.
4, via a renegotiation attempt that occurs after the initiation of the V3 link protocol.
0, by performing link protocol negotiation incorrectly.
2, via the query parameter.
5, by establishing and closing a port-705 TCP connection
4, via a crafted Open-PDU request that triggers incorrect DisplayString processing
4, via (1) an arbitrary field to apps/contacts/ajax/addcard.php
4, via a URL in the redirect_url parameter.
4, via a long string in the first argument (aka the reg_name argument).
4, via a crafted 32-bit Portable Executable (PE) file with a kernel ImageBase value.
2, via the file parameter.
1, via input data that (1) lacks FIPS fields or (2) has an invalid version number.
4," via \n (line feed) characters in the Id fields of many """"batch begin untethered"""" commands."
3, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
4,upload files to
4, via a crafted web page.
2, via the (1) creativecommons_user_message or (2) creativecommons_site_license_additional_text parameter.
4," via vectors related to (1) """"user names in page titles"""" and (2) """"autocomplete callbacks."""""
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the script parameter to admin/scripting.jsp.
4, via shell metacharacters in the (1) host name or (2) domain name in a DHCP reply.
2, via an invalid length value in a DHCP packet.
1, via unspecified vectors in the (1) user search or (2) Mail Log in the Admin Control Panel (ACP).
3, via unspecified vectors.
4, via a malformed file name in an orphaned attachment.
4, via a malformed forumread cookie
5, via a long string in the header of an HTTP request.
2, via the serendipity[textarea] parameter.  NOTE: this issue might be resultant from cross-site request forgery (CSRF).
2, via the serendipity[plugin_to_conf] parameter.  NOTE: this issue might be resultant from cross-site request forgery (CSRF).
2," via unspecified vectors related to """"taxonomy information."""""
0," by leveraging the teacher role and navigating to """"Enrolled users"""" under the Users Settings section."
1," by using the """"Recent conversations"""" feature with a modified parameter in a URL."
2, via the questions feature.
4, via a save_question action.
4, via a crafted calendar event.
0, via format string specifiers in data that generates a log message.
2, via the pagination_wp_facethumb parameter.
1, via crafted input.
1, via crafted arguments that trigger incorrect handling of COM object VARIANT types
0, by leveraging the HTTP POST functionality.
1, by leveraging the blogger role.
2, via an escape sequence with a large repeat count value.
4, via a (1) empty or (2) zeroed RSA signature
4, via a crafted MP4 file.
4, via vectors involving contacts.
0, via the files parameter
4, via unspecified vectors.
2, via the Mod* cookie parameter to html/modules.php.
2, via the qbwc://docontrol/GetCompanyFile functionality.
0, via packets that trigger an invalid free operation.
4, via a crafted packet that triggers an out-of-bounds read operation.
4, via a .. (dot dot) in the captcha parameter to module.php
4, via (1) an arbitrary parameter in a move or (2) minimize action to admin/admin_index.php; (3) the karma_username parameter to module.php in the karma module; (4) q_1_low
4, via a crafted mp4 file.
0, via the group parameter in a lookup action.
2, via an add action.
3, via NFS traffic.
2, via the (1) name parameter to modules.php or (2) img_url to includes/wysiwyg/spaw/editor/plugins/imgpopup/img_popup.php.
0, by using the clientless WebVPN feature
4, via a crafted packet
1, via unspecified vectors
5, via a crafted SAP Diag packet.
4, via a crafted SAP Diag packet.
4, via a crafted SAP Diag packet.
4, via a crafted SAP Diag packet.
2, via the index of the product[] parameter to ajax.php.
4, via a crafted Computer Graphics Metafile (CGM) file
1, via unspecified vectors
4, via a crafted spreadsheet
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted Word .doc file
4, via a crafted web site that triggers access to a deleted object
4, via a crafted packet to TCP port 5678.
4, via a crafted HTTP request to port 8001.
2, via web traffic that is examined within the Bloxx Reports component
3, via unspecified vectors.
2, via the body of an email.
2, via the symb parameter.
3, via an e-mail message body with (1) a SCRIPT element
2, via the Subject of an email.
5, via an e-mail message body with (1) a SCRIPT element
2, via unspecified vectors
2, via the SRC attribute of an IFRAME element in the body of an HTML e-mail message.
2, via the (1) syslocation
4, via an e-mail message body with (1) a JavaScript alert function used in conjunction with the fromCharCode method
2, via the (1) To
2, via the body of an email.
4, via an e-mail message body with (1) the Cascading Style Sheets (CSS) expression property in conjunction with a CSS comment within the STYLE attribute of an IMG element
3, via an e-mail message body with (1) a SCRIPT element
4, via an e-mail message subject with (1) a JavaScript alert function used in conjunction with the fromCharCode method or (2) a SCRIPT element; an e-mail message body with (3) a crafted SRC attribute of an IFRAME element
4, via an e-mail message body with a crafted SRC attribute of (1) an IFRAME element or (2) a SCRIPT element.
2, via the (1) From
3, via an e-mail message body with (1) a SCRIPT element
2, via the (1) From or (2) Date field in an email.
2, via the body of an email.
2, via the Date field of an email.
4, via vectors involving special characters in parameters.
0, via a crafted parameter in a URL.
1, via crafted input.
2, via the sGroupList parameter.
4, via CreateUserStepContainer actions to Admin/Accounts/Add/OrionAccount.aspx or (2) modify account privileges via a ynAdminRights action to Admin/Accounts/EditAccount.aspx.
4, via a modified desktop client.
4, via unspecified fields.
1, via crafted packets to TCP port 41014 (aka the download port).
4, via a crafted SAP Diag packet.
4, via a long string in a version attribute of an ispXCF element in an .xcf file.
4, via a crafted packet.
4, via a multipart/form-data POST request.
4, via an addnew action to admin/administrators_add.php; or (2) conduct cross-site scripting (XSS) attacks via the page_title parameter to admin/content_pages_edit.php; the (3) category_name[] parameter to admin/products_category.php; the (4) site_name
2, via the User-Agent HTTP header.
4, via unspecified vectors.
4, via a crafted cookie.
4, via unspecified vectors.
4, via a crafted application that lacks the READ_PHONE_STATE permission.
0, by triggering improper interaction with an unspecified library.
2, via unspecified vectors
4, via a crafted form entry.
1, via unspecified vectors
4, via a long string in the DRIVER option.  NOTE: this issue might not be a vulnerability
1," via vectors related to the regenerate method and unspecified """"database backed session classes."""""
1, via crafted CBC data.
3, via vectors related to user registration.
4, via a Drush log message in a provision task log.
1, via vectors related to taxonomy information.
2, via the audience identifier.
4, via vectors related to class attributes in a list of links.
2, via the (1) Mobile URL field or (2) Desktop URL field to the General configuration page
2," via unspecified vectors related to """"recording visits."""""
3, via unspecified vectors.
2, via the protest_body parameter.
3, via an (1) up or (2) down action.
2, via an escape sequence with a large repeat count value.
0, via the sortby parameter in a find action.
0, via the num parameter in a reconcileusers action.
2," via unknown attack vectors related to """"Inadequate checking."""""
4," via vectors related to """"Inadequate filtering"""" and a """"SQL error."""""
1, via vectors related to incorrect calculation and a sort order index.
4, via a Trojan horse DLL in the current working directory.
2, via the callback parameter in a lostpassword action to wp-login.php.
2, via the url parameter to comment.php.
4, via a Trojan horse Metro DLL in the current working directory.
4, via unspecified vectors.
4, via unspecified vectors.
2," via unspecified vectors related to the """"URL of a RSS feed of the user."""""
2, via unspecified vectors
4, via a large component count in the header of a JPEG image.
1, via crafted EXIF tags in an image.
1, via crafted EXIF tags in an image.
1, via crafted EXIF tags in an image.
1, by leveraging access to an IFRAME element associated with a different domain.
3, via vectors related to tables that have sections.
1, via vectors related to the layout of documents that use the Cascading Style Sheets (CSS) counters feature.
3, via unspecified vectors.
1, via vectors related to SVG resources.
4, via vectors related to SVG painting.
4, via unspecified vectors.
4, via unknown vectors.
4, via a crafted document.
1, via vectors related to the :first-letter pseudo-element.
1, via vectors related to SVG references.
3, via unknown vectors.
1, via crafted data in the Matroska container format.
1, via crafted EXIF tags in an image.
2, via an image with crafted EXIF tags that are not properly handled during the formatting of EXIF maker note tags.
1, via crafted EXIF tags in an image.
4, via vectors involving a crafted buffer-size parameter during the formatting of an EXIF tag
1, via vectors related to counter handling.
1, via vectors related to layout height tracking.
4, via a crafted JPEG file.
4, via a crafted document.
0, via vectors that trigger out-of-bounds write operations.
3, via unspecified vectors.
3, via vectors involving improper interaction between worker processes and an XMLHttpRequest (aka XHR) object.
4, via unspecified vectors.
4, via a crafted document.
3, via unknown vectors.
3, via vectors related to plug-in handling.
4, via a crafted document.
1, via vectors related to the plug-in paint buffer.
3, via vectors related to application exit.
1, via vectors related to the Google V8 bindings
0, via vectors involving onclick events.
0, via vectors involving SVG text references.
0, via vectors involving frames
4, via a crafted document.
4, via unspecified vectors.
3, via unknown vectors.
0, via vectors that trigger out-of-bounds write operations.
3, via unknown vectors.
0, via vectors involving SSL error messages
2, via the search parameter to administrator/index.php.
2, via the (1) PATH_INFO to group.php
3," via multiple """"javascript:"""" sequences in the debug parameter."
2, via the (1) add_img_name_post
2, via the (1) bbcodeexample
2, via the (1) text field in the Private Messages System
2, via the (1) dir parameter to demo/phpThumb.demo.random.php or (2) title parameter to demo/phpThumb.demo.showpic.php.
2, via the onlyDB parameter.
4, via the (1) group parameter in the show-league page or (2) season parameter in the team page to wp-admin/admin.php.
0, via the id parameter to (1) leaflet_layer.php or (2) leaflet_marker.php
2, via the PATH_INFO.
4, via a long string in a Value tag in a SymbolicSchematicData definition tag in PAC Design (.pac) file.
2, via the active_option parameter to wp-admin/tools.php.
2, via the CDN API Key (cnd-key) in a share-and-follow-menu page to wp-admin/admin.php.
2, via the v parameter.
4, via a .. (dot dot) in the v parameter.
4, via the PATH_INFO to wp-admin/options-general.php.  NOTE: some of these details are obtained from third party information.
4, via a crafted XML ENTITY declaration in a non-ASCII encoded document.
2, via the q[] parameter to index.php
2, via the nid parameter.
4, via a URL in the path parameter.
0, via the priority parameter in an addTodo action.
4, via an adduser action to admin/index.php or (2) conduct static PHP code injection attacks in .htusers.php via the user parameter to admin/index.php.
0, via the selitems[] parameter in a (1) copy
0, via the value_title parameter
2, via the (1) user or (2) page parameter to (a) admin/admin_comments.php or (b) admin/admin_links.php; or list parameter in a (3) move or (4) minimize action to (c) admin/admin_index.php.
2, via the (1) list parameter in a move action to admin/admin_index.php
2, via the holiday name field to (1) holiday_add.php or (2) holiday_view.php.
3, by uploading a file with an executable extension using (1) airline-edit.php
4, via a crafted (1) PNG
2, via the text parameter.
2, via the cfg parameter.
5, via a long string containing non-printable characters.
4, by closing a connection in off-hook mode.
2, via the add_ons parameter.
1, via crafted input to application scripts.
0, via the id parameter to api_v2.json.  NOTE: this entry was SPLIT per ADT2 due to different vulnerability types. CVE-2012-6658 is for the XSS.
1, by modifying files
4, via a crafted file.
3, via unspecified vectors.
2, via the q parameter.
1, via network traffic to port (1) 1641
4, via a direct request to a .html file under (1) status/
1, via crafted requests that are later listed on a summary page.
1, via crafted input to application scripts
1, via crafted input to an application script.
5, via a crafted file associated with the type (aka monitor type name) parameter.
2, via an invalid character in a pathname
2, via the (1) menu or (2) item parameter.
2, via the _UploadID parameter.
4, via shell metacharacters in the (1) first
5, via a modified value of the merchant's e-mail address
4, via (1) the wrsApprovedURL parameter to addRuleAttrWrsApproveUrl.imss or (2) the src parameter to initUpdSchPage.imss.
5, via a saveAuth action.
4, via a crafted XML file.
5, via unspecified vectors.
2, via the network-interface menu
4, via a URL in a GET request.
1, by sending packet data during the processing of messages associated with OPC items.
2, via long input data
4, via a crafted request.
2, via unspecified Ethernet traffic that fills a buffer
1, via crafted ICMP packets.
4, via (1) malformed HTTP traffic or (2) malformed IP packets.
1, via long input data
0, via long input data
4, via a long string to an unspecified port.
4, via a crafted URI.
5, via unspecified vectors.
4, via a large number of ARP packets
4, via a Trojan horse DLL in the current working directory
0, by leveraging certain adjacency and sending a malformed request on TCP port 61460
4, via a malformed request on TCP port 443
1, via unspecified vectors
0, by establishing many IPv6 neighbors
1, via unknown vectors related to Outside In Filters
2, via unknown vectors related to Outside In Filters
1, via unknown vectors related to Outside In Filters
1, via unknown vectors related to Outside In Filters
4, via unknown vectors related to Outside In Filters
2, via unknown vectors related to Solaris Management Console.
2, via unknown vectors related to Candidate Gateway.
2, via unknown vectors related to in.tnamed and NameServer.
2, via unknown vectors related to sort.
1, via unknown vectors related to pkg.depotd.
2, via unknown vectors related to Supply Chain Relationship Management.
1, via unknown vectors related to Server.
2, via unknown vectors related to Server.
2, via unknown vectors related to Web Client (CS).
2, via unknown vectors related to Siebel Core - Server Infrastructure.
1, via unknown vectors related to Siebel Core - Server Infrastructure
2, via unknown vectors related to Siebel Core - Server Infrastructure
2, via unknown vectors related to Siebel Apps - Multi-channel Technologies.
1, via unknown vectors related to Redirects
2, via unknown vectors related to Panel Processor.
3, via unknown vectors.
2, via unknown vectors related to Query.
1, via unknown vectors related to Self-Service (Student Records).
0, via unknown vectors related to Vino server.
2, via unknown vectors related to Kernel.
2, via unknown vectors related to Kernel/System Call.
2, via unknown vectors related to Outside In Filters.
2, via unknown vectors related to Siebel Documentation.
2, via unknown vectors related to Portal Framework.
4, via a malformed XTENSION header of a .fit file
2," via the """"Comment (optional)"""" field."
4, via a crafted REST request.
2, via the id parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via unknown vectors.
1, via crafted input
1, via crafted input
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
5, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
1, via vectors related to log data.
3, via unknown vectors.
4, via a malformed message packet.
3, via unknown vectors.
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
4, via a crafted greeting banner.
4, via a crafted URI.
1, via crafted input involving (1) Mozilla Firefox 3.0.9 and earlier or (2) unspecified browsers.
5, via (1) a URL accessed during use of the Mail template in the WebMail UI or (2) a URL accessed during use of Domino Help through the Domino HTTP server.
2, via an IM chat.
4, via a connection to a web service created with the Rational Business Developer product.
4, via vectors involving an expired password.
4, via a symlink attack on a (1) temporary file or (2) log file.
4, via a direct request to STLOG.NSF. IBM X-Force ID: 78048.
0, via a crafted parameter in a URL.
1, via crafted arguments in a SET COLLATION statement.
4, via a symlink attack on the /tmp/ioq3.pid temporary file.
2, via the Referer HTTP header.
2, via the (1) link
4, via an adduser admin action.
2, via incoming frames with crafted length fields.
3, via unspecified vectors.
4, via shell metacharacters in the UUID field to the server process (bcfg2-server).
0, by reading application data after an improper connection-close request
3, via vectors involving a %00 sequence in an Ajax link URL associated with a Wicket app.
4, via a crafted inline image in a message.
5, via a crafted OGG file.
4, via unspecified vectors.
4, via a file with a crafted name and a forbidden extension
3, via unknown vectors.
2, via the (1) lti_typename or (2) lti_toolurl parameter.
4, by renaming a repository.
4, via shell metacharacters in the file parameter.
0, via a long filename in /dev/fd
4, via (1) a PDU with the numcreds field value greater than the number of actual elements to the __pmDecodeCreds function in p_creds.c; (2) the string byte number value to the __pmDecodeNameList function in p_pmns.c; (3) the numids value to the __pmDecodeIDList function in p_pmns.c; (4) unspecified vectors to the __pmDecodeProfile function in p_profile.c; the (5) status number value or (6) string number value to the __pmDecodeNameList function in p_pmns.c; (7) certain input to the __pmDecodeResult function in p_result.c; (8) the name length field (namelen) to the DecodeNameReq function in p_pmns.c; (9) a crafted PDU_FETCH request to the __pmDecodeFetch function in p_fetch.c; (10) the namelen field in the __pmDecodeInstanceReq function in p_instance.c; (11) the buflen field to the __pmDecodeText function in p_text.c; (12) PDU_INSTANCE packets to the __pmDecodeInstance in p_instance.c; or the (13) c_numpmid or (14) v_numval fields to the __pmDecodeLogControl function in p_lcontrol.c
4, via a large number of PDUs with (1) a crafted context number to the DoFetch function in pmcd/src/dofetch.c or (2) a negative type value to the __pmGetPDU function in libpcp/src/pdu.c.
1, by modifying the physical address space in a way that triggers excessive shared page search time during the p2m teardown.
2, via the (1) page
4, via a symlink attack on a file in an image that uses a symlink that is only readable by root.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-3361.
2, via unknown attack vectors.
5, via a crafted ODF style in an ODF document.  NOTE: this is the same vulnerability as CVE-2012-3456
4, via a crafted ODF style in an ODF document.  NOTE: this is the same vulnerability as CVE-2012-3455
1, via vectors related to (1) the verify function in application/controllers/alerts.php
1, via vectors related to (1) the messages admin functionality in application/controllers/admin/messages.php
4, via vectors related to _get_countries functions.
2, via an incident id.
1, via vectors related to a site name.
0, via the value parameter in a username action.
1, via crafted environment variables in the command line.
5, by replacing a script file.
0, via an OpenVPN configuration file that specifies execution of a script upon occurrence of an OpenVPN event.
1, by waiting for a specific PID value to be assigned to a target process.
1, via vectors related to a missing range check of map->index.
0, via vectors involving hostnames and URIs in the (1) mod_imagemap
4," via a symlink attack on the """"list"""" file in the current working directory."
5, via (1) a large number of headers or (2) a large number of forged headers that trigger hash collisions predictably.  bucket.
5," by using """"javascript:"""" in an href attribute in the body of an HTML-formatted email."
4, via a crafted grant reference that triggers a write to an arbitrary hypervisor memory location.
4, via vectors related to failed DNS requests.
4, via a .. (dot dot) in the (1) geshi-path or (2) geshi-lang-path parameter.
4, via unspecified vectors.
3, via multiple X-Forwarded-For headers in a request.
3, via unknown vectors.
5, via a small value for a certain length field in a capture file.
4, via a crafted ASCONF chunk.
5, by sending a Station Key Pad Button message and closing a connection in off-hook mode
5, via a crafted web page that is not properly handled during a reload
4, via a web page that contains invalid character encodings.
2," via an absolutely positioned wrap=off TEXTAREA element located next to an """"overflow: auto"""" block element."
1, via crafted characters in domain names
2, via JavaScript code that changes a form before submission.
2," via an IFRAME element that uses the src=""""#"""" syntax to embed a parent document."
1, via crafted WebGL content
4, via a malformed client identifier.
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
5, by uploading a file with a file with an executable extension followed by a safe extension
1, by leveraging access to the management interface.
3, via unspecified vectors.
4, via a crafted JLS file.
4, via a .. (dot dot) in the data parameter.
0, by leveraging improper URL canonicalization during the handling of the location.href property.
4, via a crafted web site that leverages improper WebSockets URI handling.
4, via a crafted text glyph.
0, by installing an input method that intercepts keystrokes.
4, via a crafted JPEG image.
4, via a crafted racoon configuration file.
3, via vectors related to ending a FaceTime call.
0, via vectors involving use of the camera.
4, via a crafted user-data header in an SMS message.
0, via vectors involving JavaScript arrays.
2, via an HTML document with a crafted _qtactivex_ parameter in an OBJECT element.
5, via a crafted style element in a QuickTime TeXML file.
4, via a crafted MIME type.
4, via unspecified vectors.
4, via a crafted Targa image.
4, via a crafted rnet box in an MP4 movie file.
4, via a crafted PICT file.
4, via a crafted transform attribute in a text3GTrack element in a QuickTime TeXML file.
2, via the highlight parameter in a Search action.
0, via the id parameter to (1) item_delete.php
2, via unknown attack vectors.
2, via the (1) absender_name
0, by uploading an executable file and then accessing it via a direct request.
3, by uploading a PHP file with a .php.ttf extension
4, via a crafted packet to TCP port 46824.  NOTE: some of these details are obtained from third party information.
4, via a long password in an Access-Request packet.
4, via the (1) SerialNumber field to activate.asp or (2) UID field to User-Edit.asp.
1, via vectors related to the (1) BACapp and (2) Bluetooth HCI dissectors
5, via vectors related to the R3 dissector
2, via the Host HTTP Header.
2, via the Host HTTP Header.
2, via the video directive.
2, via multiple URLs in an img tag.
3, via vectors related to (1) b or (2) div tags.
2, via the p parameter.
2, via the time[0][0] parameter.
2, via the (1) url parameter to top.php or (2) time[0][0] parameter to forensics/base_qry_main.php
2, via the (1) groupname parameter in a savecategory in the users module; (2) virtual_filename
2, via the (1) username
4, via a direct request to (1) admin/templates/babygekko/index.php or (2) templates/html5demo/index.php.
2, via the (1) invoice_number or (2) tags parameter to index.php/invoice_search.
2, via the (1) first_name or (2) last_name parameters.
4, via a Trojan horse ehtrace.dll that is located in the current working directory.
2, via the (1) select0 or (2) select8 parameters.
4, via a long string in the subject parameter when creating a post.
4, via a long string in an initiation request.
2, via the title parameter.
4, via a long Unicode string
4, via (1) the query string to d4d/exporters.php
4, via a large volume of TCP queries.
2, via the subpage parameter to index.php.
2, via the (1) name or (2) description parameter.
2, via the header parameter.
4, via (1) the result parameter to data/file/edit.php
0, via the id parameter to (1) data/gallery/edit.php
2, via unspecified parameters to (1) 95.php
3, by modifying a pass value within JSON data.
4, via a .IT file.
4, via a .IT file.
4, via spoke-to-spoke traffic
4, via an MVPNv6 update
1, via network traffic
1, via crafted packets
4, via a large volume of hub-to-spoke traffic
4, via a crafted XMPP stream header
4, via a crafted WRF file
4, via a crafted WRF file
4, via a crafted WRF file
4, via a crafted WRF file
4, via a crafted WRF file
4, via a crafted WRF file
2," by sending IPv6 packets in an unspecified scenario in which expected packet drops do not occur for """"a small percentage"""" of the packets"
2, via the unconfirmed parameter to the user page.
2, via the delete parameter to the editattributes page.
2, by sending many requests.
1, by establishing an IPv6 lease in an environment where the lease expiration time is later reduced.
4, via a direct request to (1) admin/include_calendar.php
2, via the (1) paste_user or (2) paste_lang parameter to (a) list.php or (b) show.php.
2, via the (1) paste id in admin/modules/mod_pastes.php or (2) show.php
2, via the username parameter.
4, via textinputs array parameters.
3, via unknown vectors.
5, via unknown vectors.
4, via a crafted application that interacts with an unspecified Sleipnir Mobile function.
4, via a crafted application that leverages the storage of these comments on an SD card.
4, via unspecified homograph characters
3, via unknown vectors.
0, via vectors that trigger a crafted database entry.
2, via the keywords parameter.
1, via vectors related to the error page.
4, via a crafted comment.
3, via unspecified vectors.
4, via a crafted list file (aka a crafted file for the -ef option).  NOTE: probably in most cases
4, via a crafted block_log field in the superblock of a .sqsh file
1, via crafted packets to TCP port 41013 (aka the upload port)
0, via the category_name parameter in an addsentcategory action.
4, via a .. (dot dot) in the (1) lang or (2) langid cookie to port 85.
5, via a URL in ReturnUrl to Default.aspx.
2, via the (1) username parameter to the send page
2, via the member_id and new_password parameters to index.php.
5, by uploading a file with an executable extension
2, via the (1) comment
2, via the (1) strf chunk in BI_RGB or (2) UYVY video data in an AVI file
4, via a UDP broadcast packet
4, via a Save action.
3, via unknown vectors.
4, via a crafted inf file.
2, via the p parameter.
2, via the p parameter.
4, via a crafted flm file.
2, via the subject of an email.
2, via an upd action.
0, via the id parameter to (1) profile.asp
2, via the (1) id parameter to diary_view.asp or (2) view_date parameter to default.asp.
2, via the oid parameter in a homepage action to index.php.
3, via shell metacharacters in unspecified command parameters
4, via shell metacharacters in a command that calls the system library function
2, via the sed e option
4, via a malformed XML document in a packet
0, via invalid MCTools parameters
2, by entering crafted command-line parameters on a Fabric Interconnect device
2, via long string values for unspecified parameters
0, by observing IPMI interface responses
2, via invalid parameters
2, via invalid parameters
3, by leveraging (1) local
1, by leveraging the network-operator role
4, via a malformed (1) RIPv4 or (2) RIPv6 message
2, via an invalid Smart Call Home contact address
5, by reading and forging control messages associated with Smart Call Home reports
1, by embedding commands in an unspecified parameter
2, by embedding commands in an unspecified parameter
0, via a full pathname in an image header
1," via crafted """"debug hardware"""" parameters"
1, via crafted parameters to a file-related command
1, via crafted parameters to a file-related command
2, by embedding commands in an unspecified parameter
1, by embedding commands in an unspecified parameter
1, by embedding commands in an unspecified parameter
1, via crafted command parameters within the command-line interface
1, via crafted command parameters within the command-line interface
1, via crafted command-line arguments
1, via crafted command-line arguments during a delete action
0," via a relative pathname in the """"file name"""" parameter"
4, via a crafted web site
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted file.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via the -orbit_exe_path command line argument.
2, via the groupid parameter.
4, via a Trojan horse DLL in the default downloads directory.
4, via a direct request
2, via an application that uses crafted arguments in a local diagchar_ioctl call.
2, via an application that uses crafted arguments in a local diagchar_ioctl call.
2, via an application that uses crafted arguments in a local kgsl_ioctl call.
0, by modifying the VGA window using /dev/nvidia0.
2, via the (1) Title
2, via the path parameter.
2, via the memberloginid cookie.
2, via the group parameter.
2, via the PATH_INFO.
2, via the subject_module_id parameter to (1) tce_edit_answer.php or (2) tce_edit_question.php.
2, via the question_subject_id parameter.
2, via the sort parameter.
2, via the (1) PATH_INFO or (2) query string to _admin/index.php or (3) first_name
2, via the query string to the calendar page.
2, via the (1) page parameter; or the (2) footer
2, via the (1) remote_user
4, via shell metacharacters in a string
4, via a long string in the first argument.
3, via the (1) page parameter to index.php
4, via a deletehtaccess action
4, via a .. (dot dot) in the (1) language parameter to learn/cubemail/install.php or (2) f parameter learn/cubemail/filemanagement.php
4, via a direct request to (1) learn/cubemail/restore.php or (2) learn/cubemail/dump.php.
4, via a direct request to learn/cubemail/refresh_dblist.php
0, via the emailsearch parameter
2, via an invalid character in the PHPSESSID
3, via the (1) link_idd parameter to 1_mobile/listings.php or (2) userid parameter to 1_mobile/agentprofile.php.
2, via the company name. NOTE: some of these details are obtained from third party information.
2, via the (1) aktion or (2) callurl parameter to modules/patient/mycare2x_pat_info.php; (3) dept_nr or (4) pid parameter to modules/importer/mycare2x_importer.php; (5) myOpsEintrag or (6) keyword parameter in a Suchen action to modules/drg/mycare2x_proc_search.php; or (7) name_last or (8) pid parameter to modules/patient/mycare_pid.php.
2, via the lang parameter.
2, via the (1) name_last
2, via the HTTP_USER_AGENT header.
0," via unspecified vectors related to """"server variables"
2, via the cid parameter.
2, via the cl_comments parameter.  NOTE: some of these details are obtained from third party information.
2, via the name parameter.
2, via the HTTP_ACCEPT_ENCODING header.
3, by uploading a file with an executable extension via an attachment in a message.
2, via the subject box of a message.
2, via the (1) PATH_INFO
1," via unspecified vectors related to the """"processing of the buttons of Xing and Pinterest""""."
2, via the xing-url parameter.
4, via unspecified vectors.
2, via the (1) notes parameter to (a) admin/agenteditor.php; (2) title
2, via the (1) view parameter to agentdisplay.php or (2) edit parameter to admin/admin.php.
5, via an addagent action or (2) modify an agent.
0, via the hid parameter to (1) holiday.php or (2) holiday_book.php
2, via the id parameter.
2, via the callback parameter.
4, via a crafted pcap-ng file.
4, via a small value for a BSON document length.
4, via a large speed (aka rate) value.
5, via a crafted speed (aka rate) value.
4, via a malformed packet.
4, via a crafted packet-trace file that triggers a buffer overflow.
2, via unknown vectors related to Content Server.
4, via a create action in the AdminUsers module to index.php.
4, via a crafted controller name.
4, via a long string in certain fields
2, via unspecified vectors related to the SDK.
4, via a long string in the fname parameter.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a negative size value in a TCP request to (1) NiwMasterService or (2) NiwStorageService.  NOTE: some of these details are obtained from third party information.
4, via (1) the PATH_INFO or (2) an arbitrary parameter.
5, via a PDF document with a crafted attachment that triggers calculation of a negative number during processing of cross references.
3, via unspecified vectors.
4, via a (1) long parameter value
4, via unspecified vectors.
4, via unknown vectors.
2, via unspecified vectors involving the SNMP system name of the attacking host.
4, via (1) a crafted table name during table creation
4, via a .. (dot dot) in the (1) logFile parameter in a logs action to brightmail/export or (2) localBackupFileSelection parameter in an APPLIANCE restoreSource action to brightmail/admin/restore/download.do.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted application.
0, via the blogName parameter to (1) community/blog.jsp or (2) community/blogSearch.jsp
4, via a crafted port-46824 TCP packet that triggers an incorrect file-open attempt by the _TCPIPS_BinOpenFileFP function
4, via a port-46824 TCP packet with a crafted positive integer after the opcode
4, via a port-46824 TCP packet with a crafted negative integer after the opcode
4, via port-46824 TCP packets specifying a file-open operation with opcode 0x78 and a .. (dot dot) in a pathname
5, via unspecified vectors.
3, via shell metacharacters in the second parameter.
5, via a crafted PDF document
4, via a File: link to a nonexistent image.
0, via a long parameter name
3, by uploading a crafted .htaccess file in an import.zip file and accessing an uploaded PHP file.
3, via unspecified vectors.
4, use (1) addBookmark.php
2, via the file parameter.
2, via the redirect_url parameter.
2, via the (1) file names to apps/user_ldap/settings.php; (2) url or (3) title parameter to apps/bookmarks/ajax/editBookmark.php; (4) tag or (5) page parameter to apps/bookmarks/ajax/updateList.php; (6) identity to apps/user_openid/settings.php; (7) stack name in apps/gallery/lib/tiles.php; (8) root parameter to apps/gallery/templates/index.php; (9) calendar displayname in apps/calendar/templates/part.import.php; (10) calendar uri in apps/calendar/templates/part.choosecalendar.rowfields.php; (11) title
2, via the (1) calendar displayname to part.choosecalendar.rowfields.php or (2) part.choosecalendar.rowfields.shared.php in apps/calendar/templates/; or (3) unspecified vectors to apps/contacts/lib/vcard.php.
1, via XML data containing external entity references
4, via a -1 value in the maxbytes field.
3, by leveraging course-editing capabilities.
2, via an encrypted file with a crafted header containing long salt data that is not properly handled during decryption.
4, via a long string
4, via a long protocol name.
5," via an """"XML Signature wrapping attack."""""
4, via a long string that triggers a malloc failure and use of the alloca function.
3, via vectors involving (1) errors.c or (2) mcrypt.c.
4, via a crafted web page.
4, via a request that lacks a session identifier.
1," via unspecified vectors related to """"palette reduction."""""
2, via unspecified vectors that trigger a Smarty exception.
4, via a crafted URL that points to Jenkins.
4," via a small """"TLS Message Length"""" value in an EAP-TLS message with the """"More Fragments"""" flag set."
4, via a dashboard_incoming_links edit action.
2, via unspecified input to (1) Debug
4, via a symlink attack on the (1) LCK..opencryptoki or (2) LCK..opencryptoki_stdll file in /var/lock/.
4, via a large number of zero width elements in the client-properties map in a connection.start-ok message.
4, via a crafted message
4, via unspecified vectors.  NOTE: this issue could also trigger an out-of-bounds read
2, via the (1) exc_to_s or (2) name_err_to_s API function
2," via an empty username in the """"Author"""" field in a commit."
4, via a user name in a private message.
3, by uploading a file with an executable extension followed by a safe extension
4, via a direct request.
5, via unspecified parameters.
5, via unspecified vectors.
2, via unknown attack vectors.
4, via unspecified vectors.
3, via unspecified vectors. NOTE: this refers to an issue in an independently developed Drupal module
2, via the (1) title or (2) alt parameter.
4, via unspecified vectors.
4, via a URL in the q parameter.
4, via a (1) user name or (2) email address.
2, via unspecified vectors to the (1) report or (2) Custom Services List page.
4, via unspecified vectors.
2, via the status labels parameter.
4, via a slide URL.
4, via unspecified vectors.
4, via a crafted (1) REQ_SUBNETS_ACCESSED or (2) REQ_CLIENT_ACCESSES command request to the PKL_CommandLength function or crafted (3) RPY_SUBNETS_ACCESSED
1, via vectors related to (1) an invalid subnet in a RPY_SUBNETS_ACCESSED command to the handle_subnets_accessed function or (2) a RPY_CLIENT_ACCESSES command to the handle_client_accesses function when client logging is disabled
4, via a large proxy.pac file.
4, via a crafted Content-Length size in an HTTP response header for a proxy.pac file request
5, via a crafted email.
4, via a crafted web page
1, via crafted username and password Host header values.
4, via a NUL byte in a file path.
4, via a long file name.  NOTE: it is not clear whether this is a vulnerability.
4, via unspecified vectors.
4, via the PATH_INFO to index.php.  NOTE: some of these details are obtained from third party information.
2," via the """"function name"""" line."
5, via a crafted pirq value that triggers an out-of-bounds read.
4, via unspecified vectors.
2, via the (1) pageStart or (2) pageSize to the displayCRL script
2, via the --plug-in argument to the highlight command.
4, via a crafted web site
4, via a crafted 3d model file that triggers a long error message
0, via an external database server
4, via a crafted DOCTYPE declaration in an XRDS file.
4, via a crafted string.
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified parameters in (1) inc/inc.ClassUI.php or (2) out/out.DocumentNotify.php.
3, via unknown vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a long database name in a request.
4, via a Table Operations (1) TRUNCATE or (2) DROP link for a crafted table name
2, via the (1) User Agent or (2) Connection variable.
4, via a crafted URL.
2, via the (1) user_groups[] parameter to admin/code/tce_edit_test.php or (2) subject_id parameter to admin/code/tce_show_all_questions.php.
2, via the (1) cid or (2) uids parameter.
4, via a crafted uid field
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a DHCP packet
1, by establishing an outbound SSH session
0, via vectors that trigger incorrectly terminated HTTP sessions
2, via the (1) url
2, via the signature in an email.
0, via vectors involving the sort_col variable in the list_items function
2, via the PHPSESSID.
1, via unspecified vectors related to file update.
3, by constructing a (1) symlink or (2) hard link
5, by using a crafted Info.plist file to control the gOkIfNotSecure value.
2, via the f_user_name parameter.
4, via a crafted applet that bypasses SecurityManager restrictions by (1) using com.sun.beans.finder.ClassFinder.findClass and leveraging an exception with the forName method to access restricted classes from arbitrary packages such as sun.awt.SunToolkit
2, via unknown vectors
2, via unknown vectors
2, via the announcementid parameter.
3, via vectors involving the disabling of browser JavaScript support.
1, via crafted packets.
4, via a crafted HTML document.
4, via a crafted packet.
3, via vectors involving a crafted pathname.
4, via a crafted packet that triggers a heap-based buffer overflow.
0, via vectors that trigger an out-of-bounds memory access.
4, via a crafted packet.
4, via a crafted QPW file.
2, via two zip commands.
4, via unknown vectors.
2, via unknown vectors related to a crafted link.
2, via the (1) policyLaunching
4, via unspecified vectors.
4, via unspecified vectors.
4, via the (1) ss
2, via the search parameter.
2, via the UserName parameter.
2, via the sysPassword parameter.
3, via unknown vectors.
4, via a Trojan horse (1) ssgp.dll or (2) dwmapi.dll file in the current working directory
4, via a Trojan horse wintab32.dll file in the current working directory
4, via a Trojan horse (1) mfc71loc.dll or (2) mfc71enu.dll file in the current working directory
4, via a Trojan horse (1) mfc71loc.dll or (2) mfc71enu.dll file in the current working directory
4, via a Trojan horse (1) mfc71loc.dll or (2) mfc71enu.dll file in the current working directory
4, via a Trojan horse dwmapi.dll file in the current working directory
2, via the dlsearch parameter to the default URI.
0, via the id parameter to (1) admin/accounts/
2, via the plan_id parameter.
4, via a crafted web site
4, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to an object that (1) was not properly initialized or (2) is deleted
3, by subscribing to a crafted RSS feed
5, via a crafted web site that triggers access to an object that (1) was not properly allocated or (2) is deleted
1, by visiting context roots in HTTP sessions on port 8080.
4, via a URL in the redirectURL parameter.
2, via the (1) userId or (2) address parameter in a getClientConfigFile action.
3, via unknown vectors.
4, via a crafted URI.
4, via a FRAME element.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted request containing a zero-valued byte.
4, via a Webconfig Users user-attribute field
4, via a crafted URI.
4, via unknown vectors.
4, via a crafted SQL statement.
3, via unknown vectors.
4, via a direct request for a directory URL.
4, via a crafted xml file.
4, via a crafted .TMD file.
4, via a Trojan horse dwmapi.dll that is located in the same folder as the current working directory.  NOTE: some of these details are obtained from third party information.
4, via a .. (dot dot) in the module_name parameter.
2, via the id parameter.
2, via the (1) context parameter to panel/index_amp.php or (2) panel/dhtml/index.php; (3) clid or (4) clidname parameters to panel/flash/mypage.php; (5) PATH_INFO to admin/views/freepbx_reload.php; or (6) login parameter to recordings/index.php.
2, via the gtitle parameter.
2, via certain vectors
2, via the filename parameter.
4, via a long string to the OpenFileDlg method.
0, via a full pathname in the dir parameter in a contents/Files action.
4, via a Trojan horse (1) enc_mp2v.200 or (2) CFHDDecoder.dll file in the current working directory
4, via a Trojan horse avrt.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) JT0DevPhase.dll file in the current working directory
4, via a Trojan horse (1) dwmapi.dll or (2) ibfs32.dll file in the current working directory
2, via unspecified vectors related to the GnuPG client.
2, via certain input
4, via a long BSTR string.
2, via the (1) subTab or (2) tab parameter to createAnomaly.do; (3) url
4, via a (1) comment to the news
2, via the url parameter
2, via the (1) title_en
4, via a crafted SKP file.
4, via a crafted PDF document
4, via a crafted PDF document
4, via a Trojan horse executable file in the installer directory.
2, via the themes_editor parameter in an add_template action to admin/index.php.
2, via an add action to admin/index.php or (2) conduct static PHP code injection attacks via the themes_editor parameter in an edit_template action to admin/index.php.
1, via unspecified vectors
2, via an extra in an Intent object
3, via vectors involving a symlink.
4, via a crafted application.
4, via a crafted signature in an HTML e-mail message.
4, via a PDF document with a crafted stream.
4, via a .. (dot dot) in the file parameter to libs/pdf.php.
4, via a .. (dot dot) in the url parameter to index.php.
2, via the (1) createrule parameter to dnat.cgi
0, via a long parameter to the Alert method.
0, via the u parameter in a (1) app0 or (2) app1 action.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
0, via the fieldnames parameter to index.php.
2, via the plugin parameter.
4, via (1) the having parameter in a manage action to index.php; (2) the Email field in an Add User action; (3) the Customer Name field in an Add Customer action; the (4) Street address
4, via a FRAME element.
4, via a jsession_id cookie.
2, via the banner message.
2," via the """"Search for an IP address"""" field."
4, via a .. (dot dot) in (1) the fileName parameter in a download action to source/loggin/page_log_dwn_file.hsp
4, via unspecified vectors.
2, via an arbitrary text field.
3, by uploading a file via an unspecified page.
2, via unspecified vectors
2, via the where parameter to a query URI for a REST service.
1, via crafted characters that are not properly handled during construction of error messages.
2, via the (1) TerminalId
2, by replacing the UserID value during a man-in-the-middle attack
4, via a large number of VOL elements in an SRS record.
4, via a /FSF/CMD request with a full pathname in a PATH element of an SRS record.
4, via a 126 /FSF/CMD request with a .. (dot dot) in a FILE element of an FSFUI record.
4, via a 130 /FSF/CMD request with a .. (dot dot) in a FILE element of an FSFUI record.
4, via (1) a crafted string to the AbsoluteLinks
4, via a crafted web site
2, via the (1) reqclass parameter to editrequestenduser.asp; the (2) sys_request_id parameter to editrequestuser.asp; the (3) sys_request_id parameter to enduseractions.asp; the (4) sys_request_id or (5) confirm parameter to enduserreopenrequeststatus.asp; the (6) searchsql
2, via the (1) sys_solution_id
4, via a modified (1) loggedinenduser
4, via a modified sys_request_id parameter.
4, via an element=sys_asset_id request
1, by sniffing the network.
4, via a URL in the a parameter.
4, via (1) the a parameter to assets/login or (2) the query parameter to assets/rangesearch.
5, via a crafted ZIP file that triggers incorrect processing of long pathnames by the Watch Folders feature.
0, via the parent parameter in an info action.
0, via the ids[] parameter in a link action.
4, via a long unicode string to (1) TListbox or (2) TComboBox.
0, via the id parameter in a browse action.  NOTE: some of these details are obtained from third party information.
2, via the full_name parameter in a moduser action to admin/admin.php.  NOTE: some of these details are obtained from third party information.
2, via the hash parameter to (1) dltorrent.php or (2) torrent_functions.php.
4, via a .. (dot dot) in the p parameter.
2, via the q parameter.
4, via a crafted string in HTTP header fields such as (1) If-Modified-Since
0, via the id parameter in a show action.
4, via unspecified vectors.
4, via admin/group_plans.html or (2) add extra packages via admin/extra_packs/create_extra_pack.html.
2, via an add action.
4, via a crafted Sjbz chunk in a djvu file.
1, via unspecified vectors related to the fillpdf_merge_pdf function and incorrect arguments
0, by establishing an SSH session from a client and then placing this client into a (1) slow or (2) idle state
3, by establishing a VPN session and then sending malformed IKEv2 packets
4, via a sequence of VTY management sessions (aka exec sessions)
4," via a """"no object-group"""" command followed by an object-group command"
0, via vectors involving BGP path attributes
4, via a crafted packet.
4, via a malformed packet.
3, via unspecified vectors.
4, via unspecified vectors.
3, via malformed arguments.
2, via the (1) readyCallback parameter to apps/files_odfviewer/src/webodf/webodf/flashput/PUT.swf
2, via the url path parameter.
2, via unknown vectors related to Portal
2, via unknown vectors related to Deployment.
3, via unknown vectors.
2, via unknown vectors related to Document Reference Library.
2, via unknown vectors related to Supplier Portal.
1, via unknown vectors related to Supply Chain Relationship Management.
2, via unknown vectors related to Global Spec Management.
2, via unknown vectors related to User Group Management.
4, via unknown vectors.
0, via the q parameter in a search action.
4, via a (1) ..%5c (dot dot encoded backslash) or (2) %2e%2e%5c (encoded dot dot backslash) in the PATH_INFO.
3, via unspecified vectors.
2, via the ext parameter.
2, via the (1) url or (2) message parameter.
2, via the Loginname parameter.
2, via the dbsel parameter to (1) main.php or (2) index.php; or (3) nsextt parameter to index.php.
4, via a long string in a PUT command.
1, via vectors related to audio devices.
1, via vectors related to a regular expression.
4, via unspecified vectors.
1, via vectors related to the handling of SVG filters.
1, via vectors related to video layout.
1, via vectors related to the handling of extension tabs.
1, via vectors related to the handling of plug-in placeholders.
4, via a crafted WebP image.
4, via unknown vectors.
4, via a response with chunked transfer coding.
1, via vectors related to SVG filters.
1, via vectors related to printing.
1, via vectors related to the Media Source API.
4, via vectors related to visibility events.
1, via vectors related to the URL loader.
4, via vectors related to PPAPI image buffers.
1, via vectors related to SVG layout.
4, via a malformed URL.
1, via vectors related to DOM handling.
3, via unknown vectors.
1, via vectors involving seek operations on video data.
1, via crafted JavaScript code in a PDF document.
3, via vectors involving seek operations on video data.
3, via vectors related to allocation of shared memory.
0, via vectors involving PDF fields.
4, via unspecified vectors.
0, via the id parameter in a (1) edit_category_post or (2) enable_category action to index.php.
0, via the id parameter in an enable_category action to index.php.
0, via the term parameter to (1) autocomplete.php
2, via the (1) field parameter to course_category/index_inline_editor_submit.php or (2) user/index_inline_editor_submit.php; or (3) id parameter to user/user_password.php.
4, via a direct request to (1) user/index_inline_editor_submit.php or (2) course_category/index_inline_editor_submit.php.
2, via the (1) pathext
4, via unspecified vectors.
4, via a crafted archive file.
4, via a crafted application.
3, via unspecified vectors.
1, via vectors related to access-log data.
1, via vectors related to tag embedding.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted application that leverages read permission for system log files.
4, via unspecified vectors.
2, by leveraging guest access.
3, via unspecified vectors.
4, via a crafted application that leverages read permission for system log files.
3, via unspecified vectors.
4," via """"''%2F"""" (dot dot encoded slash) sequences in the overlay_type parameter."
2, via the path info to (1) stats/index.php or (2) newsletters/edition.php or the (3) username parameter to users/remind_password.php
3, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
1, via unspecified vectors
4, via unspecified vectors.
3, via unspecified vectors.
4, via a URL in the pages[template] parameter.
2, via the shopping_url parameter.
4, via the (1) motclef parameter to achat/recherche.php or (2) PATH_INFO to index.php.
2, via the id parameter.
2, via the border parameter.
4, via a crafted (1) pagename or (2) area variable containing an executable extension
4, via unspecified vectors.
3, via unspecified vecotrs.
4, via a URL in the redirect parameter.
4, via a malformed packet.
4, via a malformed packet.
5, via a .. (dot dot) in the name parameter in a get_template action.
4, via a crafted request.
2, via the (1) return
2, via unspecified vectors
2, via the id parameter.
0, via the id parameter to (1) index.php or (2) gallery.php.
2, via the (1) lstid parameter to listings.php or (2) infoid parameter to index.php.
2, via the idteam parameter.
0, via the id parameter to (1) gallery_e.php
4, via a URL in the (1) GLOBALS[root_path] parameter to usr/extensions/get_tree.inc.php or (2) root_path parameter to usr/extensions/get_infochannel.inc.php.
2, via the id parameter.
2, via the windowed parameter.
2, via the id parameter.
4, via a symlink attack on a PID file
3, via unspecified vectors.  NOTE: this is only a vulnerability when the administrator does not follow recommendations in the product's installation documentation.
2, via the domain parameter.
4, via a getReportProblem upload action.
3, via unspecified vectors.
0, via the id parameter to index.php.
4, via the TOPIC_ID parameter.
2, via the f parameter.
2, via the message parameter to (1) messages_viewer.php
4, via (1) Troubleshooting in the Trace route Device module or (2) LDAP Username in the LDAP Configuration module.
2, via the lastname parameter in a process action.
3, by uploading a file with a double extension
2, via the sysPassword parameter.
2, via the url parameter
2, via the (1) pvcName parameter to webconfig/wan/confirm.html/confirm or (2) host_name_txtbox parameter to webconfig/lan/lan_config.html/local_lan_config.
2, via the sysUserName
4, via a long string in the (1) sub_path parameter to the StoreInRegistry function or (2) sub_key parameter to the InitFromRegistry function.
2, via the (1) url or (2) sec attributes in a redirect tag.
2, via an administrators action.
2, via the (1) delete_usrgrp[] parameter in a delete_usergroups action
2, via the (1) memberid or (2) groupid parameters in a removemember action or (3) id parameter to fs-admin/fs-admin.php
4, via a long string in an APPE command.
2, via the (1) PATH_INFO to calc.php
4, via a .. (dot dot) in the page parameter to index.php.
4, via a long string in an HTTP header field
2, via the id parameter.
2, via the pid parameter.
4, via a .. (dot dot) in the URI of an HTTP request.
2, via the (1) action
4, via a URL in the returnPath parameter in a validateLogin action to jforum.page.
4, via a crafted name of (1) an event
4, via a corrupt PDF file.
2, via the (1) action parameter
0, via the id parameter to (1) special.php
2, via the PATH_INFO
4, via a .. (dot dot) in a HTTP request.
4, via a long string to TCP port 23.
2, via the s parameter.  NOTE: some of these details are obtained from third party information.
5, via shell metacharacters in the command parameter to (1) inc/filefunctions.inc or (2) info.php.
0, via the login parameter in a login action to index.php.
2, via the (1) link
0, via the id parameter in a paywithtweet shortcode.
4, via a SAML assertion that lacks a Signature element
4, via a SAML assertion that lacks a Signature element
4, via a SAML assertion that lacks a Signature element
4, via a symlink attack on a temporary file with a predictable name in /tmp.
4, via a crafted ASF file.
4, via a crafted QT file.
4, via a crafted WMV file.
4, via a flood of ICMPv6 Neighbor Solicitation messages
4, via a flood of ICMPv6 Router Advertisement packets containing multiple Routing entries.
2, via the sortField parameter to (1) viewCustomers
0, by creating many different files whose names are associated with the same CRC32C hash value.
0, by leveraging the ability to write to a directory important to the victim
1, by leveraging access to a renderer process
2, via the (1) $name or (2) $description variables in edit_entry_handler.php
1, via vectors related to the user theme preference.
4, via a .. (dot dot) in the phppaleo4_lang cookie
2, via the wlcms_o_developer_name parameter in a save action to wp-admin/admin.php
0, via the wlcms_o_developer_name parameter in a save action to wp-admin/admin.php
4, via a crafted HTTP request.
1, by establishing multiple connections
4, via a malformed H.225 H.323 IPv4 packet
1, via unknown vectors
4, via a crafted series of RTCP packets
2, via the deld parameter.
4, via a long string in a (1) GET or (2) HEAD request to TCP port 30888.
2, via the (1) multi_title parameter to blocks/add/; (2) cost
2, via the field parameter.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-5167.
1, via unspecified vectors
4," via a Trojan horse DLL in a """"system folder."""""
2, via an email containing a base64 string that is decoded to incomplete multibyte characters.
4, via a direct request to wp-content/plugins/portable-phpmyadmin/wp-pma-mod.
4, via a crafted PNG file.
4, via a modified value of a frozen form field.
0, by visiting the Check Permissions page.
1, via vectors related to importing.
4, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
1, via unspecified vectors
4, via a crafted URL
4, via a crafted URL.
4, via a crafted URL.
3, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
4, via a request for a view without a name.
2, via an RSS feed request for a folder the user does not have permission to access.
4, via unspecified vectors.  NOTE: this identifier was SPLIT per ADT2 due to different vulnerability types. CVE-2012-6661 was assigned for the PRNG reseeding issue in Zope.
4, via a large bitmap image.
4, via unspecified vectors.
2, via the (1) IP address or (2) port number field in an OMP request.
4, via a crafted GFN that triggers a buffer over-read.
4, via a symlink attack on a /var/tmp/##### temporary file.
4, via unspecified vectors.
4, via a request with a header containing an empty token
3, via shell metacharacters in a command from a plugin
4, via unspecified vectors.
1," via unspecified vectors related to """"data coming from Twitter."""""
1," via unspecified vectors related to """"the link to reorder items."""""
0, by reading the logs in the Mandrill dashboard.
2," via unspecified vectors related to """"JavaScript settings."""""
4, via a server action or (2) enable a search index via an enable index action.
4, via unspecified vectors.
3, via unknown vectors.
3, via unspecified vectors.
3," via vectors related to (1) a predictable """"webhook URL key"""" and (2) improper sanitization of """"Webhook variables from POST requests."""""
0, by sniffing the network
2, via the (1) Menu Title (2) Link Title
3, via unknown vectors.
4, via a smiley acronym.
2, via the page title.
4, via a crafted D-Bus call.
4, via a symlink attack on /tmp/adb.log.
2, via partial HTTP requests
4, via a (1) page title or (2) crafted email message.
4, via a cookie name
4, via a crafted upload request.
0, via format string specifiers in a proxy name
2, via the Maxpanel token.
4," via vectors related to the """"user index method"""" and """"the path to the user resource."""""
2, via the mailto link.
4, via unspecified vectors.
2, via the path aliases.
2, via the (1) file name to apps/files_versions/js/versions.js or (2) apps/files/js/filelist.js; or (3) event title to 3rdparty/fullcalendar/js/fullcalendar.js.
1, via arbitrary POST parameters.
3, by uploading a crafted mount.php file in a ZIP file.
3, by uploading a file with a special crafted name.
2, via an OPAL connection with a party name that contains invalid UTF-8 strings.
2, via unspecified parameters to (1) app/models/hostext/search.rb or (2) app/models/puppetclass.rb
4, via a (1) RSS feed or (2) search result.
4, via a null byte in a file name.
2, via an external entity in a SVG file
1, by modifying the PYTHONPATH environment variable to reference a malicious Python module.
2, via the PATH_INFO to apps/bookmark/index.php.
3, via vectors involving a long input line that triggers a heap-based buffer overflow.
1," via vectors related to BDF fonts and the improper handling of an """"allocation error"""" in the bdf_free_font function."
1, via vectors related to BDF fonts and an ENCODING field with a negative value.
4, via a crafted spreadsheet file
4, via unspecified vectors.
3, via unspecified vectors.
4, via a CreateFTP action in the ftp_management module to the default URI
2, via the inFullname parameter in an UpdateAccountSettings action in the my_account module to zpanel/.
0, via the inEmailAddress parameter in an UpdateClient action in the manage_clients module to the default URI.
4, via a .. (dot dot) in the PATH_INFO to the help/ URI.
5, via a RealAudio file that triggers access to an invalid pointer.
4, via a crafted RealMedia file.
3, via shell metacharacters in the ipAddressTB parameter to (1) remoteAttack.pl or (2) guessPassword.pl in frameworkgui/; the filename parameter to (3) CSAttack.pl or (4) SEAttack.pl in frameworkgui/; the phNo2Attack parameter to (5) CSAttack.pl or (6) SEAttack.pl in frameworkgui/; the (7) platformDD2 parameter to frameworkgui/SEAttack.pl; the (8) agentURLPath or (9) agentControlKey parameter to frameworkgui/attach2agents.pl; or the (10) controlKey parameter to frameworkgui/attachMobileModem.pl. NOTE: The hostingPath parameter to CSAttack.pl and SEAttack.pl vectors and the appURLPath parameter to attachMobileModem.pl vector are covered by CVE-2012-5878.
2, via the (1) agentPhNo
3, via the (1) id parameter to admin/index.php or the (2) username or (3) password parameter in blocks/loginbox/loginbox.template.php to index.php.  NOTE: some of these details are obtained from third party information.
3, via the (1) search_string or (2) where parameter in a contacts action
2, via the (1) callback parameter in a color_selector action
0, via an invalid value in a (1) RetrieveProp or (2) RetrievePropEx SOAP request.
4, via a block that references itself.
2," via the """"block names."""""
2, via unspecified vectors
4, via a crafted URL.
4, via unspecified vectors.
2, via unspecified vectors that trigger a SQL error message.
4, via vectors involving the RNVisibility page and unspecified screens
3, via unspecified vectors.
4, via a crafted template.
2," via unspecified vectors involving """"Inadequate protection."""""
2, via the (1) uid parameter in an add_friend action to ajax.php; id parameter in a (2) share_object
0," via the srch_txt parameter in a """"the_search_text"""" action to wp-admin/admin-ajax.php."
1, via crafted IRC colors that are not properly decoded.
5, via a crafted file name that triggers an incorrect string-length calculation when the file is added to VLC.  NOTE: it is not clear whether this issue crosses privilege boundaries or whether it can be exploited without user interaction.
4, via unspecified vectors.
4, via a crafted request to www/apps/KiesAir/jws/ssd.php.
2, via the activityid parameter in a stats action.
2, via the field parameter.
2, via the PATH_INFO to (a) checkuser.php
4, via a (1) crafted Connection HTTP header; a return carriage control character in the (2) Accept Language header
4, via a long string in the (1) request line or (2) HTTP Referer header to TCP port 54444
2, via an HTTP header without a name.
3, via shell metacharacters in the hostingPath parameter to (1) SEAttack.pl or (2) CSAttack.pl in frameworkgui/ or the (3) appURLPath parameter to frameworkgui/attachMobileModem.pl.
0, via a full pathname argument to the Save method.
1, via vectors related to charts.swf
1, via vectors related to uploader.swf
4, via an XMLRPC request or a JSONRPC request
3, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) edit perspective or (2) autologin feature.
2, via an add action
5, by uploading a file with a .php;.gif extension
2, via the postId parameter.
2, via the OTR_HEADS[] parameter in an edit action. NOTE: some of these details are obtained from third party information.
2, via the (1) OB_ID parameter in a single action to admin/action/objects.php
2, via the arg4 parameter.
0, via the scheduled parameter to index.php.
4, via a crafted RLE compressed bitmap file such as a DIB
4, via a long string in a FEAT command.
4, via (1) the URI in an about: page or (2) the last visited URL in the LastVisitWriteEn function in function.js.
4," via a .. (dot dot) in the module parameter in a """"3"""" action."
0, via the conditions[usergroup][] parameter in a search action to admin/index.php.
0, via the conditions[usergroup][] parameter in a search action to admin/index.php.
2, via the root parameter.
2, via the message body.
0, via the id parameter to (1) page.php or (2) single.php.
0, via the redirect_to parameter to wp-login.php.
2, via the (1) newmsg or (2) rtext parameter.  NOTE: some of these details are obtained from third party information.
2, via direct request to (1) view.php
4, via a direct request to (1) docs/new/seditio-createnew-160.sql
4, via a long string in an aiff file.
3, by creating and deleting a directory.
2, via the (1) find or (2) replace fields to havalite/findReplace.php; (3) username parameter to havalite/hava_login.php
2, via directory traversal sequences in a log pathname.
5, via a crafted application/x-amf request.
4, via a crafted URL.
3, via vectors involving mail
4, via a long (1) ComboList or (2) ColComboList property value.
4, via a long TabCaption string.
4, via unspecified vectors.
4, via unknown vectors.
3, via unknown vectors.
0, via fields in XML asset data to discoveryServlet/WsDiscoveryServlet
3, via shell metacharacters that follow a whitelisted command.
2, via the menu parameter.
5, via a .. (dot dot) in the PATH_INFO of an sdcard/ request or (2) modify arbitrary files via a .. (dot dot) in the req_page parameter to en/sms.cgi.
1, via crafted HTTP requests
4, via a ... (dot dot dot) in a URI.
4, via a crafted request.
4, via unspecified vectors.
2, via unspecified vectors
5, via a certain buttonClicked value in an internal webauth_type request
5, via screens/aaa/mgmtuser_create.html or (2) insert XSS sequences via the headline parameter to screens/base/web_auth_custom.html
2, via the headline parameter
2, via the (1) cm or (2) uri parameters to (a) perfigo_weblogin.jsp
2, via the page parameter.
4, via a long string in a lst file.
2, via the cat_id parameter.
4, via a crafted MP3 file.
2, via the code parameter.
2, via the users page in an adminpanel action to index.php.
4, via a long string in a gpx file.
4, via (1) a long string or (2) invalid characters in a cookie
3, by reading pcap-ng files.
5, via a zero value in a sub-type length field.
4, via a crafted Duplicate TSN count.
4, via a crafted Number of Sources value.
4, via a malformed packet.
4, via a crafted packet.
1, via unspecified vectors
4, via a .. (dot dot) in the deld parameter.  NOTE: this can be leveraged using CSRF (CVE-2012-5450) to allow remote attackers to delete arbitrary files.
4, via a crafted session
4, via a crafted SFTP session
2, via their hash keys.
4, via a .. (dot dot) in a file name.
3, by uploading a file with an executable extension
2, via the page name in a rss link.
4, via a crafted packet.
4, via a crafted filename.
4, via a crafted filename.
4, via (1) the refresh parameter to PortfolioPublishServlet.java (aka demo/portfolioPublish or Market Data Publisher)
4, via a crafted URI.
4, via a symlink attack on (1) /tmp/changelog or (2) /tmp/.git-effort.
4, via a (1) data:text or (2) vbscript link.
3, by opening a file descriptor with a large integer value.
4, via a long (1) hostname
4, via a username
2, via the @action parameter to support/issue1.
2, via the otk parameter.
2, via the (1) @ok_message or (2) @error_message parameter to issue*.
4, via an (1) empty match attribute in a XSL key to the xsltAddKey function in keys.c or (2) uninitialized variable to the xsltDocumentFunction function in functions.c.
3, via the (1) subject or (2) content values of a note in a system.addNote XML-RPC call.
4, via a crafted HTML document that references Shockwave content with a certain compatibility parameter
4, via a Shockwave movie that contains an Xtra URL
2, via an SHU (aka search user) request.
0, via (1) the filename header in an SCH request or (2) the userid component in a DUPF request.
2, via the URL parameter.
0, via the q parameter to admin/admin_search/.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
4, via a crafted market: URI in the SRC attribute of an IFRAME element.
0, via the errMsg parameter in a video-lead-form action to wp-admin/admin.php.
4, via a request that lacks a timezone
2, via the (1) username or (2) pwd parameter to userRpm/NoipDdnsRpm.htm.
5, via unspecified vectors.
4, via a large input.
4," via a """"commonly available simple GPS location spoofer."""""
4," via a """"commonly available simple GPS location spoofer."""""
4, via a log entry that is not properly handled within the Log Manager component
4, via a comment.
2, via the (1) redir or (2) mkey parameter to waf/pcre_expression/validate.
0, via the conversationContext parameter to (1) admin/auditTrail.jsf
4, via unspecified vectors.
1, via crafted data.
4, via IP packets.
1, via event data fields.
4, via a crafted User-Agent HTTP header that is not properly handled in a View Troubleshooting Report action.
4, via a crafted RSS service link
1, via unspecified vectors
4, via a long string to the password argument.
0, via the news_title parameter in a create action.
2, via the (1) download_url
4, via unspecified vectors.
5, via unspecified vectors.
4, via a crafted feed.
2, via the (1) FirstName
4, by causing a failure of a single checking service.
4, via vectors involving an unspecified sequence of loading of documents and loading of data: URLs.
1, via crafted JavaScript code that overrides methods of unspecified native objects in documents that have different origins.
4, via a malformed SVG image.
4, via a long HTTP response.
0, via vectors involving web script in an error page.
4, via a high rate of HTTP requests.
4, via a request to data/site/delete.
4, via unspecified vectors.  NOTE: this can be leveraged with CVE-2012-6081 to execute arbitrary code.
5, by uploading a file with an executable extension
4, via a URL in the redirect_to parameter.
4, via a .. (dot dot) in the fileget parameter in a profile action to index.php.
2, via the partial or full name of a process.
2, via the id parameter.
2, via the id parameter.
2, via the (1) page parameter in zing.inc.php or (2) notes parameter in fws/pages-front/onecheckout.php.
2, via the (1) uname or (2) pass parameters in a login action.
4, via a nouveau action in the security module to cars/ADMIN/index.php; (2) create a user or (3) create a sub user via a sub_accounts action in the home module to USERS/index.php; or (4) change profile information via an edit action in the profile module to USERS/index.php.
3, by uploading a file a double extension
2, via the (1) PWRS or (2) Description field when posting a new vehicle; (3) news title when creating news; (4) Name when creating a sub user; (5) group name when creating a group; or (6) dealer name
3," via the (1) delete_id parameter or (2) extension parameter in an """"Update Setting"""" action to wp-admin/admin.php."
2, via unspecified vectors to (1) plugin_hook.php
2, via the jsoncallback parameter.
2, via the message parameter in an income action to administrator/index.php.
0, via the q parameter to index.php.
2, via the (1) question parameter to in /modules/poll/add.php or (2) question or (3) answer parameter to modules/poll/edit.php.
2, via an add action to the poll module.
0, via the start parameter to mod.php.
2, via the (1) select_sort or (2) opt_search_select parameters. NOTE: this issue could not be reproduced by third parties.
0, via the id parameter to admin/versions.
4, via a .. (dot dot) in the p parameter.  NOTE: some of these details are obtained from third party information.
4, via (1) the p parameter in the getMenus function in codes/wcms.php; or the COMMENT parameter in (2) blog.php
2, via the id parameter.
2, via the id parameter.
2, via the code_id parameter.
2, via the PATH_INFO.
2, via the PATH_INFO to (1) themes/default/tile_search/index.tmpl.php
0, via the id parameter to (1) galleryphoto.php or (2) gallery.php; or the roomid parameter to (3) room.php or (4) room2.php.
4, via a crafted application.
4, via a crafted text/x-gwt-rpc request to novelllogmanager/datastorageservice.rpc
5," via """"the clipText returned from the flash object"
4, via a Portable Executable (PE) file with a resource section containing a string that has many tab or line feed characters.
0, via the message[message_text] parameter to chat/add_messag
2, via the discussion title.
2, via the (1) User/FirstName or (2) User/LastName parameter to the edit user page.  NOTE: some of these details are obtained from third party information.
2, via the (1) AboutMe/RealName
2, via the size value for a string in the resource section of a Portable Executable (PE) file.
2, via the (1) comment
2, via the status parameter.
0, via the view parameter to index.php.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
2, via uppercase characters in JavaScript events within user-defined labels.
4, via unspecified vectors.
4, via shell metacharacters in the logic of a custom rule.
5, via a long IDS_PLUGIN_NAME string in a plug-in configuration file.
4, via a taxonomy vocabulary name.
0, via vectors involving autocomplete results.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a stopforumspam.com API response
2, via an image file name.
2, via the bathrooms1 parameter to (1) demo2/search.php or (2) search.php.
2, via the cat_id1 parameter.
2, via the (1) garage1 or (2) bathrooms1 parameter to vacation/1_mobile/search.php
2, via the link_idd parameter in a login action.
2, via the cat parameter.
2, via the look parameter.
1, via crafted input
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, by using the command-line interface for a crafted command
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via a symlink attack on a .augsave file in a backup save action
2, via the Page parameter.
4, via a .. (dot dot) in the name parameter.
1, via XML data containing an external entity declaration in conjunction with an entity reference
2, via the BusyBox CLI
4, via a subtitle dialog without text.
1, via crafted 3GPP TS 26.245 data.
1, via vectors related to the rtp format.
4, via unspecified vectors.
2, via the (1) groupid parameter in an editgroup action or (2) usergroup_id parameter in an edit_usergroup action.
2, via the groupid parameter in an addforum action to wp-admin/admin.php.
0, via the width parameter in a soundcloud_is_gold_player_preview action to wp-admin/admin-ajax.php.
0, via the groupid parameter in an editgroup action.
2, via the username field.
2, via the id parameter.
2, via the (1) xyz_em_campName to admin/create_campaign.php or (2) admin/edit_campaign.php
2, via the (1) bulk parameter to media-library-categories/add.php or (2) q parameter to media-library-categories/view.php.
4, via a new-client action.
2, via the (1) full name or (2) file title to accounts/admin/index.php or (3) comment parameter in the support page to accounts/index2.php.
2, via an editable slug field.
5, via a post_id value.
4, via a flood of SYN+FIN TCP packets
3," via vectors related to """"parameter names and values."""""
0, via the type parameter to view_channel.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the time parameter to (1) videos.php or (2) channels.php.  NOTE: some of these details are obtained from third party information.
2, via the (1) cat parameter to channels.php
1, via improper file upload.
4, via a .. (dot dot) in the path parameter to (1) add_headers.php or (2) minify.php.
4, via a .. (dot dot) in the pageflipbook_language parameter.
2, via the (1) resetkey or (2) inConfEmail parameter to index.php
4," via a multibyte character value of """"0xffff"""" to the iconv function when converting IBM930 encoded data to UTF-8."
2, via the (1) syslocation
4, via a crafted URL.
2, via the title attribute
4, via a .. (dot dot) in the file parameter
2, via the shout parameter in a shout action.
2, via the (1) reportreason parameter in actions/doreport.php or (2) modnotes parameter in actions/updatereport.php.
0, via the reason parameter in (1) actions/nominatemedal.php or (2) actions/requestmedal.php.
2, via the mirrors[] parameter.
4, via a javascript: URI.
4, via a large number of connections.
2, via the (1) status parameter to admin/stats_monthly_sales.php or (2) country parameter in a process action to admin/create_account_process.php.
0, via the post_title parameter to wp-admin/post-new.php
4, via a crafted response.
4, via a crafted response.
4, via a large AIO iovec.
4, via a crafted SNDRV_COMPRESS_SET_PARAMS ioctl call.
4, via a password[]= (aka an empty array) in an action=login request to index.php.
2, via the (1) title parameter to music/create
1, via crafted input
1, via crafted input
4, via a crafted print job
4, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
0, via a crafted Visio file that triggers incorrect memory allocation
4, via a crafted WordPerfect document (.wpd) file
1, via crafted content
4, via a crafted URL
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
0, by including unspecified HTML5 elements and leveraging the installation of a WebKit browser on the victim's machine
1, via crafted URL parameters
4, via a crafted document containing instructions that reconstruct a certain security cookie.
4, via a crafted PDF document.
4, via a malformed request.
4, via a crafted application that sends an intent to com.avast.android.mobilesecurity.app.scanner.DeleteFileActivity with zero arguments.
5, via (1) the nHistoryId parameter to WebProd/pages/pgHistory.asp or (2) the OrderBy parameter to WebProd/pages/pgadmin.asp.
2, via the (1) Number or (2) UpdatePage parameter to WebProd/cgi-bin/AskiaExt.dll.
2, via the File parameter.
2, via the username and user_level parameters or (2) enable remote administration via the is_telnet_primary and is_telnet_secondary parameters.
4," via (1) the WebFTP Overview """"Create new directory"""" field or (2) the body of an e-mail autoresponder message."
4, via a long directory name in a (1) DELE
4, via a crafted PATH environment variable.
4, via a crafted text message that is transmitted by a managed phone.
0, via the id parameter to (1) addressbook/register/delete_user.php
4, via a crafted ZIP archive.
4, via a packet to UDP port 69.
4, via a crafted request over the Agent-Server communication channel.
4, via a crafted request over the Agent-Server communication channel
4, via a NEW USER action.
4, via a long string in a read request.
2, by performing nested virtualization in a way that triggers errors that are not properly handled.
4, via a symlink attack on /tmp/fedora-business-cards-buffer.svg.
2, by using the inotify API on the /dev/ptmx device.
4, via a crafted YAML object to the (1) fact or (2) report import API.
2, via an API request.
4, via a (1) XMLHttpRequest or (2) AJAX request.
5, via unspecified vectors. NOTE: This is a different vulnerability than CVE-2013-0194 and CVE-2013-0195.
5, via unspecified vectors. NOTE: This is a different vulnerability than CVE-2013-0193 and CVE-2013-0195.
5, via unspecified vectors. NOTE: This is a different vulnerability than CVE-2013-0193 and CVE-2013-0194.
0, via the match_type parameter to bugs/search.php.
1, via crafted mount point settings.
4, via unknown vectors.
3, by uploading a file with an executable extension
4, via unknown vectors.
4, via vectors related to escaping and Puppet commands.
0, by triggering certain error conditions.
4, via a relationship name.
2, via unspecified field labels.
4, via a crafted request that triggers a buffer over-read.
4, via a long quoted method.
2, via the params[twitter_username] parameter to action/widgets/save.
4,send HTTP requests to
3, via vectors involving (1) gallery shortcodes or (2) the content of a post.
4, via a long string in the llogin version.
2, via the subject parameter.
3, via unknown vectors.
4, via a symlink attack on /tmp/xnbd.log.
4, via a crafted (1) mxit or (2) mxit/imagestrips pathname.
4, via a long HTTP header.
4, via unspecified vectors.
1, via crafted serialized attributes that cause the +serialize+ helper to deserialize arbitrary YAML.
2, via the (1) site_name or (2) site_url parameter to apps/external/ajax/setsites.php.
4, via (1) a crafted iCalendar file to the calendar application
2, via the lat and lng parameters to apps/calendar/ajax/settings/guesstimezone.php
0, via the v parameter to apps/calendar/ajax/changeview.php
2, via the timezone parameter.
0," via unspecified vectors related to """"inclusion of the Amazon SDK testing suite."""" NOTE: due to lack of details"
3, via unknown vectors.  NOTE: this entry has been SPLIT due to different affected versions. The core/settings.php issue is covered by CVE-2013-7344.
2, via the group input field parameter.
4, via a zero length LDAP control sequence.
4, via a crafted external XML entity in an XML document
4, via a large number of new derivative requests.
2, via the username in the new manager autocomplete field.
1, via vectors related to the Yandex.Metrica service data.
3, via unspecified vectors.
2, via the full name field.
2, via the full name field.
2, via the author field.
2, via the menu link title.
1, via crafted a (1) Watchdog message or (2) admin setting.
4, via a .. (dot dot) in the (1) view
4, via a connection request without a username/dn
4, via a symlink attack on /tmp/smtp.log.
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors related to Security.
1, via unknown vectors related to Server Partition.
2, via unknown vectors related to InnoDB.
2, via unknown vectors related to Query.
2, via unknown vectors related to Security.
2, via unknown vectors related to Siebel Calendar
2, via unknown vectors related to Siebel Calendar
2, via unknown vectors related to Stored Procedure.
2, via unknown vectors related to PeopleCode.
2, via unknown vectors related to Mobile Company Directory.
0, via unknown vectors related to Security.
2, via unknown vectors related to Portal
2, via unknown vectors related to Outside In Filters
2, via unknown vectors related to Candidate Gateway.
1, via unknown vectors related to Security.
2, via unspecified vectors related to JavaFX
2, via unknown vectors via vectors related to Kernel/IPsec.
2, via unknown vectors related to Kernel/DTrace Framework.
4, via vectors related to CPU performance counters drivers.
1, via unknown vectors related to Utility/ksh93.
2, via unknown vectors related to Web Services
1, via unknown vectors related to Outside In Filters
1, via unknown vectors related to Deployment.
2, via unknown vectors related to Libraries.
2, via unknown vectors related to Deployment.
4, via unspecified vectors.
5, via a web site that contains crafted Flash Action Message Format (AMF) messages.
4, via a crafted URL.
4, via unspecified vectors.
4, via a modified cookie path.
2, via unspecified vectors
2, via unspecified vectors
4, via a direct request to a directory URI
4, via a crafted report.
4, via a crafted web site.
1, via unspecified vectors
4, via unspecified vectors.
5, by triggering (1) an error or (2) an exception.
2, via an undocumented API call that triggers the transmission of unexpected data.
4, via GET requests
1, by leveraging knowledge of configuration details
4, via unspecified vectors.
3, via unknown vectors.
4, via a crafted URL.
5, via a crafted HTTP (1) Range or (2) Request-Range header.
4, via unspecified vectors.
4, via a long line in (1) hrfstable.idx
4, via a SQL transaction with a long table name that is not properly handled by a packet decoder.
3, via unspecified parameters.
4, via a crafted web page.
4, via a shared mail file
4, via shell metacharacters in the (1) count or (2) size parameter.
1, via malformed HTTP data.
3, via unspecified vectors.
5, via unspecified vectors.
3, by leveraging meeting-attendance privileges.
4, via a SCRIPT element in an HTML e-mail message
3, via unspecified vectors.
2, via unspecified vectors
4, via a crafted response.
1, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
1, by leveraging access to a legitimate user's web browser either (1) before or (2) after authentication.
4, via vectors involving the (1) Portal
4, via a crafted e-mail message. IBM X-Force ID: 83371.
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors. IBM X-Force ID: 83815.
3, via unknown vectors.
4, via unspecified vectors. IBM X-Force ID: 83383.
1, via unspecified vectors
3, via unspecified vectors.
3, via unknown vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, by sending TCP port-12397 data that does not comply with a protocol.
4, via a crafted HTTP request.
4, via a crafted packet to UDP port 17185.
4, via a large buffer-size value in a Modbus Application Header.
4, via a TCP RST packet.
4, via a crafted URL.
4, via a crafted URL.
4, via a crafted HTTP request.
4, via a crafted URL.
4, via a crafted URL.
4, via unspecified data.
4, via a crafted URL.
4," via a session that includes """"repeated requests."""""
1, via crafted packets to TCP port 102 (aka the ISO-TSAP port).
3, by leveraging a logging privilege.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted URL
4, via unspecified vectors.
2, via the HTTP Referer header
2, via the HTTP Referer header
4, via a crafted RTF document.
4, via a crafted authentication request.
4, via a crafted packet.
4, via a crafted pty request.
4, via a crafted public-key authentication request.
4, via a crafted command string.
4, via a crafted URI.
4, via a direct request
4, via a Trojan horse hosts list containing a long line.
4, via a crafted spreadsheet file.
4, via a URL in the dompdf parameter.
0, via a crafted pathname in an ERS file.
4, via a Trojan horse (1) dwmapi.dll or (2) ibfs32.dll file in the current working directory
4, via a crafted Define Huffman Table header in a JPEG image file stream in a PDF file.
1, via vectors involving the (1) language parameter to application/modules/admin/controllers/LanguagesController.php or (2) user parameter to application/modules/admin/controllers/UserController.php.
1, via crafted font table directory values in a TTF file
3, via the (1) search_words parameter in a search action to wpf.class.php or (2) togroupusers parameter in an add_user_togroup action to fs-admin/fs-admin.php.
0, via the id parameter in a viewtopic (1) remove_post
4, via unspecified vectors.
2, via the fieldnames parameter.
4, via a URL in the file parameter to HelpViewer.
2, via the font parameter.
4, via a long ZIP directory entry name in an XPS file.
1, via vectors related to the nsContentUtils::HoldJSObjects function and the nsAutoPtr class
2, via unknown vectors involving a plug-in.
5, via unspecified vectors.
2, via the section parameter in a new_section action to index.php.
4, via a crafted web site that triggers access to a deleted object
1, by leveraging access to an extension process.
3, via vectors related to printing.
1, via vectors related to printing.
3, via vectors involving glyphs.
3, via unknown vectors.
1, via vectors related to the handling of extension tabs.
1, via vectors related to the handling of fonts in CANVAS elements.
3, via unknown vectors.
4, via crafted DK4 data
4, via a crafted block length
1, via crafted QDM2 data
4, via ID3v2 header data
5, via a crafted width in huffyuv data with the predictor set to median and the colorspace set to YUV422P
5, via a crafted (1) width or (2) height dimension that is not a multiple of sixteen in id RoQ video data.
1, via crafted H.264 data
1, via crafted Electronic Arts Madcow video data
1, via crafted RLE data
1, via crafted WavPack data
1, via crafted MJPEG data.
4, via a large number of samples per frame in Apple Lossless Audio Codec (ALAC) data
1, via crafted Apple Lossless Audio Codec (ALAC) data
4, via a crafted height value in IFF PBM/ILBM bitmap data.
1, via ATRAC3 data with the joint stereo coding mode set and fewer than two channels.
4, via a negative or zero count value in a TIFF image
4, via vectors related to the channel layout.
1, via crafted image dimensions in LucasArts Smush video data
1, via crafted LucasArts Smush video data.
4, via a large (1) cbp0 or (2) cbpz chunk in Westwood Studios VQA Video file
4, via a large number of channels in an AAC file
1, via crafted Huffyuv data
1, via crafted H.264 data
4, via a PTRACE_SETREGS ptrace system call in a crafted application
2, via an invalid or unsupported (1) input or (2) output channel layout
2, via an invalid channel count
4, via a crafted TIFF image
4, via a crafted PNG image
1, via crafted LucasArts Smush data
1, via crafted LucasArts Smush data that has a large size when decoded
1, via crafted Targa image data
4, via unknown vectors.
4, via vectors related to the handling of browser navigation.
3, via unknown vectors.
4, via vectors involving an SVG animation.
3, via unknown vectors.
1, via vectors related to the handling of media threads.
4, via unspecified vectors.
1, via vectors related to databases.
0," via vectors that leverage """"type confusion."""""
3," via vectors related to an """"overflow."""""
4, via unknown vectors.
4, via unspecified vectors.
0, by leveraging the presence of an extension that creates a pop-up window.
3, via unknown vectors.
3, via unspecified vectors.
4," via a DCP """"run command"""" operation."
0, via format string specifiers in a command.
4, via vectors involving a new device name.
5, by leveraging operating-system privileges to perform decryption with nsradmin.
4, via a crafted URL.
1, via crafted commands.
5, via a crafted web site
4, via a crafted web site
1, via crafted content that is not properly handled during a copy-and-paste operation.
4, via a crafted FaceTime: URL.
1, via crafted ink annotations in a PDF document.
4, via a crafted PICT image.
4, via a crafted graphics image.
4, via a crafted text glyph in a URL encountered by Safari.
4, via a crafted message.
1, via crafted enof atoms in a movie file.
4, via a crafted QTIF file.
4, via a crafted FPX file.
4, via a crafted MP3 file.
0, via vectors involving IFRAME elements.
4, via a crafted TeXML file.
5, via a crafted movie file with H.263 encoding.
1, via crafted dref atoms in a movie file.
4, via a crafted movie file with H.264 encoding.
4, via a crafted movie file with Sorenson encoding.
1, via crafted JPEG data in a movie file.
1, via crafted JPEG data in a movie file.
1, via crafted mvhd atoms in a movie file.
1, via crafted JBIG2 data in a PDF document.
1, via crafted JPEG2000 data in a PDF document.
1, via crafted IGMP packets that leverage incorrect
4, via a crafted idsc atom in a QuickTime movie file.
4, via unspecified vectors.
4, via a crafted web site.
4, via a crafted XML document.
4, via a crafted response.
4, via a Trojan horse import_pxe_files configuration file in the current working directory.
4, via an auth_reply message that triggers an attempted build_request operation.
0, via the op parameter to nodes/.
5, via a crafted web page that also calls the Initialize method.
2, via the language parameter.
2, via the language parameter.
5, via a .. (dot dot) in the Filename parameter in a GetFile action to zenworks-unmaninv/.
0, by leveraging improper request validation by iManager code deployed within an Apache Tomcat container.
4, via unspecified vectors.
4," via a Trojan horse """"program"""" file in the C: folder"
2, via the directToPage parameter.
2, via an invalid locale.
4, via vectors involving an onError event.
4, via a taskDetail taskId.
3, via vectors involving an onload event.
4, via a crafted HTTP User-Agent header
2, via unspecified parameters
4, via a crafted URL
4, via a crafted URL
2, via short malformed packets that trigger inefficient processing
0, via a crafted parameter value
1, via unspecified vectors
2, via unknown vectors
2, via unspecified parameters
1, via unknown vectors
0, by sending many TCP requests
4, via vectors involving the (1) IptAccountMgmt
1, via malformed TLS messages to TCP port (1) 9043 or (2) 9443
1, via crafted packets
1, via IPv4 packets
3, via unspecified (1) IPv4 or (2) IPv6 IKE packets
1, via crafted image list parameters in Smart Install packets
1, via crafted (1) IPv4 or (2) IPv6 IP SLA packets on UDP port 1167
5, via a crafted field in a DNS message
5, via a crafted URL
0, via an unspecified parameter
0, via an unspecified parameter
0, via an unspecified parameter
0, via an unspecified parameter
0, by leveraging an entry on a Buddy list and sending a crafted XMPP presence update message
1, via crafted TE packets
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
0, by sending many TCP packets to certain ports
2, via unspecified vectors
4, via a crafted SNMP request
4, via a crafted SNMP request
1, via malformed data in a UDP packet
4, via a malformed request
3, by reading a (1) technical-support bundle file or (2) on-device configuration backup
4, via a crafted authentication request to a Cisco Integrated Management Controller (IMC)
1, via crafted XML content in an XMPP message
2, via unspecified vectors
1, by accessing resources within multiple sessions
2, via unspecified vectors
1, via crafted TCP packets that appear to have been forwarded by a Cisco Adaptive Security Appliances (ASA) device
1, by sending many port-162 UDP packets
2, via unspecified vectors
1, via crafted SNMP packets
3, via fragmented (1) IPv4 or (2) IPv6 packets
4, via a (1) initiate signature upgrade
1, via malformed SIP INVITE messages
4, via a crafted (1) HTTP or (2) HTTPS request that triggers incorrect parameter validation
4, via a Resource Manager (1) HTTP or (2) HTTPS request containing an external entity declaration in conjunction with an entity reference
4, via a crafted frame
1, via unspecified vectors
3, via SNMP traps
4, via a flood of malformed UDP packets
4, via a crafted request
1, via crafted SNMP packets
1, by establishing TCP connections at a high rate
1, via malformed TCP packets
5, via a javascript: URL in the link field in a post
2, via an SSID that is not properly handled during display of the XML windowing table
2, via an attempted renaming of a file or folder located on a read-only share
5, via a crafted web site that triggers access to a deleted object
4, via a crafted HTML e-mail message.
5, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
4, via a crafted web site that triggers access to a deleted object
5, via a crafted web site that triggers access to a deleted object
4, via a crafted Publisher file that triggers an improper allocation-size calculation
4, via a crafted Publisher file that triggers access to an invalid pointer
5, via a crafted Publisher file
4, via a crafted WordPerfect document (.wpd) file
5, via a crafted Publisher file that triggers an improper memory allocation
5, via a crafted Publisher file that triggers a buffer underflow
1, via crafted PNG data in an Office document
4, via a crafted application that leverages improper handling of objects in memory
1, via crafted shape data in a Word document
4, via a crafted web site that triggers access to a deleted object
4, via a crafted file.
2, via the modname parameter.
4," via """"$()"""" shell metacharacters"
2, via the cnf parameter.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
2, via the pollid or poll_id parameter in a viewPollResults or userlogs action.
2, via the (1) scope parameter to index.php; (2) user_name
2, via the (1) search or (2) orderby parameter to wp-admin/admin.php.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
0, via the _ajax_nonce parameter to wp-admin/admin-ajax.php.
0, via the catlist[] parameter to engine/preview.php
2, via the (1) id parameter to backup-edit.php; (2) title or (3) menu parameter to edit.php; or (4) path or (5) returnid parameter to filebrowser.php in admin/. NOTE: the path parameter in admin/upload.php vector is already covered by CVE-2012-6621.
2, via the TinyMCE editor.
4, via a large TCP packet.
4, via unspecified vectors.
4, via shell metacharacters in unspecified vectors.
4, via a web page title
2, via the $Version value.
2, via unspecified vectors related to NULL pointer dereferences
2," via unspecified vectors related to """"Coding errors."""""
1," via unspecified vectors related to an """"Undefined variable."""""
4, via a SOAPAction header that lacks a # (pound sign) character
4," via a SOAPAction header that lacks a """" (double quote) character"
2, via the id parameter.  NOTE: this might be the same vulnerability as CVE-2013-1808.  If so
2, via the playerID parameter.
4, via a crafted shipping parameter
2, via the (1) subject parameter to profiles.php; (2) address1
4, via unspecified vectors.
4, via a .. (dot dot) in the dl parameter.
0, via the calendar_type parameter to submit.php.
4, via (1) the Add field for the Black List under Antispam Management User Preferences or (2) the User name field for the Personal Black/White List in the AntiSpam section.
2, via unknown vectors related to Deployment.
2, via unknown vectors related to Libraries.
2, via unspecified vectors
4, via a symlink attack on a predictable filename in /tmp.
2, via unknown vectors related to Kernel/IO
1, via unknown vectors related to WebGate - WebServer plugin.
2, via unknown vectors related to Kernel/IO
2, via unknown vectors related to Network Configuration.
1, via unknown vectors related to Login.
1, via unknown vectors related to Server Partition.
2, via unknown vectors related to Content Server.
1, via vectors related to BASE.
2, via unknown vectors related to Filesystem.
1, via vectors related to REST Interface.
2, via unknown vectors related to Portal Framework
0, via unknown vectors related to InnoDB.
1, via unknown vectors related to Data Manipulation Language.
1, via vectors related to RMI Support.
1, via vectors related to ADMIN Interface.
2, via unknown vectors related to Import Server.
4, via unknown vectors.
1, via vectors related to HTML Surround.
2, via unknown vectors related to Content Server.
1, via unknown vectors related to Attachments.
2, via unknown vectors related to Server Replication.
2, via unknown vectors related to Image Service.
2, via unknown vectors related to Kernel.
2, via unknown vectors related to Security.
4, via unknown vectors.
2, via unknown vectors related to Deployment
1, via unknown vectors related to Servlet Runtime.
2, via unknown vectors related to Open UI Client.
3, via vectors related to BASE.
3, via vectors related to BASE.
2, via unknown vectors related to Server Types.
1, via unknown vectors related to WorkCenter.
1, via unknown vectors related to Web Services Security.
4, via vectors related to OTH.
2, via unknown vectors related to Content Server.
1, via vectors related to BASE
3, via unknown vectors related to JavaFX.
3, via vectors related to HELP.
1, via unknown vectors related to JavaFX.
4, via unknown vectors.
2, via unknown vectors related to InnoDB.
2, via unknown vectors related to Data Manipulation Language
2, via unknown vectors related to MemCached.
4, via a malformed packet.
4, via a malformed packet.
4, via a malformed packet.
4, via a .. (dot dot) in the default URI.
4, via a long filename in a GET request.
4, via a long rtsp: URI in a DESCRIBE request.
4, via unspecified vectors.
4, via a Trojan horse program.
4, via a Trojan horse application in the %SYSTEMDRIVE% top-level directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified web-GUI API calls.
4, by injecting a command into an application script.
4, via unspecified vectors.
3, via vectors involving a crafted padding-length value during validation of CBC padding in a TLS session
0, via a full pathname in an argument to the sub_401A90 CreateFileW function.
0, via vectors involving DOM events.
1, via crafted clipPaths in an SVG document.
4, via a .. (dot dot) in the selitems[] parameter in a download_selected action to index.php.
2, via the (1) dir
4, via a SOAP WSDL file containing an XML external entity declaration in conjunction with an entity reference
2, via the (1) payment_method parameter to core/app/controllers/spree/admin/payment_methods_controller.rb; and the (2) promotion_action parameter to promotion_actions_controller.rb
4, via a crafted hash key.
3, via shell metacharacters in the name of an uploaded file.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via vectors involving a DOM modification at the time of a SetBody mutation event.
4, via a crafted Certificate Request Message Format (CRMF) request.
4, via a crafted WAV file that is not properly handled by the nsCString::CharAt function.
4, via a Trojan horse DLL in the default downloads directory.  NOTE: this issue exists because of an incomplete fix for CVE-2012-4206.
4, via a Trojan horse .so file in a world-writable directory.
3, via vectors involving a midair-collision token.
4, via a large size value.
5, via a field value that is not properly handled during construction of a tabular report
4, via a KICK command for a user who is not on the associated channel.
2, via unspecified parameters to (1) edit.php or (2) import.php.  NOTE: the view.php id vector is already covered by CVE-2008-2565.1 and the edit.php id vector is already covered by CVE-2008-2565.2.
2, via the Address field.
4, via a malformed MP4 file.
4, by sending a crafted '%MAKETEXT{}%' parameter value containing Perl backtick characters.
4, via a crafted HTTP request.
2, via the pfad parameter to wp-admin/options-general.php.  NOTE: some of these details are obtained from third party information.
2," via the """"URL and Image"""" field."
2," via the """"install updates"""" method."
2, via the (1) link or (2) playerready parameter.
4, via a crafted message.
3, via the view_name parameter.
0, by setting the system clock and sudo user timestamp to the epoch.
1, via vectors related to social icons.
4, via unspecified vectors.
1, via vectors related to social icons.
4, via unspecified vectors.
1, via vectors related to social icons.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
0," via vectors that trigger an """"invalid memory access"""" in (1) splash/Splash.cc"
1, via vectors related to the (1) Splash::arbitraryTransformMask
0, via vectors that trigger a read of uninitialized memory by the CCITTFaxStream::lookChar function.
4, via a long fileserver ACL entry.
4, via a large list from the IdToName RPC
2," via the (1) orderby parameter to downloads.php; or remote authenticated users with certain permissions to execute arbitrary SQL commands via a (2) parameter name starting with """"delete_attach_"""" in an edit action to forum/postedit.php; the (3) poll_opts[] parameter in a newthread action to forum/postnewthread.php; the (4) pm_email_notify"
2," via the (1) highlight parameter to forum/viewthread.php; or remote authenticated users with certain permissions to inject arbitrary web script or HTML via the (2) user_list or (3) user_types parameter to messages.php; (4) message parameter to infusions/shoutbox_panel/shoutbox_admin.php; (5) message parameter to administration/news.php; (6) panel_list parameter to administration/panel_editor.php; (7) HTTP User Agent string to administration/phpinfo.php; (8) """"__BBCODE__"""" parameter to administration/bbcodes.php; errorMessage parameter to (9) article_cats.php"
4, via a .. (dot dot) in the (1) user_theme parameter to maincore.php; or remote authenticated administrators to delete arbitrary files via the (2) enable parameter to administration/user_fields.php or (3) file parameter to administration/db_backup.php.
4, via a (1) category name in the summary_print_by_category function or (2) project name in the summary_print_by_project function.
4, via (1) a large XRDS document or (2) an XML Entity Expansion (XEE) attack.
0, via the offset parameter
5, by sending a specially crafted request.
3, via unspecified vectors.
1, via crafted text nodes in an XML document
2, via the (1) quota parameter to /core/settings/ajax/setquota.php
4, via a SOAP WSDL file containing an XML external entity declaration in conjunction with an entity reference
4," via a """
4, via unspecified vectors.
4, via a LOCK on an activity URL.
2, via an anonymous LOCK for a URL that does not exist.
4, via a PROPFIND request for an activity URL.
3, by uploading a .htaccess file.
2, via the league_id parameter in the leaguemanager-export page to wp-admin/admin.php.
1, via vectors related to the (1) freetype renderer and (2) HTML subtitle parser.
2, via the type parameter.
4, via a Trojan horse .csirc in the current working directory.
4, via shell metacharacters in a URL or filename.
0," via vectors involving the """"cron of a message."""""
0, via the refresh parameter to demo/portfolioPublish
2, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via a filter using a criteria
4, via a log REPORT request with an invalid limit
2, via the PATH_INFO to (1) tus/ or (2) tus/tus/.
0, via format string specifiers in unspecified vectors
0, via certain view configuration fields.
4, via a symlink attack on a file in the /tmp/pip-build temporary directory.
3, via the (1) new_name parameter to apps/bookmarks/ajax/renameTag.php or (2) multiple unspecified parameters to unknown files in apps/contacts/ajax/.
2, via unspecified vectors
4, via shell metacharacters in a URL.
0, via a full pathname in the _value parameter for the generic_message_footer setting in a save-perf action to index.php
3, via unspecified vectors.
4, via a rule tag.
4, via shell metacharacters in (1) an mp3 URL or (2) file name.
4, via a crafted file that validates as both a GIF and a Java JAR file
4, via a version
4, via a project name.
4, via shell metacharacters in a PDF filename.
5, via a complex value.
2," via the (1) visualizationSettings[width] or (2) visualizationSettings[height] parameter. NOTE: a third party reports that this is """"not exploitable."""""
4, via shell metacharacters in a filename argument to (1) document.rb
4, via shell metacharacters in a filename.
2, via Lua function names.
5, via a small value in the biSize field in the header of a BMP file
4, via a crafted ASF movie that triggers an out-of-bounds read.
3, via unspecified vectors.
4, via a crafted request that is not properly handled when using the includeParams attribute in the (1) URL or (2) A tag.
4, via a newline character in a file name.
4, via vectors related to the (1) htmlParseChunk and (2) xmldecl_done functions
2, via the file name of a MP3 file.
4, via a crafted MASI file.
4, via vectors related to the (1) XQueryFont
1, via vectors related to the (1) XcupGetReservedColormapEntries
1, via vectors related to the XFixesGetCursorImage function.
1, via vectors related to the (1) XGetDeviceControl
1, via vectors related to the XineramaQueryScreens function.
1, via vectors related to the (1) XRRQueryOutputProperty and (2) XRRQueryProviderProperty functions.
1, via vectors related to the (1) XRenderQueryFilters
1, via vectors related to the (1) XResQueryClients and (2) XResQueryClientResources functions.
3, via vectors related to the (1) XvQueryPortAttributes
4, via vectors related to the (1) XvMCListSurfaceTypes and (2) XvMCListSubpictureTypes functions.
1, via vectors related to the (1) XDGAQueryModes and (2) XDGASetMode functions.
1, via vectors related to the (1) DMXGetScreenAttributes
1, via vectors related to an unexpected sign extension in the XListInputDevices function.
1, via vectors related to an unexpected sign extension in the FSOpenServer function.
1, via crafted length or index values to the (1) XAllocColorCells
1, via crafted length or index values to the (1) XGetDeviceButtonMapping
1, via crafted length or index values to the XvMCGetDRInfo function.
1, via crafted length or index values to the (1) XDGAQueryModes and (2) XDGASetMode functions.
2, via the Themify framework (before 1.2.2) wp-content/themes/elemin/themify/themify-ajax.php file.
1, via crafted length or index values to the XF86VidModeGetGammaRamp function.
1, via crafted length or index values to the _XtResourceConfigurationEH function.
1, via vectors related to the _XcursorFileHeaderCreate function.
4, via a Trojan horse custom_install directory in the current working directory.
2, via multiple long requests.
4, via unspecified vectors.
3, via multiple file_signature elements.
5, via a skewed offset larger than the size of the PE section in a UPX packed executable
4, via a crafted length value in an encrypted PDF file.
2, via the (1) jQuery or (2) id parameters
1, via unspecified vectors
4, via unspecified vectors.
4, via a chunked Transfer-Encoding request with a large chunk size
2, via unspecified vectors
4, via a GPS packet with a malformed $GPGGA interpreted sentence that lacks certain fields and a terminator.  NOTE: a separate issue in the AIS driver was also reported
2, via the (1) tag parameter to apps/bookmarks/ajax/addBookmark.php or (2) dir parameter to apps/files/ajax/newfile.php
4, via a URL in the redirect_url parameter.
3, via unspecified vectors.
4, via unspecified vectors.
4, via shell metacharacters in the URL of a request to download a cart.
1, via vectors related to the (1) XpGetAttributes
3, via vectors related to the read_packet function.
1, via crafted length or index values to the XvQueryPortAttributes function.
4, via a .. (dot dot) in the filename parameter to the (1) log
4," via a crafted request that triggers an """"internal server error"
4, via a .. (dot dot) in the dir parameter.
3, by reading an unspecified JavaScript file.
2, via the (1) movie title to modules/gallery/controllers/movies.php or (2) key variable to modules/gallery/views/error_admin.html.php.
4, via shell metacharacters in a filename.
3, by uploading a crafted file
4, via shell metacharacters in the file name of an email attachment.  NOTE: some of these details are obtained from third party information.
2, via the 'pays' parameter in fiche.php.
4, via a symlink attack on /tmp/browser.html.
2, via the mailonupdate_mailto parameter in the mail-on-update page to wp-admin/options-general.php.  NOTE: a third party claims that 5.2.1 and 5.2.2 are also vulnerable
4, via a crafted argument to the quoted_printable_encode function.
3, via invalid APPEND parameters.
5, by aborting a connection.
3, by uploading a file with an executable extension.
4, via a crafted request that is not properly handled when using the includeParams attribute in the (1) URL or (2) A tag. NOTE: this issue is due to an incomplete fix for CVE-2013-1966.
4, via a malformed full-color (1) Foveon or (2) sRAW image file.
4, via unspecified vectors.
4, via a component label.
4, via a crafted request to the (1) editnetwork
5, via a request with a crafted action name that is not properly handled during wildcard matching
4," via a request with a crafted value that contains both """"${}"""" and """"%{}"""" sequences"
2, via the (1) Physical network name to the Zone wizard; (2) New network name
2, via filesystem write operations on a read-only disk that supports the (1) BLKIF_OP_DISCARD (aka discard or TRIM) or (2) SCSI UNMAP feature.
4," via a SIGNATURE file with a """"special unknown cipher"""" that references an untrusted module in Digest/."
1, via vectors related to shared files.
1, via vectors related to shared files.
1, via crafted Reference elements in the Signature
3, via malformed XPointer expressions
4, via a crafted PrefixList attribute.
3, via unknown vectors.
2, via an offset equal to the file size in the Range HTTP header.
1," by using the CanonicalizationMethod parameter to specify an arbitrary weak """"canonicalization algorithm to apply to the SignedInfo part of the Signature."""""
4," via a crafted string ending in a """"%"""" (percent) character."
4, via a Trojan horse application.
2, via an entity bundle label.
4, via a file name.
4, via a crafted URI
2, via unspecified parameters
4, via invalid PLCF data in a DOC document file.
4, via a crafted kernel.
4, via a crafted kernel
4, via a crafted kernel
4, via a crafted username.
2, via unspecified vectors
3, via vectors involving (1) uploads of media files
3, via an oEmbed XML provider response containing an external entity declaration in conjunction with an entity reference
4, via a --exec command in a TPP template file.
4, via a full name.
4, via malformed XPointer expressions.  NOTE: this is due to an incorrect fix for CVE-2013-2154.
4, via a filtering flag that causes an interface to be skipped
4, via a large Vendor Specific Attributes (VSA) length value.
4, via a large packet.
4, via a crafted ZRTP Hello packet to the (1) ZRtp::findBestSASType
4, via a crafted packet
2, via the _predefined_fields parameter to front/ticket.form.php.
2, via the (1) users_id_assign parameter to ajax/ticketassigninformation.php
2," via unspecified vectors involving """"multiple events registration."""""
1, via vectors related to the index and substituted variables.
2," via the """"full"""" string in the size parameter."
2, via the conditional access rule value of a user field.
4, via a URL in a parameter using the (1) redirect: or (2) redirectAction: prefix.
4, via a parameter with a crafted (1) action:
2, via unknown attack vectors.
4, via unspecified vectors.
2, via the (1) notify or (2) blog parameter.
2, via the QUERY_STRING to admin/index.php.
3, by mining a block to create a nonstandard Bitcoin transaction containing multiple OP_CHECKSIG script opcodes.
5, via a (1) tag name to the Shortlog table in templates/shortlog.php or branch name to the (2) Shortlog table in templates/shortlog.php or (3) Heads table in plates/summary.php.
4, via a crafted XML file
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted web site.
4, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
4, via a crafted URL associated with the management screen.
3, via vectors related to URL display
4, via vectors involving the opening of a new window.
4, via unspecified vectors.
2, via unknown vectors
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
5, via a crafted EXEC_BAR packet to TCP port 5555
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
4, via unknown vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
4, via unspecified vectors.
2, via unknown vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors related to Stored Procedure.
3, via unknown vectors related to My Services.
2, via unknown vectors related to RT.
2, via unknown vectors related to Server Privileges.
1, via vectors related to BASE.
1, via vectors related to BASE
4, via vectors related to BASE.
1, via vectors related to BASE.
1, via unknown vectors related to Outside In Filters.
1, via unknown vectors related to Data Manipulation Language
1, via vectors related to HTML OAM client.
1, via vectors related to Email - COMM Server Components.
2, via unknown vectors related to Deployment
1, via unknown vectors related to Web Services
2, via unknown vectors related to Absence Management.
2, via unknown vectors related to Web Services.
1, via unknown vectors related to Deployment.
2, via unknown vectors related to Deployment
1, via unknown vectors related to Deployment.
3, via unknown vectors related to JavaFX.
4," via vectors related to JMX.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is due to a missing check for """"package access"""" by the MBeanServer Introspector."
2, via the 'what' parameter.
4, via a malformed packet.
4, via a packet with a header that is too short.
4, via invalid Sub-tlv data.
4, via a malformed packet.
4, via a malformed packet.
2, via an invalid count value in ACN_DMP_ADT_D_RE DMP data.
4, via a malformed packet.
4, via a malformed packet.
3, via vectors involving a regular expression
4, via spoofing a cookie.
3, via the ProfileId field.
2, via the query string.
2, via the (1) id parameter to admin/log_to_net.html or (2) kind parameter to fax/copy_settings.html
4, via shell metacharacters in a LIST or NLST command argument within FTP protocol traffic.
1," via vectors related to a """"break into the sandbox"
1, via unknown vectors
4, via a crafted web site that triggers access to a deleted object
1, by leveraging access to a Medium integrity process
1, via unknown vectors
2, via unknown vectors
1, via unknown vectors
4, via a crafted TrueType Font (TTF) file
0, via the sort parameter to system/authors/.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
4, via a .. (dot dot) in the URI
4, via a symlink attack on (1) ibdiagnet.db
5, by uploading a crafted file.
4, via a crafted AWD file.
4, via a crafted PCT file.
2, via the PATH_INFO to index.php/mail/viewmessage/getattachment/folder/INBOX/uniqueId/<MessageID>/filenameOriginal/.
2, via the callref parameter.
1, by using the UIVM to create a network connection.
2, via the (1) seTokensArray
4, via shell metacharacters in a URL.
4, via shell metacharacters in a URL.
3, via shell metacharacters in a URL.
2, via the map_title parameter.
4, via a .. (dot dot) to the default URI.
4, via a crafted URL.
2," via the """"selected_theme"""" parameter in error.php."
2," via the """"f_email"""" parameter in index.php."
4, via unspecified parameters.
2, via the id parameter.
3, via shell metacharacters in the client-ip parameter to the Block page
2, via the (1) xss parameter in an allow action to rss.php
0, via the shareEntire parameter to userRpm/NasFtpCfgRpm.htm
2," via the (1) """"p"""" or (2) content parameter to index.php."
2, via the item parameter.
0, via an arbitrary parameter name (QUERY_STRING) to admin/admin_main.html
2, via the (1) id or (2) val parameter to admin/admin_main.html; (3) id
4, by sending a crafted URL request to the apply.cgi script using the submit_type parameter.
2, via the (1) log_type
3, via unspecified vectors.
4, via a long sprop-parameter-sets H.264 media attribute in a SIP Session Description Protocol (SDP) header.
1, via crafted packets to TCP port 4868.
1, via crafted packets to TCP port 4868 that leverage improper handling of the /dev/photon device file.
0, via the loginid parameter in a logoff action.
4, via a crafted MPEG2-TS video file
4, via unspecified vectors.
4, via a URL in the u parameter.
2, via the u parameter.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
2, via the content parameter.
4, via a crafted request.
2, via the 'playerID' parameter.
4, via a crafted field name.
4, via a step 0 phpinfo action
2, by using keyboard shortcuts to navigate the file system and open a command prompt.
2, via the query string.
4, via a crafted request
4, via a request to admin/users/add/user/do/.
1, by leveraging knowledge of the source code.
4, via a long string in a .m3u file.
1, via crafted FTP traffic
4," via unspecified vectors.  NOTE: the vendor reportedly disputes this issue because it """"could not be duplicated"""" and """"an attacker could not remotely exploit this observed behavior to deny PLC control functions."""""
4, via unspecified vectors.
1, via crafted packets to UDP port 161 (aka the SNMP port).
4, via unspecified vectors.
1, via crafted data to TCP port 20000.
4, via unspecified vectors.
1, via crafted DNP3 packets to TCP port 20000 and allows physically proximate attackers to cause a denial of service (master-station infinite loop) via crafted input over a serial line.
0, via a malformed DNP3 TCP packet from the IP address of an outstation.
1, via crafted C37.118 configuration packets that trigger an invalid read operation.
1, via crafted DNP3 packets to TCP port 20000 and allows physically proximate attackers to cause a denial of service (master-station infinite loop) via crafted input over a serial line.
4, via a crafted TCP packet.
4, via unspecified vectors.
4, via a crafted HTML document in conjunction with a Login Client button click.
1, by leveraging cleartext credentials in a crafted (1) update or (2) reprogramming action.
4, via a replay attack using UDP ports 17336 and 17388.
4, via a crafted DNP3 TCP packet.
1, via crafted input over a serial line.
4, via crafted input.
1, via crafted input over a serial line.
4, via a malformed DNP3 packet.
4, via a crafted PDF file.
1, via vectors related to improper management of ownership relationships involving Elements and DrawElements.
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
2, via vectors related to the handling of Pepper resources.
2, via vectors related to the handling of widgets.
2, via vectors related to the handling of speech data.
1, via vectors related to style resolution.
3, via unknown vectors.
2, via unknown vectors
3, via unknown vectors.
4, via unspecified vectors.
3, via vectors involving a (1) drag-and-drop or (2) copy-and-paste operation.
5, via a long key that is not properly handled during construction of an error-response packet.
2, by leveraging root access and writing format string specifiers to /sys/module/md_mod/parameters/new_array in order to create a crafted /dev/md device name.
1, by leveraging root access and including format string specifiers in an fwpostfix modprobe parameter
3, via unknown vectors.
1, via vectors related to the handling of input.
2, via vectors related to the handling of images.
3, via unknown vectors.
4, via unspecified vectors.
0, via vectors involving access to a database API by a worker process.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via a crafted JPEG2000 image.
1, via crafted response traffic after a URL request.
1, via vectors related to the handling of input.
4, via vectors involving a 404 HTTP status code during the loading of resources.
2, via vectors related to the handling of text.
3, via unknown vectors.
1, via vectors related to deleting the registration of a MutationObserver object.
1, via vectors related to improper tracking of which document owns an Attr object.
5, via vectors related to not properly considering focus during the processing of JavaScript events in the presence of a multiple-fields input type.
3, via unknown vectors.
3, via unknown vectors.
4, via a crafted device that provides an invalid Report ID.
4, via unspecified vectors.
4, via vectors involving a resource-destruction message.
1, via vectors related to color_chooser_dialog.cc and color_chooser_win.cc in browser/ui/views/.
4, via a relative URL containing a hostname
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
2, via the show_statuses[] parameter.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors. IBM X-Force ID: 83868.
4, via a crafted URL.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
2, via an invalid action_code.
4, via unspecified vectors. IBM X-Force ID: 84115.
4, via unspecified vectors. IBM X-Force ID: 84116.
4, via unspecified vectors. IBM X-Force ID: 84127.
4, via unspecified vectors.
4, via a direct request
1, via unspecified vectors
0, by sniffing the network for a session in which HTTP is used. IBM X-Force ID: 84361.
0, by leveraging improper process initialization. IBM X-Force ID: 84362.
4, via unspecified vectors.
5, via a crafted web page
1, via unspecified vectors
3, via unspecified vectors.
4, via a crafted URL.
4, via vectors involving temporary files.
3, via vectors involving temporary files.
2, via the Library function.
4, via unspecified vectors.
2, via unspecified vectors
0, via the pid parameter to product.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via a URL in the target parameter.
1, via vectors related to the Blocked Specific Sites section.
2, via the (1) UserName or (2) Password to the NAS User Setup page
1, by leveraging Virtual Appliance Management Interface (VAMI) access.
2, via the X-Forwarded-For HTTP header to /articles/test/.
2, via the search parameter to forgot-password/.
2, via the remote_mgmt_enabled and remote_mgmt_port parameters.
4, via unspecified vectors.
2, via the (1) ssid2 parameter to wl_channel.html or (2) guest_psk parameter to wl_guest.html.
2, via the Guest Access PSK field to wireless_guest2_print.stm or other unspecified vectors.
1, via vectors related to incorrect validation of the HTTP Authorization header.
4, via a request to hedwig.cgi or (3) activate configuration changes via a request to pigwidgeon.cgi.
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site that triggers access to a deleted CMarkup object
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted Office document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
0, via vectors involving incorrect auto-selection of the Shift JIS encoding
4, via a crafted POST request
4, via a crafted OpenType font
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via crafted character sequences with EUC-JP encoding
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
2, via the (1) picklist_name parameter in the get_picklists method to soap/customerportal.php
4, via a /e\x00 sequence
5, via a parameter that specifies a crafted export type.
3, via unknown vectors.
4, via a (1) RFC or (2) SOAP-RFC request.
4, via a crafted image layer in an XCF file.
4, via a crafted RLE compressed layer in an XCF file.
4, via a Trojan horse wintab32.dll file in the current working directory
5, via unspecified vectors.
4, via unspecified vectors.
0, via the commentid parameter in a wppa_manage_comments edit action.
4, via unspecified vectors.
4, via unspecified vectors.
5, via a large biClrUsed value in a BMP file.
4, via a large biClrUsed value in a BMP file.
0, via the s parameter in a flag-manage-gallery action.
2, via the p parameter.
2, via the (1) siteurl parameter to campaign/campaignone.php; the (2) action
4, via unspecified vectors.
3, by leveraging a deactivated account.
4, via unspecified vectors.
4, via a crafted URL.
4, via a crafted URL.
2, via the (1) src or (2) username parameter to index.php.
4, via a .. (dot dot) in the page parameter.
2, via an HTML document containing JavaScript code that constructs a long string.
4, via vectors involving a reconnection event.
4, via a .. (dot dot) in the default URI.
4, via a .. (dot dot) in the URL of an HTTP GET request.
4, via a request to get_realip.cgi or (2) firmware versions (ui and system)
4, via a crafted SOAP request to TCP port 1128.
2, via the 'full-name' and 'comment' fields.
3, via unspecified vectors.
4, via WebSockets.
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
3, via shell metacharacters in the (1) wan network prefix to internet/ipv6.asp; (2) remote port to adm/management.asp; (3) pptp username
4, via a symlink attack on a temporary file with predictable name.
4, via unspecified vectors.
2, via the filename of an attachment.
4, via unspecified vectors.
4, via a MIME header.
4, via a crafted URL
4, via a crafted URL
1, via crafted SIP packets
1, via crafted SIP packets
4, via a flood of malformed UDP packets on port 162
4, via a flood of TCP packets to port 5400
4, via a flood of TCP packets to port 44444
4, via a flood of TCP packets to port (1) 61615 or (2) 61616
4, via a flood of TCP packets
2, via unspecified vectors
1, via crafted RTP packets
4, via a crafted field
0, via an unspecified parameter
2, via vectors that leverage incorrect memory allocation
1," via crafted """"install license"""" arguments"
5, use of NOTIFY messages via unspecified vectors
2, via unknown vectors
2, by leveraging unspecified file-permission and environment-variable issues for privileged programs
2, via unspecified vectors
4, via a crafted request
0, via malformed IPv4 packets that trigger incorrect memory allocation
1, via malformed IPv4 TCP packets
2, via unspecified vectors
2, via unspecified vectors
4, via a crafted URL
0, via an unspecified parameter
0, via an unspecified parameter
0, via an unspecified parameter
0, via an unspecified parameter
2, via an unspecified field
4, via a crafted URL
3, by leveraging unspecified file-permission and environment-variable issues for privileged programs
1, by leveraging unspecified file-permission and environment-variable issues for privileged programs
4, via a flood of TCP packets
2, via an entry field
1, via crafted parameters
4, via a crafted URL in an unspecified HTTP header field
1, by disrupting Cisco Wireless LAN Controller communication and consequently forcing many transitions from FlexConnect mode to Standalone mode
2, via unspecified vectors that trigger a stack exception
1, via unspecified vectors
2, by sniffing the network for HTTP query data
4, via a direct request to a directory URL
4, via a malformed PNG file
4, via a crafted version-2 RIP packet
0, by leveraging unspecified use of hidden form fields in an HTML document
1, by leveraging membership in the Full Manager managers group
4, via unspecified vectors.
4, via unknown vectors.
1, via crafted width and height dimensions in a BMP file
4, via a crafted JPG image file.
4, via a long string in an ERS file.
4, via a crafted ERS file.
2, via the (1) _loginUserName parameter to application/login/login.html
4, via a Trojan horse (1) dwmapi.dll or (2) api-ms-win-core-localregistry-l1-1-0.dll file in the current working directory.
2, via unspecified HTML header fields to (1) 400.php
4, via a crafted MPEG-2 Transport Stream (M2TS) file.
4, via a crafted RealMedia .rm file
4, via a malformed Message Signaled Interrupt (MSI) from a PCI device that is bus mastering capable that triggers a System Error Reporting (SERR) Non-Maskable Interrupt (NMI).
3, via unspecified vectors.
1, via vectors related to (1) the foundation-webapp/admin/ directory
1, via an XML document containing an external entity declaration in conjunction with an entity reference
1, by leveraging access to the nagios account.
4, via a direct request for a (1) log file or (2) configuration file.
4, via a direct request for (1) a configuration file
0, via vectors involving file editing.
4, via shell metacharacters in the scan functionality in the System / NeDi menu.
4, via (1) nedi/html/System-Export.php
3, via unspecified vectors.
4, via a .. (dot dot) in the group parameter to (1) plugin-preferences.php or (2) plugin-settings.php in www/admin
2, via the (1) package parameter to www/admin/plugin-index.php or the (2) group parameter to www/admin/plugin-settings.php.
3, via vectors related to op=page&id= in the URL.
2, via the itemid parameter.  NOTE: this was originally reported as a problem in phpVMS.
2, via the ShowPending parameter.  NOTE: the vendor disputes this issue
2, via the parameter name in the Form/Email array to (1) entry/signin or (2) entry/passwordrequest.
2, via the (1) message
2, via the playlist_id parameter.
2, via the playlist_id parameter.
2, via the theme parameter.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the (1) admin_email
2, via the hash parameter.
2, via the (1) id_post or (2) pg parameter.
2, via the (1) id_post or (2) pg parameter.
4, via a .. (dot dot) in the READ.filePath parameter.
4, via a file path to the (1) StartRecord
4, via a crafted PDF file.
4, via a crafted PDF file.
4, via a malformed packet
4, via a malformed packet.
4, via a crafted string to TCP port 8001.
2, via the 'dir' command or issue other commands without authenticating.
2, via the (1) command parameter to requests/vlm_cmd.xml
4, via unknown vectors.
4, via a crafted client hostname.
4, via unknown vectors.
0, via a full pathname in the argument to the devicePath (aka mount) parameter.
4, via shell metacharacters in the PATH_INFO to smhutil/snmpchp.php.en.
0, via the ct100$4MainController$TextBoxSearchValue parameter (aka the search field).
0, via the ct100$4MainController$TextBoxSearchValue parameter (aka the search field)
4, via a crafted application that sends an intent to com.lookout.security.ScanTell with zero arguments.
4, via a crafted application that sends an intent to com.trustgo.mobile.security.USSDScannerActivity with zero arguments.
2, via an Ajax (1) wmxState or (2) netState request.
2, via the customerId parameter to an unspecified component.
2, via an arbitrary SessionID value in a cookie.
4, via a flood of TCP SYN packets.
2, via the ErrorMsg parameter.
0, by uploading an executable file with the image/jpeg content type
5, via a modified id parameter.
4, via a getList action.
4, via a .. (dot dot) in the name parameter.
5, via a modified user-role value to home.html.
0, via a modified userid value to unspecified functions.
2, via the docID parameter.
3, via vectors related to error messages.
1, via crafted input.
1, via vectors related to cookies.
2, via the username parameter.
2, via the SID parameter.
2, via the (1) sess_sid or (2) ACT parameter.
4, via a crafted message.
4, via a malformed HTTP request.
1, by configuring the aspell pathname and then triggering a spell-check operation within the TinyMCE editor.
4, via a request to exec.php
2, via the username parameter.
2, via the 'pathes' parameter in 'categories.php'.
2, via the (1) id
4, via unspecified vectors.
4, via unspecified vectors.
0, via vectors involving the image parameter to resize_image.php
4, via a crafted string
4, via vectors involving the classcategory_id2 field
0, via vectors involving the rank parameter
3, via vectors related to data/class/SC_CheckError.php and data/class/SC_FormParam.php
1, via crafted packet data.
4, via a crafted color palette table in a MAC Pict texture
4, via a crafted color palette table in a MAC Pict texture
0, by entering USB Debugging mode
4, via a list action.
4, via a long URL.
4, via an IOCTL call for an invalid IOCTL.
4, via a .. (dot dot) in a preboot update pathname
4, via unspecified vectors.
4, via unspecified vectors.
2, via the wp_post_id parameter.
2, via the d parameter.
4, via a '\0' character in an HTTP request.
0, via the groups[] parameter to admin.php.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
0, via the cat parameter in an admin_new_category action to admin.php.
2, via the (1) groups[] parameter in a send action in the sendmail module or (2) query parameter in a sql_query action in the database module to admin.php
2, via the name of an attached file.
4, via a .. (dot dot) in the mapname parameter in a show_config action.
0, via an invalid SQL CREATE VIEW statement with a crafted name that triggers an error message.
1, via unknown vectors related to Deployment
1, via vectors related to Driver/IDM (iSCSI Data Mover).
4, via vectors related to Service Management Facility (SMF).
1, via vectors related to Kernel/STREAMS framework.
1, via vectors related to SSO Engine.
3, via vectors related to PIA Search Functionality.
3, via vectors related to PIA Core Technology.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors related to Kernel/VM.
3, via unknown vectors.
1, via vectors related to XSCF Control Package (XCP).
2, via unknown vectors related to Learner Pages.
1, via unknown vectors related to Help.
2, via unknown vectors related to Saved Search.
2, via unknown vectors related to Web UI.
1, via unknown vectors related to Server Parser.
2, via unknown vectors Time and Labor.
2, via unknown vectors related to Career's Home.
2, via unknown vectors related to Kernel.
2, via unknown vectors related to User Interface Framework.
2, via unknown vectors related to Data Manipulation Language.
1, via unknown vectors related to Server Partition.
2, via unknown vectors related to Data Manipulation Language.
1, via unknown vectors related to Server Optimizer.
1, via unknown vectors related to Filesystem/DevFS.
2, via unknown vectors related to MemCached.
2, via unknown vectors related to Server Options.
1, via unknown vectors related to Prepared Statements.
2, via unknown vectors related to InnoDB
2, via unknown vectors related to Server Privileges.
2, via unknown vectors related to Audit Log.
2, via unknown vectors related to XA Transactions.
2, via unknown vectors related to InnoDB
4, via unknown vectors related to Server Replication.
1, via vectors related to Libraries/PAM-Unix.
1, via unknown vectors related to Web Client (CS).
2, via unknown vectors related to Security.
1, via unknown vectors related to Manufacturing/Mfg Parts.
1, via unknown vectors related to Folders & Files Attachment.
1, via unknown vectors related to Test Page.
2, via unknown vectors related to Demos.
2, via unknown vectors related to File System Management.
1, via unknown vectors related to Authentication Engine.
1, via unknown vectors related to ttaauxserv.
3, via vectors related to ESI/Partial Page Caching.
2, via unknown vectors related to Cacao.
2, via unknown vectors related to Web Services.
2, via unknown vectors related to Web Services.
1, via vectors related to Oracle Configuration Manager (OCM).
4, via a crafted HTTP header.
4, via a crafted web site
4, via a crafted CSpliceTreeEngine::InsertSplice object in an HTML document
4, via a crafted Office document
5, via a crafted Office document
4, via a crafted Office document
5, via a crafted service description that is not properly handled by services.exe in the Service Control Manager (SCM)
4, via a crafted OLE object in a file
0, by including many nested S/MIME certificates in an e-mail message
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
0, by operating an LRPC server that sends a crafted LPC port message
4, via a crafted application
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted Office document
4, via a crafted Office document
1, via crafted JavaScript strings
4, via a crafted web page
1, via crafted JavaScript code that uses the onpropertychange event handler
4, via a crafted application
4, via a crafted web page that is not properly handled during a print-preview action
1, via crafted characters in Cascading Style Sheets (CSS) token sequences
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
2," via the """"about me"""" field."
5, via a ..%2f (encoded dot dot slash) to the default URI.
4, via a ..%2f (encoded dot dot slash) in a GET request.
4, via a ..%2f (encoded dot dot slash) in a GET request.
2," via unspecified vectors related to a """"symmetric backdoor.""""  NOTE: as of 20130704"
2, by leveraging read access.
1, via crafted biPlanes and biBitCount fields in a BMP file.
2, via the handler parameter.
4, via a crafted directory name in a CWD command reply.
2, via the property_name parameter
0, via the id parameter in an editProfile action to administrator/index.php.
0, via the user_name parameter to index.php.
4, via unspecified vectors.
2, via the biBitCount field in a BMP file.
4, via a large NUM_ELEMENTS field in an IFD_ENTRY structure in a JXR file
4, via (1) the Csiz parameter in a SIZ marker
1, via vectors related to the Display Name field in the Manage Profile.
2, via an IMAGE tag.
4, via a nband tag.
4, via a levels header.
4, via a crafted 0xA3350014 IOCTL call.
2, via the PROC_PIDFDPIPEINFO option to the proc_info system call for a kernel pipe handle.
2, via the eventid parameter.
1, via an invalid RefDB object.
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
1, by leveraging knowledge of valid user names.
3, by generating a large number of fictitious users to enter a meeting room.
4, via unspecified vectors.
4, via a request to a public page.
4, via a crafted Audio Visual (AV) session.
3, via unspecified vectors.
2, via unspecified vectors
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via an authorization cookie.
3, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
2, via unknown vectors
4, via a direct HTTP request.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
2, via unspecified vectors
4, via a crafted URI.
1, via unspecified vectors
2, via active content in an e-mail message
1, via unspecified vectors
2, via an XML external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
4, via a crafted packet.
4, via a crafted packet
4, via a crafted packet.
1, by leveraging the presence of (1) a session ID in the jsessionid field to secsphLogin.jsp or (2) credentials in the j_password parameter to j_acegi_security_check
4, via (1) a direct request to dwr/call/plaincall/AsyncOperationsContainer.getOperationState.dwr
2, via the (1) private_key or (2) public_key parameter in a T/keyManagement request to plain/settings.html
4, via a task with a [command].value field in conjunction with an [arguments].value field.
4, via shell metacharacters in the HOST_NAME field.
4, via a direct request
2, via the message parameter.
5, via a long name in a DNS lookup request.
4, via a symlink attack on temporary files with predictable names that are created when unpacking archives.
2, via the ID parameter.
3, via unspecified vectors.
0, by disconnecting before authentication has finished.
5, via a crafted port number in a HTTP Host header.
0, via vectors involving powering on a virtual machine.
4, via a certain (1) COPY
4, via a symlink attack on a directory with a predictable name in /tmp/.
1," via vectors related to user lists and """"a particular tag format."""""
4, via a large number of requests.
4, via unspecified vectors.
2, via format string specifiers in a request in the (1) log_msg function in log.c or (2) version or (3) build_version function in version.c.
4, via a cpu count request
4, via a crafted element in an OOXML document file.
4, via unspecified vectors.
4, via a symlink attack on /tmp/.X11-unix/.
1, via vectors related to the search results in the (1) RSS and (2) Atom feed templates.
4," via a .. (dot dot) in the host name in a """"drophost"""" command."
2, via the (1) flash_uri
0, by replaying the username
4, via shell metacharacters in unspecified vectors.
2, via an invalid CLONE_NEWUSER unshare call.
4, via a crafted DSA signature
2, via an invalid DSA signature that is not properly handled during computation of a modular inverse and triggers the overflow during a division by zero by the bignum functionality
1, via vectors related to sha1sums.
2, via the first or second parameter
4, via a symlink attack on /tmp/ipxping/ipxping.
2, via an L5 connection with a crafted PDU value that triggers a heap-based buffer overflow within (1) L5SocketsDispatcher.c or (2) L5Connector.c.
3, via vectors involving an attempted register access that triggers an unexpected value in the Exception Syndrome Register (ESR).
4, via a security token that is not a string data type.
4, via a title in the page settings.
4, via a crafted P header in an ABC file
4, via a crafted ABC.
4, via vectors involving the virConnectListDefinedDomains API function.
2, via the hms-testimonials-addnew page
2, via the (1) name
1, by editing packed revision properties.
4, via a DFS share mount operation that triggers use of an unexpected DFS referral name length.
4, via a URLField.
5, by adding a hardware event to an event group led by a software event.
2, via the (1) display command argument to the ProcessCommandLine function in server/os/utils.c; (2) ResetHosts function in server/os/access.c; (3) open_unix_socket
0, via format string specifiers in unspecified vectors
4, via a G2M4 encoded file.
4, via shell metacharacters in the (1) archive_name parameter to the Power FS module (plugins/action.powerfs/class.PowerFSController.php)
2," via the """"Password Expiration Warning"""" field to the admin/config/people/password_policy/add page."
5, via a crafted (1) ICC color profile to the icctrans utility or (2) TIFF image to the tiffdiff utility.
4, via a symlink attack on the file specified by the --pid-file option.
2, via unknown vectors to (1) lib/openjp3d/opj_jp3d_compress.c
4, via a large number of domain migrate parameters in certain RPC calls in (1) daemon/remote.c and (2) remote/remote_driver.c.
1, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
4, via a crafted comment in a GIF image.
5, via a crafted action: prefix.
2, via unspecified characters in the file extension when renaming a file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4250.
1, by leveraging the Author role and providing a modified user_ID parameter.
4, via a crafted Next Protocol Negotiation record in a TLS handshake.
1, via vectors related to alternating bit depths in H.264 data.
4, via a large response count value in an authentication request
2, via unknown attack vectors in (1) kernel_interface.c and (2) mount_davfs.c
4, via a symlink attack on an unspecified file in /tmp.
4, via unknown vectors.
1," by using the """"@"""" character as the VIF rate configuration."
2, via the (1) user field in the create user page or (2) profile version to the create profile page.
0, by writing the files to the temporary directory that is used to unpack zip files.
2, via unspecified vectors
4, via a crafted X-Forwarded-For header.
4, via a direct request to the node's URL instead of the hashed URL.
4, via unspecified vectors.
2, by causing crafted data to be returned by the Google API.
4," via a """"#f"""" value in the NUM argument."
4, via unspecified vectors.
5, via a crafted e-mail address that is improperly handled during construction of a log message.
4, via a URL in the resource parameter
4, via a large journal data field
5, via a crafted ImageText request that triggers memory-allocation failure.
0, via unspecified environment variables or command-line arguments.
4, via a crafted OpenPGP message.
4, via a %2E%2E%2F (encoded dot dot slash) in the step.
2, via the (1) whereCriteria variable in a software channels search; (2) end_year
4, via a .. (dot dot) in a crafted tar file.
4, via a compressed packet that has a large size when it is decompressed.
4, via unspecified vectors.
2, via the run parameter.
0, by embedding the routine in another routine.
3, via unspecified vectors.  NOTE: the vendor states that this might not be a vulnerability because the YAML to be loaded has already been determined to be safe.
4, via a crafted minion with a valid key.
2, via an email address.
5, by sending a large number of pipelined requests without reading the response.
3, via vectors involving world-writable permissions when creating (1) ~/.gitolite.rc
2, via the language parameter.
4, via a crafted has object
4, via a project name.
3, by uploading a file with an executable extension
4, via a response with more than four DANE entries.
4, via a source filename.
0, via format string specifiers in a destination filename.
4, via shell metacharacters in the filename of an email attachment.
4, via shell metacharacters in the content_type of an email attachment.
5, via a GET request with trailing whitespace characters and no URI.
4, via a response with more than four DANE entries.  NOTE: this issue is due to an incomplete fix for CVE-2013-4466.
5, via a crafted string that triggers generation of a fallback string by the i18n gem.
4, via shell metacharacters in the email (-M switch) to qsub.
2, via the bean title.
2, via the delete option.
4, via unspecified vectors.
1, via vectors related to options.
4, via a crafted URL.
4, via a relative URL in a REPORT request.
4, via unspecified vectors.
1, by leveraging root privileges for a write operation.
4, via a crafted write operation.
1, by leveraging the CAP_NET_ADMIN capability and providing a long station-name string
2, via the (1) Branch field or (2) caption of an uploaded file.
4, via a stylesheet that embeds a DTD
1, via vectors related to migrating ports.
1, via crafted tx_fifo_head and rx_fifo_head values in a savevm image.
4, via a negative value in cpreg_vmstate_array_len in a savevm image.
4, via a crafted s->rx_level value in a savevm image.
3, via vectors related to IRQDest elements.
4, via a crafted savevm image
4, via a crafted arglen value in a savevm image.
1, via crafted (1) cmd_len
4, via a crafted (1) precision
4, via a large (1) prev_level
5, via an unescaped space character in a URI.
2, via an XML Entity Expansion (XEE) attack.
2, via the user name (uid) in a cookie.
4, via unspecified vectors.
2, via the url_site parameter.
2, via unspecified vectors that trigger FAMMonitorDirectory failures.
4, via a small length value and (1) no version or (2) an invalid major number in an IKE packet.
4, via a crafted .ppt file.
3, via unspecified vectors.
4, via a large id value.
1, via vectors related to exporting the alpha of an 8-bit RGBA image.
2, via the (1) title parameter to system/workplace/views/admin/admin-main.jsp or the (2) requestedResource parameter to system/login/index.html.
4, via vectors involving the Graphical Data View & Descriptive Stats page.
4, via vectors involving (1) the Online Designer page or (2) the Manage Survey Participants page.
1, via unspecified vectors involving different modules.
2, via the (1) start or (2) end parameter to interface/reports/custom_report_range.php
2, via the note parameter.
4, via (1) the site parameter to engines/manager.jsp
2, via the package parameter.
0, via the tab parameter to wp-admin/admin.php.
4, via a large amount of tx message data.
4, via a crafted field in a DHCP request
4, via a certain change to a group configuration setting.
4, via unspecified vectors.
5, via a large argument to the jdtojewish function.
2, via an MP3 file that triggers incorrect MIME type detection during access to an finfo object.
0, via the __dnnVariable parameter to the default URI.
3, by leveraging a username of __system in an arbitrary database.
4, via a (1) SSH or (2) TELNET connection.
4, via a long string to TCP port 5916. This component is used on routers of multiple vendors including ASUS RT-AC66U and TRENDnet TEW-812DRU.
4," via a direct request to the """"second layer"""" of the API"
4, via shell metacharacters in (1) the service parameter to info/refs
3, via unspecified vectors.
4, via unknown vectors.
4, via a crafted encrypted e-mail attachment.
3, via vectors involving a (1) custom-reports generation page
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a package with a long Skin directory name.  NOTE: a second buffer overflow involving a long GUI Search field to ml_local.dll was also reported. However
0, by reading Subject header lines within the user's own mailbox.
3, via vectors involving a (1) Operation
3, via unspecified vectors.
4, via unspecified vectors.
3, by leveraging UTF-8 encoding.
2, by leveraging login access.
1, by leveraging login access.
4, via unspecified vectors.
5, via unspecified vectors.
2, via the query string.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a long string in a USER command.
4, via shell metacharacters in the pip parameter in an Ajax tag_ipPing request
1, by reading log files.
4, via a long string within the authentication request.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via (1) the Search field in an inbox action to messaging/messagebox.php
4, via (1) the Search field to browse.php or (2) the Title field to prefs.php.
2, via the (1) username
2,send arbitrary SMS texts to
2, via an unspecified request to the (1) Cluster Controller (CC) or (2) Node Controller (NC) component.
1," via vectors related to the """"network connection clean up code"""" and (1) Cloud Controller (CLC)"
4, via unspecified vectors.
4, via a direct request when an authorized session is active.
2, by using cipher suite 0 (aka cipher zero) and an arbitrary password.
2, by using cipher suite 0 (aka cipher zero) and an arbitrary password.
5, via a request to an unspecified form that is accessible from testurls.html.  NOTE: the vendor disputes the significance of this issue
0," via the """"c"""" parameter to index.php."
4, via a user full name.
2, via unknown vectors
3, via unknown vectors
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unspecified vectors
3, via unknown vectors.
3, via unknown vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
1, via unspecified vectors
2," via an unspecified """"injection"""" approach."
4, via unspecified vectors.
4, via unspecified vectors.
2, via unknown vectors
4, via a direct request to the issueSiebelCmd method
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
1, via unknown vectors
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via a crafted .wav file
4, via a .. (dot dot) in the filename parameter.
4, via a RunLua action in a request to upnp/control/hag on port 49451 or (2) remote authenticated users to execute arbitrary Lua code via a RunLua action in a request to port_49451/upnp/control/hag.
0, via the url parameter to cgi-bin/cmh/proxy.sh
2, via the squashfs parameter.
4, via unspecified vectors.
3, via unknown vectors.
3, by connecting a crafted HDMI cable and using a sys session to modify the ramboot environment variable.
3, by connecting a crafted HDMI cable and sending a SysReq interrupt.
2, via the PATH_INFO to index.php.
2, via the module parameter.
2, via an add user action to index.php.
4, via UTF-7 encoded sequences in a server response
2, via the displayid parameter.
2, via the layout parameter in the layout page.
2, via the AddUser action or (2) conduct cross-site scripting (XSS) attacks
4, via a long URI to TCP port 5600.
0, via an unclosed HTML tag.
3, by uploading a file with an executable extension
2, via the PATH_INFO to the gallery/ page.
0, by leveraging improper configuration of SIMATIC HMI panels by the WinCC product.
0, by leveraging improper configuration of SIMATIC HMI panels by the WinCC product.
4, via a crafted packet.
4, via a crafted packet.
1, via crafted packets.
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted packet that is not properly handled by the GSM RR dissector.
4, via a crafted packet.
2, via the (1) ASPSESSIONIDASSRATTQ
2, via the (1) SelTab parameter to QV_admin.aspx
2, via the element_2 parameter.
5, by uploading a PHP file
2, via the element_2 parameter.
3, via the (1) name or (2) pass parameter in views/login.php or (3) name or (4) pass parameter in views/signup.php.
2, via the id parameter.
2, via the gid parameter.
4, via a URL in the service parameter.
5, via a crafted report-specific type.
1," via vectors related to how the password is """"seeded as a console parameter"
2, via unspecified vectors related to the console
4, via a symlink attack on unspecified files.
4, via a crafted PDF file.
4, via a crafted EPS file.
4, via shell metacharacters in the domain parameter to end-user/index.php.
4, via shell metacharacters in the second argument.
4, via a crafted PDF file.
1," by leveraging console access and providing shell metacharacters in a """"system ping"""" command."
4, via a long idCount value in an ICONDIR structure in an ICO file.  NOTE: some of these details are obtained from third party information.
4, via a crafted SQL query that is not properly handled during the display of row information.
1, via vectors involving (1) a crafted database name
4, via vectors involving a JavaScript event in (1) an anchor identifier to setup/index.php or (2) a chartTitle (aka chart title) value.
2, via an invalid request
2, via an invalid request
2, via an invalid request
4, via a crafted object name associated with a TextLinkTransformationPlugin link.
4, via a crafted pageNumber value to schema_export.php.
4, via (1) the scale parameter to pmd_pdf.php or (2) the pdf_page_number parameter to schema_export.php.
2, via the (1) m_target_class_name
4, via a crafted program in the %SYSTEMDRIVE% directory.
4, via unspecified vectors.
4, via (1) vectors involving PHP scripts and (2) unspecified other vectors.
4, via unspecified vectors.
4, via a long resource name in an HTTP request.
2, via the (1) forum_name
0, by triggering the display of local example files.
2, via the (1) hardwareType
2, via certain vectors related to Header.class.php.
4, via a YAML document in the (1) namespace parameter to the deobfuscation function or (2) sourcemap parameter to the sourcemap function in app/controllers/api/v1_controller.rb.
3, by configuring a source IP address that had previously been used for an authenticated session.
2, via the WifiSecurity parameter.
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted response to a file-open request for an Office file on a web site
4, via a crafted application
4, via a crafted URL
0, via the onlyforuser parameter in an index action to index.php.  NOTE: this issue might be a duplicate of CVE-2011-4559.
2, via the PATH_INFO.
2, via the cert_cn cookie parameter.
2, via the sort parameter
1, via unspecified vectors
4, via a .. (dot dot) in the ROCK_LANG cookie
2, via the (1) db parameter on the login page or (2) username parameter in a login.index action to index.php and other unspecified parameters.
2, via the categoryid parameter.
2, via an HTML e-mail message.
0, by sniffing the network and replaying the ZM_AUTH_TOKEN token.
2, via the search[gender] parameter to user/browse/view_/.
0, via the search[sort_by] parameter to user/browse/view_/.
3, via vectors involving a (1) drag-and-drop or (2) copy-and-paste operation.
4, via a crafted URL.
0, via format string specifiers in a VNC username.
1, by leveraging control over a background app and using the (1) task-completion API or (2) VoIP API.
4, via a crafted application.
4, via a crafted application.
0, via an invalid packet fragment.
4, via a crafted web site.
2, via an application that writes crafted values to /dev/random.
4, use of the window.webkitRequestAnimationFrame API via an IFRAME element.
0, by leveraging certain incorrect visibility of the passcode-entry view after use of the Phone app.
4, via unspecified vectors.
3, by triggering a log entry with a crafted attached URL.
4, via a crafted PDF document.
4, via a hotkey event registration.
4, via a crafted tty read operation.
5, via a crafted Mach-O file.
2, via an invalid iovec structure.
4, via a crafted app that uses the LaunchServices interface to specify process arguments.
1, by using the multipart/signed content type within an unsigned message.
1, by leveraging access to the Guest account and reading console-log messages from previous Guest sessions.
4, via a request with a crafted (1) port or (2) port number.
5, via unspecified vectors.
4, via forged (1) REQ_MON_GETLIST or (2) REQ_MON_GETLIST_1 requests
2, via the easyxdm.swf file.
2, via the SSID.
4, via unspecified vectors.
4, via a crafted DHCP Host Name option
4, via a .. (dot dot) in a URI
1, via crafted HTTP POST data.
3, by leveraging (1) publisher or (2) administrator privileges.
4, via unspecified vectors.
2, via the (1) ntpServer1 parameter to sntpcfg.cgi
1, by triggering autofill of subframe form fields.
3, via the withoutmenu parameter to (1) vulnmeter/index.php or (2) vulnmeter/sched.php; the (3) section parameter to av_inventory/task_edit.php; the (4) profile parameter to nfsen/rrdgraph.php; or the (5) scan_server or (6) targets parameter to vulnmeter/simulate.php.
4, via a .. (dot dot) in the hf parameter.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0," via the """"n"""" parameter to (1) browse_videos.php or (2) members.php.  NOTE: the cat parameter is already covered by CVE-2008-4157."
2, via the (1) n parameter to browse_videos.php or the (2) cat parameter to groups.php.
2, via an edit user action.
2, via the serendipity[htmltarget] parameter.
2, via the atom title
2, via an edit user action to cms/index.php.
0, via the mode parameter to cms/index.php.
0, via the rang parameter to index.php.
2, via the name parameter to secure/admin/user/DeleteUser!default.jspa.
2, via the txtSubject parameter.
2, via the (1) sensor parameter in a Query action to forensics/base_qry_main.php; the (2) tcp_flags[] or (3) tcp_port[0][4] parameter to forensics/base_stat_alerts.php; the (4) ip_addr[1][8] or (5) port_type parameter to forensics/base_stat_ports.php; or the (6) sortby or (7) rvalue parameter in a search action to vulnmeter/index.php.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted PDF document.
3, via unspecified vectors.
3, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors
4, via a crafted JPEG tag that triggers a heap-based buffer overflow
2, via the LZW code stream in a GIF file.
2, via the (1) fb_user_id or (2) tw_user_id parameter to signup.
4, via unspecified vectors.
5, via a long TIFF tag that triggers a heap-based buffer overflow
4, via a crafted TIFF tag
4, via a crafted RAW file
1, via unknown vectors
2, via unspecified vectors
1, by leveraging incorrect IBM Connections integration.
0, by leveraging improper tagging functionality.
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified parameters.
2, via unspecified parameters
3, via unspecified vectors.
4, via unspecified vectors.
3, by leveraging printq group membership.
1, by leveraging helpdesk privileges for a direct request.
1, via crafted input to an unspecified dynamic web form.
4, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via an XFDL form with a long fontname value.
4, via unspecified vectors.
1, via XML data containing an external entity declaration in conjunction with an entity reference
1, by leveraging knowledge of filenames that cannot be easily predicted.
4, via deployer.virtualsystems CLI commands
4, via vectors related to deserialization inside the AccessController doPrivileged block.
4, via unspecified vectors.
0, by leveraging improper parameter checking.
4, by injecting a (1) DLL or (2) configuration file.
1, via fragmented IPv6 packets
2, via unspecified vectors
0, via the chartid parameter
2, via unspecified vectors
2, via an XML external entity declaration in conjunction with an entity reference
0, by sniffing the network for HTTP client-server traffic
2, via unspecified vectors
0, via an unspecified parameter
4, via a crafted packet
1, via crafted packet streams
5, by acquiring a lease and then sending a DHCPRELEASE message
0, via an unspecified parameter
0, via an unspecified parameter
0, via an unspecified parameter
0, via an unspecified parameter
2, by sending many Media Snapshot requests at the time of a meeting termination
4, via a crafted URL
4, via a crafted URL
0, via an unspecified parameter
1, via unspecified vectors
1, via crafted options in an LSA type 11 packet
1, via directory traversal sequences in an unspecified input string
2, via long values in unspecified fields
2, by placing shell commands in an unspecified parameter
0, by uploading many files
4, via a crafted filename
0, via malformed ICMP error packets associated with a (1) TCP or (2) UDP session that is under inspection by the Zone-Based Firewall (ZBFW) component
2, by sending many username-from-cert IKE requests
0, by sending many PPTP packets over NAT
0, via large TCP packets that are processed by the (1) NAT or (2) ALG component
2, by sending malformed EoGRE packets over (1) IPv4 or (2) IPv6
1, via crafted command parameters that trigger hardware-component write operations
5, by sending a crafted SIP message over (1) IPv4 or (2) IPv6
4, via a crafted POST request
4, via a crafted SIP message
2, via an HTTP request that triggers a rewrite
4, via a crafted HTML document
4, via a flood of TCP packets
4, via a flood of TCP packets
4, via a malformed LSA Type-1 packet
1, via Authentication Header (AH) authentication in a Virtual Router Redundancy Protocol (VRRP) frame
1, via crafted update data
4, via unspecified vectors.
4, via unspecified vectors.
3, by leveraging management-console access and reading the ldap_bind_password value in the HTML source code.
2, via the Description field in the user configuration.
4, via a filename with a trailing . (dot)
4, via a long argument.
2, via the lang parameter.
0, via the wakka parameter to sql/.
4, via (1) the step parameter to install/index.php or (2) the id parameter to cacti/host.php.
2, via the id parameter.
5, via unknown vectors.
2, via invalid handshake packets.
3, via unknown vectors.
1, via crafted JavaScript code.
4, via a .. (dot dot) in the gnew_language cookie.
2, via the (1) answer_id or (2) question_id parameter to polls/vote.php
2, via the body of a message visited in (1) new or (2) draft mode
2, via the Name field of an addressbook group.
4, via shell metacharacters in a filename.
4, via a crafted bitmap
4, via a .. (dot dot) in the default URI.
4, via a crafted .zip file.
1, via crafted data
4, via a get_userid action with shell metacharacters in the username parameter.
2, by reading this page's cleartext content.
4, via unspecified vectors.
4, via an iNIC_testimonial_save action; (2) add a listing template via an iNIC_testimonial_save_listing_template action; (3) add a widget template via an iNIC_testimonial_save_widget action; insert cross-site scripting (XSS) sequences via the (4) project_name
0, via the custom_query parameter in a testimonial_add action to wp-admin/admin-ajax.php.
0, by reading the value in the sonar.sonarPassword parameter from jenkins/configure.
4, via a ../%00 (dot dot backslash encoded null byte) in the file parameter in a (1) download or (2) get_content action
4, via (1) content with the text/xml MIME type or (2) the Status comment field of an appointment.
4, via a .. (dot dot) in the file parameter to index.php/admin/translationManager.
0, via the model parameter to index.php/admin/editor.
4, via the service_selection parameter.
2, via the (1) id parameter to admin/auditlog/
4, via a Host header.
4, via a crafted sequence of messages.
3, via unspecified parameters.
5," by placing a header in the trailer portion of data sent with chunked transfer coding.  NOTE: the vendor states """"this is not a security issue in httpd as such."""""
1, by using chunked transfer coding with a capitalized Chunked value in the Transfer-Encoding HTTP header.
3, via vectors related to error messages and (1) crafted event attributes or (2) > (greater than) characters that are optional within a browser's HTML implementation
1, via crafted input containing a %22 sequence
4, via a hardlink in a nullfs instance to a file in a different instance.
2, via the step parameter.
2, via the (1) name or (2) message parameter.  NOTE: some of these details are obtained from third party information.
5, via a crafted WAV file.
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted packet.
2, via unspecified vectors
4, via a wlFltMode action to wlmacflt.cmd
2, via an arbitrary ref_XXX parameter.
4, via an add_project action.
2, via the new_project parameter.
5, via a long password that triggers an expensive hash computation
3, via unspecified vectors.
4, via a .. (dot dot) in the page parameter to cgi-bin/cgiServer.exx.
0, via a full pathname in the dumpConfigFile function in the command parameter to cgi-bin/cgiServer.exx.
0, by calling the system method in the body of a request
4, via a request to photo/p/api/list.php.
2, via unknown vectors related to Integration - Scripting.
2, via unknown vectors related to SC-OC Integration.
2, via unknown vectors related to Outside In Maintenance.  NOTE: the original disclosure of this issue erroneously mapped it to CVE-2013-3624.
1, via unknown vectors related to Optimizer.
1, via unknown vectors related to ActiveX Controls.
2, via unknown vectors related to Web Services.
2, via unknown vectors related to Locking.
2, via unknown vectors related to jhat.
0, via unknown vectors related to Servlet Runtime.
1, via unknown vectors related to InnoDB
2, via unknown vectors related to Outside In Filters.  NOTE: the previous information is from the October 2013 CPU. Oracle has not commented on claims from a third party that the issue is a stack-based buffer overflow in the Microsoft Access 1.x parser in vsacs.dll before 8.4.0.108 and before 8.4.1.52
2, via unknown vectors related to Apache.
2, via unknown vectors related to InnoDB
2, via unknown vectors related to Web Services.
1, via unknown vectors related to End User Self Service.
2, via unknown vectors related to Security.
1, via vectors related to JGSS.
2, via unknown vectors related to Replication.
1, via unknown vectors related to Administration.
2, via unknown vectors related to Install / Installation.
1, via unknown vectors related to Filesystem.
2, via unknown vectors related to Oracle Java Web Console.
2, via unknown vectors related to Learner Administration.
2, via unknown vectors related to eCompensation.
5, via vectors related to JAXP.
3, via unknown vectors.
3, via unknown vectors.
1, via vectors related to GIS.
1, via vectors related to Kernel/KSSL.
1, via vectors related to CPU performance counters (CPC) drivers
4, via vectors related to IPS repository daemon.
1, via vectors related to USB hub driver.
3, via unknown vectors related to Utility/User administration.
1, via vectors related to SISNAPI & Network Infrastructure.
2, via unknown vectors related to Web General
2, via unknown vectors related to Web General
1, via vectors related to Name Service Cache Daemon (NSCD).
1, via unknown vectors related to Integration Broker.
1, via vectors related to Role Based Access Control (RBAC).
2, via unknown vectors related to Kernel
2, via unknown vectors related to Outside In Maintenance.
2, via unknown vectors related to InnoDB
1, via unknown vectors related to Stored Procedures.
2, via unknown vectors related to Kernel.
2, via unknown vectors related to Audit.
2, via unknown vectors related to Common Application Objects.
2, via unknown vectors related to Deployment.
2, via unknown vectors related to Partition.
2, via unknown vectors related to InnoDB.
1, via unknown vectors related to JavaFX.
2, via unknown vectors related to Deployment
2, via unknown vectors related to Deployment.
1, via unknown vectors related to Identity Console.
2, via unknown vectors related to Org and Workforce Dev.
2, via the message parameter.
4, via a URL in the fileName parameter during an importFile action.
2, via the comment_post_ID parameter.
2, via the s parameter.
4, via a malformed SSL record.
2, via the bos parameter.
2, via the listingid parameter.
3, by writing a long string to the /dev/socket/init_runit socket that is inconsistent with a certain length value that was previously written to this socket.
1, via vectors involving the Drupal Form API.
4, via a confirmation form.
2, via the (1) list or (2) introduce parameter to index.php.
4, via unspecified vectors.
4, via shell metacharacters in the Target field (destIP parameter).
4, via admin/agency-user-unlink.php
2, via the an arbitrary parameter in an edit action to administrator/index.php.
4, via the videofile parameter.
3, by uploading a PHP file
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
2, via the flag title.
4, via unspecified vectors.
0, via the date_from parameter to (1) radar-iso27001-potential.php
1, by modifying management traffic.
4, via unspecified vectors.
0, by leveraging the Virtual Machine Power User or Resource Pool Administrator role for a vCenter Server Add Existing Disk action with a (1) -flat
4, via unspecified vectors.
2, via the LastMRH_Session cookie.
2, via the (2) Product name or (3) Price description field in a product save action via a request to wp-admin/admin.php.
3, via the (1) Product name or (2) Price description fields via a request to wp-admin/admin.php. NOTE: This issue may only cross privilege boundaries if used in combination with CVE-2013-5977.
4, via a .. (dot dot) in the p parameter to index.php.
2," via the (1) """"an"""" parameter to agenda.php or (2) cat parameter to mobile/thread.php."
4, via a .. (dot dot) in the file parameter.
1, by leveraging incorrect handling of error-log output.
1, by leveraging incorrect handling of error-message output.
1, via unspecified vectors related to refusals.
4, via a direct request
1, via unspecified vectors related to addresses.
1, via crafted values.
2, via unknown vectors
1, via unknown vectors
4, via a .. (dot dot) in a request.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
1, via vectors related to the Cancel button.
5, via a modified user ID in a request.
2," via the """"Attachment field title."""""
4, via a crafted request.
2, via the body of an e-mail message
0, via the accountNum parameter to an unspecified component.
5, via a long sessionid value in a cookie.
4, via .. (dot dot) in the URI.
4, via a SQL statement containing an XML document with an external entity declaration in conjunction with an entity reference
4, via a long set/runtime/diagnostic/pingIp parameter to Tools/tools_misc.xgi.
4, via a malformed .SVT file.
2, via unspecified vectors
2, via the msg_id parameter.
4, via a crafted .SKP file.
2, via the txtSearch parameter to (1) admin/hostdependencies.php
4, via shell metacharacters in a SOFTCookies sid cookie within a login action.
2, via the user parameter.
4, via unspecified vectors.
3, via unspecified vectors.
1, via crafted multigraph data.
1, via crafted HTML tables.
2, via unspecified vectors that trigger a heap-based out-of-bounds read.
0, via unspecified vectors that trigger a heap-based out-of-bounds read.
2, via the PATH_INFO to blog-by-cat/.
2, via an attached SVG file.
4, via a crafted IKEv1 fragmentation packet.
4, via a long string in the (1) registration code field in the activate license window or the (2) HKLM\SOFTWARE\MostGear\EasyLanFolderShare_V1\License registry key. NOTE: it is not clear from the original report whether this issue crosses privilege boundaries.  If not
4, via a (1) large or (2) small value in the subview attribute of a viewer element in a .motn file.
4, via a symlink attack on a file accessed by a (1) chown or (2) chmod command
2, via the customerid
2, via unknown vectors related to lack of authorization.
0, via IP packets containing errors that trigger event-journal messages.
1, via malformed DNP3 traffic.
2, via the body of an email.
2, via the (1) type parameter to view/parameter.php
2, via the objectId parameter.
2, via the returnpage parameter to index.php.
2, via the _session parameter
4, via unspecified vectors.
4, via a crafted application in a parent directory of an intended directory.
3, via unknown vectors.
3, via unspecified vectors.
3, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
4, via unspecified vectors.
5, via (1) a name in the call administrator feature
4, via unspecified vectors.
0, by uploading an executable file
2, via the (1) filter parameter to index.php/mail/mail/listfoldermessages/searching/true/selectFolder/INBOX/resultContext/searchResultsTab5 or (2) mailId[] parameter to index.php/mail/mail/movetofolder/fromFolder/INBOX/toFolder/INBOX.Trash. NOTE: the view attachment message process vector is already covered by CVE-2013-2585.
5, via a document note in the execution page.
2," via the Description field in the """"Short document metadata."""""
5, by uploading a file with an executable extension
2, via the (1) listenertype or (2) currentlistener parameter to mondetail.jsp or ArraySQL parameter to (3) mondetail.jsp
0, by pasting the clipboard contents that have been copied by another user in the session.
2, via the image parameter in a detail action.
2, via the subject of an email. NOTE: the vulnerabilities related to the body of the email and the publication name were SPLIT from this CVE ID because they affect different sets of versions.
2, via an XML document containing an external entity declaration in conjunction with an entity reference
2, via the (1) box parameter to messaging/messagebox.php
4, via a crafted application that invokes the updateUnlockMethodAndFinish method in the com.android.settings.ChooseLockGeneric class with the PASSWORD_QUALITY_UNSPECIFIED option.
4, via unspecified vectors.
2," via the """"page"""" parameter."
4, via a long string in a URL in a m3u file.
1, via unspecified vectors
2, via an invalid search request
4, via unspecified vectors.
0, via a crafted pathname for a (1) configuration or (2) JAR file.
4, via unspecified vectors.
2, via an unspecified injection.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
5, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
3, by uploading a .jsp file and then launching it.
4, via a crafted packet.
4, via a crafted packet.
2, via the language parameter to index.php.
0, via the tb_tab_index parameter to wp-admin/options-general.php.
2, via the (1) apps_name or (2) apps_flag parameter to APP_Installation.asp.
5, via unknown vectors.
3, via unknown vectors.
3, via unspecified vectors.
0, via the namespace parameter to (1) actionNames.action and (2) showConfig.action in config-browser/.
4, via unspecified vectors.
2, via the POST method
3, by uploading a crafted profile and then accessing it in the module/ directory.
4," via a plugin that uses """"multigraph"""" as a multigraph service name."
4, via a Runtime.getRuntime().exec call.
4, via a crafted image file.
4, via unspecified vectors.
4, via a crafted ICR write operation in x2apic mode.
1, by leveraging the CAP_SYS_ADMIN capability for a (1) XFS_IOC_ATTRLIST_BY_HANDLE or (2) XFS_IOC_ATTRLIST_BY_HANDLE_32 ioctl call with a crafted length value
2, via the description field.
1, via vectors related to CSS.
4, via unspecified vectors.
2, via the host_regex parameter to the default URI
4, via a .. (dot dot) or full pathname in the tr parameter to solr/select/
4, via a symlink attack on the /tmp/hp-pkservice.log temporary file.
2, via unspecified vectors
1, via XML data containing an external entity declaration in conjunction with an entity reference
0, by crashing an aircraft outside of the map.
4, via unspecified vectors.  NOTE: this identifier was SPLIT per ADT2 due to different vulnerability types. CVE-2013-7384 was assigned for the NULL pointer dereference.
5, via a header containing an invalid MIME type that leads to excessive caching.
2, via the unit parameter.
4, via a crafted HTML attribute.
3, via shell metacharacters in a (1) filename or (2) path.
4, via a destructive action in a request.
2, via the virDomainDeviceDettach API and a symlink attack on /dev in the container; (2) create arbitrary nodes (mknod) via the virDomainDeviceAttach API and a symlink attack on /dev in the container; and cause a denial of service (shutdown or reboot host OS) via the (3) virDomainShutdown or (4) virDomainReboot API and a symlink attack on /dev/initctl in the container
4, via vectors involving generated pagination links.
4, via a long string in a character name in a BDF font file.
1, via vectors related to task name html inputs.
2, via IKEv2 packets that lack expected payloads.
4, via an MVFLEX Expression Language (MVEL) expression.  NOTE: some of these details are obtained from third party information.
5, via a large (1) page or (2) line in a URF file.
4, via a crafted PDF file.
4, via a crafted PDF file
4, via a Trojan horse driver in the same directory as the PDF file.
4, via a crafted timestamp value in an XMPP message.
4, via a Yahoo! P2P message with a crafted length field
4, via a crafted (1) SOAP response
3, by triggering a socket read error.
2, via an invalid chunk-size field in chunked transfer-coding data.
4, via a message containing a file: URL that is improperly handled during construction of an explorer.exe command.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-3185.
4, via a large Content-Length value
5, via a crafted emoticon value
4, via a negative Content-Length header
1, via vectors related to the x-webkit-speech attribute in a text INPUT element.
0, via vectors involving the string values of id attributes.
1, via unspecified vectors
3, via unknown vectors.
3, via unspecified vectors.
0, by leveraging improper handling of the closing of an untrusted signin confirm dialog.
4, via unknown vectors.
3, via vectors involving certain print-preview and tab-switch actions that interact with a speech input element.
1, via vectors related to the shutting down of a worker process.
4, via vectors related to (1) lack of checks for .. (dot dot) sequences or (2) lack of use of the \\?\ protection mechanism.
3, via vectors involving attempted conflicting access to the color chooser.
5, via a large texture size that triggers improper memory allocation in the software renderer.
3, via unknown vectors.
1, by leveraging certain middle-click paste operations.
1, via crafted DTLS packets in an SSL session
2, by reading HTML source code
4, via a crafted path
2, via unspecified vectors
4, via a long share list
1, via crafted ICMP packets
4, via a crafted CAPWAP packet that triggers a buffer over-read
4, via a request for an unspecified MIB
1, via crafted packets
1, via crafted (1) TLS or (2) SSLv3 packets
4, via a crafted sequence of ARP packets
1, via crafted MPLS packets that are not properly handled during IP header validation
1, by making multiple management session requests
4, via a direct request
2, via unknown vectors
4, via a crafted URL
3, via vectors involving widgets.
4, via unspecified vectors.
4, via a crafted ComboList property value.
4, via unspecified vectors.
0, by leveraging incorrect security constraints for a temporary directory.
4, via a crafted URL.
2, via an HTTP POST request.
4, via unspecified vectors.
2, via an invalid query parameter in a response from an OAuth authorization endpoint.
2, via an SSO token. IBM X-Force ID: 89855.
3, via vectors involving an IMG element.
1, via crafted input to an unspecified dynamic web form.
4, via a crafted HTML document
4, via a crafted HTML document
4, via a crafted OMP request for version information
4, via a crafted OAP request for version information
4, via a long *.text value in a PE file.
4, via a crafted PATH environment variable for a /system/xbin/su process.
4, via shell metacharacters in the -c option to /system/xbin/su.
4," via a .. (dot dot) in the file parameter.  NOTE: this issue was SPLIT per ADT2 due to different vulnerability types. CVE-2013-7394 is for the issue in the """"runshellscript echo.sh"""" script."
2, via the (1) backtick or (2) $() type of shell metacharacters in the -c option to /system/xbin/su.
2, via the allowedDomain parameter.
2, via the url_name parameter.
2, via the (1) event name or (2) date field.
2, via the Location field.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
4, via a crafted serialized .NET object to TCP port 1984
2, via an empty password
2, via the bw_url parameter in the bw-videos page to wp-admin/admin.php
5, by creating a hard link to a directory. NOTE: this vulnerability exists because of an incomplete fix for CVE-2010-0105.
4, via a crafted request
4, via a malformed .doc file containing an embedded image
1, by leveraging access to a renderer process
2, via the search_string parameter to search/results/all/1/4.
4, via a crafted string in a response
4, via a modified emailAddr field to pickup.php.
2, via format string specifiers in the Remote File field.
1, via unspecified vectors
3, via unspecified vectors.
1, via crafted NI Route messages.
4, via unspecified vectors.
5, by uploading a file with an executable extension via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
0, via a full pathname in the msg parameter.
2, via the it parameter.
4, via shell metacharacters in the pinghost parameter during a ping operation.
4, via shell metacharacters in the nsserver parameter during an nslookup operation.
4, via a crafted xls file with a crafted length value.
4, via a crafted PATH_INTO to the default URI.
0, via the orderby parameter to catalog/[id].
2, via the setPassword method.
2," via an instance name to (1) """"Volumes"""" or (2) """"Network Topology"""" page."
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, via the id parameter in a projectpdf action.
2, via the test_id parameter.
4, via a long URL in a .m3u file.
2, via the tfPassword parameter to nagiosql/index.php.
0, by leveraging setuid permissions and usage of bash 4.3 and earlier.  NOTE: this vulnerability was fixed with commit ad732f00b411b092c66a04c359da0f16ec3b387
2, via the query parameter to component/mijosearch/search.
4, via a request to component/mijosearch/search
2, via the HTTP Referer header.
4, via shell metacharacters in the (1) sector size or (2) skip count fields for the forensic imaging task.
2, via the username parameter in a login or (2) remote authenticated users to inject arbitrary web script or HTML via unspecified form fields.
4, via unspecified vectors.
2, via unspecified vectors that trigger NULL pointer dereferences
4, via a crafted tarball.
4, via a symlink attack in a commit.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted request to admin/access_control_user_add.php; (2) modify or (3) delete user accounts; (4) perform a factory reset; (5) perform a device reboot; or (6) add
2, via the (1) fullname parameter to admin/access_control_user_edit.php or (2) workname parameter to admin/network_workgroup_domain.php.
3, via shell metacharacters in the ip parameter to backupmgt/getAlias.php.
5, by predicting a session id value.
1, by leveraging access to a (1) guest or (2) operator account.
1, via crafted API input.
2, via unspecified vectors
5, via a long string in the SourcePath value in a .wcf file.
2, via the (1) tooltip or (2) usertooltip parameter.
4, via a long string in the name attribute of the cols element in a .wstyle file.
1, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via a request for the sioc.axd file.
4, via (1) a PLTE chunk of zero bytes or (2) a NULL palette
2, via unspecified vectors to the ACM web server.
2, via unspecified vectors
5, via a crafted URL
4, via a crafted URL
4, via a crafted URL
4, via a crafted URL
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unknown vectors
2, by reading verbose error messages within server responses
2, via unspecified vectors
5, via a crafted URL
0, via an unspecified parameter
2, via unspecified input
2, via the Password and PasswordReEnter parameters
3," by reading """"extraneous information"""" in HTML source code"
1, via fragmented MPLS IP packets
4, via a crafted URL
2, via the command line interface.
0, via the procname parameter to wp-admin/tools.php.
0, via the aafireadcode parameter to wp-admin/options-general.php.
0, via the key parameter in a delete action to wp-admin/tools.php.
5," via (1) an HTML email with crafted CSS code containing wildcards or (2) office documents containing """"crafted hyperlinks with script URL handlers."""""
4, via a malformed message to a MM4 connection.
4, via a malformed MM1 message that is routed to a (1) MM4 or (2) MM7 connection.
2, via the g_language parameter.
2, via the (1) full name field
1, via crafted data.
1, via crafted PNG data.
1, via crafted JPEG2000 data.
4, via a crafted application that uses shmctl IPC_RMID operations in conjunction with other shm system calls.
2, via an RRQ operation
2, via the (1) name of an uploaded file or (2) customer name in a resource created from an uploaded file
4, via a serialized PHP object in a cookie.
2, via unspecified vectors that trigger an out-of-bounds read.
0, via the Password parameter to goform/RgSecurity; (2) reboot the device via the Restart parameter to goform/restart; (3) modify Wi-Fi settings
4, via a crafted request to api/v1.0/files/.
1, via vectors related to a file object for unspecified documentation which is initialized in class scope.
2, via an unspecified search API.
2, via unspecified configuration values.
4, via a group audience field
0, by leveraging edit permissions to a node that references a private node.
2, via an empty group field.
4, via a (1) --pager
4, via shell metacharacters in the URI.
2, via the PATH_INFO.
4, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified input
4, via shell metacharacters in a growlnotify message.
2, via the (1) events_col
5, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a .. (dot dot) in the showmask parameter to installer/overview.php.
4, via shell metacharacters in the value attribute in a (1) TestFile XML element or the (2) hostname.  NOTE: this issue can be combined with CVE-2013-7092 to allow remote attackers to execute commands.
0, by specifying them in the value attribute in a (1) Command or (2) Script XML element.  NOTE: this issue can be combined with CVE-2013-7092 to allow remote attackers to execute commands.
5, via a long domain name in a packet.
2, via the jQuery parameter to assets/js/jplayer.swf.
2, by setting the burden_user_rememberme cookie to 1.
4, via a .. (dot dot) in the start parameter.
2, via the category parameter.
3, via vectors related to the SAX builder and the WebDAV interface.  NOTE: this issue has been labeled as both absolute path traversal and XXE
2," via unspecified vectors related to crafted """"<%"""" tags."
2, via unspecified oAuth API functions.
2, via the title in a mail filter rule.
0, via a full pathname in the f parameter.
2, via the (1) Title
4, via a crafted e-mail address that matches an improperly designed regular expression.
4, via a crafted e-mail address that matches an improperly designed regular expression.
4, via shell metacharacters in the ping_ipaddr parameter.
2, via the filter parameter.
2, via the mkey parameter.
4, via a default_reboot action or (2) reset all configuration values via a factory_default action.
4, via a crafted AVI file.
4, via a long string in a .m3u file.
2, via the id parameter.
4, via unspecified vectors.
2, via the PATH_INFO to the default URI for a ticket.
2, via the (1) id parameter to apps/news-events/newdetail.asp
2, via the (1) pa parameter to auction/asp/list.asp
2, via the (1) Last name
4, via a request that specifies the ID for the publication.
1, via vectors related to the user umask when running gitolite setup.
4, via a groupsSave action.
2, via the (1) ID parameter to demo/classifieds/product.asp
2, via the answer_id[] parameter.
0, by leveraging an unattended workstation with the keyboard focus on the Activities search.
2, via unknown vectors
4, via (1) the homepage timeline feature or (2) the activity feature.
3, via an imagecrop function call with a large x dimension value
2, via unspecified vectors
2, via unspecified input to the map or feature service.
4, via an X-Frame-Options header.
0, via multiple space characters characters.
0, by sending an invalid request with SASL credentials
4, via a .. (dot dot) in the dew_file parameter.
2, via the URI.
2, via the tableprefix parameter.
2, via the (1) post-menu field to edit.php or (2) Display name field to settings.php.  NOTE: The Custom Permalink Structure and Email Address fields are already covered by CVE-2012-6621.
1, by leveraging failure to validate credentials
4, via a long string
2, via the cmdWebGetConfiguration action in a TSA_REQUEST.
2, via an autocompletion string
1, via vectors related to (1) web/admin/
3, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
2, via the Project Name field.
1," via unspecified vectors related to """"displaying group DN and entry data in group administration UI."""""
2, via the title field in a wallpaper file upload.
2, via the editor parameter in a smilie list popup.
2, via the current_url parameter.
4, via the (1) HTTP Referer header to saa.php
0, via the id parameter to default.asp.
2, via the base parameter.
4," via a """"Cookie: :language=en"""" HTTP header."
3, via vectors related to Yahoo video URLs.
2, via the (1) first_name
2, by entering only a DIGIPASS one-time password
2, via an IKEv2 I1 notification without a KE payload.
2, via an HTTP query that contains %% (double percent) characters.
4, via a header that ends in \n instead of \r\n
0, via a full pathname in a request to the internal httpd server.  NOTE: this vulnerability can be leveraged by remote attackers using CVE-2013-7301.
2, via the author name field.
4, via a crafted HTML file
2, via the (1) settings_file or (2) data_file parameter to (a) ampie.swf
2, via the message parameter.
2, via the title field.
4, via unspecified vectors.
4, via unspecified vectors.
4, via shell metacharacters in unspecified vectors.
3, via malicious javascript. NOTE: this WebKit-GTK behavior complies with existing W3C standards and existing practices for GNOME desktop integration.
2, via the (1) return_url parameter to modules\com_vtiger_workflow\savetemplate.php
3, via an imagecrop function call with a negative value for the (1) x or (2) y dimension
1, via vectors related to post-build actions.
0, via the q parameter
3, via unspecified vectors.
4, via a file size value larger than the size of the zip file to the (1) ZipExtFile.read
4, via a bind system call for an RDS socket on a system that lacks RDS transports.
4, via a crafted playlist file.
0, via the callback parameter
0, by using URL encoding within the callback parameter name.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7342.
5, via unknown vectors.  NOTE: this issue was SPLIT from CVE-2013-0303 due to different affected versions.
0, via the sort parameter to system/authors/
2, via vectors involving an error condition in the aio_setup_ring function.
2, via the (1) news_id parameter to news/send.php
2, via the URL to the (1) showRSS
0, via the show_statuses[] parameter
4, via a crafted image
4, via a crafted image to the (1) png_set_sPLT or (2) png_set_text_2 function
1, via unspecified vectors
3, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unspecified parameters.
0, via the gnew_template parameter to (1) users/profile.php
2, via the user ID in a user cookie
2, via unspecified characters in a call to libnotify.notify.
2, via unspecified vectors
2, via unspecified vectors
4, via the PHPSESSID cookie.
2, via the (1) deviceid parameter to parentalcontrols/bind.php
3, by uploading a file with a jsp extension
4, via shell metacharacters in a file name to Source/.
4, via a symlink attack on the pid file created for (1) svnwcsub.py or (2) irkerbridge.py when the --pidfile option is used.  NOTE: this issue was SPLIT from CVE-2013-4262 based on different affected versions (ADT3).
5, via a crafted string.  NOTE: this issue was SPLIT from CVE-2013-6771 per ADT2 due to different vulnerability types.
0, by leveraging improper checking of authentication codes.
4," via a URI without a """" """" or """"?"""" character in an ICAP request"
4, via a crafted ICAP request.
4, via unspecified vectors.
4, via unknown vectors.
4, via a long string in a .m3u (playlist) file.
3, via shell metacharacters in a URL in a feed.
2, via the QUERY_STRING.  NOTE: this can be used to bypass the cross-site request forgery (CSRF) protection mechanism by setting the Referer.
4, via shell metacharacters in the TABLE parameter.  NOTE: this can be exploited remotely by leveraging a separate cross-site scripting (XSS) vulnerability.
2, via the roomid parameter.
4, via a long string in the Text attribute in a TEXTART XML element in an HML file.
4, via a bind system call for an AF_ALG socket with a module name in the salg_name field
2, via the url parameter to plugin_googlemap2_proxy.php.
2, via the url parameter to plugin_googlemap2_proxy.php.
2, via the xmlns parameter.
2, via large dimensions in a BMP image
4, via a crafted PBM image
4, via a crafted request
1, via crafted SQL statements.
4," via the """"Change block"""" text."
1, via crafted epoll_ctl calls.
0, via the page parameter to api/page/get.
4, via a nested tag.
4, via a crafted javascript URI.
1, via vectors related to UI redressing.
2, via nested forbidden strings.
4, via a malformed ICC profile that triggers an error in the default intent handler.
4, via a crafted application.
3, via specific conditions.
3, via specific conditions.
2, via the publication name
2, via the body of an email. NOTE: this vulnerability was SPLIT from CVE-2013-6242 because it affects different sets of versions.
4, via unexpected input.
2, via an XML document containing an external entity declaration in conjunction with an entity reference
5, via a long server name in the PROXY-CONNECT address in the command line.
4, via a symlink attack on /tmp/awb.wav.  NOTE: some of these details are obtained from third party information.
4, via a request to the (1) virConnectDomainEventRegister and (2) virConnectDomainEventRegisterAny functions in the event registration API.
4, via unspecified parameters.
3, via unspecified vectors.
4, via a crafted request.
1," via vectors related to """"a NULL pointer of the username."""""
5, via a crafted length prefix value
0, via vectors involving unsafe /tmp usage.
3, by leveraging a loop that triggers an invalid memory copy affecting certain cancel_work_item data.
3, by leveraging a default value of true for the trustAllHosts option.
0, via the class parameter
3," by using a """"Content-Length: 0"""" AJP request to trigger a hang in request processing."
4, via a crafted cookie that is not properly handled during truncation.
1, via arbitrary SSL certificates.
4, via a large request with the Content-Type set to text/html to a SOAP endpoint
4, via a large invalid SOAP message.
1, via vectors related to Apache Commons JEXL expressions
4, via a .. (dot dot) in the file parameter to log.
0, by leveraging the absence of a certain orphaning operation.
4, via a crafted request.
4, via a (1) parameter or (2) id name.
5, via a crafted file because of incorrect j2k_decode
4, via a crafted statsVersion argument.
2, via an arbitrary valid certificate.
0, by leveraging the Contributor role
4, via a crafted web page.
4, via a crafted request to a REST endpoint
4, via a symlink attack on a temporary patch file.
3, via invalid width and height values in a GIF image.
3, by adding a directory with a large fonts.dir or fonts.alias file to the font path
4, via a crafted xfs protocol reply to the (1) _fs_recv_conn_setup
2, via the API.
2, via unspecified vectors
2, by triggering many file_printf calls.
4, via a vector that (1) has zero length or (2) is too long.
4, via a symlink attack to a file in /var/lib/check_mk_agent/job.
2, via the width and height to the (1) xf_Pointer_New or (2) xf_Bitmap_Decompress function
0, by sending many crafted packets
0, by sending many crafted packets
4, via a crafted Office document
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
0, via a certain sequence of manipulations of a TextRange element
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
1, via unspecified vectors
4, via a crafted web site
3, via vectors involving crafted JavaScript code
4, via a crafted web site
4, via a crafted web site that triggers improper processing of CElement objects
2, via the web interface.
0, by uploading new firmware to TCP port 54321.
2, via the LABEL_ID parameter.
2, via the locale parameter to gui_partA/.
4, via an IDAT chunk with a length of zero.
4, via (1) the group parameter to admin/addgroup.php
2, via the (1) DB_CONN
2, use the user_new_master parameter to the adminconsole/ URI.
2," via an invalid TELNET connection attempt with a crafted username that is not properly handled during construction of the """"failed log-in attempts over telnet"""" log view."
2, via the pol_name parameter.
2, via the search parameter.
2, via the title field to (1) templates_internal/pages.tpl
3, by uploading a file with a (1) .php or (2) .php# extension
4, via a crafted JPEG 2000 file.
1, via crafted DNS PTR records that are requested during comparison of a server name to a wildcard domain name in an X.509 certificate.
5, by using %2F sequences in place of / (slash) characters.
4, via (1) a long temp attribute in a yweather:condition element in a forecastrss file that is processed by the checkWeather function; the (2) WeatherCity or (3) WeatherDegree variable to the detectWeather function; unspecified input to the (4) UpnpAddRunRLQoS
4, via shell metacharacters in input to the (1) detectWeather
2, via an XML request containing a valid license key and a modified contactID value
4, via a .. (dot dot) in (1) the file parameter in a getUpgradeStatus action to servlet/MGConfigData
4, via shell metacharacters in a gui_input_test.pl params parameter to servlet/Installer.
2, via unknown vectors related to Java Integration
1, via unknown vectors related to Clinical Trip Report.
2, via unknown vectors related to Page Parameters and Events.
1, via unknown vectors related to Deployment
1, via vectors related to MultiChannel Framework (MCF).
3, via vectors related to PIA Core Technology
2, via unknown vectors related to JavaFX.
2, via unknown vectors related to Identity Console.
1, via vectors related to XML.
1, via unknown vectors related to Org and Workforce Dev.
2, via unknown vectors related to Learner Pages.
2, via unknown vectors related to Java Web Console.
1, via unknown vectors related to Security.
2, via unknown vectors related to Updates Environment Mgmt
1, via unknown vectors related to Updates Environment Mgmt
3, via unknown vectors related to Portal - Web Services.
1, via vectors related to OID LDAP server.
2, via unknown vectors related to Deployment
1, via vectors related to HTTP Request Handling
1, via vectors related to HTTP Request Handling.
2, via unknown vectors related to Security.
1, via vectors related to HTTP Request Handling
3, via vectors related to FTS.
1, via unknown vectors related to Performance Schema.
2, via unknown vectors related to InnoDB
2, via unknown vectors related to Thread Pooling.
2, via unknown vectors related to Web Analysis.
0, via unknown vectors related to Panel Processor.
1, via unknown vectors related to Report Distribution.
1, via vectors related to PIA Core Technology.
0, via unknown vectors related to Integration Broker.
2, via unknown vectors related to Security.
2, via unknown vectors related to Web General
1, via vectors related to PIA Core Technology
0, via unknown vectors related to Kernel
1, via unknown vectors related to People Connection.
2, via unknown vectors related to Scripting
2, via unknown vectors related to Scripting
2, via unknown vectors related to Admin Console.
4, via a crafted RFC2047 header line
2, via the subject of an email
4, via a .. (dot dot) in a (1) LC_*
3, via vectors related to compare_versions and reportbug/checkversions.py.
1," via vectors related to the """"user's environment."""""
4, via a crafted DNS message.
2, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
1, via unspecified vectors
3, via unspecified vectors.
2, via the poLibMaintenanceFileSave parameter
2, via unspecified vectors
1, via vectors related to the (1) GetGlobalSettings or (2) GetSiteProperties3 methods
2, via unspecified vectors to the StartLog method.
1, via unspecified vectors to the SaveSettings method.
3, by uploading and launching an executable file.
4, via unspecified vectors.
4, via a Trojan horse dwmapi.dll that is located in the current working directory.
2, via the (1) ADDNewDomain parameter to parental/website-filters.asp or (2) VmTracerouteHost parameter to goform/status/diagnostics-route.
4, via a request to goform/system/factory
2, via unspecified vectors
5, by triggering application-data processing during the TLS handshake
1, by using the wrap method during a certain incomplete-handshake state.
4, via a modified imaging-service URL.
4, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
0, via vectors involving FRAME elements
4, via unspecified vectors.
4, via unspecified vectors.
5, via an api/login request containing an XML external entity declaration in conjunction with an entity reference
4, via a request to this interface
4, via a crafted URL
4, via a crafted NetBIOS logout probe response
4, via a replay attack involving crafted RADIUS accounting messages
4, via a replay attack involving crafted RADIUS Change of Authorization (CoA) messages
1, via crafted field values
4, via a crafted SIP header
4, via a crafted Q.931 STATUS message
4, via a crafted SDP message
0, via an unspecified parameter
2, via unspecified IMAP commands
0, via an unspecified parameter
0, via unspecified WSP packets
0, via an unspecified parameter
0, via an unspecified parameter
4, via a crafted URL
4, via a series of multiple commands
1, via LDP discovery traffic containing malformed Hello messages
4, via a crafted URL
4, via a report containing a crafted URL that is not properly handled during generation of report-output pages
1, via crafted sed input
1, via crafted (1) IGMPv2 or (2) IGMPv3 packets
0, by leveraging incorrect file permissions
2, via certain matching traffic
1, via fragmented packets
1, via crafted packets to TCP port 7000
4, via a flood of jumbo frames
4, via a session on the test interface on TCP port 7870
4, via a crafted URL
1, by using an unspecified prompt
4, via a crafted URL
4, via a crafted URL
4, via a crafted URL
4, via a crafted URL
4, via a CLI copy command in a local-mgmt context
4, via a direct request
4, via a crafted URL
4, via a crafted URL
5, by injecting a Certificate Trust List (CTL) file
3, by injecting a Certificate Trust List (CTL) file
4, via a crafted configuration-file TFTP request
4, via a crafted command
2, via unspecified vectors
1, via crafted data
0, by reading extraneous fields in an HTML document
3, via unspecified CAPF programs
4, via a large count value.
4, via a crafted URL.
1, by triggering access to DLL code located in the IntegraXor directory.
4, via unspecified vectors.
4, via a Trojan horse application with a name composed of an initial substring of a path that contains a space character.
4, via a crafted TCP packet.
1, via crafted input over a serial line.
3, via SOAP requests to unspecified functions.
4, via a long NodeName parameter.
4, via a long GotoCmd argument.
4, via a long NodeName2 argument.
4, via a long AccessCode argument.
4, via a long AccessCode2 argument.
4, via a long UserName parameter.
4, via a file: URL.
4, via a file: URL.
4, via a crafted packet.
1, via network traffic to TCP port 10651.
1, via crafted UDP packets.
4, via a crafted TCP packet.
4, via a crafted TCP packet.
2, via SELECT statements that leverage the guest role.
4, via a crafted packet.
4, via a large ScopeCount value in a Scope List in a Server License Request packet.
2, via unspecified vectors related to unmarshalling of unintended Object types.
3, via the (1) website or (2) latitude parameter in a comment to the default URI.
2, via the id parameter in a comment.like action to index.php.
4, via unspecified vectors.
4, via a crafted filename.
4, via unspecified vectors.
4, via unspecified vectors.
0, by leveraging an interaction error
4, via unknown vectors.
4, via a Trojan horse FAS file in the FAS file search path.
4, via a Trojan horse DLL in the current working directory.
3, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
4, via a crafted URL.
4, via a crafted URL.
4, via a modified pathname.
4, via a crafted text value.
1, via crafted arguments to a setuid program.
4, via a crafted URL.
1, by leveraging control of the server.
3, via vectors involving a direct object reference.
4, via unspecified vectors.
4, by uploading a file.
0, by leveraging membership in two security groups.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted request.
4, via a modified URL.
3, via unknown vectors.
4, via a crafted XML document.
2, via the query string.
4, via (1) the Message parameter to rcore6/main/showerror.jsp
4, via non-printing characters in a cookie to the /classes/ URI
2, via an unspecified parameter.
1, by leveraging incorrect ACL synchronization over an unreliable NFS connection that requires retransmissions.
2, by visiting the Rights page and then following a generated link.
0, by leveraging an incorrect configuration. IBM X-Force ID: 91146.
4, via unspecified vectors.
4, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified parameters.
2, by reading the DbUser and DbPass fields in an XML document.
4, via a crafted ComboList property value.
4, via a crafted request.
1, by leveraging failure to update the mAdminMap data structure.
4, via unspecified vectors.
5, via unspecified vectors.
1, via vectors related to an error page. IBM X-Force ID: 92072.
4, via an e-mail message
1, via malformed headers during a WebSockets connection upgrade.
1, via WebSockets MQ Telemetry Transport (MQTT) data.
1, via crafted MQ Telemetry Transport (MQTT) authentication data.
5, via a crafted URL.
1, by leveraging knowledge of the port number and webapp path. IBM X-Force ID: 92259.
4, via a crafted URL.
1, via vectors related to events.
0, via vectors involving the (1) REST API or (2) Self Service UI.
4, via a crafted URL
4, via a crafted URL
4, via a crafted update site.
4, via a crafted ZIP archive.
4, via unspecified vectors.
0, by establishing an SSH session from a deployed virtual machine.
1, via crafted SSL messages.
1, via crafted TLS traffic
4, via unspecified vectors.
4, via a crafted URL.
5, via a crafted URL for an MHTML document.
4, via unspecified vectors.
4, via a long line in a dot file.
4, via a crafted PUI file.
2, via the NodeName parameter.
3, via the GotoCmd parameter.
2, via the NodeName2 parameter.
2, via the AccessCode parameter.
2, via the AccessCode2 parameter.
2, via the UserName parameter.
2, via the projectname parameter.
2, via the password parameter.
4, via a crafted BMP file.
2, via the BITMAPINFOHEADER.biClrUsed field in a BMP file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-0993.
4, via a negative value in a VT_WAITACTIVE ioctl call
3, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a ..%2f (dot dot encoded slash) in the attach parameter to WorkOrder.do in the file attachment for a new ticket.
2, via the ym_download_id parameter to the default URI.
2, via the xmlcontrol parameter to the default URI.  NOTE: some of these details are obtained from third party information.
4, via a crafted configuration module to hedwig.cgi
2, via the (1) map
2, via an EXIF tag.  NOTE: some of these details are obtained from third party information.
2, via the path parameter.
4, via a request to (1) functions.php
2, via the i18n[1][name] parameter in a pjActionCreate action to the pjAdminServices controller or (2) add an administrator via a pjActionCreate action to the pjAdminUsers controller.
0, via the where parameter in a list action to index.php.
2, via the c parameter.
2, via the i parameter.
2, via the (1) Subject or (2) Message field.
4, via a long string in a (1) 2001
4, via a .. (dot dot) in the filename in a file upload.
2, via the prod_id parameter.
2, via the message field.
2, via the s parameter in the unconfirmed page to wp-admin/network/users.php.
4, via unspecified vectors.
3, via unknown vectors.
3, via the PreviewNum parameter.  NOTE: the CatID parameter is already covered by CVE-2008-0685.
2, via the empsearch[employee_name][empId] parameter.
0, via the quiz parameter to wp-admin/edit.php.
0, via the quiz parameter to wp-admin/edit.php.
3, via unspecified vectors.
4, via a crafted request.
2, via the page parameter.  NOTE: some of these details are obtained from third party information.
4, via a crafted URL.
2, via the username.
4, via a .. (dot dot) in the (1) newlang or (2) newtheme parameter.
0, via the width parameter to (1) uploader/admin/js/load_flv.js.php or (2) uploader/js/load_flv.js.php.
0, via the keyword parameter in a ByEge action.
0, via the id parameter in (1) download.php or (2) main.php.
2, via the productboardtype parameter.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the content parameter to the default URI.
2, via the PATH_INFO to archives/.
0, via the search parameter to search/.
4, via a crafted size in an unspecified IOCTL call
2, via the id parameter.
4, via a request without the height parameter to load_flv.js.php
2, via the width parameter to (1) uploader/admin/js/load_flv.js.php or (2) uploader/js/load_flv.js.php.
2, via the (1) name
4, via a crafted request to the admin page
2, via the (1) first_name
4, via a .. (dot dot) in the id parameter in a pjActionDownload action to the pjBackup controller.
4, via a long string to the (1) CGI_ParamSet
2, via the query string to the default URI.
0, via the keywordphrase parameter in a dosearch action.
2, via an update action to the AdminOptions controller or conduct cross-site scripting (XSS) attacks via the (2) event_title parameter in a create action to the AdminEvents controller or (3) category_title parameter in a create action to the AdminCategories controller.
2, via the cid parameter.
4, via (1) unspecified vectors related to purchase_limit or the (2) name
2, via the (1) changeSort or (2) switch parameter in the usces_itemedit page to wp-admin/admin.php.
2, via the essid parameter.
4, via a crafted request.
2, via the username parameter.
3, by uploading a file with an executable extension
2, via unspecified vectors
0, via the id parameter to (1) edit_block.php
1, by setting the client_login cookie to admin.
0, via the res_buf parameter to index.cgi when res_config_id is set to 41.
2, via the req_new_email parameter.
4, via a URL in the redirect_url parameter.
4, via a long string in a UID command.
2, via the id parameter.
0, via the zID parameter in a list action.
2, via the (1) iDisplayLength or (2) iDisplayStart parameter to (a) comments_paginate.php or (b) stores_paginate.php in admin/ajax/.
2, via the (1) sEcho parameter to comments_paginate.php or (2) stores_paginate.php or the (3) affiliate_url
2, via the cameFromUrl parameter to feed/generateFeedUrl.html.
4, via a .. (dot dot) in the url parameter to photoalbum/index.php.
2, via the ids parameter.
4, via a call in a situation where :some_key is present in keep_keys but not present in the hash.
4, via a crafted request parameter in a WSDL file.
4, via shell metacharacters in the domain parameter to admin/domain/ip_login_set/d_ip_login_get.php.
4, via unspecified vectors.  NOTE: this can be exploited by unauthenticated remote attackers if the guest user is enabled.
2, via the owa_email_address parameter in a base.passwordResetRequest action to index.php.
5, by intercepting and modifying Network File Copy (NFC) traffic.
4, via a crafted (1) dest parameter and (2) arbitrary extension in the Filename parameter.
1, via vectors related to reading data from config.dat and Windows Registry.
4, via a .. (dot dot) in the file parameter in a download action.  NOTE: it is likely that this issue is actually in the KCFinder third-party component
4, via the oninput event handler in the fname parameter to the default URI in /reg.
0, by leveraging setuid permissions and usage of bash 4.3 and earlier.  NOTE: This vulnerability exists because of an incomplete fix for CVE-2013-6876.
4, via unspecified vectors.
0, by listing the curl process.
5, via a crafted file.  NOTE: This vulnerability exists due to an incomplete fix for CVE-2014-0978.
3," via vectors related to a """"badly formed number"""" and a """"long digit list."""""
2, via the call parameter.
5, via a crafted movie file with H.264 encoding.
4, via a crafted stsz atom in a movie file.
4, via a crafted ftab atom in a movie file.
4, via a crafted dref atom in a movie file.
4, via a crafted ldat atom in a movie file.
4, via a crafted PSD image.
4, via a crafted clef atom in a movie file.
4, via a crafted Microsoft Word file.
4, via a malformed header in a Portable Executable (PE) file.
4, via a crafted Type 1 font that is embedded in a document.
1, via crafted Mach messages.
4, via a crafted image.
4, via a crafted filename.
4, via a crafted Microsoft Office document.
4, via a crafted Unicode font.
1, via crafted Mach messages that trigger memory corruption.
0, by changing the current time on the system clock.
3, by leveraging a symlink.
1, by leveraging use of text-relocation instructions in a dynamic library.
0, by using the lock screen for an invalid FaceTime call.
1, via crafted JPEG2000 data in a PDF document.
4, via a crafted app that accesses an IOKit framework interface.
4, via a crafted call.
4, via a crafted video file with MPEG-4 encoding.
4, via a long name.
0, by leveraging an application crash during activation of an unactivated device.
3, by leveraging a state-management error.
1, via crafted USB messages.
2, via unknown vectors
2, via unspecified vectors
0, via format string specifiers in a URL.
4, via a crafted JPEG image.
3, by touching (1) a key or (2) the trackpad during a lid-close action.
2, via an invalid URL.
3, by leveraging a URL drag operation that originates at a crafted web site.
4, via a crafted AppleDouble file in a ZIP archive.
1, by leveraging access to a sandboxed application for sending a message.
0, by leveraging read access to a kernel pointer in an IOKit object.
4, via a crafted application.
1, by leveraging read access to a kernel pointer in an IOKit object.
4, via a 32-bit executable file for a crafted application.
3, via unspecified vectors.
4, via a crafted movie file with RLE encoding.
3, via unspecified vectors.
3, via unspecified vectors.
2, via the (1) search parameter to mod/content/content.php or (2) CLIENT_IP
2, via the location.hash value.
4, via (1) the submit-url parameter in a Refresh action to goform/formWlSiteSurvey or (2) the wlan-url parameter to goform/formWlanSetup.
0, via the submit-url parameter in a Refresh action.
4, via (1) the submit-url parameter in a Refresh action to goform/formWlSiteSurvey or (2) the wlan-url parameter to goform/formWlanSetup.
4, via unspecified vectors.
2, via unspecified vectors
4, via cross-site scripting. This issue affects MAAS versions prior to 1.9.2.
2, via an AUTH SSL command with malformed data
4, via a /../ sequence in an XCRC command.
4, via a USER command with a specific length
5, by closing a connection before a keepalive response is sent.
1, via crafted JavaScript code that uses the history API.
0, via the owa_user_id parameter to index.php.
4, via unspecified vectors.
2, via the _position_down_id parameter.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
2, via the login field of the login page.
5, via unspecified vectors.
2," via unspecified vectors related to the """"response web page."""""
3, via unspecified vectors.
4, via vectors related to the MPostWriteBarrier class in js/src/jit/MIR.h and stack alignment in js/src/jit/AsmJS.cpp in OdinMonkey
0, by using an IFRAME element in conjunction with certain timing measurements involving the document.caretPositionFromPoint and document.elementFromPoint functions.
3, via vectors involving termination of a worker process that has performed a cross-thread object-passing operation in conjunction with use of asm.js.
3, via unknown vectors.
1, by triggering navigation at a certain time during generation of this prompt.
4, via onbeforeunload events that trigger background JavaScript execution.
4," via vectors involving the """"Open Link in New Tab"""" menu selection."
4, via unspecified vectors.
3, via unknown vectors.
3, by placing a Trojan horse DLL file into a temporary directory at an unspecified point in the update process.
4, via a crafted web site that is visited in the debugger
1, via crafted JavaScript code that uses DOM events to prevent the reemergence of the actual address bar after scrolling has taken it off of the screen.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via crafted web content.
1, via vectors related to a crafted AudioBuffer channel count and sample rate.
4, by using non-contiguous axes with a (1) physical or (2) virtual Gamepad device.
1, via vectors involving the sprintf and console functions.
3, via unknown vectors.
0, by leveraging incorrect Web Audio control-message ordering.
4, via unknown vectors.
4, via a crafted certificate that does not use UTF-8 character encoding in a required context
4, via a crafted certificate that does not use UTF-8 character encoding in a required context
4, via a crafted certificate that does not use ASCII character encoding in a required context.
3, via vectors related to improper interaction between threading and garbage collection in the GCRuntime::triggerGC function in js/src/jsgc.cpp
4, via unknown vectors.
2, via the objID parameter to the default URI.
2, via unspecified parameters to (1) dns
2, via the (1) param parameter to admin/load.php or (2) user
0, via the year parameter to eventcalander/. NOTE: this issue has been disputed by the Drupal Security Team; it may be site-specific.  If so
4, via a crafted envelope tag in a mc_issue_attachment_get SOAP request.
2, via unspecified parameters to the (1) mc_project_get_attachments function in api/soap/mc_project_api.php; the (2) news_get_limited_rows function in core/news_api.php; the (3) summary_print_by_enum
2, via the contact name field.
2, via the username parameter.
4, via a serialized object in the dc_passwd cookie to a password-protected page
2, via the (1) cat_id or (2) p_id parameter to products.php or id parameter to (3) page.php or (4) news.php.
2, via the (1) name1
2, via direct request to /setup/index.php.
2, via the hostname parameter.
5, via a long string in the jump parameter.
2, via the id parameter in an edit action to (1) admin_school_names.php
4, via a modified URL.
1, by providing the e-mail address associated with a user account.
4, via unspecified vectors.
2, via the displayTab parameter.
4, by sending a crafted XMLRPC request over HTTPS.
3, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified report parameters.
2, via the filename of an uploaded file.
4, via vectors involving a crafted DNS response.
2, via the macAddress element in a (1) getUploadPath or (2) getKBot SOAP request to service/kbot_service.php; the ID parameter to (3) userui/advisory_detail.php or (4) userui/ticket.php; and the (5) ORDER[] parameter to userui/ticket_list.php.
4, via unspecified vectors.
4, via a Trojan horse dwmapi.dll file in the current working directory.
4, via a zero minimum and maximum data packet size in an ASF file.
3, via vectors related to thumbnail creation.
4, via a crafted serialized object in the _formvars form.
4, via CRLF sequences in the (1) user
1, via crafted packets to TCP port 4999.
1, via crafted packets to TCP port 4999.
1, via malformed HTTP requests to port 4999.
0, by leveraging an incorrect deletion in a certain failure case.
5, via unspecified vectors.
3, via unknown vectors.
1, via vectors that trigger an attempted mapping of a large amount of renderer memory.
0, via vectors that trigger a SharedWorker termination during script loading.
1, by leveraging renderer access.
4, via vectors related to forms.
3, via unknown vectors.
0, via an INPUT element that triggers the presence of a Speech Recognition Bubble window for an incorrect duration.
4, via unknown vectors.
1, via vectors related to WebSocketJob deletion.
0, via vectors that trigger a large shared-memory allocation.
3, via unknown vectors.
5, via a URL in the href parameter to page/place.html.  NOTE: this was originally reported as a cross-site scripting (XSS) vulnerability
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted document
4, via a crafted .pub file
4, via a crafted web site
1, via unknown vectors
1, via unspecified vectors
5," by leveraging """"object confusion"""" in a broker process"
1, via unspecified vectors
4, via a crafted web site
4, via a crafted web site
1, via crafted JavaScript code that interacts improperly with a CollectGarbage function call on a CMarkup object allocated by the CMarkup::CreateInitialMarkup function.
5, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via vectors related to the CMarkup::IsConnectedToPrimaryMarkup function
4, via a crafted web site
2, via unspecified vectors
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
1, via crafted page content
4, via a crafted web site
4, via a crafted URL
4, via a crafted URL containing a valid meeting ID
3, by uploading a large file.
0, by reading the Authorization header in a redirected request.
2, by reading the Proxy-Authorization header in a redirected request.
4, via a symlink attack on (1) control_process.pid or a (2) generation-* file.
4, via a symlink attack on (1) control_process.pid or a (2) generation-* file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1831.
4, via a crafted .orig.tar file
3, by adding a semi-colon in their username or password.
0, by watching the process table.
0, via a full pathname in the image_path parameter in a cancel action.
1," via vectors related to """"checking new comments."""""
4, via a symlink attack on /tmp/toto.fdf.
2, via the keywords parameter in a do_search action
4, via a Move action with a .. (dot dot) in the src parameter.
4, via a Go action with a .. (dot dot) in the search-bar value.
4, via a Properties action with a .. (dot dot) in the src parameter.
1, by leveraging failure to properly sanitize the environment.
1, via vectors involving the gdb method.
2, via the track parameter.
2, via the (1) capcheck parameter to directories.php or (2) keyword parameter to proxy.php.
4, via a symlink attack on a temporary file.
3, via vectors involving a drag-and-drop operation.
4, via a symlink attack on a temporary file.
2, via the (1) Phone
0, via a crafted filename in an import action.
5, via a crafted library clone that leverages IFRAME script execution and waits a certain amount of time for an OnJsPrompt handler return value as an alternative to correct synchronization.
4, via a crafted library clone that leverages IFRAME script execution and directly accesses bridge JavaScript objects
2, via the name field to groups/create/step/group-details.  NOTE: this can be exploited without authentication by leveraging CVE-2014-1889.
3, by leveraging a missing permissions check.
4, via unspecified vectors.
2, via the requested URI in a default action.
3, by uploading a file with a double extension
2, via the (1) m parameter to lb_status.php; (2) msg parameter to vc_chatlog.php; n parameter to (3) channel.php
4, via a .. (dot dot) in the s parameter to ls/rtmp_login.php or (2) delete arbitrary files via a .. (dot dot) in the s parameter to ls/rtmp_logout.php.
4, via a negative length value
4, via a blank username and password.
2, via the (1) topic parameter to sw/add_topic.php or (2) nick parameter to sw/chat/message.php.
2, via an update action to sw/admin_change_password.php or (2) unspecified victims for requests that add a topic or blog entry to sw/add_topic.php.  NOTE: vector 2 can be leveraged to bypass the authentication requirements for exploiting vector 1 in CVE-2014-1914.
1," via vectors related to """"option injection through positional arguments."""" NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323."
4, via unspecified vectors.
2, via the text parameter to index.php/guestbook/index/newentry.
2, via the add_value parameter.
4, via a large number of layers in a PSD image
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted PSD image
2, via unknown attack vectors.
2, via unspecified vectors
2, via unknown attack vectors.
2, via vectors related to the ESR application and a DIR error.
5, via unspecified vectors.
4, via a crafted filename.
5, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted filename.
3, via unspecified vectors.
4, via a crafted filename.
4, via Deco-mail emoticon POP data in an e-mail message.
2, via the Make field in IPTC Exif metadata within an image uploaded to the Community plugin.
4, via unknown vectors.
5, via unspecified vectors.
4, via a URL in the back url (back_url parameter).
4, via a crafted application.
3, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified API calls.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted response.
0, by leveraging the ability to read system log files.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the TID parameter.
4, via a large number of entries in the ContextColor value of the Fill attribute in a Path element.
4, via a crafted xmlrpc API request to (1) unsubscribe_forum.php or (2) unsubscribe_topic.php in mobiquo/functions/.
2, via the PATH_INFO to shared-apartments-rooms/.
3, by uploading a file with an executable extension
2, via the request parameter.
1, by leveraging use of HTTP to download configuration information from v.percona.com.
2," via unknown vectors related to """"an unauthenticated execution path."""""
2, via the i parameter.
0, via IKEv2 packets that lack expected payloads.  NOTE: this vulnerability exists because of an incomplete fix for CVE 2013-6466.
5, by uploading a file with an executable extension
2, via the value parameter.
2, via the username when (1) logging in or (2) creating an account in the old interface
0, by leveraging an insecure OpenID implementation.
4, via unspecified vectors.
4, via a crafted HTTP Host header.
2, via unspecified vectors
4, via unspecified vectors.
3, by configuring a job to trigger another job. NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7330.
2, via the job name.
4, via unspecified vectors.
0, by reading the HTML source code
4, via unspecified vectors.
4, via vectors related to failed login attempts.
2, via the iconSize cookie.
0," via vectors involving the """"override"""" of Jenkins cookies."
4," via a """"remote cause note."""""
1, via vectors related to heapDump.
0, via a full pathname in the file parameter to FileManager.aspx.
4, via a crafted packet
2, via the subject of an email
3, by leveraging a failure in e-mail auto configuration for external accounts.
3, by leveraging failure to use directory masks when creating files on Samba and NFS shares.
2," via the """"a"""" parameter."
2, via the (1) username or (2) password parameter.
3, by using a .php filename in an upload_files action to the uploadFiles command
4, via an e-mail attachment that leads to creation of a .php file with a certain client_id pathname.
2, via the (1) tar
2, via the title parameter in an add_forum action.  NOTE: the original disclosure also reported issues that may not cross privilege boundaries.
2, via the action parameter
4, via a Trojan horse catfish.py in the current working directory.
4, via a Trojan horse bin/catfish.py under the current working directory.
1, via malformed SNMP packets
1, via unspecified parameters
1, via crafted SIP messages
4, via a malformed IKEv2 packet
1, via crafted HTTP requests
0, via an unspecified parameter
2, via unspecified parameters
1, via unspecified parameters
2, via unspecified parameters
2, via an FTP session that uploads a modified SLBL database file
0, via an unspecified parameter
2, via unspecified vectors
1, via unspecified vectors
0, via an unspecified parameter
4, via a series of (1) Virtual Switching Systems (VSS) or (2) Bidirectional Forwarding Detection (BFD) packets
4, via a crafted URL
4, via a crafted URL
4, via a TCP FIN attack that triggers file-descriptor exhaustion
4, via a TCP FIN attack that triggers file-descriptor exhaustion and a failure to open a CAL pipe
4, via a crafted HTTP URI
1, via crafted Main Mode packets
3, via vectors related to unenforced access constraints for .wav files and the audio/x-wav MIME type
4, via a crafted JavaScript file
2, via unspecified parameters
1, via crafted SIP packets
4, via a malformed DHCPv6 packet
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted packets
1, via crafted packets
1, via crafted packets
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted SIP packets
1, via crafted DNS response packets
0, by using the commands as arguments to internal system scripts
0, by using the commands as arguments to tshell (aka tcsh) scripts
1, via crafted SIP packets
1, by leveraging improper handling of the u-boot compiler flag for internal executable files
4, via crafted H.225 packets
5, by sending a crafted URL to the HTTP server
4, via a malformed L2TP packet
4, via a crafted URL
0, by reading extraneous fields in an HTML document
0, via an unspecified parameter
0, via an unspecified parameter
3, by injecting a spoofed XML external entity.
4, via a large volume of crafted traffic
3, by importing a crafted XML file
3, by entering a \n (newline) character before the end of a string.
2, via the rssurl parameter.
4, via a URL in the redirect parameter to portal/scr_sendmd5.php.
2, via the (1) error parameter to /includes/plugins/mobile/scripts/login.php or (2) id parameter to portal/openrssarticle.php
4, via a crafted request.
3, by uploading a ZIP file that contains a PHP file and a non-zero length PNG file
4, via a request to api/add/admin; (2) have unspecified impact via a request to api/add/wlanconf; change the guest (3) password
3, via unsafe deserialization of XML messages.
4, via a URL in the (1) dest parameter to adclick.php or (2) _maxdest parameter to ck.php.
4, via a property title.
3, via unspecified vectors.
4, via unspecified vectors.
1, via vectors related to the question search form.
1, via vectors related to the (1) tag or (2) user search forms.
2, via the filter_config_id parameter.
4, via a large number of stem hints in a font file.
0, via the sortby parameter to admin/moduleinterface.php.  NOTE: some of these details are obtained from third party information.
4, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
3, via unknown vectors.
1, via crafted PROFINET packets
1, via crafted Profinet packets.
1, via crafted HTTP packets
1, via crafted HTTP packets.
1, via crafted ISO-TSAP packets
4, via crafted ISO-TSAP packets.
1, via crafted HTTPS packets
1, via crafted HTTPS packets.
2, via the command field in the Cron functionality.
1, by omitting the _wpcf7_captcha_challenge_captcha-719 parameter.
4, via a request containing the username
1, via crafted offsets in the softmagic of a PE executable.
4, via unspecified vectors.
4, via a request to the subscribe-to-comments-reloaded/options/index.php page to wp-admin/admin.php.
4, via a symlink attack
3, by uploading a file with an executable extension specified by the partitionIndex parameter and leveraging CVE-2014-2279.2 to access it via the directory specified by the fileId parameter.
5, via a .. (dot dot) in the logname parameter to out/out.LogManagement.php or (2) remote attackers to write to arbitrary files via a .. (dot dot) in the fileId parameter to op/op.AddFile2.php.  NOTE: vector 2 can be leveraged to execute arbitrary code by using CVE-2014-2278.
2, via the query parameter.
4, via a SUBSCRIBE request without any Accept headers
1, via crafted serialized data in the (1) authentication_method_ser or (2) authentication_info_ser parameter to index.php
4, via a crafted serialized object in the owa_event parameter to queue.php.
3, via the (1) n parameter to ls/htmlchat.php or (2) bgcolor parameter to ls/index.php.  NOTE: vector 1 may overlap CVE-2014-1906.4.
4, via a large record in MPEG data.
2, via the inf operations (op=inf) to an object in pub/bscw.cgi/.
4, by intercepting a request to update.webedition.org.
2, via the (1) table or (2) order parameter.
3, by sending a multi-object request with an Object ID (OID) containing more subids than previous requests
3, via unspecified vectors.
4, via a symlink attack on /tmp/thermald.pid.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) thanks_caption
0, via the s parameter to index.php. NOTE: some of these details are obtained from third party information.
2, via the table parameter.  NOTE: some of these details are obtained from third party information.
2, via the m parameter.
4, via sendcmd requests
4, via shell metacharacters in the (1) downloaded_file or (2) url variable.
2, via the host name
4, via a .. (dot dot) in the host name
2, via the (1) state parameter to objects/who/index.htm or (2) User email address to quarantine/spam/manage.htm.
2, via the (1) agent string for a check_mk agent
5, via a request to an unspecified link
2, via an EXIF tag.  NOTE: some of these details are obtained from third party information.
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
3, by rekeying an IKE_SA during (1) initiation or (2) re-authentication
2, via the (1) subject or (2) content parameter.
4, via a request to wp-admin/plugins.php.
2, via the PHPSESSID parameter.
5, via a crafted DNP3 packet.
4, via a crafted DNP request over a serial line.
5, by sending a crafted DNP3 packet over TCP.
1, via crafted input over a serial line.
3, via vectors related to pathnames contained in web API requests.
4, via unspecified vectors.
4, via a crafted CIMPLICITY screen (aka .CIM) file.
4, via a long RTU-to-Master message.
1, by reading cleartext protocol data.
0, via packets that report a high battery voltage.
4, via a long string in the (1) ProjectName
3, via unknown vectors.
0, by reading HTML source code.
4, via a crafted call.
4, via a crafted call.
4, via a direct request to an unspecified URL.
1, via vectors involving JavaScript.
4, via unspecified vectors.
2, via an application tag.
4, via a crafted IOCTL request that writes to arbitrary memory locations
5," via a crafted buffer in an IOCTL call.  NOTE: the researcher reports """"Vendor rated issue as non-exploitable."""""
2, via the (1) newListList:ExcludeFileOnExpression
4, via a Drive filename that is not properly handled during use of the composer to add an e-mail attachment.
2, via unknown vectors related to Oracle Endeca Information Discovery (Formerly Latitude)
1, via unknown vectors related to Oracle Endeca Information Discovery (Formerly Latitude)
2, via unknown vectors related to Partition.
1, via vectors related to CEP system.
3, via unknown vectors.
1, via unknown vectors related to Admin Console.
2, via unknown vectors related to Campus Mobile.
2, via unknown vectors related to Performance Schema.
2, via unknown vectors related to Options.
2, via unknown vectors related to Federated.
2, via unknown vectors related to Integration Broker.
3, via vectors related to DML.
2, via unknown vectors related to InnoDB.
1, via unknown vectors related to Integration Broker
1, via unknown vectors related to Replication.
2, via unknown vectors related to Workspace Web Application.
1, via vectors related to MyISAM.
1, via vectors related to PIA Core Technology.
2, via unknown vectors related to Security
1, via vectors related to QAS.
1, via unknown vectors related to Integration Broker
1, via unknown vectors related to Install and Packaging.
1, via unknown vectors related to Optimizer.
1, via unknown vectors related to Privileges.
1, via unknown vectors related to Webserver Plugin.
2, via unknown vectors related to User Interface.
2, via unknown vectors related to User Interface.
3, via unknown vectors.
2, via unknown vectors related to Install.
2, via unknown vectors related to Install.
2, via unknown vectors related to Security.
2, via unknown vectors related to Security.
1, via unknown vectors related to Security.
2, via unknown vectors related to Security
4, via vectors related to Open_UI
3, via unknown vectors.
2, via unknown vectors related to Learner Pages.
5, via vectors related to SGD Proxy Server (ttaauxserv)
1, via vectors related to SGD Proxy Server (ttaauxserv) and SGD SSL Daemon (ttassl).
1, via vectors related to SGD Proxy Server (ttaauxserv)
1, via vectors related to SGD Proxy Server (ttaauxserv)
2, via unknown vectors related to Integration Business Services.
2, via unknown vectors related to Portal Framework
2, via unknown vectors related to Web client (PC).
1, via vectors related to ENARC.
1, via unknown vectors related to Purchasing.
2, via unknown vectors related to Test Framework.
4, via unspecified vectors.
4, via a session cookie.
2, via the (1) startat or (2) entryId parameter.
4, via unspecified vectors.
4, via unknown vectors.
2, via an RPC command.
4, via a symlink attack on a /var/tmp/rltrace.[PID] file.
4, via a long sequence of percent-encoded characters in a URI in a YAML file.
2, via the (1) sForumName or (2) sDescription parameter to Forum/manage/ForumManager.lsp; (3) sHint
0, via the i parameter in a search action to the (1) NodeWorx 
0, by providing an arbitrary program name as a command-line argument.
3," by reading """"bad parameter"""" lines in error messages"
5, via unspecified vectors.
4, via a URI
2, via the site_directory_sort_field parameter to guest/site_directory.
5, via a request to the disable_comments_settings page to wp-admin/options-general.php.
4, via a request to wp-admin/options-general.php.
1, via unspecified vectors
4, use of cleartext for saving a message into a (1) sent or (2) draft folder via a PREAUTH response that prevents later use of the STARTTLS command.
0, by leveraging the absence of a certain orphaning operation. NOTE: the affected code was moved to the skb_zerocopy function in net/core/skbuff.c before the vulnerability was announced.
2, via the name parameter.
4, via a .. (dot dot) in the __EVENTARGUMENT parameter.
2, via the (1) pn parameter to index.fsp/document.pdf
4, via unspecified vectors.
2, via the config task to index2.php or (2) when the enable_db_backup and sql_mem options are enabled
4," via vectors related to the cuid option in the """"Additional options"""" line edit."
4, via a .. (dot dot) in the (1) PAM_RUSER value to the get_ruser function or (2) PAM_TTY value to the check_tty function
4, via a crafted password.
2, via the username of an audit report (aka user parameter).
4, via a .. (dot dot) in the reportFileName parameter.
2, via the sn parameter.
4, via a crafted library
3, by uploading a file with an executable extension.
4, via shell metacharacters in certain arguments of a valid command
4, by leveraging a permanent authentication token obtained from a query string.
4, via a large input buffer to unspecified IOCTL requests in RACDriver.sys
2, via the quickppr_redirects[request][] parameter in the redirect-updates page to wp-admin/admin.php.
1, by leveraging access to certain service domains for HVM guests and a large input.
1, via crafted HTTPS traffic
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
1, by leveraging the OMi operator role.
0, by uploading an executable file
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
1, via unknown vectors
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
3, via unknown vectors.
1, via crafted input
3, via unknown vectors.
1, via unknown vectors
3, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
4, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unspecified vectors.
1, by presenting an unacceptable HostCertificate.
0, via the id parameter to (1) edit_ad_unit.php
4, via a new alias.
3, via unknown vectors.
3, via unspecified vectors.
3, by uploading a file with an executable extension
0, via the count parameter to /_uuids.
2, via the name parameter
4, via a crafted WAV file.
4, via a large amount of network traffic that triggers certain list deletions.
4, via a .. (dot dot) in the loop parameter in an ajax_navigation action to wp-admin/admin-ajax.php.
4, via a request to the wp-html-sitemap page in wp-admin/options-general.php.
5, via a bind system call for an RDS socket on a system that lacks RDS transports.
4, via a man-in-the-middle attack.
2, via the PATH_INFO to installer/index.php.
2, by reading the log.
1, via network traffic that improperly interacts with the WLAN_STA_PS_STA state (aka power-save mode)
4, via shell metacharacters in the (1) model or (2) PDL
2, via the PATH_INFO to the (1) login page (index.php) or (2) login form (loginform-inc.php).
2, via the (1) module or (2) message parameter to index.php.
2, by visiting the change-password page.
0, via the category0 parameter
1, via HTTP traffic to port (1) 4999 or (2) 80.
1, via HTTP traffic to port (1) 4999 or (2) 80.
1, via crafted HTTP requests to port (1) 4999 or (2) 80.
2, via the (1) session ID (PHPSESSID) to index.php or remote authenticated users to execute arbitrary SQL commands via the (2) user parameter to connectors/security/message.php or (3) id parameter to manager/index.php.
0, via the u parameter
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via unspecified vectors
5, via a crafted embedded font in a (1) .doc or (2) .docx document
4, via a crafted file.
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via crafted AMQP messages
4, via a crafted OneNote file that triggers creation of an executable file in a startup folder
4, via a Trojan horse app that executes a custom action in the context of the SharePoint extensibility model
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
5, via a large number of the same authentication method in a request
0, via the s parameter in the gd-star-rating-stats page to wp-admin/admin.php or (2) cross-site scripting (XSS) attacks via unspecified vectors.
0, via the s parameter in the gd-star-rating-stats page to wp-admin/admin.php.
4, via a malformed SSL/TLS packet.
4, via unspecified vectors.
2, via the new parameter in the SysUser module to admin.
4, via a ..././ (dot dot dot slash dot slash) in the lang Cookie parameter
2, via the TroncoID parameter.
0, by replacing the dissolvable agent executable in the Windows temp directory with a Trojan horse program.
4, via a crafted request.
4, via shell metacharacters in the address parameter.
4, via a crafted application that leverages an improperly managed reference counter.
2, via the sort key in an info action.
4, via unspecified vectors.
4, via a user name which does not exist in the secrets file.
2, via the URL path
1," via unspecified vectors related to a """"configured block."""" NOTE: this issue was SPLIT from CVE-2014-0053 per ADT2 due to different vulnerability types."
4, via a direct request.
4, via a crafted HTTP request to a (1) ColdFusion or (2) JavaScript component.
4, via a crafted string
0, via a full pathname in a parameter.
0, via a filename parameter containing directory traversal sequences.
4, via a '\0' character
3, by uploading a ColdFusion page
0, by using an HTTP GET request to set a ColdFusion variable.
4, via requests to unspecified URIs
4, via unspecified vectors.
4, via shell metacharacters in an unspecified context.
4, via (1) the uploadPatch parameter to the System/Advanced page (settings_advanced.html) or (2) the uploadLicenses parameter in the License management (settings_upload_dlicense.html) page.
5, via a (1) TC_IOCTL_OPEN_TEST or (2) TC_IOCTL_GET_SYSTEM_DRIVE_CONFIG IOCTL call.
3, via vectors involving a crafted item->OriginalLength value in the MainThreadProc function in EncryptedIoQueue.c or (2) cause a denial of service (memory consumption) via vectors involving large StartingOffset and Length values in the ProcessVolumeDeviceControlIrp function in Ntdriver.c.
4, via shell metacharacters in the module name in a JSON request.
2, via the openid_error parameter to MyID.config.php when the openid.mode parameter is set to error
4, via a crafted ID_DER_ASN1_DN ID payload.
4, via a long line in an MMS over HTTP (MMSH) server response.
4, via a symlink attack on temporary directories with predictable names.
3, via multiple calls to the CyaSSL_read function which triggers an out-of-bounds read when an error occurs
4, via (1) a request for the peer certificate when a certificate parsing failure occurs or (2) a client_key_exchange message when the ephemeral key is not found.
4, via unspecified vectors.
4, via unspecified vectors.
5," via a newline character in the -a option to libexec/check_nrpe.  NOTE: this issue is disputed by multiple parties. It has been reported that the vendor allows newlines as """"expected behavior."""" Also"
4, via a request to admin/.
0, via the current_page parameter to apply.cgi.
4, via unspecified vectors.
4, via a crafted pathname.
0, via the tr parameter to (1) costview2/jobs.php or (2) costview2/printers.php.
4, via shell metacharacters in a methodCall element in a PHP XMLRPC request.
4, via (1) the maindir_hotfolder parameter to dirmng/index.php
4, via (1) an XHTML document
4, via a request element in an XML document.
2, via the txtUsername parameter.
4, via a crafted SOAP request.
5, via unspecified vectors.
2, by using cipher suite 0 (aka cipher zero) and an arbitrary password.
4, via shell metacharacters in a pathname parameter.
1, via unspecified vectors
0, via a full pathname in the getpage parameter.
2, via the sortdir parameter.
0, via Python os library calls in Python API commands to the integrated web server.
2, via an SMS message.
2, via the description parameter.
2, via the user_id parameter.
5, via a .. (dot dot) in an HTTP GET request to TCP port 18081.
2, via the Voodoo interface
2, via the Voodoo interface
4, via a request to Users/add.
2, via an HTML file containing an IMG element with a long URL (src attribute).
2, via unspecified vectors
4, via a crafted XML document.
4, via shell metacharacters in unspecified vectors related to CVE-2014-1932
4, via shell metacharacters in the comm parameter to recoveryconsole/bpl/snmpd.php.
3, via unspecified vectors.
2, via unspecified parameters to custom JSPs.
1, via crafted input to a (1) custom JSP or (2) custom renderer.
4, via a crafted URL.
4, via a flood of IP packets.
4, via a TELNET session.
4, via a crafted URL.
1, by leveraging access to the service account.
1, by leveraging the TSSC service-user role to enter a crafted SSH command.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted URL.
1, by leveraging access to an eXtreme Scale distributed ObjectGrid network.
1, by leveraging access to an eXtreme Scale distributed ObjectGrid network and capturing a session cookie.
4, via unknown vectors.
3, via unspecified vectors.
4, via a crafted UNIX file parameter.
1, via XML data containing an external entity declaration in conjunction with an entity reference
4, via a crafted URL for adding a project connection.
3, via unknown vectors.
2, via an uploaded file.
2, by visiting an unspecified JSP diagnostic page.
5, via a DESCRIBE clause in a SPARQL query.
4, via (1) the query string to kvm.cgi or (2) the key parameter to avctalert.php.
2, via the filename parameter.
4, via shell metacharacters in the lpres parameter.
2, via an XML external entity declaration in conjunction with an entity reference
4, via a crafted URL.
4, via a crafted URL.
3, via unknown vectors.
4, via a crafted URL.
4, via invalid input.
2, via the (1) Printer Model field to the Printer Management page
4, via a malformed (1) elst or (2) stsz atom in an MP4 file.
0, via the cmd parameter to functions/ezpz-archive-cmd.php.
4, via system/config/adminadd and other unspecified vectors.
2, via the (1) search_string parameter in the contacts module to index.php or allow remote attackers to execute arbitrary SQL commands via the updatekey parameter to (2) do_updatecontact.php or (3) updatecontact.php.
3, by leveraging a separate qemu-dm vulnerability to trigger invalid page table translations for unspecified memory page types.
4, via a crafted request
4, via unspecified vectors.
4, via (1) the PATH_INFO to privatemessage/new/
4, via unspecified vectors.
0, by setting the auth parameter to a certain string.
2, via control characters in the link scheme to the clean_html function.
4, via a CSV file.
2, via the PATH_INFO to a non-existent page
3, via vectors related to a Blink shutdown.
0, by leveraging incorrect queue maintenance.
0, via vectors that trigger unexpected bitmap data
3, by leveraging VideoFrame data structures that are too small for proper interaction with an underlying FFmpeg library.
4, via a long word in an options file
3, via unknown vectors.
4, via unknown vectors.
2, via unknown vectors
4, via unknown vectors.
4, via a crafted device that provides a large amount of (1) EHCI or (2) XHCI data associated with an event.
4, via a crafted device that provides a malformed REPORT_TYPE_NOTIF_DEVICE_UNPAIRED value.
5, via a crafted device that specifies a large report size for an LED report.
4, via a crafted device that provides a small report descriptor
4, via a crafted device that provides a large amount of (1) EHCI or (2) XHCI data associated with a bulk response.
0," via vectors that leverage """"type confusion"""" for callback processing."
3, via unknown vectors.
3, via unknown vectors.
2, via the session parameter to localhost/backupmgt/localJob.php or the auth_name parameter to localhost/backupmgmt/pre_connect_check.php.
2, via the PATH_INFO to pks/lookup/undefined1.
2, via the booking_form_id parameter to wp-admin/admin-ajax.php.
4, via a crafted .ogg file.
4, via a symlink attack on (1) /tmp/fishd.log.%s
0, via the name parameter in a request to the user's page in mgmt/shared/authz/users/.
2, via the Kickstart field in a profile.
4, via a SOAP request containing an external entity declaration in conjunction with an entity reference
4, via a crafted DTD in an XML request.
2, via the folder parameter in a fileview_list action to manageajax.php.
2, via the desc parameter in an Add project (addpro) action to admin.php.
3, via vectors involving hiding and unhiding nodes.
3, by leveraging improper use of cryptography.
0, via HTTPS packets that require tower processing
1, via crafted attributes in a RADIUS packet
0, via an unspecified parameter
0, via an unspecified parameter
1, via crafted RTCP packets
2, by polling frequently
4, via a malformed packet
4, via a malformed packet
1, via crafted Tidal Job Buffers (TJB) parameters
5, via a malformed packet
4, via a crafted URL
4, via a crafted URL
1, via crafted filename parameters in a URL
4, via a zero value in Cisco Discovery Protocol packet data that is not properly handled during SNMP polling
4, via a crafted URL
1, via malformed HSRP packets
4, via a crafted URL
1, via malformed IPsec packets
2, by reading stack traces in returned messages
2, by entering crafted URLs and examining the returned messages
2, via unknown vectors
1, via crafted DHCP messages
1, via crafted data
4, via a crafted URL
0, via an unspecified parameter
0, via a crafted parameter
4, via a crafted URL
4, via a crafted URL
4, via a crafted URL
1, via crafted URLs for unspecified scripts
4, via a crafted URL
0, via a crafted parameter
0, via a crafted parameter
2, via unspecified vectors
4, via a TCP SYN flood
4, via a crafted URL
3," by conducting an """"HTTP Intercept"""" attack and leveraging the ability to read files within the context of the web-server user account"
4, via a crafted request
4, via a crafted SIP message that is not properly handled during processing of an XML document
1, via crafted input to unspecified pages
4, via a crafted request
2, via unspecified commands
4, via a malformed DHCPv6 packet
2, via unspecified parameters
4, via a crafted SSH packet
2, via multiple TELNET connections
0, via an unspecified parameter
4, via a (1) Access Policies or (2) Device Summary Dashboard parameter
1, via crafted input to the (1) Dashboard or (2) Configure Realm page
4, via a crafted response
0, via an unspecified value
4, via a high rate of crafted packets
1, via crafted SDP packets
1, via crafted SIP packets
2, via unspecified parameters
2, via unspecified parameters
2, via unspecified parameters
2, via unspecified parameters
4, via a malformed RSVP packet
4, via a malformed SNMPv2 packet
4, via a malformed TACACS+ packet
4, via a malformed MPLS packet
2, by sending crafted TCP packets quickly
1, via crafted UDP packets
4, via a crafted URL
1, via crafted TCP packets
0, by reading the verbose response data that is provided for a request to an unspecified URL
1, by reading logs
1, via crafted IP traffic that matches a problematic rule
0, via an unspecified parameter
0, via malformed CFM packets
0, by waiting for an administrator to copy a file
4, via unspecified vectors.
2, via the admin parameter to admin/administrators.
2, via the invite_users[] parameter to the /invite page for a group.
4, via shell metacharacters in the skipjackUsername parameter.
4, via a symlink attack on the /tmp/gnus.face.ppm temporary file.
4, via a symlink attack on a temporary file under /tmp/esrc/.
4, via a symlink attack on a /tmp/Mosaic.##### temporary file.
4, via a symlink attack on a /tmp/tramp.##### temporary file.
5, by creating a /tmp/xmosaic.pid file for every possible PID.
3, by creating a /tmp/Mosaic.pid file for every possible PID.
2, via the model parameter to servlet.
2, via the model parameter to servlet.
2, via an unspecified form field.
2, via an unspecified form field
1, via XML data containing an external entity declaration in conjunction with an entity reference
3, via unspecified vectors.
4, via unspecified vectors.
3, by leveraging client-system access to upload a log file.
4, via a crafted .png file
4, via a malformed .FLV file
4, via a crafted .ogg file.
4, via a malformed .3gp file.
2, via the nodeid parameter.
4, via a crafted .jpg file.
4, via unspecified vectors.
2, via the PEstrarg1 property.
3," by setting """"blockMACBytes"""" to 0 and adding 8 to """"blockMACRandBytes""""."
4, via a crafted X.509 certificate
4, via a NULL value in an ivalue argument.
5, via hotplug and hotunplug operations of Virtio block devices.
1, by leveraging improper bitstring quoting.
0, by leveraging improper range quoting.
2, via an invalid name length in a DNS response or (2) cause a denial of service (crash) via an invalid name length in a DNS response
4, via a crafted SSLv2Hello message.
2, via the Name field to the New Host groups page
4, via a parameter (1) name or (2) value related to the host.
4, via a crafted intent URL.
2, by using JavaScript to open WebSocket connections through WebView.
5, via a URL with a crafted URI scheme for an Android intent.
5, use of TLS 1.0 by triggering ClientHello message fragmentation in communication between a client and server that both support later TLS versions
2, via an invalid SRP (1) g
4, via a crafted handshake message.
1, via crafted input to an application that makes create_with calls.
4, via a crafted Calc spreadsheet.
2, via an OpenXML file containing an XML external entity declaration in conjunction with an entity reference
0, via a certain sequence of crafted messages that cause the dbus-daemon to forward a message containing an invalid file descriptor.
2, use this flaw to read the contents of arbitrary files on the system or
0, by leveraging an unsafe call to pickle.load.
5, via a crafted username that is improperly handled during the logging of an invalid login attempt.
0, via vectors that trigger a crafted (1) error or (2) success message for a scheduled task.
4, via a crafted DNS Search List (DNSSL) in an IPv6 router advertisement.
2, via unspecified vectors that modify heap memory
1, via vectors related to temporary file creation in (1) seed.py
1," via vectors related to """"different line lengths in a specific order."""""
4, via a crafted OOXML file
1, via crafted OLE objects.
4, via a shutdown command.
4, via a crafted URL.
0, via vectors involving an XPath based selector when dequeuing XML messages.
4, via a REPORT request for a resource that does not exist.
0, via an empty HTTP Content-Type header.
2, via long response headers.
4, via a crafted block size.
4, via a crafted DNS record
4, via a crafted image.
4, via vectors involving an XPath based selector when dequeuing XML messages.
4," via a request with crafted """"Range headers with unidentifiable byte-range values."""""
0, by logging in with an empty password and valid username
0, via an unknown sequence of malformed packets.
1, by setting the display to a high resolution.
5, by setting a cookie for a top-level domain.
3, by leveraging a third-party filter extension that accesses a certain ksep value.
1, by leveraging failure to properly tunnel remap requests using CONNECT.
2, via the fieldvaluecache object.
4, via a crafted message.
0, by queuing the maximum number of file descriptors or (2) cause a denial of service (disconnect) via multiple messages that combine to have more than the allowed number of file descriptors for a single sendmsg call.
4, via a large number of method calls.
4, via a large value in the size parameter to auth/qrcode
4, via a crafted provisioning template.
3, by writing to stdout or stderr.
4, via a crafted DHCPv6 packet.
4, via a crafted IPv6 address
5, via a crafted MOK list
1, by accessing unspecified pages.
3, by importing a crafted BPMN2 file.
4, via a large priority (PRI) value.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-3634.
2, via unspecified parameters related to rectangle handling.
4, via a large length value in an emoticon response.
4, via a crafted server message that triggers a large memory allocation.
4, via a drive name in a tar archive of a smiley theme.
4, via a crafted XMPP message.
4, via a .. (dot dot) the session parameter.
1, by leveraging lack of CSRF protection.
0, via vectors that trigger a sandboxed process to look up a large number of nonexistent path names.
4, via the (1) mode parameter in the setup_utils function in content_search_controller.rb or (2) action parameter in the respond function in api/api_controller.rb in app/controllers/katello/
4, via a crafted 32-bit guest kernel
2, via the (1) find
2, via the (1) find
4, via a crafted .avi file.
2, via the title of a device.
5, via a URL in the came_from parameter.
2, via the Summary field in a ticket request to the portal page.
2, via unspecified characters in the lpr command.
3, via unspecified vectors.
1, via vectors related to (1) gfm codeblocks (language) or (2) javascript url's.
4, via a %2e%2e (encoded dot dot) in an unspecified path.
0, via the email parameter to autenticar/lembrarlogin.asp.
4, via a crafted 0x83170180 call.
4, via a crafted string that is treated as rich-text by a Qt widget
2, via the sorter_value parameter.
1, via vectors related to the import functionality.
1, via vectors related to the (1) search or (2) list functionality.
4, via a request to index.cgi or (3) add
0, via the res_buf parameter to index.cgi in the Control/URL-filter section.
2," via the language file path in a (1) request to index.php or (2) """"change_user_language"""" request to sources/main.queries.php."
5, via a request to index.php followed by a direct request to a file that calls the session_start function before checking the CPM key
0, via the login parameter in a (1) send_pw_by_email or (2) generate_new_password action in sources/main.queries.php; iDisplayStart parameter to (3) datatable.logs.php or (4) a file in source/datatable/; or iDisplayLength parameter to (5) datatable.logs.php or (6) a file in source/datatable/; or allow remote authenticated users to execute arbitrary SQL commands via a sSortDir_ parameter to (7) datatable.logs.php or (8) a file in source/datatable/.
0, via the group parameter
4," via a """"#f"""" value in the NUM argument."
4, via a .. (dot dot) in the xmlin parameter.
2, via the DdnsService parameter
2, via the name parameter to GroupSubscription.do.
1, via unspecified vectors
2, via an empty password in an XML-RPC request.
3, by uploading a file with a (1) double extension or (2) .php5
2, via the categories_order parameter.
2, via the (1) uemail or (2) subject parameter in the Contact form to contact/.
4, via unspecified vectors.
4, via a negative value in the Content-Length field in a request.
3, via unspecified vectors.
2, by escaping from a chroot jail.
4, via a long string in a cookie UserID parameter to vfolder.ghp.
2, via the uiViewTools_Password and uiViewTools_PasswordConfirm parameters to Forms/tools_admin_1.
4, via unspecified vectors.
4, via a crafted Ethernet frame.
4, via a crafted (1) update_system_info_debian_package
4, via a crafted (1) get_license
4, via a .. (dot dot) in the xml_path parameter.
2, via the (1) blog
2, via the (1) role parameter to roles.lsp
0, via the myurl parameter to menu/pop.html.
2, via the members[] parameter.  NOTE: this can be exploited by remote attackers by leveraging CVE-2014-4333.
4, via unspecified vectors.
4, via a crafted SIP packet.
2, via the name parameter in the edit action of the config-profile_fields module.
2, via the title parameter in the (1) edit or (2) add action in the user-users module or the (3) finduser action or the name parameter in an (4) edit action in the user-user module or the (5) editprofile action to modcp.php.
4, via (1) the index_id parameter to views/graphs/common/makeXML_ListMetrics.php
4, via shell metacharacters in the (1) session_id or (2) template_id parameter
2, via the faqs_id parameter.
2, via unspecified vectors
1, via unspecified vectors
4, via a (1) tag or the (2) title of a source in a Staging folder
2, via the Label field
2, via the (1) decrypt or (2) encrypt parameter.
3, via unknown vectors.
3, via unknown vectors.  NOTE: some of these details are obtained from third party information.
0, via the p parameter to index.php.
4, via a request to wp-admin/options-general.php.
2, via the title parameter.
4, via a .. (dot dot) in the filename parameter.
2, via the (1) x_16 or (2) x_17 parameter to print.php.
4, via a crafted reference element within a nonXMLBody element.
4, via a crafted reference element that triggers creation of an IMG element with an arbitrary URL in its SRC attribute
2, via the filename parameter in a file upload in an active JChat chat window.
5, via a crafted source package that lacks a --- header line.
4, via a source package with a crafted Index: pseudo-header in conjunction with (1) missing --- and +++ header lines or (2) a +++ header line with a blank pathname.
0, via the passwordc parameter or (2) administrative e-mail address via the email parameter.
0, via the styleShortName parameter in an adminStyleAdd action to OSBiB/create/index.php.
2, via the (1) c[password] or (2) c[username] parameter.  NOTE: the b parameter to index.php vector is already covered by CVE-2006-3823.
2, via the (1) username or (2) password.
2, via unspecified vectors related to a user action.
4, via unspecified vectors.  NOTE: this might overlap CVE-2014-3924.
3, via unspecified vectors.  NOTE: this might overlap CVE-2014-3924.
4, via unspecified vectors.  NOTE: This vulnerability exists because of an incomplete fix for CVE-2013-4713.
1, via crafted data in the Options field of a TCP header
4, via a crafted IP packet
4, via a crafted response.
4, via unspecified vectors.
2, via an HTTP Referer header.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted image file.
2, via the associate[] field
4, via a crafted packet.
1, via crafted Exif data.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse executable file that is launched during an attempt to read a similarly named file that lacks a filename extension.
2, via unspecified values to the (1) Start
4, via a long value.
4, via a request for a non-existent file.
4, via a .. (dot dot) in the query parameter in a writeDataFile action to the fileRequestor servlet
4, via a (1) auth
4, via a save action to the default URI.
2, via the z parameter.
0, via the addWhiteListDomainStr parameter to addWhiteListDomain.imss.
2, via the logoLink parameter to (1) preview.swf
1, via vectors related to popup windows.
2," via the """"addr"""" parameter."
4, via unspecified parameters.
2, via an address field.
0, via the topics[] parameter to modules.php.
2, via the lettre parameter.
4, via unspecified vectors.
1, via crafted layer mask data in a PSD file
1, via crafted layer bitmap data in a PXD file.
3, by uploading a file with a crafted extension
4, via unspecified vectors.
4, via unspecified vectors.
5, via a crafted argument to the iconv_open function.  NOTE: this issue was SPLIT per ADT2 due to different vulnerability types. CVE-2014-5384 is used for the NULL pointer dereference.
1, via crafted DNS parameters in a router advertisement message.
2, via an RIP request from a source not on a directly connected network.
3, via unspecified vectors.
2," via the query parameter in an """"output CSV"""" action to pdb-signup/."
0, via the url parameter to (1) videocat.php or (2) single.php.
2, via an empty UDP packet.
1, by attempting authentication with an invalid X.509 client certificate.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the viewdir parameter.
0, via a full pathname in the viewdir parameter.
5, via a long session id in the URI to sys_reboot.html.  NOTE: some of these details are obtained from third party information.
2, via the First Name and Last Name fields in a new address book contact.
4, via a crafted username
4, via a symlink attack on a /tmp/lynis.##### file.
1, via crafted headers that trigger an out-of-bounds read.
4, via a symlink attack on a /tmp/lynis.*.unsorted file with an easily determined name.
4, via (1) file or (2) directory (folder) name of an uploaded file.
4, via a crafted serialized PHP object
2, via the (1) dol_use_jmobile
2, via the (1) entity parameter in an update action to user/fiche.php or (2) sortorder parameter to user/group/index.php.
4, via a user display name.
1, by leveraging knowledge of the LDAP bind user DN.
4, via a crafted serialized object
2, via the (1) drp_action parameter to cdef.php
3, via vectors related to adding a system.
0, via the id parameter to lp/index.php.
4, via a delete action to wp-admin/admin.php.
2, via the Nama field.
2, via the surname parameter to student.php.
2, via the article_id parameter.
2, via the title parameter.
2, via the query parameter in a listimg action.
2, via an array key in the textinputs[] parameter
4, via a symlink attack related to (1) rtas_errd/diag_support.c and /tmp/get_dt_files
4, via a MixMonitor action.
5, by terminating a subscription request before it is complete
4, via a crafted DNS TXT record
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted URL
4, via a crafted request
4, via a crafted web page
4, via a crafted IOCTL call to (1) tcpip.sys or (2) tcpip6.sys
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a modified list
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a symlink attack on /tmp/s48lose.tmp.
4, via a crafted set_file request.
4, via a crafted remote_task request
4, via a crafted get_file request.
4, via a request to Forms/tools_admin_1.
4, via a long URI in a GET request.
4, via a URL in the url parameter.
2, via the (1) title or (2) sap-accessibility parameter.
2, via the url parameter.
4, via a request to Forms/WLAN_General_1.
4, via a request to wp-admin/admin-ajax.php.
4, via a user signature to SelfService/Prefs.html.
2, via the title parameter in a list action to plugins/rrdPlugin.
2, via the mp3 title field.
2, by continuing execution after an error has been triggering.
4, via a crafted packet-trace file that includes a large packet.
2, via the Username field.
3, via unknown vectors.
3, via unspecified vectors.
2, via the article_id parameter in a Submit Comment action.
2, via the article_id parameter.
2, via the colorstyle parameter.
2, via the (1) CARDS or (2) XACTION parameter.
3, via vectors related to PIA Core Technology.
2, via unknown vectors related to Portal Framework
2, via unknown vectors related to Data Synchronizer.
1, via vectors related to SROPTZR.
2, via unknown vectors related to Deployment
4, via vectors related to WLS - Web Services.
2, via unknown vectors related to Portlet Services.
1, via unknown vectors related to Process Mgmt and Notification.
1, via vectors related to SRSP.
4, via vectors related to CPU performance counters (CPC) drivers
2, via unknown vectors related to Deployment
2, via unknown vectors related to Libraries.
1, via vectors related to plugin 1.1.
3, via vectors related to Open_UI
1, via unknown vectors related to Diary.
3, via vectors related to SRREP.
3, via unknown vectors.
5, via vectors related to SROPTZR.
3, via vectors related to SRREP.
1, via vectors related to WLS - Web Services.
1, via vectors related to ENFED.
4, via vectors related to SVP.
2, via unknown vectors related to Mobile Service.
1, via unknown vectors related to Object Manager.
5, via vectors related to plugin 1.1.
1, via unknown vectors related to Portlet Services.
2, via unknown vectors related to Security.
3, via unknown vectors related to Serviceability.
2, via unknown vectors related to User Interface
1, via unknown vectors related to User Interface
1, via unknown vectors related to Agent.
4, via vectors related to SMB server kernel module.
2, via unknown vectors related to Automated Install Engine
4, via vectors related to PIA Core Technology.
1, via unknown vectors related to Automated Install Engine
2, via unknown vectors related to Reports Configuration.
1, via vectors related to SERVER:CHARACTER SETS.
2, via the PATH_INFO to (1) resources.js or (2) resources.css in ajenti:static/
2, via the ID parameter.
1, via vectors related to the (1) Twitter and (2) Facebook username settings.
2, via the table parameter.
4, via unspecified vectors.
4, via a .. (dot dot) in the logfile parameter in a download action.
2, via the sortkey parameter.
4, via the (1) USRLNM parameter to myaccount/mysettings.edit.validate.asp or the frame parameter to (2) iframe.picker.statchannels.asp
2, via the (1) TinkerAjax parameter to uptime.html
0, by reading HTML source code of the database connection and email settings page.
2," via the (1) Notes section to Order details; (2) Description section to """"Order to consume""""; (3) Favorites name section to Favorites; (4) FiltKeyword parameter to Procurement/EKPHTML/search_item_bt.asp; (5) Act parameter to Procurement/EKPHTML/EnterpriseManager/Budget/ImportBudget_fr.asp; (6) hdnOpener or (7) hdnApproverFieldName parameter to Procurement/EKPHTML/EnterpriseManager/UserSearchDlg.asp; or (8) INTEGRATED parameter to Procurement/EKPHTML/EnterpriseManager/Codes.asp."
2, via the User field.
4, via a crafted event in (1) zabbix.rb or (2) nagios_nsca.rb in outputs/.
2, via the host parameter.
2, via the src parameter.
2, via the members[] parameter
4," via a long string in the """"second connection"""" to TCP port 1001."
2, via the (1) host or (2) password parameter to rtl/protected/admin/ddns/.
4, via shell metacharacters in the host name.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-2707.
1, via crafted packet data.
3, by leveraging a malformed cups-browsed.conf BrowseAllow directive that is interpreted as granting browse access to all IP addresses.
0, by injecting invalid tokens into a GSSAPI application session.
1, via network traffic that appears to come from an intended acceptor
2, via an empty continuation token at a certain point during a SPNEGO negotiation.
4," via a series of """"cpw -keepold"""" commands."
4, via unspecified vectors.
1, via vectors related to a cookie.
5, via a crafted (1) database name or (2) table name that is improperly handled after presence in (a) the favorite list or (b) recent tables.
4, via a crafted table name that is improperly handled after a (1) hide or (2) unhide action.
4, via a crafted MIDI file.
1, via crafted audio samples in an m4a file.
0, by leveraging the presence of an attachment after the deletion of its parent (1) iMessage or (2) MMS.
0, by reading log data that was not intended to be present in a log.
1, via vectors related to AssistiveTouch events.
2, via an application that uses crafted arguments.
4, via a symlink attack on an unspecified file.
4, via a crafted application.
1, via XML data containing an external entity declaration in conjunction with an entity reference
1, via vectors related to Mach ports.
2, via an application that provides crafted API arguments.
4, via a crafted PDF document.
4, via a crafted PDF document.
4, via a crafted Last-Modified HTTP response header.
3, by triggering code-signature validation of an unintended bundle.
3, by leveraging /tmp write access.
2, via an application that provides crafted API arguments.
4, via a crafted GLSL shader.
1, by leveraging predictability of the location of the CPU Global Descriptor Table.
2, via an application that provides crafted key-mapping properties.
2, via an application that provides crafted key-mapping properties.
4, via unspecified vectors.
5, via a crafted call.
4, via a web site that triggers an uncaught SafariNotificationAgent exception by providing a crafted Push Notification.
4, via a crafted application.
4, via unspecified vectors.
2, via an unspecified command to one interface.
2, via the accessibility API.
1, via crafted resource forks in an HFS filesystem.
0, via a crafted filename on an HFS filesystem.
4, via a crafted application.
1, via an application that specifies a crafted handler for the Content-Type field of an object.
1, by leveraging an unattended workstation on which screen locking had been attempted.
4, via a message to a system control socket.
1, via crafted ASN.1 data.
3, by reading a file after a (1) profile setup or (2) profile edit occurs.
5, by creating a symlink.
1, by leveraging access to an enterprise distribution certificate for signing a crafted app.
4, via a crafted app.
5, by inserting a Thunderbolt device with crafted code in an Option ROM
4, via a crafted (1) bbversion
3, via unspecified vectors.
2, via the (1) attribute or (2) content value for a meta tag.
4, via a .. (dot dot) in the dst parameter to tftp/fetch_boot_file.
0, by leveraging eDirectory POSIX attribute changes to insert shell metacharacters.
4, via a crafted URL.
4, via shell metacharacters in the file name in the URI of a request for a (1) blame
2, via the (1) MESSAGE
1, via vectors related to the getDebugInfo function.
2, via the text parameter.
2, via the param parameter.
2, via the searchString parameter.
2, via the width parameter.
2, via the 'page' parameter.
2, via the plugin_dir parameter.
2, via the action parameter.
2, via the action parameter.
4, via unspecified parameters.
2, via the ref parameter.
2, via the rss_url parameter.
2, via the (1) message
2, via the (1) FormID or (2) AdministratorID parameter.
2, via the (1) promo_type
2, via the path parameter.
2, via the n parameter.
2, via the page parameter.
2, via the hid_id parameter.
2, via the (1) theme or (2) playlistmod parameter.
2, via the filename parameter to getid3/demos/demo.mimeonly.php.
2, via the (1) go
2, via the (1) sort
2, via the query parameter.
2, via the filename parameter to getid3/demos/demo.mimeonly.php.
2, via the msg parameter.
2, via the shortcode parameter.
2, via the url parameter.
2, via the (1) fcolor
0, via the Filename parameter to getid3/demos/demo.write.php.
2, via the (1) leftorright or (2) author parameter.
2, via the response parameter.
2, via the (1) tags or (2) search_for parameter.
2, via the popup parameter.
2, via the (1) MD or (2) PARes parameter.
2, via the shortcode parameter.
2, via the testing parameter.
2, via the paymentType parameter.
4, via unspecified parameters.
2, via the title parameter.
2, via the mode parameter.
2, via the api_url parameter.
2, via the api_url parameter.
2, via the api_url parameter.
2, via the (1) api_key
2, via the t parameter.
2, via the url parameter.
2, via the slug parameter.
2, via the (1) vp
2, via the base parameter.
2, via the message parameter.
2, via the room_name parameter.
2, via the (1) room_name parameter to c_login.php or (2) room parameter to index.php in vp/.
2, via the (1) fs or (2) w parameter.
2, via the (1) url or (2) bvcurl parameter.
2, via the (1) s or (2) o parameter.
2, via the height parameter.
2, via the s parameter.
2, via the xhrurl parameter.
0, via a full pathname in the url parameter.
2, via the uid parameter.
2, via the lang parameter.
2, via the BlipBotID parameter.
2, via the id parameter.
2, via the dialog_id parameter.
2, via the (1) edit
3, via the fID parameter.
0, via the ajax_url parameter to index.php.
2, via the league parameter to (1) football_classification.php
2, via the (1) zl
2, via the mediaid parameter.
2, via the post_id parameter.
2, via the oauth_verifier parameter.
2, via the post_id parameter.
2, via the url parameter.
2, via the filter parameter.
2, via the url parameter.
3, via the (1) oauth_callback parameter to html_api_authorize.php or the (2) oauth_token_temp or (3) oauth_callback_temp parameter to html_api_login.php.
2, via the (1) msg or (2) act parameter.
2, via the xhrurl parameter.
2, via the AID parameter.
2, via the (1) edit
2, via the (1) listname or (2) contact parameter.
2, via the v parameter.
2, via the (1) path or (2) ajaxpath parameter.
2, via the (1) secret
2, via the ytmpw parameter.
2, via the lang parameter.
2, via the zs_sid parameter.
4, via a crafted Literal Run.
4," via a crafted Literal Run.  NOTE: the author of the LZO algorithms says """"the Linux kernel is *not* affected; media hype."""""
4, via unspecified vectors.
4, via a pwg.users.add action in a request to ws.php.
2, use the (1) pwg.groups.addUser
4, via a negative index value in the idx argument to the raw_decode function.
0, via malformed compressed packets
4, via a user-created system object.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse application with a name composed of an initial substring of a path that contains a space character.
4, via unspecified vectors.
2, via an unspecified parameter.
3, via unspecified vectors.
4, via a long string in a reply to a (1) USER
2, via the id parameter.
4, via a hostname.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the associate[] field.
3, by leveraging /dev/snd/controlCX access.
3, by leveraging /dev/snd/controlCX access
4, via unspecified vectors.
2, via the whoisval parameter on the WordfenceWhois page to wp-admin/admin.php.
5, via a WSDL document containing an XML external entity declaration in conjunction with an entity reference within a GetQuote operation
1, via crafted iterator usage within applications in certain web-hosting environments.
1, via vectors related to the value property.
4, via shell metacharacters in the xmlPath argument.
4, via (1) the starttime0 parameter to firewall_schedule.php
4, via (1) the hostname value to diag_dns.php in a Create Alias action
0, via a full pathname in the xml parameter.
4, via a crafted path in the pkg parameter to pkg_mgr_install.php and allow (2) remote authenticated users to read arbitrary files via the downloadbackup parameter to system_firmware_restorefullbackup.php.
4, via a firewall login cookie.
4, via (1) the eng parameter to snort_import_aliases.php or (2) unspecified variables to snort_select_alias.php.
4, via unspecified variables.
0, via (1) the referer parameter to snort_rules_flowbits.php or (2) the returl parameter to snort_select_alias.php.
4, via (1) the referer parameter to suricata_rules_flowbits.php or (2) the returl parameter to suricata_select_alias.php.
1, via crafted ArrayIterator usage within applications in certain web-hosting environments.
2, via the extra-opts flag
2, via the extra-opts flag
5, via a symlink attack on the configuration file in the extra-opts flag.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-4701.
2, via the Full Name field.
2, via the Password and PasswordReEnter parameters to goform/RgSecurity.
3, via the (1) ssba_share_text parameter in a save action to wp-admin/options-general.php
4, via a request to admin/user_create.php or conduct cross-site scripting (XSS) attacks via the (2) email or (3) subject parameter in contact_form.ext.php to admin/extensions.php.
2, via the username field.
3, via unspecified vectors.
2, via the name parameter to wp-admin/options-general.php.
0, via the custom_banners_registered_name parameter to wp-admin/options.php.
5, by uploading a crafted theme using wp-admin/admin-post.php and accessing the theme in wp-content/uploads/wysija/themes/mailp/.
2, via the hostname in a DHCP request.
4, via a long header in a GET request.
2, via the type parameter.
0, via the table parameter to index.php.
0, via the note-id parameter to @actions/comment-process.
2, via the PATH_INFO to setup/index.php.
2, via the catid parameter.
2, via the systemid parameter in a mediaFolder action to index.php.
2, via the search parameter.
2, via the (1) Phone Number field to open.php or (2) Phone number field
1, by leveraging access to an unattended workstation to read HTML source code within a victim's browser.
4, via a crafted URL.
4, via unspecified vectors.
0, by invoking the Search function.
4, via a callService URL.
3, by performing a document-attachment search and then reading document properties in the search results.
4, via a crafted URL.
4, via a crafted URL.
0, by reading an exported Record and Playback (RAP) file.
1, via XML data containing an external entity declaration in conjunction with an entity reference
3, via vectors involving a FRAME element.
4, via a network-tracing attack.
1, via vectors related to the Alert management service. IBM X-Force ID: 95029.
4, via a '\0' character.
4, via unspecified vectors.
4, by using a certain backup option in conjunction with a filename that matches a previously used filename.
0, by reading the error page.
4, via unspecified vectors.
2, via an unspecified trace operation.
3, via unspecified vectors.
4, via a crafted URL.
4, via a crafted HTTP request.
4, via invalid input.
0, via the bannerman_background parameter to wp-admin/options-general.php.
0, via the id parameter to wp-admin/admin.php.
2, via the buffercode_RBanner_url_banner1 parameter in an update action to wp-admin/options.php.
0, via the bs_blog_id parameter to wp-admin/options-general.php.
2, via the (1) e or (2) r parameter.
2, via the i parameter.
4, via a URL in the r parameter.
2, via the file name of an uploaded file.
0, via the wuc_logo parameter in a save action to wp-admin/admin.php.
1, via vectors related to a user description.  NOTE: some of these details are obtained from third party information.
3, via vectors related to a ratings shortcode and a unique ID.  NOTE: some of these details are obtained from third party information.
2, via the Created By field in a project activity.
2, via the (1) username or (2) password field.
1, via crafted data.
2, by providing crafted data that is not properly handled during the coalescing phase.
2, via the wlWpaPsk parameter.
1, via crafted POST data.
2, by visiting the TrackItWeb/Attachment page.
4, via a parameter that is not properly handled in an error message.
2, via the URI used for reaching (1) share/pnp/application/views/kohana_error_page.php or (2) share/pnp/application/views/template.php
4, via a crafted peer message
4, via a .. (dot dot) in the interface name.
1, via vectors related to the GCM ciphersuites
2, via the cId parameter.
4, via a .. (dot dot) in a filename
2, via the (1) width
2, via the val parameter to whois.php.
0, by spoofing the update server and uploading an executable.
4, via a .. (dot dot) in the file parameter.
2, via the id parameter in the wrp-add-new page to wp-admin/admin.php.
2, via the id parameter in the enl-add-new page to wp-admin/admin.php.
4, via a .. (dot dot) in the fn parameter to (1) charts/treemap.php or (2) charts/zoomabletreemap.php.
0, via a full pathname in the rss parameter to proxy.php.
4, via a direct request to inc/admin/phpinfo.php
3, by leveraging data-structure differences between an l2tp socket and an inet socket.
2, via the (1) categoryid or (2) pdfid parameter to wp-admin/admin.php.
0, by modifying the guest virtual hard disk (VHD).
4, via a crafted table comment that is improperly handled during construction of a database structure page.
2, via the delete method.
4, via a negative number in the productQuantity parameter
2, via the customer.customerId parameter to shop/profile/register.action.
2, via the (1) customername parameter to central/orders/searchcriteria.action; (2) productname
1, by leveraging access to an Ansible managed host and providing a crafted fact
4, via a crafted web site
3, by uploading a file with an executable extension
4, via a crafted argument to a 0x830020CC IOCTL call.
2, via the user ID in the savePrefs parameter in a change password request to cgi-bin/admin.cgi.
3, via the (1) selectedUserGroup parameter in a create new user request to cgi-bin/admin.cgi or the (2) user_id parameter in the changeUnit function
4, via a symlink attack on (1) /tmp/rs-filter-graph.png or (2) /tmp/rs-filter-graph.
4, via a malformed version number and flags in an mvhd atom.
2, via the token parameter.
4, via a viewUsers request.
4, via a symlink attack on a temporary file
0, by reading the MySQL root password from a temporary file before it is removed.
4, via a symlink attack on /tmp/my.cnf.#{target_host}.
4, via a symlink attack on /tmp/perlbrew-installer.
4, via a .. (dot dot) in the fileName parameter in an LFU action to statusUpdate.
4, via a .. (dot dot) in the fileName parameter to mdm/mdmLogUploader.
4, via a .. (dot dot) in the filename parameter.
1, via vectors related to invalid characters in image_magic_path.
0, via (1) the pid attribute to the getAttribute_json function to application/controllers/admin/participantsaction.php in CPDB
2, via the sidx parameter in a JSON request to admin/participants/sa/getParticipants_json
2, via the GBK charset in the loadname parameter to index.php
4, via a crafted HTTP Host header
2, via an option group label.
0, via vectors involving forms with an Ajax-enabled textfield and a file field.
0, via the name_cache parameter in a ds_edit action.
4, via a (1) Graph Tree Title in a delete or (2) edit action; (3) CDEF Name
0, via a query parameter to a diff fragment page.
1, by leveraging knowledge of database ids.
4, via a symlink attack on a file in /var/cache/cups/rss/ and language[0] set to null.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-3537.
4, via a symlink attack on (1) index.html
4, via a crafted request to the brute-force-login-protection page to wp-admin/options-general.php.
2, via an XML external entity declaration in conjunction with an entity reference in an XML-RPC message
3, via unspecified vectors.
1, by leveraging knowledge of a key ID or (2) signing certificates by leveraging knowledge of a certificate ID.
1, via vectors related to array allocation.
4, via a (1) ../ (dot dot slash) or (2) ..\ (dot dot forward slash) before a file name.
0, via vectors involving system logs.
1, via vectors related to pushing unauthenticated users to the login page.
3, via vectors involving a username.
4, via unknown vectors.
3, via shell metacharacters in the fileDate parameter in a DOWN call.
1, via crafted TCP packets.
2, via the username to login.php.
2, via the log parameter.
4, via shell metacharacters in the Location field in Add Logs in the Admin Panel.
4, via a phpinfo action in a request to status/index.php
2, via the id parameter in a (1) get or (2) set action to rate.php.
2, via the query string to search/results/.
4, via a request to admin/users/add
2, via the (1) TPL_name
2, via the criteria[startswith] parameter to ajax/render/memberlist_items.
0, via the j_username parameter to event/j_security_check. Fixed in Version 10 Build 10000.
2, via the (1) a_country parameter in a process action to affiliate_signup.php
2, via the (1) a_country parameter in a process action to affiliate_signup.php or (2) entry_country_id parameter in an edit action to admin/create_account.php.
2, via the HTTP Referer header to admin/install/index.php.
4, via a direct request to (1) system/basics/editor.php
2, via the HTTP Referer header to index.php/download_file.
0, via the mac parameter in a Submit action.
2, via the id_nodo parameter.
4, via a .. (dot dot) in the lang parameter to (1) home/index.php
4, via shell metacharacters in the lang parameter.
2, via the (1) testtype
2, via the (1) js or (2) cat parameter.
0, via a full pathname in the phpfile parameter to index.php.
4, via unspecified parameters.
0, via an unspecified parameter
4, via a URL in an unspecified parameter.
4, via unspecified vectors.
3, via vectors involving a direct access token.
5, via vectors related to email addresses.
4, via unspecified parameters.
4, via a ServerHello message that includes an SRP ciphersuite without the required negotiation of that ciphersuite with the client.
4, via crafted markdown.
4, via unspecified vectors.
2, via the ws_data parameter.
4, via an opcode-1091 request
2, via the date field title.
1, by leveraging failure to update .htaccess file contents after SA-CORE-2013-003.
4, via unspecified vectors.
4, via a request to a private IU5 SDK application that was once public.
1, via unspecified vectors
2, via the content parameter when (1) creating a topic or (2) posting an answer.  NOTE: some of these details are obtained from third party information.
2, via the id parameter in the edit action to wp-admin/admin.php.
4, via a .. (dot dot) in the snode parameter.
1, via vectors related to (1) admin_functions.php or (2) admin_update.php
2, via the targetmenu parameter in an edit action to wp-admin/admin.php.
2, via the story parameter in an edit action to wp-admin/admin.php.
2, via the quote parameter in an edit action in the quartz/quote_form.php page to wp-admin/edit.php.
0, via the id parameter in an edit action in the allvideogallery_videos page to wp-admin/admin.php.
0, via the file parameter to tom-download-file.php.
2, via the EmailAddr parameter.
2, via the id parameter.
2, via the PATH_INFO.
3, via unspecified vectors.
2, via the filter parameter.
2, via the category parameter.  NOTE: the url parameter vector is already covered by CVE-2014-5082.
2, via the _word_upper_bound parameter.
2, via the iusib_meta_fields parameter.
5, via a .. (dot dot) in a URI
2, via the Referer HTTP header.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
2, via the id parameter.
2, via the viewid parameter in a go_view_object action to wp-admin/admin-ajax.php.
2, via the search-value parameter.
1, via crafted serialized data.
4, via a crafted (1) remote_task or (2) get_license request
4, via a large PWD response.
2, via the rdn parameter.
4, via a direct request.
0, via a query parameter containing an XML external entity declaration in conjunction with an entity reference
4, via a request to (1) roma/jsp/volsc/monitoring/dev_services.jsp or (2) roma/jsp/debug/debug.jsp.
4, via (1) the location parameter in a dev.Empty action to nps/servlet/webacc
4, via an fw.SetPassword action.
3, via unspecified vectors.
1, by leveraging the running of the app in the background state.
0, by leveraging an error in the credential-processing mechanism.
4, via a folder publication name.
3, via vectors related to unspecified fields in RSS feeds.
0, via a full pathname in a crafted (1) OLE Object or (2) image in an OpenDocument text file.
4, via a URL in an embedded image in a Text document
5, via a crafted OpenDocument Text document.
3, via vectors involving the multipageimagenavbox class in conjunction with an action=raw value.
1, by setting the admin:language cookie to zh-cn.
1, via vectors related to video MyCode.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) id_custom parameter in an amanmenu request or (2) id_game parameter in an alms/games/edit request to appCore/index.php.
4, via a .. (dot dot) in the file parameter.
2, via the msg parameter.
5, via a symlink attack on a /tmp/_xml_##### temporary file.
3, via shell metacharacters in a font size
5, via unspecified vectors.
4, via a crafted DOCTYPE declaration in an XRDS document.
5, via a crafted user status link.
4, via a crafted view name
2, via the (1) password
4, via (1) an uploaded profile picture or (2) the edit parameter to profiles/index.php.
0, by leveraging Docker daemons enabling TCP connections without TLS authentication.
4, via a long URI in a POST request.
1, via crafted serialized data in the report parameter.
4, via a crafted argument to a 0x222008 IOCTL call.
3, via the (1) name parameter in a Search action to lib/project/projectView.php or (2) id parameter to lib/events/eventinfo.php.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted page.
1, via crafted JavaScript code.
4, via unspecified vectors.
4, via unspecified vectors.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2013-3640.
0, by leveraging Author privileges to store a file.
4, via unspecified vectors.
4, via a long URI.
0, via a long parameter in an API service request message.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted NVMAP_IOC_CREATE IOCTL call
2, via unspecified vectors to the (1) render_status_icons function in htmllib.py or (2) ajax_action function in actions.py.
3, via vectors related to row selections.
2, via unspecified vectors
4, via a client Name field.
4, via unspecified vectors.  NOTE: some of these details are obtained from third party information.
2, via the step parameter.
0, via the active parameter to wp-admin/edit-comments.php
2, via the (1) disqus_replace
2, via the logfile parameter.
2, via nested calls to the window.print JavaScript function.
4, via a (1) .. (dot dot) in the id parameter to webservice/CORE/downloadFullKitEpc/a/1 in the Web Console or (2) %2E%2E (encoded dot dot) in the default URI to port 7074 on the Update Server.
4, via a .. (dot dot) in the GetFile parameter to owa/owa.
0, via the AMTVersion parameter to remote/serverlist_grouptree.aspx.
0, via the d parameter to (1) ldms/sm_actionfrm.asp or (2) remote/frm_coremainfrm.aspx; or the (3) top parameter to remote/frm_splitfrm.aspx.
4, via a .. (dot dot) in the path parameter.
4, via a .. (dot dot) in the QUERY_STRING to cfchart.cfchart.
4, via a direct request.
2, via the position textbox in the configuration menu or other unspecified vectors.
4, via unspecified vectors.
4, via a crafted argument to the iconv_open function.  NOTE: this issue was SPLIT from CVE-2014-3951 per ADT2 due to different vulnerability types.
2, via the (1) column_filter or (2) category[] parameter to system/index.php or the (3) tbl_sort[0][] parameter in the comment module to system/index.php.
2," via the """"Audited content types"""" option in the content-audit page to wp-admin/options-general.php."
2, via the hash property (location.hash).
4, via a request containing an XML external entity declaration in conjunction with an entity reference.
4, via unspecified vectors.
0, via vectors involving use of SSH by the maintenance terminal.
4, via unspecified vectors.
2, via an XML external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
4, via a malformed (1) setting file or (2) disturbance recording file.
2, via the username parameter.
1, via malformed packets over (1) an Ethernet network or (2) a serial line.
4, via unspecified vectors.
1, by leveraging access to the guest account.
2, via the (1) Windows CE Remote Configuration Tool
4, via unspecified vectors.
5, by reading a temporary (1) debugging file or (2) developer file.
2, via an invalid property value to an ActiveX control that was built with an outdated compiler.
4, via a null DNP3 header.
4, via a crafted message.
4, via a Trojan horse DLL that is accessed as a result of incorrect DLL configuration by an optional installation program.
4, via a request to remote_management.php
0, via the computer_name parameter to connected_devices_computers_edit.php.
3, via the ct100%24CPHContent%24password parameter.
2, via the (1) username
1, via vectors related to ccnet handling user accounts.
0, via a full pathname in the schFilePath parameter to the (1) CSVServlet or (2) CReportPDFServlet servlet.
5, via a .. (dot dot) in the filename parameter.
0," via the """"a"""" parameter to manager/.  NOTE: this issue exists because of a CVE-2014-2080 regression."
3, by uploading a file with an executable extension
4, via a crafted program.exe file in the %SYSTEMDRIVE% folder.
1, via vectors related to the configuration.
2, via the message parameter.
4, via a symlink attack on a (1) rest.cachefile or (2) rest.cacheid file in /tmp/pear/cache/
3, by uploading a PHP file
4, via a small number of arguments to a function with a large number of fixed arguments.
2, via the (1) layout_id parameter to interface/super/edit_layout.php; (2) form_patient_id
2, via the HTTP Host header.
4, via a .. (dot dot) in the file parameter.
5, via a crafted iso9660 image with a self-referential CL entry.
5, via a crafted webpage or file.
4, via a (1) checkcert_key
2, via the add_guest_user opcode.
4, via a crafted data source string in an RPT file.
1, via crafted connection string record in an RPT file.
4, via a large value in the EmptyInterval parameter or certain other interval configurations.
4, via a symlink attack on /tmp/clipedit$$.
2, via an unspecified GET request.
4, via shell metacharacters in a device option in the edit[content] parameter to index.php/HeIp.  NOTE: some of these details are obtained from third party information.
1, by leveraging failure to encode file contents when downloading a torrent file or (2) remote authenticated users to inject arbitrary web script or HTML via vectors involving a link to torrent details.
2, via the cid parameter in an editCookies action to profile.php.
2, via the cid parameter in an editCookies action to profile.php.
0, via the SurveyID parameter to survey/ReviewReadOnlySurvey.aspx or (2) remote authenticated users to execute arbitrary SQL commands via the SurveyID parameter to survey/UploadImagePopupToDb.aspx.
3, by uploading a ZIP file which contains an executable file with .. (dot dot) sequences in its name
4, via a crafted attribute containing a \u0000 character
0, via vectors involving the restore function.
0, by leveraging improper validation of CSRF tokens or that (2) delete open questions
1," by leveraging incorrect """"download an attachment"""" permission checks."
4, via a direct request.
4, via a crafted instance ID parameter.
1, by replaying the request.
2, via an advertisement for a large screen size
4, via a zero value in the scaling factor in a (1) PalmVNCSetScaleFactor or (2) SetScale message.
4, via a (1) long file or (2) directory name or the (3) FileTime attribute in a rfbFileTransferOffer message.
2, by resetting the DHO_OPTIONSOVERLOADED option in the (1) bootfile or (2) servername section
4, via unspecified vectors.
2, via the hostname in (1) index.php or (2) detail.php.
5, via vectors related to use of the text method inside after.
4, via a direct request to a UI page.
4, via a crafted web site.
4, via unspecified vectors.
3, via unspecified vectors.
0, by sniffing the network during an HTTP session.
0, by sniffing the network during use of the null SSL cipher.
3, by uploading a file to a protected area.
4, via a crafted URL.
4, via unspecified vectors.
4, via a crafted URL.
4, via a crafted request.
4, via a crafted URL.
4, via unspecified vectors.
0, by sniffing the network during an HTTP session.
0, by leveraging an unencrypted connection for interfaces. IBM X-Force ID: 96172.
1, via vectors related to server side LDAP queries. IBM X-Force ID: 96173.
4, via unspecified vectors.
4, via a crafted request to a Jazz Reporting Service (JRS) report URL.
1, by setting the JAASConfig property in an MQTT client configuration.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, by reading a response.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted URL.
4, via a crafted URL.
4, via unspecified vectors. IBM X-Force ID: 97777.
3, by triggering a SOAP fault.
4, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the HTTP User-Agent header.
4, via a .. (dot dot) in a URL.
4, via a direct request for the URL of a log document.
4, via unspecified vectors.
4, via a crafted HTTP request.
1, via crafted arguments to the chunk_split function.
3, via unknown vectors.
4, via unknown vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via vectors related to extension links.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
2, via the (1) orderby or (2) order parameter in the aiowpsec page to wp-admin/admin.php.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
2, via the error parameter in the ewww-image-optimizer.php page to wp-admin/options-general.php
5, by sending a mining.subscribe response with a large nonce2 length
4, via unspecified vectors.
2, via an attribute in a (1) device name
0, via the came_from parameter
4, via a move action
5, by using a web-endpoint URL to invoke an object helper method
0, by triggering an arbitrary regular-expression match attempt
3, via vectors involving an uninitialized FIFO-based event channel control block when (1) binding or (2) moving an event to a different VCPU.
4, via a large stream of data
4, via a crafted URL.
2, via the (1) action or (2) nsextt parameter to oc-admin/index.php or the (3) nsextt parameter in an items_reported action to oc-admin/index.php.
4, via a crafted response
4, via a %00 sequence in a search action.
4, via unspecified vectors.
4, via unspecified vectors.
4," via vectors related to an """"insecure unserialize"""" issue."
4, via unspecified vectors.
5, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, by uploading a file with an executable extension
3, via unspecified vectors.
4, via unspecified vectors.
2, via an XML external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
4, via a .. (dot dot) in the file parameter in a render action to oc-admin/index.php.
4, via the 'select' function.
2, via the custom_style_afo parameter on the login_widget_afo page to wp-admin/options-general.php.
0, via the range parameter on the wc-reports page to wp-admin/admin.php.
2, via the (1) callback
4, via a crafted web site
5, via a crafted URL
4, via a crafted URL
4, via a crafted web site
4, via a crafted attribute of an element in an HTML document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted attribute of an element in an HTML document
5, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a password starting will a null byte
4, via shell metacharacters in the d parameter.
5, via a crafted filename extension that is improperly handled during MIME sniffing of chat traffic.  NOTE: the vendor disputes the significance of this report
4, via a crafted password length value that is inconsistent with the actual length of the password.
4, via a crafted password length
4, via a (1) symlink or (2) hard link attack in an image archive in a (a) pull or (b) load operation.
0, by applying unspecified security options to an image.
2, via the fullname and password parameters to /admin/users/update.
5, via unspecified vectors.
2, via the name of an uploaded picture.
4, via a crafted packet that leverages split memory ownership between the SDP and RTP dissectors.
2, via an empty line.
4, via a CUPS packet that lacks a trailing '\0' character.
4, via a crafted packet that triggers parsing of a token located one position beyond the current position.
4, via a crafted file that triggers writes of uncompressed bytes beyond the end of the output buffer.
4, via a the (1) a1 or (2) a2 parameter in a start action.
4, via a the (1) a1 or (2) a2 parameter in a restart action.
3, via unspecified vectors.
2, via the (1) t parameter to iframe-googlefont-preview.php or the (2) text parameter to iframe-font-preview.php.
2, via the (1) uE or (2) uC parameter.
3, via unspecified vectors.
1, via vectors related to SGD Proxy Server (ttaauxserv)
1, via unknown vectors related to Roles & Privileges.
2, via unknown vectors related to Admin Console.
3, via vectors related to SERVER:REPLICATION ROW FORMAT BINARY LOG DML.
1, via vectors related to SERVER:INNODB DML FOREIGN KEYS.
1, via unknown vectors related to Lawful Intercept.
4, via vectors related to SERVER:OPTIMIZER.
4, via vectors related to SERVER:MEMCACHED.
1, via unknown vectors related to Deployment
5, via vectors related to KSSL.
2, via unknown vectors related to Updates Change Assistant.
2, via unknown vectors related to Talent Acquisition Manager - Security.
1, via vectors related to SERVER:SP.
1, via vectors related to SMB server user component.
2, via unknown vectors related to Kernel.
4, via vectors related to SSH.
1, via vectors related to iSCSI Data Mover (IDM).
1, via unknown vectors related to Kernel.
1, via vectors related to Unix File System (UFS).
3, via vectors related to SERVER:DDL.
2, via unknown vectors related to Admin Console.
1, via unknown vectors related to Deployment
2, via unknown vectors related to Server Infrastructure.
0, via unknown vectors related to Security.
5, via vectors related to ITEM (Item & BOM).
2, via unknown vectors related to iHelp.
4, via vectors related to CLIENT:MYSQLADMIN.
2, via unknown vectors related to Admin Console.
2, via unknown vectors related to Admin Console.
1, via unknown vectors related to End User Experience Management.
4, via vectors related to SERVER:INNODB FULLTEXT SEARCH DML.
2, via unknown vectors related to Portal.
1, via unknown vectors related to File System
2, via unknown vectors related to User Interface Framework.
2, via unknown vectors related to Testing Protocol Library.
2, via unknown vectors related to Network
1, via unknown vectors related to Integration Broker.
3, via unknown vectors.
2, via unknown vectors related to Backup Restore.
2, via unknown vectors related to Time and Labor.
5, via vectors related to VMSVGA virtual graphics device
4, via vectors related to VMSVGA virtual graphics device
1, via vectors related to VMSVGA virtual graphics device
1, via vectors related to SAML
1, via unknown vectors related to Learner Pages.
5, via vectors related to VMSVGA virtual graphics device
2, via unknown vectors related to Portal Framework.
2, via unknown vectors related to Email.
2, via unknown vectors related to File System
2, via the ip parameter.
1, via crafted headers in a SIP SUBSCRIBE request for an event package.
0, via the DEVICE_NAME parameter to cgi-bin/CFGhttp/.
2, via the products_id parameter.
2, via the (1) fname
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
2, via the src parameter in the search action to index.php.
2, via the (1) contactid parameter in an addcontact action
0, via the gce_feed_ids parameter in a gce_ajax action to wp-admin/admin-ajax.php.
2, via the (1) form or (2) enc parameter in the CF7DBPluginShortCodeBuilder page to wp-admin/admin.php.
3, via unknown vectors.
4, via a crafted type in an (1) ICMP or (2) ICMP6 packet.
4, via a crafted (1) ICMP or (2) ICMP6 packet size.
1, by deleting the IPC$ share during resolution of DFS referrals.
4, via a crafted (1) description field or (2) issuelink attribute in an XML file
2, via the form_fields parameter in a (1) do_edit or (2) do_insert action to wp-admin/admin-ajax.php.
2, via the update_options action to wp-admin/admin-ajax.php.
0, via the removeslide parameter to wp-admin/admin.php.
2, via the tabsel parameter to admin/launch.
4, via a request to admin/launch.
2, by accessing it in between package installation or upgrade and the start of the service.
4, via fsSaveUIPersistence.php.
2, via the lobal_txt parameter to plugins/docman.
4, via a crafted xml document in a create action to plugins/tracker/.
2, via the User-Agent header
0, via the id parameter in a button action on the maxbuttons-controller page to wp-admin/admin.php
2, via the poly_id parameter in an (1) edit_poly
2, via the (1) query parameter or (2) QUERY_STRING.
4," via a large size and offset in a """"buffer"""" function."
1, via crafted use of here documents
1, via deeply nested for loops
4, via a request to admin/system_shutdown.html.
0, via the tx_dmmjobcontrol_pi1[search][keyword] parameter to jobs/.
2, via the (1) education
4, via a crafted connection request.
4, via a crafted JavaScript file.
4, via unspecified vectors.
4, via a symlink attack on the changelog file.
3, via shell metacharacters in a crafted filesystem label.
4, via shell metacharacters in a filename.
2, via the (1) shortcut or (2) title keys in an emoticons.xml file.
3, by connecting to a channel with a different client instance
3, by connecting to a channel with a different client instance
3, by uploading a file with certain invalid UTF-8 byte sequences that are interpreted as executable macro symbols.
0, via the debugenableplugins parameter to do/view/Main/WebHome.
0, via the value parameter in a master_response action to wp-admin/admin-ajax.php.
4, via a crafted HTML document.
3, by leveraging failure to verify SSL/TLS server certificates.
5, by triggering a crafted entry in a log file.
3, via unspecified vectors.
4, via unknown vectors.
1, by uploading files containing commands in SSI directives.
4, via a crafted string that is improperly rendered during construction of a directory index page
4, via a crafted string.
4, via a crafted HTTP header
2, via the (1) user.email or (2) user.website field in a user registration.
4, via unspecified vectors.
0, via vectors that trigger colliding hash-table keys.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1983.
2, via unspecified vectors
2, via unspecified vectors
5," via unspecified """"welcome message"""" form data that is improperly handled during rendering of the loginMessage list item"
0," via JavaScript code within unspecified """"welcome message"""" form data that is improperly handled during use for the loginMsg variable's value"
2, via the server header.
4, via a request to goform/SysToolReboot.
0, by injecting command strings into unspecified PHP scripts.
3, via unspecified vectors.
4, via a crafted key UID value in an inbound e-mail message
4, via a crafted command line in a database-backup restore action.
4, via a crafted HTTP request.
2, via the (1) Action or (2) Form parameter to aeon.dll.
2, via the (1) m or (2) cid parameter.
2, via the url parameter.
5, via a URL in the url parameter.
0, by leveraging improperly protected setuid functionality.
4, via a login request without a password
3, via vectors involving calls to the .to_sym rails function and lack of garbage collection of inserted symbols.
0, by reading one byte beyond a /dev/zero page boundary.
4, via a direct request
4, via vectors related to breadcrumb navigation.
0, by setting the username cookie parameter to an arbitrary string.
4, via an addPlugInUser action.
2, via the (1) customerName or (2) serverRole parameter in a standbyUpdateInCentral operation to servlet/com.adventnet.me.opmanager.servlet.FailOverHelperServlet.
4, via unspecified vectors.
2," via the """"Label text"""" field to admin/config/search/custom_search/results."
4, via a crafted jslob API call.
3, via unknown vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unknown vectors.
1, via vectors involving OPOSMICR.ocx for PUSB Thermal Receipt printers
3, via vectors involving OPOSLineDisplay.ocx for Retail RP7 VFD Customer Display monitors
3, via vectors involving OPOSToneIndicator.ocx for POS keyboards and POS keyboards with MSR
4, via vectors involving OPOSPOSKeyboard.ocx for POS keyboards and POS keyboards with MSR
3, via vectors involving OPOSMSR.ocx for Mini MSR magnetic stripe readers
1, via vectors involving OPOSCheckScanner.ocx for PUSB Thermal Receipt printers
4, via vectors involving OPOSPOSPrinter.ocx for PUSB Thermal Receipt printers
3, via vectors involving OPOSCashDrawer.ocx for PUSB Thermal Receipt printers
3, via vectors involving OPOSScanner.ocx for Imaging Barcode scanners
4, via unspecified vectors.
5, by placing a blob: substring at the beginning of the URL
1, via crafted Flash content that triggers an attempted PepperMediaDeviceManager access outside of the object's lifetime.
4, via a large atom in (1) MPEG-4 or (2) QuickTime .mov data.
4, via unknown vectors.
0, by triggering duplicate BLOB references
4, via vectors involving utterances from a closed tab.
4, via a crafted document that triggers improper maintenance of a zoom bubble.
3, via unknown vectors.
4, via a .. (dot dot) in the tar archive headers.
1, by leveraging failure to filter application data streams.
3," by running """"pm install"""" with the target apk"
4, via a .. (dot dot) in a name parameter of an MTP request.
0, via the id parameter in an edit action in the pods page to wp-admin/admin.php.
0, via the toggled parameter in a toggle action in the pods-components page to wp-admin/admin.php
2, via the dbhost parameter.
2, via the tableprefix parameter.
2, via multiple crafted requests which exceed the limit when combined.
0, by keeping an SSL connection open.
4, via vectors related to theme settings.
4, via vectors related to theme settings.
2, via the skip_link_text setting and unspecified other theme settings.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
0, via vectors involving GMail authentication.
4, via a .. (dot dot) in the action parameter to install/index.php.
4, via a 1 value in the installProcess parameter.
2, via the desc parameter in an errors action to install/index.php.
0, by reading log files
4, via a crafted (1) ping6 or (2) traceroute6 command
2, via an encoded media file.
2, via an encoded media file.
4, via a crafted map-nfs command
0, by establishing many LISP TCP sessions
0, by establishing many TCP sessions
5, by establishing a TELNET session during a recovery boot
0, by examining the HTML source code of the Quick Discovery options page
0, via a full pathname in an API command
1, by reading log files
1, via crafted values
1, via crafted attributes in a cookie
4, via a long CLI command
4, via a malformed RSVP packet
5, via a modified HTTP request
2, via long Subject headers in e-mail messages
4, via a crafted request that triggers inclusion of a password in a reply
4, via a crafted URL
4, via a crafted URL
4, via vectors involving an applet-path URL
3, via input to unspecified web pages
4, via a (1) GET or (2) POST parameter
2, via unspecified parameters
0, via an unspecified parameter
2, via the email parameter
1, via unspecified vectors
1, via crafted API requests
2, via the (1) HTTP Referer header to index.php/user or (2) PATH_INFO to index.php.
5, via a URL in the redirect parameter to index.php/user/logout.
2, via the (1) givenName
4, via a direct request to /admin.
4, via a Save User action to admin/users/user.form.
4, via a long string
4, via a node title.
1, via vectors related to custom copyright information.
1, via vectors related to font family CSS property.
1, via vectors related to header background setting.
2, via the filter_result_result parameter.
1, via unspecified vectors
2, via the alert parameter in a search alert subscription action.
4, via a .. (dot dot) in the ajaxfile parameter in a custom action.
3, by uploading a file with a PHP extension
5, via a combination of a write action and an F_SETFL fcntl operation for the O_DIRECT flag.
0, via the txt parameter in a headline action to ajax/ph_save.php.
4, via a password starting with a null byte
4, via a request for a URI that triggers a lookup for a virtual transaction name that does not exist.
4, via unspecified vectors.
5, via a large number of (1) program or (2) section headers or (3) invalid capabilities.
3, via vectors involving augeas path expressions.
1, via vectors related to a stale thread state.
4, via a crafted document.
4, via a crafted BPMN2 file.
4, via a crafted kexinit packet.
4, via a crafted ICC color profile in a JPEG 2000 image file.
4, via a crafted JPEG 2000 file.
3, via unknown vectors.
4, via a crafted WAV file to the (1) start_read or (2) AdpcmReadBlock function.
4,send arbitrary method calls or signals to
4, via a crafted XML document.
4, via a crafted JPEG 2000 image
4, via a crafted JPEG 2000 image.
0, by leveraging an account defined in the users.properties file.
0, by logging in with an empty password and delete information which can cause a Denial of Service.
1, via vectors related to screen size handling
1, by leveraging failure to check a malloc return value
3, via unknown vectors.
4, via unspecified vectors.
4, via a crafted query.
2, via the (1) title or (2) body field.
2, via the RID parameter.
4, via a direct request.
5, via a crafted file that is improperly handled by the Open method.
0, by creating an account whose name matches that of a local system account
4, via a long variable name.
2, via the AMG_signin_topic parameter to index.php.
2, via the (1) allmyphp_cookie cookie to admin.php or the (2) Username or (3) Password.
2, via the jobid parameter.
4, via unspecified vectors.
2, via the HTTP Referer header.
1, via vectors related to event parsing.
0, via the next_template parameter to admin/index.php.
4, via a URL in the HTTP Referer header to (1) index.php
2, via the item_id variable
2," via the (1) path parameter in the """"drop down TOP menu (with path)"""" section or (2) print_this_page variable in the footer_content_block section"
4, via unspecified vectors.
1, via crafted OSCAFactory::Session ORB message.
4, via an InfoStore query to a CORBA listener.
4, via a request to the RSDU_CCMS_GET_PROFILE_PARAM RFC function.
4, via unspecified vectors.
2, via unspecified vectors to (1) epm/admin/DataGen.xsjs or (2) epm/services/multiply.xsjs in the democontent.
0, via the xmlParameter parameter in an explorationSpaceUpdate request.
4, via a component name text.
4, via a block title.
2," via the """"Label text"""" field to the results configuration page."
4, via unspecified vectors.
4, via a crafted length parameter value.
4, via a response with a crafted length parameter.
5, via a response with a crafted length parameter.
1, via vectors related to the PHP PCRE library.
0, by reading the update check request.
2, via the Name field in a new account.
4, use device functions.
0, by deleting an instance in the resize state.
4," via shell metacharacters in the (1) $backup['filepath'] (aka """"Path to Backup:"""" field) or (2) $backup['mysqldumppath'] variable."
1, by leveraging failure to sufficiently limit queries
3, by uploading a file with an executable extension
5, via a URL to a crafted SVG file in the feed parameter.
2, via the ch parameter.
4, via a User-Agent HTTP header.
2, via the _20_body parameter in the comment field in an uploaded file.
2, via the domain parameter.
2, via the max_date parameter.
4, via a crafted image file.
4, via a modified server response
4, via a Trojan horse wintab32.dll in the Mobile Partner directory.
5, via a .._ (dot dot underscore) in an item type to the getItemForItemtype
4, via a crafted NewInternalClient request.
2, via the Web-enabled interface.
2, via the ss_id parameter.
2, via the ss_id parameter.
2, via the (1) name or (2) email parameter to contact.php or (3) PATH_INFO to setup.php
2, via the Username and password to index.php.
4, via unspecified vectors.
4, via vectors involving a direct object reference.
0," via vectors involving the """"Connect (by) Using VMRC"""" function."
2, via the selected_group parameter in a gb_ajax_get_group action to wp-admin/admin-ajax.php.
4, via vectors related to context settings.
2, via the phone number field in a new contact to phpecom/index.php/webasyst/contacts/.
1, via vectors related to the field help text in an entity edit form.
4, via vectors related to field titles to the (1) Webform or (2) User sub-modules.
2," via the HTTP Referer Header in a """"404 Not Found"""" response.  NOTE: this vulnerability might exist because of a CVE-2010-2429 regression."
2, via the (1) dateFrom or (2) dateTo parameter.
4, via a direct request to main.html.
4, via unspecified vectors.
4, via a crafted (1) display properties or (2) conditional bitmap parameter in a GNI file.
3, via shell metacharacters in the pinghost parameter to ping.cgi.
4, via malformed disturbance-recording data in a (1) CFG or (2) DAT file.
4, via a Trojan horse (1) FxManagedCommands_3.08_9.tx or (2) TD_Mgd_3.08_9.dll file in the current working directory.
4, via a Trojan horse wacommt.dll file that is located in the same folder as the file being processed.
4, via a Trojan horse quserex.dll file that is located in the same folder as the file being processed.
4, via a Trojan horse u32ZLib.dll file that is located in the same folder as the file being processed.
4, via a Trojan horse (1) igfxcmrt32.dll
4, via a cancel request for a SIP session with a queued action to (1) answer a session or (2) send ringing.
1, by leveraging SSH access and incorrect ownership of (1) ConfigureCoreFile.sh
4, via unknown vectors.
0, by reading the configuration files.
3, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unknown vectors
4, via unspecified vectors.
1, via unknown vectors
2, via an XML external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via the User-Agent header.
4, via unspecified vectors.
3, via unknown vectors.
1, via malformed HTTP requests.
1, via crafted FTP packets.
4, via a malformed string.
4, via a small S-record.
1, via crafted section group headers in an ELF file.
0, via the messageId parameter to selfservice/managedevice/getMessageBody or (2) requests via the requestId parameter to selfservice/devicemgmt/getDeviceInfoTab.htm.
4, via a URL that is processed by the Shorten functionality.
4, via a URL in the TargetResource parameter.
0, via the pid parameter to index.cfm.
4, via a request to (1) flagallery-skins/banner_widget_default/gallery.php or (2) flash-album-gallery/skins/banner_widget_default/gallery.php.
3, via the (1) site_name
4, via a crafted request to Forms/access_cwmp_1.
2, via the SEARCH_ALL parameter.
0, via the SEARCH_ALL parameter to (1) SQLAdvancedALSearchResult.cc or (2) AdvancedSearchResult.cc.
4, via a crafted NumberOfRvaAndSizes field in the AOUT header in a PE executable.
4, via a truncated export table in a PE file.
4, via a crafted ihex file.
4, via a crafted file.
2, via the (1) page_id parameter to loja/index.php or (2) article_id parameter to index.php.
2, via the (1) page_id parameter to loja/index.php or (2) article_id parameter to index.php.
2, via unspecified parameters
4, via a crafted packet
3, via vectors related to configuration input when saving filters.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, by leveraging knowledge of the pairing values and a crafted request to port 10000.
3, by uploading a file with an executable extension
3, via unknown vectors.
4, via vectors related to open network ports.
4, via unspecified vectors.
3, via unknown vectors.
3, by reading a Java stack trace.
3," via vectors related to a """"plain text password."""""
2, via unknown vectors
1, via vectors related to ICMP redirection.
4, via a crafted value in the domain field.
4, via unknown vectors.
0, by reading unspecified error messages.
1, by reading the logs.
0, via the mod_simpleemailform_field2_1 parameter to index.php.
0, by leveraging improper permission checks.
1, via crafted Cinepak video data.
1, via crafted Quicktime Graphics (aka SMC) video data.
4, via a (1) mc_project_get_users
2, via the project_id parameter.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1609.
4, via a .. (dot dot) in the selection parameter.
2, via the (1) usuario.nome variable in an editarUsuario action to usuario.do or (2) titulo.form variable in a novoChamado action to ticket.do.
1, via crafted action and key parameters.
1," via unspecified vectors related to a """"session overflow"""" involving """"sessions overlapping in memory."""""
5, via a crafted logout request that triggers a read of uninitialized data.
2, via the (1) data[Contact][title] parameter to admin/contacts/contacts/add page; (2) data[Block][title] or (3) data[Block][alias] parameter to admin/blocks/blocks/edit page; (4) data[Region][title] parameter to admin/blocks/regions/add page; (5) data[Menu][title] or (6) data[Menu][alias] parameter to admin/menus/menus/add page; or (7) data[Link][title] parameter to admin/menus/links/add/menu page.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a .. (dot dot) in the fname parameter to (1) views/file_download.php or (2) file_download.php.
2, via the calid parameter.
4, via unspecified vectors.
4, via crafted requests.
4, via a crafted request.
2, via the (1) default URI to admin.php or the (2) id parameter to admin.php or (3) go.php.
2, via the (1) submit_id parameter in a 2 action to files/administration/submissions.php or (2) status parameter to files/administration/members.php.
0, via the status parameter in the CMS admin panel.
4, via shell metacharacters in the (1) file name when creating a backup or vectors related to the (2) $_CONFIG[tarpath]
4, via a .. (dot dot) in the file parameter in a json_return action in the xcloner_show page to wp-admin/admin-ajax.php.
2, via unspecified vectors to the (1) user group or (2) vpn template menus.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the sl_custom_field parameter to sl-xml.php.
2, via the search-value parameter.
0, via format string specifiers in the (1) package or (2) architecture name.
3, by including a timezone field in a date
4, via a large number of crafted X.509 certificates.  NOTE: this identifier has been SPLIT per ADT3 due to different affected versions. See CVE-2014-9744 for the ClientHello message issue.
0, via the refr parameter to index.php.
3, via unknown vectors.
1, by leveraging access to the GMP process
4, via a crafted ntpUtility (ntp utility name) argument.
4, via a rapid series of HTTP requests to index.html on TCP port 1681.
2, via the userData cookie.
4, via a request to basicDDNS.html
3, via an (a) admin or a (b) root value in the userData cookie in a request to (1) CmgwWirelessSecurity.xml
4, via a request to wirelessChannelStatus.html.
0, via the versionComment parameter to pages/doeditpage.action.
4, via unspecified vectors.
4, via unspecified vectors.
3, via vectors related to session handling.
5, via unspecified vectors.
2, by reading unspecified files.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a URL in the url parameter.
4, via a crafted Bluetooth Device Name field.
4, via a crafted QR code.
4, via a .. (dot dot) in a URL path parameter.
4, via a crafted filename
1, via vectors related to (1) the lack of GeoIP databases for both IPv4 and IPv6
2, via the label parameter to user/repos/issues.
0, via the q parameter to (1) api/v1/repos/search
2, via the text parameter to api/v1/markdown.
1, by leveraging use of a static encryption key to create session tokens.
3, by viewing /files/password
1, by logging into the application with an array for the password
4, via a crafted theme.
4, via a URL in the hook parameter.
2," via the """"edit HTML source"""" option."
2, via the blog form feature.
4, via a crafted packet.
4, via a crafted amqp_0_10 PDU in a packet.
4, via a crafted packet.
4, via a crafted packet.
4, via a direct request to (1) data/users/<username>.xml
4, via a direct request to (1) plugins/anonymous_data.php or (2) plugins/InnovationPlugin.php
4, via a .. (dot dot) in the name parameter to (1) tmui/Control/jspmap/tmui/system/archive/properties.jsp or (2) tmui/Control/form.
2, via the ranger_user[name] parameter.
4," via vectors related """"serialized data and the last part of the concatenated filename"
3, via unspecified vectors.
4, via unspecified vectors.
3, by leveraging a previous revision of the node.
4, via a .. (dot dot) or full path name in an archive to (1) strip or (2) objcopy or create arbitrary files via (3) a .. (dot dot) or full path name in an archive to ar.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a (1) Role or (2) Organic Group name.
2, via an image title.
4, via a taxonomy vocabulary label.
3, via vectors related to content creation and activity stream messages.
4, via a slot name.
2, via the dbhost parameter.
0, by spawning an instance that triggers the same VNC port to be allocated to two different instances.
3, via the (1) search_param parameter to search.php or (2) name
2, via the (1) video or (2) title parameter.
4, via a URL in the out parameter.
4, via a crafted page
4, via a crafted GetVOLHeader method call
4, via a crafted request.
2, via the order_id parameter in the gallery_album_sorting page to wp-admin/admin.php.
4, via a crafted namespace in the ns parameter.
4, via a crafted patch
2, via the (1) cat parameter in a browse action to index.php or (2) unspecified parameters to admin.php.
5, via a crafted Ad hoc On-Demand Distance Vector (AODV) packet
3, by uploading a ZIP file that contains a PHP file
5, via unspecified vectors.
2, via the search parameter.
4, via a (2) long string in the CSRF token parameter.
2, via the context_key parameter.
1, by asserting the (1) System.Security.Permissions.PermissionState.Unrestricted or (2) System.Security.Permissions.SecurityPermissionFlag.AllFlags permission.
4, via a content section note.
4, via a crafted path when saving a zip file
4, via a crafted path in a zip archive
0, via the refresh_page parameter to www/admin/report-generate.php.
4, via a .. (dot dot) in the src parameter to lib/dp_image.php.
2, via the fb_login_button parameter in a newfb_update_options action.
4, via a .. (dot dot) in the QUERY_STRING in a getfile action to wp-admin/admin-ajax.php.
2, via the (1) text parameter in an addComment action to ajax/profile_functions.php
2, via the tray parameter in a getMailMessage action.
4, via a crafted PDF document.
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
4, via a crafted app that calls an unspecified user-client method.
0, by leveraging root access and providing a crafted first argument.
0, via a sandboxed app that includes a com.apple.sandbox segment in a path.
4, via a crafted app.
4, via a crafted accessor element in a Collada file.
4, via a crafted app with a signature from a (1) self-signed certificate or (2) Developer ID certificate.
4, via a crafted app.
4, via a crafted app.
2, by leveraging redirection of an SSL URL to the iTunes Store.
2, via the (1) app_android_id or (2) app_kindle_url parameter.
4, via a URL in the board_url parameter.
4, via a crafted XML-RPC request
2, via the CMDsearch parameter to cmdownloads/
4, via a large message length in an ioctl call.
4," via vectors related to an """"HTTP command injection issue."""""
1, via crafted malware or via a drive-by download attack.
0, by leveraging the combination of a servlet's deployment descriptor security constraints and ServletSecurity annotations.
2, via the Accept-Language HTTP header.
1, via XML data containing an external entity declaration in conjunction with an entity reference
3, by listing a process because the username and password are on the command line.
3, via an include/smarty/plugins/modifier.date_format.php request if PHP has a non-recommended configuration that produces warning messages.
2, by visiting the /update.log URI.
2, via the i4w_trace parameter.  NOTE: this can be leveraged with CVE-2014-8948 to execute arbitrary commands.
4, via shell metacharacters in the i4w_trace parameter.  NOTE: this can be leveraged with CVE-2014-8948 to allow remote attackers to execute code.  NOTE: it is not clear whether this issue itself crosses privileges.
4, via a request to filepath/yonetim/plugin/adminsave.php or have unspecified impact via a request to (2) ayarsave.php
3, via the (1) Title or (2) Description fields in a playlist or the (3) filter parameter in an explore action to index.php.
0, via the cscf[name] parameter to contact-us/.
2, via the Tasks parameter.
4, via a crafted filename.
4, via a crafted parameter.
4, via a crafted .flac file.
4, via a crafted regular expression
4, via a crafted web site
4, via a crafted HTML document in conjunction with a Cascading Style Sheets (CSS) token sequence specifying the run-in value for the display property
4, via a crafted web site
4, via a crafted config option
0, via the config_option parameter
1, by leveraging access to a project that does not restrict access to attachments and a request to the download URL.
4, via shell metacharacters in a filename.
5, by creating a /tmp/pip-build-* file for another user.
2, via the callback parameter.
4, via a symlink attack on a temporary file with a predictable name (tmp/check_diskio_status-*-*).
2, via the UserId cookie.
2, via the (1) author_name or (2) content parameter to index.php.
3, by uploading a file with an executable extension
4, via a crafted HTTP header to index.php
2, via the selgroups parameter.
4, via shell metacharacters in the (1) APPTMIN
0, via the id parameter in a member_profile action to index.php.
2, via the (1) country
4, via a request to wpmp_pp_ajax_call with an execution target of wp_insert_user.
4, via a .. (dot dot) in the file parameter.
4, via a crafted request
4, via a crafted request.
2, via the Subject field in a Task to frontend/index.jsp.
2, via the sysUserName parameter in a save action to adminpasswd.cgi or (3) change the admin user password via the sysPassword parameter in a save action to adminpasswd.cgi.
0, via the domainname parameter in a save action.  NOTE: this issue was SPLIT from CVE-2014-9021 per ADT1 due to different affected products and codebases.
3, via the (1) tr69cAcsURL
4, via a crafted form.
4, via a crafted path.
2, via the (1) enblftp
4, via a crafted .flac file.
4, via a crafted jp2 file
3, via unspecified vectors.
4, via a crafted password.
3, via unknown vectors.
2, via the API.
0, via an unspecified API method.
4, via a crafted y0da Crypter PE file.
2, via the (1) sort or (2) dir parameter to view_all_set.php.
4, via a crafted JPEG file
4, via a crafted RTF file.
2, via the (1) swfloc or (2) designrand parameter.
2, via the (1) sort or (2) dir parameter to license/records.
2, via the (1) id or (2) n parameter.
4, via a request to the whydowork_adsense page in wp-admin/options-general.php.
2, via the idcode parameter in the whydowork_adsense page to wp-admin/options-general.php.
2, via the (1) label parameter to admin/users/roles/
2, via the index value in an array parameter
2, via the (1) index value of an array parameter or the filename parameter in the Content-Disposition header to the (2) file or (3) profile image upload functionality.
4, via a large block value in a cpio archive.
3, via shell metacharacters in the ipAddr parameter to zhnping.cmd.
4, via a .. (dot dot) in the file parameter.
2, via the PATH_INFO to subrion/search/.
2, via the YII_CSRF_TOKEN HTTP cookie or the StudentDocument
0, via the addons_title parameter in the CMDM_admin_settings page to wp-admin/admin.php.
3, by uploading a file with an executable extension
4, via a crafted package.
2, via the failrefer parameter.
4, via a URL in the failrefer parameter.
4, via shell metacharacters in the ping field (setobject_ip parameter).
2, via the (1) id parameter in an edit action to dapur/index.php; (2) cat
2, via the (1) view
4, via a direct request to the database backup file in .backup/.
2, via the view parameter in a direct request to fiyo/dapur.
2, via the callback parameter in a JSONP response.
4, via a .. (dot dot) in the path of a cropped picture in the uploader panel.
0, via format string specifiers in unknown vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unknown vectors.
4, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
3, via unspecified vectors.
3, via the gpid parameter.
2," via the """"Manually enter your UA code"""" (manual_ua_code_field) field in the General Settings."
2, via the table_id parameter in a get_wdtable action to wp-admin/admin-ajax.php.
0, via the id parameter to lp/index.php.
4, via a request to html5plus/playlist.php.
2, via the (1) vendor_email[] parameter in the email_vendor function or id parameter in the (2) download_project
2," via the """"URL (optional)"""" field in a new ticket."
4, via a URL in the QUERY_STRING.
4, via a .. (dot dot) in the URI to (1) manage/ or (2) web/ or remote authenticated users to read arbitrary files via a .. (dot dot) in the URI to resources/.
4, via a crafted Host: header.
4, via a direct request to (1) main.cgi
2, via the site_url parameter.
2, via unspecified vectors
4, via a request for a filename that does not exist.
0, by transmitting crafted response packets on the 4-20 mA current loop.
3, by changing a PPP configuration setting.
1, via crafted radio transmissions that spoof GPS satellite broadcasts.
0, by sniffing the network for cleartext-equivalent traffic.
4, via a crafted file that triggers long string arguments to functions.
4, via a crafted CSV file.
3, by providing a large amount of data.
4, via a malformed DLL file.
4, via a Trojan horse DLL in the current working directory.
4, via unknown vectors.
4, via a Trojan horse DLL in an unspecified directory.
5, via (1) an email hyperlink or the (2) style parameter in the image attribute section.
2, via the email parameter in the register page to index.php.  NOTE: the email parameter in the forget page vector is already covered by CVE-2012-4034.2.
1, via crafted wildcards.
2, via the url parameter.
0, via the timezone parameter in a modify_schedule OMP command.
4, via a crafted IKEv2 Key Exchange (KE) message with Diffie-Hellman (DH) group 1025.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
0, by triggering an unspecified deadlock condition.
0, by leveraging the Limited Administrator role.
4, via unspecified vectors.
4, via a .. (dot dot) in the file parameter.
2, via the (1) _action parameter to group.php or (2) user.php or the (3) location_id parameter to photos.php in php/.
2, via the (1) photographer_id or (2) _crumb parameter.
4, via a tem:Code element in a SOAP request.
0, via the file parameter to cgi-bin/sddownload.cgi
2, via the id[] parameter.
0, via the question_id parameter in a do_register action.
2, via the (1) type parameter to report.php
3, via the page_id parameter.
2, via the (1) QUERY_STRING to wb/admin/admintools/tool.php or (2) section_id parameter to edit_module_files.php
5, by attempting a product-rename action with an invalid new name and then reading a stack trace
3, by connecting to unspecified open ports
0, by uploading an SWF file
2, via the condition parameter.
4, via a crafted string to the (1) StartRecord
4, via a crafted column alias.
3, via unspecified vectors.
4, via a crafted ViewPort property value.
4, via a crafted DWF file.
2," via the """"profile/Platform"""" field."
4, via a Flash file with an image extension
4, via a small hive files
4, via a crafted RTF file.
4, via a URL in the hostname parameter and reading the parameters in the response sent to the URL.
2, via the filter parameter.
2, via the dest_id field.
4, via a crafted filename.
4, via unspecified vectors.
2, via the url parameter.
5, via a crafted packet
4, via a URL in the url parameter.
5, via a crafted URI in the url parameter.
4, via a URL starting with an ASCII character o through z or A through D
0, via the id parameter in a shortcode_products_table action to wp-admin/admin-ajax.php.
3, by uploading a file with an executable extension
2, via the location[id] parameter in a shareaholic_add_location action to wp-admin/admin-ajax.php.
0, via vectors involving CORBA calls
2, via the (1) QUERYSTRING variable in lib/TWiki.pm or (2) QUERYPARAMSTRING variable in lib/TWiki/UI/View.pm
4, via a crafted upack packer file
1, via crafted BMP image
4, via an addUser action to STATE_ID/1417736606982/roleMgmt.do.
2, via the (1) user or (2) password parameter in the bird-feeder page to wp-admin/options-general.php.
2, via the (1) email_address or (2) sidebarTitle parameter in the dandyid-services.php page to wp-admin/options-general.php.
3, via the (1) itex_t_twitter_username or (2) itex_t_twitter_userpass parameter in the iTwitter.php page to wp-admin/options-general.php.
2, via the (1) twitter_kullanici or (2) twitter_sifre parameter in a kaydet action in the mikiurl.php page to wp-admin/options-general.php.
2, via the (1) o2t_username or (2) o2t_tags parameter to wp-admin/options-general.php.
2, via the (1) username or (2) password parameter in the spnbabble.php page to wp-admin/options-general.php.
2, via the (1) username or (2) password parameter in the wpCommentTwit.php page to wp-admin/options-general.php.
2, via the (1) yurl_login or (2) yurl_anchor parameter in the yurl page to wp-admin/options-general.php.
3, by accessing a crafted URL during automatic policy generation.
4, via a URL in the rd parameter in a submit action to snowfox/.
4, via a submit action in the admin/accounts/create uri to snowfox/.
0, via the group_id parameter in a list_zone action to cgi/client.cgi.
3, via vectors related to the (1) taxonomy term title for instances with Save term lineage enabled or (2) entity type fields.
2, via the words_exact parameter.
2, via the robot parameter to admin/robots.php.
2, via the (1) nom or (2) user_agent parameter to admin/robots.php.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors related to cleartext storage.
1, by leveraging access to an unspecified API endpoint.
0, via a full pathname in a symlink in an (1) image or (2) build in a Dockerfile.
4, via a crafted (1) image or (2) build in a Dockerfile in an LZMA (.xz) archive
4, via a crafted request.
1, via vectors related to deleting a Path-based Metatag.
2, via the destination parameter.
4, via unspecified vectors.
4," via a """"'"""" (single quote) in the scope parameter to do/view/TWiki/WebSearch."
2, via the username_twitterDash parameter in the twitterDash.php page to wp-admin/options-general.php.
4, via a crafted JSON object.
4, via a .. (dot dot) in a filename.
4, via a .. (dot dot) in the filename.
5, via a .. (dot dot) in a file path in a ZIP archive.
5, via a small (1) size variable value in the dissector_dhcp function in dissectors/ec_dhcp.c
4, via a large netbios packet.
5, via a packet containing only a CVS_LOGIN signature.
4, via a crafted password
4, via a ZenPack upload
4, via a crafted CORBA call
2, via the handler_id parameter.
4, via unspecified vectors.
2, via the (1) rss
2, via the pictoBrowserFlickrUser parameter in the options-page.php page to wp-admin/options-general.php.
2, via the (1) idptt_twitter_username or (2) idptt_tweet_prefix parameter to wp-admin/options-general.php.
3, via the (1) pwgrandom_title or (2) pwgrandom_category parameter in the pwgrandom page to wp-admin/options-general.php.
2, via the (1) simplehoverback
2, via the (1) simpleflickr_width
2, via the message_format parameter in the twimp-wp.php page to wp-admin/options-general.php.
2, via the mashtlb_twitter_username parameter in the twitter-liveblog.php page to wp-admin/options-general.php.
2, via the tweetscribe_username parameter in a save action in the tweetscribe.php page to wp-admin/options-general.php.
2, via the (1) gt_default_header or (2) gt_homepage_header parameter in the wp-unique-header.php page to wp-admin/options-general.php.
2, via the lpa_post_letters parameter in the wp-limit-posts-automatically.php page to wp-admin/options-general.php.
5, by adding a channel with the same name as an existing channel but without the leading # character
4, via a request to agency-delete.php
4, via (1) an arbitrary parameter to roma/jsp/debug/debug.jsp or (2) an arbitrary parameter in a debug.DumpAll action to nps/servlet/webacc
2, via the (1) ip_list
4, via a crafted QES file.
4, via a Trojan horse (1) mfc71enu.dll
4, via a crafted image.
5, via unspecified vectors.
3, by triggering a certain length-verification error during processing of a DTLS handshake.
4, via unknown vectors.
3, via the (1) PROFILENAME parameter in a Save action to httpd/cgi-bin/pppsetup.cgi or (2) COMMENT parameter in an Add action to httpd/cgi-bin/ddns.cgi.
2, via the COMMENT parameter in an Add action.
4, via a request to httpd/cgi-bin/changepw.cgi.
4, via a blog comment in the QUERY_STRING to serendipity/index.php.
2, via the title parameter.
2, via the (1) sectionID parameter to admin/managersection.php
4, via a \\\\ (four backslashes) in the fileName parameter to getRdsLogFile.
1, via unspecified vectors or (2) conduct cross-site scripting (XSS) attacks via the sc_social_slider_margin parameter in a wpbs_save_settings action in the wpbs_panel page to wp-admin/admin.php.
2, via the username parameter in a dobanuser action to modcp/banning.php or (2) unban a user
2, via the username field during registration
2, via the category parameter.
1, via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) ll__opt[image2_url] or (3) ll__opt[image3_url] parameter in a ll_save_settings action to wp-admin/admin-ajax.php.
0, via the q parameter in a promotionProductSearch action to wp-admin/admin-ajax.php.
4, via unspecified vectors.
2, via the errors[fu-disallowed-mime-type][0][name] parameter to the default URI.
0, via the create parameter to index.php.  NOTE: this can be leveraged for cross-site scripting (XSS) attacks by creating a file that generates an error.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1137; see CVE-2014-1137 for more information.
0, via the sort_by parameter to the (1) opac parameter in opac-search.pl or (2) intranet parameter in catalogue/search.pl.
4, via a / (slash) in a crafted archive
4, via a long string in a WAX file.
4, via a long IKEY INFO tag value in an AVI file.
2, via the (1) user or (2) password parameter in an AuthenticateUser request.
4, via a .. (dot dot) in the default URI to images/.
2, via the (1) HTTP User-Agent or (2) HTTP Referer header.
2, via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) simple_sf_width or (3) simple_sf_style parameter in the simple-simple-sticky-footer page to wp-admin/themes.php.
2, via the catid parameter.
4, via a long Time attribute in an Event element in an XML file.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1004; see CVE-2014-1004 for more information.
0, via the id parameter to catalog.php.
4, via unknown vectors.
0, via the id parameter in an admin action.
2, via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) vgb_page or (3) vgb_items_per_pg parameter in the wp-vipergb page to wp-admin/options-general.php.
4, via a .. (dot dot) in the member_download action to wp-admin/admin-ajax.php.
4, via a crafted repository name in a clone command.
2, via the HTTP Referer header to visitormessage.php.
0, via the category parameter when displaying a category
3, by uploading a large number of files.
0, via the q_widget parameter to en/search.
4, via a crafted date string
4, via a crafted email.
5, by uploading a file with an executable extension via the cf_uploadfile2[] parameter
1, via vectors related to incorrect documentation for mpn_set_str.
2, via the (1) name or (2) url parameter.
2, via the text parameter to Special:TemplateSandbox.
1, via vectors related to text extracts.
4, via a crafted module
4, via a crafted ELF file.
4, via a crafted entry in a ZIP archive.
4, via malformed UTF-8 characters
4, via a large exponent value in a scientific number.
0, via a full pathname in a file: URL in the image location property.
4, via a crafted X-Forwareded-For header.
1, via vectors related to a (1) map offset or (2) rsrc marker
1, via unspecified vectors to the notification page callback.
4, via a poll node title.
1, via vectors related to menu callbacks.
0, by leveraging improper access checks on unspecified ajax callbacks.
4, via a node title.
4, via a configuration file import.
4, via a symlink attack on a file in the synchronization path.
2, via the PATH_INFO to the default URI
2, via the QUERY_STRING to vb.htm.
2, via the html_response_page parameter.
2, via the email parameter.
2, via the historyID parameter.
2, via the (1) author field to guestbook.php or (2) username field to account.php.
1, via unspecified vectors or (2) conduct cross-site scripting (XSS) attacks via the sc_our_team_member_count parameter in the sc_team_settings page to wp-admin/edit.php.
2, via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) frm_title
1, via unspecified vectors or (2) conduct cross-site scripting (XSS) attacks via the sc_popup_subtitle parameter in the wp-popup.php page to wp-admin/options-general.php.
4, via a crafted PPT file.
0, via the from parameter to index.php. NOTE: this can be leveraged for cross-site scripting (XSS) attacks via a request that causes an error.
4, via keyctl commands that trigger access to a key structure member during garbage collection of a key.
4, via a crafted CAB file
2, via the post parameter.
2, via the post parameter.
2, via the image parameter.
0, via the ssh-password parameter to page.cmd.
3, by uploading a file with a PHP extension
2, via the (1) title or (2) roundtrips parameter
3, via the (1) datefilter parameter in the access_log page to wp-admin/users.php or (2) simple_security_ip_blacklist[] parameter in an add_blacklist_ip action in the ip_blacklist page to wp-admin/users.php.
2, via the (1) admin_username or (2) admin_password parameter.
2, via the MANTIS_MANAGE_USERS_COOKIE cookie.
4, via a .. (dot dot) in the install_lang parameter.
2, via the Description field in a file upload.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1155; see CVE-2014-1155 for more information.
4, via a .. (dot dot) in the path parameter.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1137; see CVE-2014-1137 for more information.
2, via the short_name parameter in a rename action.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1137; see CVE-2014-1137 for more information.
2, via unknown vectors
4, via a listSslCerts API call.
2, via unspecified vectors
2, via unspecified vectors
4, via a crafted FLV file.
4, via a crafted M2V file.
0, via the fm_filter parameter to blogs/admin.php.
4, via a Trojan horse itunesmobiledevice.dll.
4, via a compressed text chunk in a PNG image that has a large size when it is decompressed.
2, via the url parameter.
4, via a request to webadmin/nslam/index.php.
2, via the (1) login parameter to webadmin/auth/verification.php or (2) dpid parameter to webadmin/deny/index.php.
2, via the url parameter to webadmin/deny/index.php.
4, via a URL in the url parameter.
4, via a large number of notes.
4, via a long string.
4, via a box size less than 7.
4, via a crafted length value.
4, via a crafted device handle
2, via an extra field with an uncompressed size smaller than the compressed field size in a zip archive that advertises STORED method compression.
4, via a crafted diff file.
4, via a WAV file with the number of channels set to zero.
4, via a crafted number of channels in a WAV file
4, via a crafted raw file.
4, via a bind system call for an AF_ALG socket with a parenthesized module template expression in the salg_name field
4, via a / (slash) character in a module name
4, via a Trojan horse program in the %SYSTEMDRIVE% directory
2, via the path info to api/
0, via the download parameter to api/definitions.
4, via a crafted TIFF image
4, via a crafted cmap SFNT table.
5, via a crafted PCF file with a 0xffffffff size value that is improperly incremented.
4, via a crafted FOND resource in a Mac font file.
4, via a crafted Mac font.
2, via the Swfile parameter.
2, via the Swfile parameter.
4, via a malformed compressed raster file
4, via shell metacharacters in the first argument to the resolve API function.
4, via a crafted filename.
4, via unspecified vectors.
0, via the 'url' parameter to plugin_googlemap3_kmlprxy.php.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7428.
2, via the url parameter to permalink_page.php.
4, via a commit with a directory path starting with .git/
4, via a Range header with an empty value
4, via a crafted path.
3, via unspecified vectors.
4, via a crafted string to the wddx_serialize_value function.
4, via a file name.
4, via a ZMTP v2 or earlier header.
3, via shell metacharacters in the var:lang parameter to cgi-bin/webcm.
5, via a .. (dot dot) in the img parameter in a revslider_show_image action to wp-admin/admin-ajax.php.
4, via a URL in a block.
3, via an (1) account username
2, via unspecified vectors involving internal fields.
2, via unspecified vectors
2, via the path info.
4, via a large number of ClientHello messages.  NOTE: this identifier was SPLIT from CVE-2014-8628 per ADT3 due to different affected versions.
4," via a """"broken number-with-base"""" in a Postscript stream"
3, by uploading a file with a PHP extension as a customicon for a new course
2, via the auto_login parameter.
2, via unspecified vectors related to the headindex variable.
4, via a SOAP API request.
2, via the username.
4, via a long argument to the (1) nan
4, via a GIF image without a colormap.
4, via a crafted PNM file.
4, via a crafted GIF file.
4, via a crafted input file.
2, via large height and stride values.
0," by entering the ADM command and modifying a """"page ID"""" field to the EMSPG2 transaction code.  NOTE: the vendor's perspective is that configuration and use of available security controls in the NVAS product mitigates the reported vulnerability."
4, via a crafted image
4, via hex-encoded characters.
5, by registering and dropping the (1) LIST
4, via a crafted offset
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
1," via vectors related to """"too many object."""""
4, via a crafted pnm file.
4, via a crafted file.
4, via unspecified vectors.
4, via a crafted dpc image.
4, via a crafted xwd image.
4, via a malformed dpx file.
4, via a malformed xwd file.
4, via a crafted ps file.
4, via a crafted viff file.
4, via a crafted wpg file.
4, via a crafted wpg file.
4, via a crafted viff file.
4, via a crafted pdb file.
4, via a malformed sun file.
4, via a crafted palm file
4, via a crafted pnm file.
4, via a crafted xpm file.
4, via a crafted quantum file.
4, via a crafted palm file
4, via a crafted psd file
4, via a crafted psd file
4, via vectors related to error handling in sun files.
4, via a crafted xpm file.
4, via a crafted psd file.
4, via a crafted sun file.
4, via a corrupted sun file.
5, via a corrupted wpg file.
4, via a crafted xpm file.
4, via a crafted png file.
4, via a crafted palm file.
2, via unknown vectors
4, via unspecified vectors.
4, via unknown vectors.
4, via a crafted image file.
4, via a corrupted dib file.
4, via a crafted rle file.
1," via vectors related to the """"identification of image."""""
4, via a crafted application
2, via an application that provides a crafted mask value
4, via a crafted application
4, via a crafted application
4, via a crafted application that sends short DCI request packets
4, via a crafted application
4, via a crafted application
4, via a crafted application that provides format string specifiers in a name
4, via a crafted application that sends an I2C command
4, via a crafted Information Element (IE) in an 802.11 management frame
2, via the (1) title of an appointment or (2) contact fields.
1, via vectors related to a lost server connection.
4, via a crafted DDS file.
4, via a crafted uloc_getDisplayName call.
4, via vectors related to the compression method.
1, by leveraging incorrect expectations about locking during multithreaded access to internal data structures for IPv4 UDP sockets.
5, via a crafted 8BIM profile.
2, via the (1) tribe_name or (2) tags parameter in a tribes page request to user/ or the (3) user_id or (4) fullname parameter to signup.php.
0, via a large filesystem stack that includes an overlayfs layer
4, via a crafted application.
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted Office document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
3, via vectors involving an IFRAME element that triggers a redirect
2, by triggering application execution by an invalid task
5, via a crafted web site
4, via a crafted web site
1, via unspecified vectors
4, by connecting to the Mount port.
4, via a crafted URL.
4, via a crafted URL.
4, via a crafted URL.
2, via an XML external entity declaration in conjunction with an entity reference
4, via a crafted GIF image
4, via a crafted URL.
4, via a crafted HTML document.
4, via unspecified vectors.
1, by leveraging cleartext storage of the administrative password.
1, by leveraging cleartext storage of the wireless key.
2, via unspecified vectors to the editor.
4, via a crafted URI that is included in an error response.
4, via a crafted URL.
2, via unspecified vectors
4, via unspecified vectors.
2, by triggering multiple transmit-queue records.
4, via a crafted XML data.
4, via a crafted URL.
4, via a crafted URL.
4, via unspecified vectors.
4, via a large number of REPORT requests
2, by sending many duplicate records for the next epoch
1, via crafted RSA PSS parameters to an endpoint that uses the certificate-verification feature.
4," via a vectors related to """"wrapping attacks."""""
5, by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.
2, use this flaw to cause a denial of service.
4, via a privilege escalation attack.
1, via crafted block group descriptor data in a filesystem image.
1, via crafted parameter combinations related to dynamically evaluated revision numbers.
1, via crafted Velocity Text Language (aka VTL).
4, via a crafted SVG file.
4, via a crafted v1 HTTP protocol request sequences.
1, via crafted XML data.
4, via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.
4, via a crafted string length value in a XkbSetGeometry request.
3, by uploading a file with a (1) .php3
2, via the get_repo API method.
4, via a negative length value.
2, via an external entity in an SAXSource.
2, via an external entity in an invalid XML (1) String or (2) GenericFile object in an XPath query.
2, via the HTTP User-Agent header.
1, via direct access to module URLs.
2, via the do parameter.
1, by using an invalid signature_algorithms extension in the ClientHello message during a renegotiation.
4, via unspecified vectors.
3, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
3," by leveraging an unspecified """"type confusion"
1, via unspecified vectors
0," by leveraging an unspecified """"type confusion"
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
5, via unspecified vectors.
2, via unknown vectors
2, via unknown vectors
1, via unspecified vectors
1, via unknown vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
0," by leveraging an unspecified """"type confusion"
2, via unspecified vectors
0," by leveraging an unspecified """"type confusion"
4, via unspecified vectors.
3, via unspecified vectors.
2, via unspecified vectors
5, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via the query parameter.
4, via unspecified vectors.
3, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
0," by leveraging an unspecified """"type confusion."""""
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unknown vectors related to BI Publisher Security.
1, via unknown vectors related to Integration Business Services.
2, via unknown vectors related to Integration Business Services.
2, via unknown vectors related to Security.
2, via unknown vectors related to Java Integration
2, via unknown vectors related to AX/HI Web UI.
4, via unknown vectors.
1, via unknown vectors related to Server : Security : Privileges : Foreign Key.
2, via unknown vectors related to Network.
1, via unknown vectors related to Content Server.
1, via unknown vectors related to Libc.
1, via vectors related to PIA Core Technology.
1, via unknown vectors related to Server : Replication
1, via unknown vectors related to Server : Replication
3, via unknown vectors related to Public Sector Portal.
1, via unknown vectors related to Pluggable Auth.
3, via vectors related to Security - LDAP Security Adapter.
2, via unknown vectors related to Portal Framework
1, via vectors related to SAML
1, via unknown vectors related to Report Distribution.
1, via unknown vectors related to File System
2, via unknown vectors related to Clinical Trip Report.
2, via unknown vectors related to Analytics Web General.
2, via unknown vectors related to Admin Console.
1, via vectors related to Integration - COM.
2, via unknown vectors related to XA.
2, via unknown vectors related to Optimizer.
1, via unknown vectors related to Serviceability.
1, via unknown vectors related to Fabric Layer.
1, via unknown vectors related to Session Management.
1, via unknown vectors related to Roles & Privileges.
2, via unknown vectors related to Portal Framework
4, via unknown vectors related to Portal Framework
2, via unknown vectors related to Forms Services.
2, via unknown vectors related to Optimizer.
2, via unknown vectors related to Siebel Core - Unix/Windows.
2, via unknown vectors related to UI Framework.
1, via vectors related to VMSVGA virtual graphics device
1, via unknown vectors related to Resource Control.
1, via vectors related to RPC Utility.
3, via vectors related to RPC Utility.
1, via vectors related to Server : InnoDB : DDL : Foreign Key.
2, via unknown vectors related to Login.
1, via unknown vectors related to Server : Partition.
1, via unknown vectors related to Server : InnoDB
2, via unknown vectors related to Information Manager Console.
1, via unknown vectors related to WebCenter Spaces Application.
1, via vectors related to OpenSSO Web Agents.
0, via unknown vectors related to Ldom Manager.
1, via vectors related to PORTAL.
1, via unknown vectors related to Portlet Services.
1, via unknown vectors related to Authentication Engine.
3, via unknown vectors related to Security.
1, via unknown vectors related to Hotspot.
1, via vectors related to PIA Core Technology
1, via unknown vectors related to My Oracle Support Plugin.
2, via unknown vectors related to Web Runtime Security.
3, via unknown vectors.
2, via unknown vectors related to Security.
2, via unknown vectors related to Deployment.
3, via vectors related to PIA Core Technology
1, via vectors related to EBS Plugin.
1, via vectors related to BAS - Base Component.
1, via vectors related to PIA Search Functionality.
2, via unknown vectors related to Enterprise Portal.
1, via unknown vectors related to Replication.
3, via unknown vectors.
2, via unknown vectors related to Portal Framework.
2, via unknown vectors related to Server : Partition.
1, via unknown vectors related to Error Messages.
2, via unknown vectors related to InnoDB
1, via unknown vectors related to Server : Memcached.
1, via unknown vectors related to Server : InnoDB
2, via unknown vectors related to Reporting and Analysis.
2, via unknown vectors related to Server : SP.
2, via an unspecified parameter.
1, by leveraging privileged access to set crafted values of unspecified fields.
0, by leveraging certain SRM access to conduct a decryption attack.
3, by uploading and then accessing an executable file.
4, via a crafted URL.
3, via vectors related to the CMP shared secret parameter.
1, via vectors related to the email address parameter.
0, via an invalid MIME e-mail message with a multipart/* Content-Type header.
4, via unspecified vectors.
5, via unspecified vectors.
2, via the (1) displayMode or (2) wrapPreDisplayMode parameter.
1, by omitting the ServerKeyExchange message
1, via crafted packets.
4, via unspecified vectors.
5, by providing a valid account name.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
1, via crafted path in a CAB file
3, via the page_id parameter.
4, via a long string in the first argument to the (1) ReadConfigValue or (2) WriteConfigValue function.
4, via a symlink attack in an ARJ archive.
4, via a crafted packet
4, via a crafted packet
4, via a crafted packet that is improperly handled during decryption of an SSL session.
1, via crafted HTTPS requests
1, via an external entity declaration in conjunction with an entity reference
1, via crafted traffic
0, via an unspecified parameter
1, via IPv4 packets
2, via unspecified fields
4, via a flood of malformed TCP packets
1, via crafted network traffic that triggers incorrect kernel-timer handling
2, by reading return messages from crafted GET requests
1, via crafted packets
1, via crafted IPv6 Attributes in Access-Accept packets
1, via crafted packets
1, via crafted commands
0, by sniffing the network
1, via crafted HTTP requests
4, via a crafted e-mail attachment with uuencode encoding
2, via unspecified commands
1, via crafted network traffic that triggers improper handling of the timing of process switching and Cisco Express Forwarding (CEF) switching
0, via malformed SNMP packets
0, via malformed IPv6 packets with extension headers
2, via multiple crafted HTTP requests
2, via an unspecified series of TCP packets
1, via crafted packets that are improperly handled during rendering of the Signature Events Summary page
2, via unspecified vectors
1, via crafted Challenge SOAP calls
4, via a malformed HTTP method
1, by making many management-interface HTTPS connections during the key-regeneration phase of an upgrade
4, via a flood of Router Solicitation messages on the local network
2, by sending crafted DHCP response packets on the local network
4, via a crafted URL
4, via a crafted media description
0, by establishing many HTTPS sessions
1, via vectors related to a POST request
2, via unspecified vectors
5, via a malformed RSVP packet
4, via a crafted Autonomic Networking (AN) message
4, via a malformed SNMP packet
1, via crafted IPC messages that trigger use of root privileges for a software-package installation
1, via crafted IPC messages
4, via a crafted pathname
1, via crafted SSH packets
1, via unspecified vectors
2, by sending crafted Autonomic Networking (AN) messages on an intranet network
1, via crafted packets
4, via a flood of crafted DHCP packets
4, via unspecified parameters.
4, via a malformed password
5," by visiting a """"deprecated page"
4, via a file-inclusion attack
1, via unspecified vectors
1, by leveraging improper handling of HTTP methods
4, via a crafted URL
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted URL
2, via unspecified vectors
4, via a crafted HTTP request
1, by using the languageShortName parameter to upload a file that provides shell access
1, via unspecified vectors
0, via an unspecified parameter
1, by leveraging knowledge of the RADIUS secret and sending crafted RADIUS packets
4, via a series of packets that are considered oversized and trigger improper fragmentation handling
0, via malformed PM packets
2, via unspecified vectors
4, via a command string in an unspecified parameter
4, via a crafted value
2, via unspecified parameters in a (1) GET or (2) POST request
4, via a crafted URL
4, via a crafted URL
4, via a file-inclusion attack
2, via an invalid field in a Negotiate Protocol request
3, via malformed Q931 SETUP messages
2, via unspecified parameters in a (1) GET or (2) POST request
5, via a crafted (1) GET or (2) POST parameter
2, via an unspecified field
2, via unspecified vectors
4, via a flood of crafted UDP traffic
0, by sending many requests
4, via a crafted HTTP request
1, via crafted input to unspecified fields
4, via a crafted URL
2, via unspecified vectors
4, via a crafted XML document
1, via crafted TCP traffic on the local network
2, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via a crafted value in a URL
4, via a crafted resource request
4, via a flood of (1) IP or (2) Ethernet traffic
2, via unspecified fields
2, via unspecified commands
1, via crafted IPv6 extension headers
4, via a crafted URL
5, by sending a crafted message during IPsec tunnel setup
4, via a crafted SDP parameter-negotiation request in an SDP session during a SIP connection
4, via a modified VPN deletion request in a management session
4, via a crafted URL
4, via a malformed TELNET packet
4, via shell metacharacters in a _service file.
5, via a crafted directory name in the uid parameter
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, via the filename variable.
4, via a value of ShowLogins for the maintenance variable.
2, via the dirname variable.
4, via unspecified vectors.
2, via the accessMgrDN value of the forgotUser.do CGI.
4, via a symlink attack on /tmp/dracut_block_uuid.map.
2, via long arguments
2, by specifying that server in the uri-host field of an Alt-Svc HTTP/2 response header.
2, via an image that is improperly handled during transformation.
3, via unknown vectors.
4, via a crafted web site that is accessed with unspecified mouse and keyboard actions.
5, via a malformed MP3 file that improperly interacts with memory allocation during playback.
4, via a crafted Cascading Style Sheets (CSS) token sequence that triggers a restyle or reflow operation.
5, via a crafted MP4 video that is improperly handled during playback.
4, via unknown vectors.
2, by leveraging timing differences when accessing a pre-computed table during modular exponentiation
4, via a crafted pack file.
4, via a crafted Debian source control file (.dsc).
4, via a crafted (1) campaign or (2) map file.
4, via a crafted BMP image.
0, via an unspecified parameter when creating a secondary Git repository.
1, via vectors related to the height and width of a window.
1," by using the """"Command Shell"""" menu item while in the directory trunk/$(xeyes)."
5," via a crafted image name that is mishandled during a """"Show in Folder"""" action."
4, via shell metacharacters in a file path.
4, via shell metacharacters in the name of a (1) tar file or (2) file within a tar file.
4, via a symlink attack on a pathname in a /tmp/tardiff-$$ temporary directory.
2," via the archive magic version number in an """"old-style"""" Debian binary package"
4, via (1) message details when a message is unqueued
2, via the (1) fromCustomer
4, via a crafted filename.
0, by uploading an executable file.
4, via UPnP requests.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, by uploading a file with a \0 character in its name.
4, via a crafted filename of an attachment.
4, via a (1) CON
4, via a long filename of an attachment.
4, via a crafted header in a response.
0, via a crafted parameter
4, via a Trojan horse application with a name composed of an initial substring of a path that contains a space character.
4, via a -- (dash dash) in a username.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a modified page parameter.
4, via a crafted URL.
4, via unspecified vectors.
4, via a crafted .hmbook file.
4, via a crafted archive.
4, via a crafted archive.
4, via a crafted filename.
3, via vectors related to attachment handling.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted attachment filename.
0, via the local_graph_id parameter
0, via the action parameter to index.php.
2, via the searchterm parameter to backend/main.php.
2, via the (1) idcat or (2) idclient parameter to backend/main.php.
2, via the banner_effect_email parameter in the BannerEffectOptions page to wp-admin/options-general.php.
0, via the conditionXML parameter to the taskLogTable to orionUpdateTableFilter.do.
1, via an external entity declaration in conjunction with an entity reference within an XML document named in the xslt parameter
4, via a DLL pathname in a crafted Unicode string that is improperly handled by a subprocess reached through a named pipe
3, by leveraging a cookie received in an HTTP response.
1, via crafted serialized data to unspecified PHP scripts.
4, via unspecified vectors.
2, via the substring parameter.
4, via a modified (1) update or (2) remove request.
4, via (1) the search field in plugin/index.html or (2) the title field in the Create Featured Result form in admin/main.jsp.
3, by uploading a file with an executable extension and the image/jpeg content type
4, via a pretty=true action to the _cluster/health URI.
1, via vectors related to SSL/TLS certificates.
4, via IDAT data with a large width
1, by modifying the 'Ucell Internet' directory to reference a malicious mms_dll_r.dll or mediaplayerdll.dll.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.  NOTE: this may overlap CVE-2015-2264.
4, via a crafted packet.
0, via format string specifiers in a request.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a GET request.
3, via vectors involving a regkey (1) set or (2) get command.
4, via a crafted file that triggers an internal error.
5, via a renamed DLL in the default install directory.
0, by reading an error message about an unhandled exception
2, by using different session ID values in a series of HTTP requests.
2, via the StrRtspPath parameter.
4, via a long field in an HTTP request.
4, via a crafted pathname.
4, via malformed input.
2, via the (1) technicianSearchText parameter to the Help Desk Technician page or (2) rolesSearchText parameter to the Help Desk Roles.
2, via the (1) domainname parameter to dnsProxy.cmd (DNS Proxy Configuration Panel); the (2) brName parameter to lancfg2get.cgi (Lan Configuration Panel); the (3) wlAuthMode
4, by prepopulating the fact cache.
4, via a large number of requests that are rejected because the socket limit is reached.
2," via vectors related to (1) the unmap function in list.c or (2) """"two additional unconfirmed use-after-free complaints made by Coverity scan."""" NOTE: some of these details are obtained from third party information."
4, via a symlink attack in an archive.
2, via the redirect parameter.
2," via the (1) lrealname field in the editProfile form to index.php/home/profile; the (2) data[title] or (3) data[description] field in the addQuickItem form to index.php; the (4) """"note text"""" field in the saveNote form to index.php/areas; or the (5) titleBEObject or (6) tagsArea field in the updateForm form to index.php/documents/view."
2, via the e107_files/ file path in the QUERY_STRING.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the Response Body field when creating a new user account.
4, via a URL in the destination parameter.
0, via the result parameter to upload_files/pk/include.php.
0, via the path parameter to admin/file_manager/file_manager/editfile.
2, via the Game Content field in Add Game.
0, via the order_by parameter in a GalleryBox action to wp-admin/admin-ajax.php.
2, via the url parameter to general/status.html and possibly other pages.
2," via the """"Real Name"""" value."
2, via the (1) data[Category][title] parameter to admin/categories/add
3, by uploading a file with a PHP extension
4, via a URL in the HTTP Referer header.
4, via a Class 0 SMS message.
0, by leveraging an application crash during the activation process.
1, by modifying the client-server data stream during keychain recovery.
4, via a crafted app.
4, via a crafted relative path.
1, via an external entity declaration in conjunction with an entity reference
4, via a crafted font file.
4, via a crafted app.
4, via a crafted app.
4, via a crafted iWork file.
0, by reading the lock screen during use of a Bluetooth keyboard.
3, by reading asset-download request data.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
0, by leveraging improper use of a mutex.
2, via an unspecified IOService userclient type.
4, via unspecified vectors.
4, via a crafted .sgi file.
3, via unspecified vectors.
4, via unspecified vectors.
1, via crafted localization data.
4, via a crafted localized string
4, via a crafted Uniform Type Identifier.
0, by triggering an incorrect result of a type conversion.
1, by connecting from an iPad client.
1, via crafted Unicode text that is not properly handled during display truncation in the Notifications feature
0, via the QUERY parameter to help/.
4, via unspecified vectors.
4, via a crafted username
4, via a long entry in a .sms file.
3, by uploading a file with a PHP extension
4, via a session id.
2, via the layered_price_slider parameter.
0, via the status parameter in a search action.
2, via the (1) product_id or (2) category_id parameter.
2, via the (1) dpid
0, via the pageId parameter to networktile/bullet.
0, via the ping_addr parameter to ping.ccp.
3, via unknown vectors.
4, via a (1) full pathname or (2) .. (dot dot) in an archive.
0, via a full pathname in a crafted archive.
4, via a (1) full pathname or (2) .. (dot dot) in an archive.
4, via a symlink attack in an archive.
4, via a full pathname in a filesystem: URL in the image location property.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-9493.
4, via a symlink attack in a patch file.
5, via unspecified vectors.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
2, via the fs[resource] parameter in the wp-slim-view-2 page to wp-admin/admin.php.
4, via unknown vectors.
4, via a crafted MP4 file.
4, via a crafted .m4a file.
4, via a crafted MP4 file.
0, via vectors that trigger a ServiceWorkerContextWrapper::DeleteAndStartOver call
3, via unknown vectors.
1, by leveraging renderer access to provide an invalid port index that triggers an out-of-bounds write operation
0, by manipulating OpenGL ES commands.
0, via vectors that trigger renderer IPC messages during a detach operation.
5, via a crafted WebGL program that triggers a state inconsistency.
1," by triggering interaction with a PDFium """"Open PDF in Reader"""" button that has an invalid tab association."
5, by creating a .exe file in a temporary filesystem and then referencing this file with a filesystem:http: URL.
3, via unknown vectors.
3, via unknown vectors.
4, via a crafted document.
0, by leveraging improper handling of a stop action for an audio track.
1, via crafted JavaScript code that executes upon completion of a getUserMedia request.
1, via crafted data that is improperly handled by the Bookmarks feature.
4, via unknown vectors.
1, by leveraging the continued availability of a GPUChannelHost data structure during Blink shutdown
4, via a crafted intent: URL
0, by leveraging an abort action before a certain write operation.
1, by leveraging lack of certain validity checks for accessibility-tree data structures.
0, by leveraging the lack of a certain V8 context restriction
4, via unknown vectors.
2, by triggering nested IPC messages during preparation for printing
4, via unknown vectors.
4, via unspecified vectors.
4, via a Trojan horse Look and Feel package.
4, via a crafted XML request
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted string
2, by deleting all WebContents while a RenderProcessHost instance still exists.
4, via a crafted usr/share/apport/apport file in a namespace (container).
4, via a crafted webpage.
4, via a symlink attack on /run/lock/lxc/*.
4, via a crafted website.
4, via many add_key system calls that refer to existing keys.
5, via a symlink attack on a (1) mount target or (2) bind mount source.
0, via vectors involving insecure chown use.
5, via a (1) symlink or (2) hard link attack on /var/crash/vmcore.log.
4, by opening /dev/cuse many times.
1, via crafted input when using the -F option.
2, via the lang parameter.
4, via a malformed frame to the wireless interface.
3, via unknown vectors.
5, via a long string in the maker element in an XML file.
0, via the q parameter to search/v/.
2, via the username parameter to register/.
4, via a .. (dot dot) in the q parameter.
2, via the image_user parameter.
2, via the lastcatbot parameter.
2, via the (1) order_by parameter to credentials/
2, via the order parameter.
4, via a vbscript tag in a link.
3, by uploading a file with an executable extension
0, via the p parameter in an update action to admin.php.
2, via the (1) action parameter in a search request
4, via a symlink attack on an unspecified file.
4, via a crafted chunk-encoded body.
5, via unspecified vectors.
1, via vectors related to an HTTP time header.
2, via the search key.
2, via the banner_effect_divid parameter in the BannerEffectOptions page to wp-admin/options-general.php.
0, via the cat parameter in a powerpress-editcategoryfeed action in the powerpressadmin_categoryfeeds.php page to wp-admin/admin.php.
2, via the username parameter to tips/tipsLoginSubmit.action.
4, via unspecified vectors.
2, via the asc_or_desc parameter in a create gallery request in the galleries_bwg page to wp-admin/admin.php.
2, via the (1) sort_by
4, via a .. (dot dot) in a diff file name.
2, via the popularity[field_expr] parameter when the popularity[from] or popularity[to] parameter is set.
4, via (1) .. (dot dot) sequences in the PATH_INFO to index.php or (2) vectors involving a block value in the ___directive parameter to the Cms_Wysiwyg controller in the Adminhtml module
4, via a URL in unspecified vectors involving the setScriptPath function.  NOTE: it is not clear whether this issue crosses privilege boundaries
2, via the query parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unknown vectors
2, by changing the handle_bytes value of a file handle during the execution of this function.
0, by triggering an INIT collision that leads to improper handling of shared-key data.
2, via the (1) horder[]
2, via the (1) jak_delete_log[] or (2) ssp parameter to admin/index.php.
4, via a newuser request to admin/index.php.
3, by reading a fact for an Amazon EC2 node.
4, via a crafted script.
2, via the sefrengo cookie in a login to backend/main.php or (2) remote authenticated users to execute arbitrary SQL commands via the value_id parameter in a save_value action to backend/main.php.
4, via a .. (dot dot) in an unspecified parameter.
3," via vectors related to """"Relative Path Overwrite."""""
2, via the (1) letter parameter in a user action or (2) edit_category parameter to index.php.
2, via the back parameter to index.php.
2, via the edit parameter in the (1) easingslider_manage_customizations or (2) easingslider_edit_sliders page to wp-admin/admin.php.
2, via the flag parameter to (1) result_of_get_changed_status.asp or (2) error_page.htm.
5, via a crafted size input for allocated kernel paged pool and allocated non-paged pool buffers.
2, via the (1) conntrack.cgi
0, via the cid parameter in a category action to index.php.
2, via the (1) WTP Name or (2) WTP Active Software Version field in a CAPWAP Join request.
4, via a large number of ClientHello DTLS messages.
2, via the -f flag to the dig command.
3," by creating /tmp/privexec/dbgcore_enable_shell_access and executing the """"shell"""" command."
2, via the operation parameter to cert/scep/.
4, via a crafted packet.
4, via a crafted (1) Yoda's crypter or (2) mew packer file
4, via a crafted upx packer file
4, via a crafted petite packer file
2, via an RSS feed URL.
2, via the (1) language[] or (2) type[] parameter to private/en/locale/index.
3, by leveraging a cookie received in an HTTP response
2, via the user parameter to the default URI.
0, via vectors that trigger a large number of (1) file descriptors or (2) integer values.
2, via the (1) productbycat parameter to product.php
0, via the id parameter in a viewad task to classifieds/offerring-ads.
0, via the view parameter to /classifieds.
2, via the site parameter.
4, via a (1) getTicketData action to servlet/AJaxServlet or a direct request to (2) swf/flashreport.swf
3, by creating a superuser account.
4, via a websocket connection to socket.io/1/.
4, via unspecified vectors.
4, via a crafted password-reset action that triggers a new administrative session.
3, via unknown vectors.
4, via unspecified vectors.
0, via a relative pathname in a client installation package.
3, via unspecified vectors.
5, via a Trojan horse DLL in a client install package.
5, via a crafted string to the Open method in (1) IOPOSScanner.ocx or (2) IOPOSScale.ocx.
2, via unspecified vectors to (1) graphManager.load or (2) factory.load.
4, via a UNC path to a crafted binary.
5, via a (1) .. (dot dot) in the file parameter to a webmail/client/skins/default/css/css.php page or .../. (dot dot dot slash dot) in the (2) script or (3) style parameter to webmail/old/calendar/minimizer/index.php.
2, via the (1) LoginForm[username] to ui/system/login or the (2) order or (3) myorgs to index.php.
2, via the Username.
2, via the device ID REST parameter (PATH_INFO) to /ajax.php or (2) remote authenticated users to execute arbitrary SQL commands via the order parameter to index.php.
4, via unspecified vectors.
2, via the search_terms parameter.
4, via a crafted application that provides a NULL device address.
4, via a crafted application.
4, via a crafted application
4, via a crafted application
4, via unspecified vectors.
4, via a crafted application that provides an invalid array size.
4, via a crafted application that leverages improper unmarshalling of bitmaps
4, via a crafted application.
1, via crafted atoms in MP4 data that trigger an unchecked multiplication
1, via crafted ESDS atoms
2, via an application that sends an Intent with a (1) FLAG_GRANT_READ_URI_PERMISSION or (2) FLAG_GRANT_WRITE_URI_PERMISSION flag
2, via an empty attribute list in a deref control in a search request.
4, via a crafted search query with a matched values control.
4, via a crafted TIFF image
2, via an HTTP request with a long protocol string
3, via unspecified vectors.
4, via unspecified vectors.
2, via the delete_module parameter
0, via the sid parameter to include/common/XmlTree/GetXmlTree.php.
2, via the (1) search parameter to admin/user_management.php
3, by causing a large number messages to be logged.
2, via the Search field.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, by causing a crafted block group descriptor to be marked as dirty. NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-0247.
4," via a """"Content-Disposition: ;"""" header in an e-mail message."
2, via the (1) c
2, via the name parameter to (1) copy2.php
4, via a (1) .. (dot dot) or (2) full pathname in the f parameter.
4, via a URL in the (1) pidvesa cookie to u5admin/pidvesa.php or (2) uri parameter to u5admin/meta2.php.
5, via a .. (dot dot) in the img parameter in a revslider_show_image action to wp-admin/admin-ajax.php.  NOTE: this vulnerability may be a duplicate of CVE-2014-9734.
2, via the (2) source or (3) redir parameter in an add action in the redirection-page to wp-admin/options-general.php.
4, via the (2) domain
2, via the appid parameter in a registration task to the default URI or remote administrators to inject arbitrary web script or HTML via the (2) asc_or_desc
4, via a request to mods/_core/users/admins/create.php or (2) create a user account via a request to mods/_core/users/create_user.php.
5, via a request without the authenticity_token
3, by uploading a file with a PHP extension
4, via a .. (dot dot) in a CHM file.
3, by leveraging a filesystem architectural error.
3, via unspecified vectors.
3, via the (1) page parameter to index.php or (2) id parameter in a users_users action to asys/site/system.php.
3, by uploading a file with an executable extension
2, via unspecified vectors to (1) GetClientPackage.aspx or (2) GetProcessedPackage.aspx.
4, via a crafted UTF-8 string in a BSON request.
0, by spoofing the MAC address
2, via the (1) update_repo
2, via the (1) image_metadata_cruncher[alt] or (2) image_metadata_cruncher[caption] parameter in an update action in the image_metadata_cruncher_title page to wp-admin/options.php or (3) custom image meta tag to the image metadata cruncher page.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted URL.
3, via unspecified vectors.
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted X-OWA-Canary cookie in an AD.RecipientType.User action
4, via a crafted URL
4, via a crafted URL
2, via unspecified vectors
2, via the msgParam parameter in an authError action
4, via a crafted web site
4, via a crafted request
2, via unspecified vectors
4, via a crafted request
4, via a crafted DTD
4, via a crafted application
5, via a crafted web site
4, via a crafted request
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via crafted web script
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted Silverlight application
4, via a crafted web site
4, via a crafted web site
4, via a crafted DataObject on a web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
0, via the wct parameter
4, via a crafted Office document
4, via a crafted request
4, via a crafted web site.
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted Office document
3, by providing a crafted URI to JavaScript code generated by the asdoc component.
5, via a crafted HWP document
4, via a crafted REST call.
3, via unspecified vectors.
4, via a zero p value in an anonymous Diffie-Hellman (DH) ServerKeyExchange message.
4, via a (1) negative or (2) large property count in a BDF font file.
4, via unspecified vectors.
4, via a symlink
1, via crafted update center data.
2, via an XPath query.
4, via a crafted XML document.
2, via unspecified vectors
2, via unspecified vectors
4," via a """"forced API token change"""" involving anonymous users."
1, by leveraging passage of cookies set in a response to a redirect.
3, via unspecified vectors.
4, via unspecified vectors.
0, by connecting through the REST API.
3, via unspecified vectors.
2, via unspecified vectors to the (1) ExtrArch or (2) ListArch function
4, via a .. (dot dot) in a crafted URL.
3, via vectors involving logging the LDAP bind credential password when TRACE logging is enabled.
0, by leveraging missing AAA restrictions.
4, via a crafted BMP image.
4, via a crafted ICO image.
4, via a crafted GIF image.
1, by leveraging an execve by root after a chroot into a user-specified directory in a namedspaced environment.
2, via the (1) first name or (2) last name user details
4, via a request in the CF7DBPluginSubmissions page to wp-admin/admin.php.
2, via the transactionID parameter.
0, via the profile parameter in an edit action in the gde-settings page to wp-admin/options-general.php.
3, via unspecified vectors.
2, by leveraging thread conflicts that result in Java code execution outside the context of the configured EJB Run-as user.
5, via (1) a crafted CREATE HADOOP TABLE statement referencing the data of an arbitrary user or (2) an import of a certain Hive table definition with the HCAT_SYNC_OBJECTS procedure.
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
3, via unspecified vectors.
4, via unspecified commands.
4, via a crafted BMP image
4, via a crafted BMP image
4, via unspecified vectors.
2, via unknown vectors related to SSL/TLS and the Secure Socket Extension provider.
4, via a crafted URL.
4, via a crafted URL.
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
5, via a crafted TCP packet to an unspecified port.
4, via a crafted URL.
2, via unspecified vectors
3, via unspecified vectors.
3, via unspecified vectors. IBM X-Force ID: 103416.
2, via unspecified vectors
2, via unspecified vectors
4, via a crafted byte sequence in authentication data.
4, via a crafted byte sequence in authentication data
4, via a man-in-the-middle attack
4, via a crafted byte sequence in authentication data
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via crafted input to the (1) addressability or (2) comments component.
4, via a crafted URL.
0, by leveraging the existence of a stash file.
1, via unspecified vectors
4, via a crafted byte sequence in authentication data
4, via unspecified vectors.
4, via a crafted URL.
5, by leveraging a finalize method in a Serializable class that improperly passes an attacker-controlled pointer to a native function.
4, by leveraging a finalize method in a Serializable class that improperly passes an attacker-controlled pointer to a native function.
3, by leveraging a finalize method in a Serializable class that improperly passes an attacker-controlled pointer to a native function.
4, by leveraging a finalize method in a Serializable class that improperly passes an attacker-controlled pointer to a native function.
4, by leveraging a finalize method in a Serializable class that improperly passes an attacker-controlled pointer to a native function.
4, via a crafted URL.
1, via vectors related to webmin. IBM X-Force ID: 103921.
5, via unspecified vectors.
5, via a crafted selection string in an MQI call.
4, via a crafted URL
4, via a crafted URL
3, via unknown vectors.
5, by leveraging a finalize method in a Serializable class that improperly passes an attacker-controlled pointer to a native function.
3, via unspecified vectors.
4, via a crafted URL.
4, via a session identifier.
4, via a crafted URL.
4, via a crafted terminal/anyterm-module request.
2, via the page parameter to admin.php.
2, via the user parameter in the history page to admin.php.
2, via the acobot_token parameter in the acobot page to wp-admin/options-general.php.
2, via the submit_time parameter in the CF7DBPluginSubmissions page to wp-admin/admin.php.
2, via the (1) bt
3, via unknown vectors.
3, by uploading a file with an executable extension.
3, via unspecified vectors.
4, via a GetDeviceSettings action to the HNAP interface.
4, via a long string in a GetDeviceSettings action to the HNAP interface.
4, via a long string in the oldpassword parameter.
4, via vectors involving setting a large buffer to an unspecified attribute.
0, via the removeslide parameter in a popup_posts or edit_cat action in the sliders_huge_it_slider page to wp-admin/admin.php.
5, via a small file header in an ace archive
2, via the vid parameter in a rss action to wp-admin/admin-ajax.php.
0, via the c parameter to index.php.
4, via a .. (dot dot) in the file parameter.
2, via the (1) profile parameter to web/magmi.php or (2) QUERY_STRING to web/magmi_import_run.php.
2, via the QUERY_STRING in the wc-reports page to wp-admin/admin.php.
0, via the catId parameter to cm/blogrss/feed.
4, via a .. (dot dot) in the filepath parameter.
2, via unspecified vectors to (1) ide/core/plugins/editor/templates/trace/hanaTraceDetailService.xsjs or (2) xs/ide/editor/templates/trace/hanaTraceDetailService.xsjs
0, via a full pathname
0, via a full pathname
4, via a clearData CORBA operation
0, by reading an audit event
2, via illegal characters in an HTTP header
2, via the txtUserID parameter.
4, via a profilefields request to admin.php.
2, via the image_file parameter in an edit action in the cnss_social_icon_add page to wp-admin/admin.php.
4, via a pane title.
3, by uploading a file with a PHP extension
4, via unknown vectors.
2, via the (2) csj_width
2, via the survey_id parameter in an ajax_survey action to wp-admin/admin-ajax.php.
4, via a crafted object parameter in the Insert function
4, via a crafted value.
2, via unspecified vectors to the (1) PrintSiteImage
1, via crafted arguments.
2, via an invalid IP address and a page reload.
2, via unspecified vectors to the (1) LoadImage or (2) LoadImageEx function in the WESPMonitor.WESPMonitorCtrl.1 control
1, via unspecified vectors to the (1) Connect
1, via unspecified vectors to the (1) GetRecFileInfo function in the FileConverter.FileConverterCtrl.1 control
2, via unspecified vectors to the (1) TCPDiscover or (2) TCPDiscover2 function in the WESPDiscovery.WESPDiscoveryCtrl.1 control.
4, via unspecified vectors.
2, via the item parameter.
2, via the username field (u_name parameter).
1, by leveraging SAP administrative privileges.
5, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unknown vectors.
5, via a crafted filename in a URL to the (1) HttpServlet or (2) NetworkEditorController component
1, via network traffic to the REST port.
3, via unknown vectors.
4, via unknown vectors.
1, by leveraging setuid permissions.
3, via unknown vectors.
5, via unspecified vectors.
0, via the id parameter to project.php
3, via unknown parameters.
2, via the (1) project name parameter to project.php; the (2) use_js parameter to user.php; the (3) use_js parameter to group.php; the (4) Description parameter to status.php; the (5) Description parameter to severity.php; the (6) Regex parameter to os.php; or the (7) Name parameter to database.php.
4, via unspecified parameters.
2, via the (1) id parameter to project.php
4, via unspecified parameters.
3, via unspecified parameters.
2," via the (1) MIME-type field in an add action in the config-attachment_types module to admin/index.php; (2) title or (3) short description field in an add action in the (a) config-mycode or (b) user-groups module to admin/index.php; (4) title field in an add action in the (c) forum-management or (d) tool-tasks module to admin/index.php; (5) name field in an add_set action in the style-templates module to admin/index.php; (6) title field in an add_template_group action in the style-templates module to admin/index.php; (7) name field in an add action in the config-post_icons module to admin/index.php; (8) """"title to assign"""" field in an add action in the user-titles module to admin/index.php; or (9) username field in the config-banning module to admin/index.php."
4, via a crafted header length in an RPKI-RTR Protocol Data Unit (PDU).
4, via a crafted (1) length
4, via unspecified vectors.
4, via a crafted PNG file.
5, via a Publisher registry entry
4, via a crafted file.
1, via crafted session data.
1, via crafted packets on (1) TCP port 102 or (2) Profibus.
4, via shell metacharacters in the password.
2, via the (1) password or (2) username.
2, via the (1) schltr parameter in a brands action or (2) brand parameter in a viewbrands action to index.php.  NOTE: The search parameter vector is already covered by CVE-2010-5322.
0, via the id parameter in a (1) disporders detail or (2) subadminmgt edit action or (3) cid parameter in an editcurrency action to admin/.
4, via a getphpinfo action to admin/
1," by leveraging use of the string literal """"False"""" instead of a boolean False for the CORS_ORIGIN_ALLOW_ALL setting. Note: this vulnerability was fixed on 2015-03-06"
2, via an invalid Interface Statistics Block (ISB) interface ID in a crafted packet.
4, via a crafted length field in a packet.
5, via a crafted length field in a packet.
3, by uploading a file with an executable extension in a fusion_save action
2, via the (1) view
0, via the cat_id parameter in a spiderbigcalendar_month action to wp-admin/admin-ajax.php.
4, via a field label in the Token API.
2, via the (1) homepage_url
0, via the item[id] parameter in a wonderplugin_audio_save_item action to wp-admin/admin-ajax.php or remote administrators to execute arbitrary SQL commands via the itemid parameter in the (2) wonderplugin_audio_show_item
2, via the (1) ctrl
4, via shell metacharacters in the object parameter.
0, via the c parameter to index.php.
1, by injecting Javascript into the window source to create a button that spawns a command shell.
4, via a comment that is mishandled after retrieval from the trash.
0, via the redirect_url parameter to netshop/post.php.
4, via unspecified parameters.
2, via the prod_id parameter.
2, via the (1) q parameter to search.php or (2) avatar parameter to profile.php.
2, via the (1) item[name] or (2) item[customcss] parameter in a wonderplugin_audio_save_item action to wp-admin/admin-ajax.php or the itemid parameter in the (3) wonderplugin_audio_show_item or (4) wonderplugin_audio_edit_item page to wp-admin/admin.php.
2, via the ninja_forms_field_1 parameter in a ninja_forms_ajax_submit action to wp-admin/admin-ajax.php or (2) remote administrators to inject arbitrary web script or HTML via the fields[1] parameter to wp-admin/post.php.
4, via a crafted y0da cryptor file.
4, via a crafted petite packed file.
2, via the (1) Arguments
0, via the id parameter to (1) showprofile.php or (2) categoryedit.php or (3) username parameter in a login to index.php.
4, via a model attribute in ModelAdmin.readonly_fields
2, via the (1) termid or (2) nyelv_id parameter to index.php.
2, via directory traversal sequences in the mappa parameter to index.php.
2, via the (1) param
4, via a crafted request to cgi-bin/editBookmark.
2, via the (1) banned_word[] parameter to index.php/dashboard/system/conversations/bannedwords/success
4, via a crafted UDS patch with JavaScript.
4, via a crafted UDS patch with shell scripts.
4, via a crafted XML document.
3, via vectors involving a large amount of traffic from the GE port to the FE port.
4, via a Trojan horse (a) csunsapi.dll
2, via consecutive shell metacharacters in the (1) model or (2) PDL. NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-2707.
0, via the parameters[data][7][title] parameter in a saveImageData action to index.php/AJAXProxy.
4, via shell metacharacters in the mac parameter.
4, via a large PROCESS_HELLO message to the Message Dispatcher on TCP port 8000.
1, via unspecified vectors
2, via the serendipity[cat][name] parameter to serendipity_admin.php
4, via a crafted (a) 0x80862013
3, via the (1) zone parameter to status_captiveportal.php; (2) if or (3) dragtable parameter to firewall_rules.php; (4) queue parameter in an add action to firewall_shaper.php; (5) id parameter in an edit action to services_unbound_acls.php; or (6) filterlogentries_time
2, via the deletefile parameter.
4, via a cookie without a host value in a redirect.
4, via a crafted Authorization header.
1, by leveraging an improper substring check when exporting a padID.
0, via vectors that trigger an attempted renaming of a Phar archive to the name of an existing file.
0, via a full pathname in an archive.
4, via a crafted message
4, via a crafted message.
4, via a list with a large number of elements.
2, via the lang parameter in the HTTP Referer header in a wp-link-ajax action to comments/feed.
2, via the target parameter in a reminder_popup action to the default URI.
0, by leveraging missing handshake state validation
1, via vectors related to client-side SSLv2 fallback.
2, via the email field.
3, via unspecified vectors.
3, via regular expression with a group containing both a forward referencing subroutine call and a recursive back reference
4, via a crafted order.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
2, via the req parameter.
2, via the command XML element in the req parameter to flexdata.action in (1) common/
3, via the HTMLForm parameter.
4, via a request in the status page to /cfg.
2, via the (1) homelink parameter to system/modules/org.opencms.workplace.help/jsptemplates/help_head.jsp
2, via unspecified vectors
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted attribute of an element in an HTML document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted stylesheet
4, via a crafted web site
0, via a crafted pathname
4, via a crafted module-resource request
4, via vectors related to image caching
4, via a crafted DLL
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted document
4, via a Trojan horse DLL in the current working directory
4, via a crafted string in a Server Message Block (SMB) server error-logging action
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted request
4, via a crafted application
1, via crafted content
4, via a crafted URL
4, via a crafted URL
1, by creating multiple machine accounts
4, via a crafted URL
4, via a crafted web site
4, via a crafted web site
4, via a crafted e-mail message
4, via a crafted e-mail message
4, via a crafted web site
1, via crafted UML data in an Office document
0, by leveraging an account with the same password hash as another account and a crafted password reset URL.
4, via an addOrModifyUser operation to servlets/DCOperationsServlet.
2, via the (1) search_category_id
2, via the order_by parameter.  NOTE: The cat parameter vector is already covered by CVE-2008-4157.
0, via the id parameter to users-edit.php.
5, via vectors related to DML.
2, via unknown vectors related to Server : Security : Privileges.
2, via unknown vectors related to Text Utilities.
2, via unknown vectors related to Connector/J.
1, via vectors related to Kernel IDMap.
4, via vectors related to BIP Installer.
1, via vectors related to NFSv4.
2, via unknown vectors related to JServer.
1, via vectors related to GIS.
2, via unknown vectors related to Security
4, via unknown vectors.
4, via unknown vectors.
1, via vectors related to PIA Core Technology.
3, via vectors related to S10 Branded Zone.
1, via unknown vectors related to Enterprise Portal.
2, via unknown vectors related to Security
2, via unknown vectors related to Configuration Service.
2, via unknown vectors related to Hotspot.
4, via unknown vectors related to Mobile - iPad.
4, via vectors related to CPU performance counters drivers.
3, via vectors related to DML.
1, via vectors related to NVM Express SSD driver.
2, via unknown vectors related to DevFS.
1, via unknown vectors related to Server : Security : Privileges.
2, via unknown vectors related to Fluid Core.
2, via unknown vectors related to Ops Center.
2, via unknown vectors related to Server : Security : Firewall.
2, via unknown vectors related to Server : Security : Privileges.
2, via unknown vectors related to Server : Optimizer.
2, via unknown vectors related to Security.
3, via vectors related to DML.
2, via unknown vectors related to Multichannel Framework.
1, via vectors related to Kernel Zones virtualized NIC driver.
3, via unknown vectors.
3, via vectors related to SSL/TLS Support.
2, via unknown vectors related to Security.
4, via vectors related to Oracle Agile PLM Framework.
2, via unknown vectors related to Client.
1, via vectors related to DHCP Server.
4, via unspecified vectors.
5, by constructing a crafted microcode header and leveraging root privileges for write access to the initrd.
4, via a Trojan horse uuid.dll in an unspecified directory.
4, via a crafted xz archive file.
2, via the option_name and option_value parameters.
1, by leveraging use of the ssl.wrap_socket function in Python with the default CERT_NONE value for the cert_reqs argument.
4, via a request to start_apply.htm.
2, via the (1) title or (2) text field in the cms_calendar page to cms/index.php; unspecified fields in (3) the cms_polls page to cms/index.php or (4) a new topic in the topics page to forum/index.php; or (5) a new PT (private topic/private message) in the topics page to forum/index.php.
2, via the (1) cat parameter in the categories page to gxadmin/index.php or (2) page parameter to index.php.
2, via the (1) page parameter to index.php or (2) username parameter to gxadmin/login.php.
4, via a request in the users page to gxadmin/index.php.
2, via the (1) next_page
4, via a direct request to conf/securitydbData.xml.
4, via a crafted SAML message.
2, via the (1) add_license_key
2, via an initial '\0' character in a long realm field within a TGS request.
4, via a request to profiles-update/.
2, via the sender address in an email.
2, via the (1) ws-userip in the ws-encdata parameter to cve-bin/moreBlockInfo.cgi in the Data Security block page or (2) admin_msg parameter to configure/ssl_ui/eva-config/client-cert-import_wsoem.html in the Content Gateway
4, via a newline character in an LDAP response.
4, via a crafted plugin that does not properly complete initialization.
3, via unknown vectors.
3, by leveraging improper Media Decoder Thread creation at the time of a shutdown.
2, via an MP4 video file containing invalid metadata.
4, via a crafted web site containing an IFRAME element referencing a different web site that is intended to read this data.
0, via vectors involving attachment of an XMLHttpRequest object to a shared worker.
4, via unknown vectors.
4, via a crafted web site that is accessed with unspecified mouse and keyboard actions.  NOTE: this vulnerability exists because of a CVE-2015-0821 regression.
0, via vectors involving attachment of an XMLHttpRequest object to a dedicated worker.
4, via a crafted search link that is mishandled after re-opening the browser or opening the tab view.
2, via the (1) name or (2) title field in card content associated with a search link that is mishandled after a HOME button press or a Show Windows action
4," via shell metacharacters in the """"second"""" parameter of a command"
4, via a crafted (1) email or (2) HTTP request
4, via a URL in the destination parameter.
4," via vectors involving the """"//"""" initial sequence."
4, via a crafted sector in a workbook.
4, via a crafted workbook
5, via the (1) lat (Latitude)
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
1, via vectors related to HTTP authentication.
2, via unspecified vectors to the DSS (1) Mobile or (2) DLP report catalog.
4, via unspecified vectors.
4, via a brute force attack.
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted shared strings table in a workbook.
4, via a crafted massage.
5, by uploading a crafted image file with an executable extension
2, via the reply parameter.
5, via a crafted ARJ archive.
4, via a crafted Byzanz debug data recording (ByzanzRecording file) to the byzanz-playback command.
2, via unknown vectors that trigger an error condition
4, via a Trojan horse program in the %SYSTEMDRIVE% folder.
2, via the openid_identifier parameter in a verify action to ikiwiki.cgi.
4, via a direct request to Install/InstallWizard.aspx.
2, via the search_for parameter to (1) search_by_tag.php
2, via the id parameter.
2, via the id parameter.
3, via unknown vectors.
2, via the wpbase parameter.
1, via crafted XML
1, via crafted XML
1, via crafted XML
2, via unspecified vectors
2, via the ReadProfile parameters
1, via crafted XML
4, via a crafted request
4, via a crafted request
1, via crafted packets on TCP port 102.
4, via a (1) hits[][] parameter in a sam_hits action to sam-ajax.php; the (2) cstr parameter in a load_posts action to sam-ajax-admin.php; the (3) searchTerm parameter in a load_combo_data action to sam-ajax-admin.php; or the (4) subscriber
3, by uploading a file with an executable extension
4, via unspecified vectors.
4, via unspecified vectors.
5, via a large string in the XAUTHORITY environment variable.
4, via shell metacharacters in the file_name JSON member in params/xen_hotfix/0 to nitro/v1/config/xen_hotfix.
2, via the searchQuery parameter.
3, by uploading a file with an executable extension
2, via the (1) user_name or (2) user_pass parameter in go_login.php or the PATH_INFO to (3) go_login/validate_credentials/admin/ or (4) index.php/go_site/go_get_user_info/.
2, via the $action portion of the PATH_INFO.
2, via the $type portion of the PATH_INFO.
4, via a crafted btsync: link.
4, via a .. (dot dot) in the statecode cookie.
3, via shell metacharacters in the oauth_token parameter.
4, via a modified profileId parameter to (1) ValidateFormAction.do or (2) ProfileConfirmEditAddressAction.do.
4, via a crafted help/ URL.
4, by attempting to establish a TELNET session with a crafted username.
4, via (1) a large Size value in the Archive Member Header of a COFF Archive Library file
4, via a request to net.htm
2, via the name parameter to interface/rest/accounts/json; turn off the (2) Url matching
4, via a direct request
1, via manual entry of a Settings URL.
1, via format string specifiers.
2, via long command input.
4, via a crafted packet on port 8190
5, via a long list name in a packet on port 8190.
4, via a crafted packet on port 8190.
4, via a crafted packet on port 8190
4, via a small hop_limit value in a Router Advertisement (RA) message.
4, via a small hop_limit value in a Router Advertisement (RA) message.
4, via a small hop_limit value in a Router Advertisement (RA) message
2, via the HTTP User-Agent header to index.php.
4, via a function name
4, via unspecified vectors.
2, via the URI
4, via a crafted CAD file.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted filename.
1, via crafted tokens.
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
1, via crafted tokens in a JSON Web Tokens (JWT) header.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the oekakis parameter.
2, via the oekakis parameter.
5, via a crafted string.
3, via unspecified vectors.
0, via the usces_referer parameter to (1) classes/usceshop.class.php
3, via vectors involving a crafted image file.
4, via (1) a crafted HTML document or (2) a crafted URL that is mishandled during access-log analysis.
1, via unspecified vectors
4, via unspecified vectors.
4, via UPnP requests.
3, via unspecified vectors.
3, via unspecified vectors.
2, via the imagetitle parameter.
4, via a crafted parameter.
1, via crafted save data.
3, by uploading a file with a .jsp extension
5, via a .. (dot dot) in the fileName parameter to getGfiUpgradeFile or (2) cause a denial of service (CPU and memory consumption) via a .. (dot dot) in the fileName parameter to calculateRdsFileChecksum.
2, via an invalid value in the accountid parameter to getAgentLogFile
2, via the (1) groupFilter parameter in an AssetDetails report to /genericreport
4, via a large number of nested entity references in an XML document to (1) /agententry
1, via crafted parameters.
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
3, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
4, via unknown vectors.
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
4, via a request to /FrontController; or conduct cross-site scripting (XSS) attacks via the (3) domainname parameter to /FrontController
0, via submitting job XML to the server containing entity references which reference files from the Beaker server's file system.
4, via writing a crafted comment on an acked or nacked canceled job.
3, by creating a hardlink to /etc/passwd from a directory named .config
2, via the note field in a configuration change.
4, via unspecified vectors.
2, via an RSA PSS ASN.1 signature that lacks a mask generation function parameter.
4," via a """"/"""" at the end of a URL."
4, via a basic HTTP authentication string without a colon character
3, by uploading a file with an executable extension
5, via a VCF file with two NULL bytes at the end of the file
4, via a crafted regular expression
4, via a symlink attack.
5, by calling RegisterAuthenticationAgent with an invalid object path.
2, via the description parameter in a heat template
4, via a crafted Hash that is mishandled during JSON encoding.
4, via a crafted Postscript (ps) file
1, by leveraging use of HTTP to download Fedora Atomic updates.
4, via a URL in the destinations parameter.
3, via unspecified vectors.
1, by leveraging an OpenID identity from certain providers
1, via crafted length and offset values.
1, via vectors related to the (1) frame_handlers array or (2) set_dynamic_table_size function.
3, via unspecified vectors.
1, via unspecified vectors related to API calls.
4, via a crafted serialized object.
0, via vectors involving the skip function.
2, via duplicate action IDs in action descriptions.
4, via a long configuration argument.
4, via a crafted URL.
2, via the description attribute of a display-entity element.
2, via unspecified vectors
2, via the HTTP fileUrl header.
4, via a crafted line size in a print job
4, via unspecified vectors.
1, via crafted commands.
4, via a large group list when joining a PAG.
2," via the """"diag debug application httpd"""" command."
4, via vectors related to (1) javascript: or (2) data: URLs.
1, by leveraging replacement of backslashes with slashes in the path parameter of HTTP API requests.
4, via vectors related to original service order.
2, via the (1) billing_firstname
4, via a .. (dot dot) in the tcp_box_path parameter in the checkout_editor_settings page to wp-admin/admin.php.
3," by leveraging a """"broken authentication mechanism."""""
2, via the site cpfr and site cpto commands.
4, via a crafted CRL distribution point.
5, via a .. (dot dot) in the path parameter of HTTP API requests. NOTE: This vulnerability is due to an incomplete fix to CVE-2015-3297.
2, via the show parameter in the QUERY_STRING to the default URI.
3, by executing a setuid program at a time instant when a chown to root is in progress
4, via a URL in the destination query parameter.
4, via unknown vectors.
4, via a node title.
2, via unspecified vectors
3, via unspecified vectors.
2, via an unknown menu callback.
4, via a node title.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
2, via the alternate field label in content types settings.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
1, via unspecified vectors
4, via a URL in a destination parameter
2," via the (1) node title of a """"Room Reservations Category"""" or (2) body of a """"Room Reservations Room"""" node."
3, via unspecified vectors.
3, via unspecified vectors.
2, via unspecified vectors
5, via a Profile2 field in a provided block.
4, via unspecified vectors.
4, via a category name.
4, via a term name in a block.
3, via unspecified vectors.
2, via the destination parameter.
4, via a node title.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a node title.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4," via the """"Link to path"""" field formatter."
4, via a node title.
4, via a (1) node or (2) taxonomy term title.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, by reading a 403 Not Found page.
4, via a node title.
2, via an unspecified parameter.
1, via vectors related to JSON
4, via unspecified vectors.
5, via a signature file that does not list the files.
4, via a crafted SIGNATURE file which is not properly handled when generating checksums from a signed manifest.
4, via a Trojan horse module under the current working directory
1, via crafted H.264 data in an MP4 file
4, via a zero-height PutImage request.
1, via vectors related to an input validation failure.
2, via the menu2 parameter to admin/main.jsp.
2, via the (1) ctrl
2, via the SIDX parameter.
2, via the ctl00$cph_content$_uig_formState parameter.
2, via unspecified vectors
2, via unspecified vectors
3, by uploading a file with an HTTP (1) PUT or (2) MOVE request.
4, via a symlink attack on /tmp/zarafa-upgrade-lock.
5, via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.
2, via the (1) start_hour
5, by intercepting a Windows API call.
4, via a crafted plugin configuration file (.cfg).
2, via the (1) searchSpoof or (2) searchSpoofIpDet parameter.
4, via a crafted XML document.
2, via the forwarded parameter.
1, via crafted CLI commands.
4, via vectors involving index.php.
3," via vectors involving a """"double encode combination of first_name"
5, via unspecified vectors.
4, via a Trojan horse program.
4, via a crafted certificate.
1, via crafted XML data in a request to AccessPoint.aspx.
4, via a delete action.
4, via a crafted hostname.
2, via an image that allows volumes to override files in /proc.
2, via the username and password parameters.
4," via an """"Easy"""" attack."
2, via the (1) comemail or (2) comname parameter in a wppa do-comment action.
4, via a .. (dot dot) in the defaultlanguage parameter.
3," by creating a directory under /tmp containing """"openuri-"""" followed by a crafted UID"
1, by leveraging incorrect permission checking.
2, via unspecified vectors
0, by leveraging improper enforcement of the anti-CSRF token.
1, by leveraging failure to properly enforce authorization checks.
4, via unspecified vectors.
4, via a crafted file
4, via a crafted file
5, via a crafted file
4, via unspecified vectors.
4, via a crafted app.
5, via a crafted app.
2, via unspecified Thunderbolt commands.
4, via a crafted font file
4, via a crafted font file
4, via a crafted font file
4, via a crafted font file
4, via a crafted app.
1, via crafted credentials in a URL.
4, via a crafted text file
4, via a crafted text file
4, via a crafted text file
4, via a crafted text file
4, via a crafted text file
4, via a crafted app.
4, via a crafted app that leverages control of a function pointer.
4, via a crafted font file
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted TIFF image.
4, via a crafted app
4, via a crafted app
4, via a crafted app.
4, via a crafted app that conducts a symlink attack.
0, by leveraging improper pathname validation.
4, via a crafted app.
4, via a crafted app.
4, via a crafted movie file.
5, via a crafted name of a photo file within the local photo library.
5, via a crafted font file
5, via a crafted ICC profile in a PDF document
4, via a crafted ICC profile in a PDF document
4, via a crafted (1) SIM or (2) UIM card.
2, via an app that provides a crafted URL.
4, via a symlink.
4, via a crafted file
4, via a malformed DMG image.
4, via a crafted app that makes unspecified IOKit API calls.
2, via unspecified vectors
4, via a crafted app
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
4, via a malformed plist.
5, via XPC messages.
3, by sniffing an 802.11 network for DNAv4 broadcast traffic.
4, via a crafted file
4, via a crafted app.
4, via a previously visited web site that is rendered during a Quick Look search.
4, via a crafted app.
5, via unspecified vectors.
2, via an XML document containing an external entity declaration in conjunction with an entity reference
0, via malformed Bluetooth ACL packets.
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted app.
5, via a crafted app that sends a malformed XPC message.
4, via a crafted regular expression
4, via a crafted regular expression
5, via a crafted regular expression
4, via a crafted app.
4, via a malformed DMG image.
4, via unspecified vectors.
4, via a crafted Mach-O file
5, via a crafted multi-architecture executable file.
4, via a crafted font file
4, via a crafted Mach-O file
1, by appending code to a crafted executable file.
4, via a crafted XML document.
4, via a crafted packet.
4, via a crafted media file
1, via crafted MPEG-4 covr atoms with a size equal to SIZE_MAX
4, via a crafted application
0, via invalid size values of NAL units in MP4 data
4, via a crafted application
4, via a crafted application that uses HDCP encryption
4, via a crafted application
4, via a crafted application
2, via an application that sends a crafted Intent
4, via a crafted application
4, via a crafted application
4, via a broadcast intent with the PNW.stopSaver action
1, via crafted Matroska data
1, via unspecified vectors
2, via an application that uses a crafted blob in an insert operation
1, via crafted MPEG-4 data
4, via a crafted application
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
5, via a crafted media file
4, via a crafted audio file
1, via crafted metadata in a (1) MP3 or (2) MP4 file.
4, via a crafted application that references a long application name
4, via a crafted application
4, via unspecified vectors.
4, via a direct request to (1) core/config/databases.yml
0, via invalid ID value to index.php/users/info/id/[ID]
4," via the (1) search[keywords] parameter to index.php/users page; the (2) """"Name of application"""" on index.php/configuration; (3) a new project name on index.php/projects; (4) the task name on index.php/tasks; (5) ticket name on index.php/tickets; (6) discussion name on index.php/discussions; (7) report name on index.php/projectReports; or (8) event name on index.php/scheduler/personal."
4, via a crafted image
4, via a Trojan horse libproxychains4.so library in the current working directory
3, via spaces in a tel: URL.
4, via a .. (dot dot) in the theme parameter and a file path in the location parameter to bonita/portal/themeResource.
3, via vectors involving the redirectUrl parameter to (1) bonita/login.jsp or (2) bonita/loginservice.
2, via the (1) pin
4, via a crafted font file.
0, by sniffing the network or sending unspecified commands.
4, via a crafted ICMP request message.
2, via the referer parameter.
4, via a URL in the referer parameter.
5, via a full path in the folder parameter to minibrowser.php.
4, via an e-akta signed document with a ds:Object node with a crafted payload prepended to a valid ds:Object.
4, via an e-akta signed document with a ds:Object node with a crafted payload prepended to a valid ds:Object.
2, via the (1) email parameter or (2) userid parameter to register.php.
2, via the (1) id parameter to apps/app_article/controller/rating.php or (2) user parameter to user/login.
2, via the Business Search (search_nom) field to (1) htdocs/societe/societe.php or (2) htdocs/societe/admin/societe.php.
4, via a long parameter.
2, via unspecified vectors involving an internal web server
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
5, via unspecified vectors.
3, via unspecified vectors.
0, by reading the HTML source code of the mail-configuration page.
4, via a GET request.
4, via a crafted URL.
3," by leveraging """"elevated privileges"""" for an unspecified call to an incorrectly exposed function."
3, by leveraging a peer relationship to send a crafted configuration with compression.
4, via a crafted HART reply.
2, via the DataVault
2, via unknown vectors
2, via unspecified vectors
2, via unspecified vectors
2, via the tcp_box_path parameter in the checkout_editor_settings page to wp-admin/admin.php.
5, via unspecified vectors.
2, via the metadata to a (1) Glance image
1, via vectors related to private messages or other unspecified vectors.
3, by referencing a table.
4, via a crafted request
2, via an IMPORT FROM SQL statement
4, via a crafted packet.
4, via a crafted packet.
2, via the iframe_url parameter in an Update Page action in the conformconf page to wp-admin/options-general.php.
4, via a crafted response to a broadcast packet.
2, via the link_ids[] parameter in an Update action in the syndication.php page to wp-admin/admin.php.
0, via a command parameter in the reporttemplate property in a params JSON object to api/addScan.
0, via the zone parameter in a del action to services_captiveportal_zones.php.
5, via unspecified vectors.
3, by leveraging an NFC connection to access the HTTP server on port 15000.
4, via a crafted Parcelable object in a serialized MethodSpec object.
4, via a crafted VHOST_SCSI_SET_ENDPOINT ioctl call.  NOTE: the affected function was renamed to vhost_scsi_make_tpg before the vulnerability was announced.
4, via an iv_membership_update_user_settings action to wp-admin/admin-ajax.php.
5, via unspecified (1) profile fields or (2) new post content. NOTE: CVE-2015-4038 can be used to bypass the administrator confirmation step for vector 2.
4, via unspecified vectors.
4, via long strings.
2, via the ctl00$cphMainContent$txtUserName parameter to frmLogin.aspx.
4, via a crafted nmap script.
2, via the assets array parameter to netscan/do_scan.php.
4, via a series of crafted UDP requests.
5, by sending a password packet before a startup packet.
4, via a large HTTP header.
4, via a large HTTP header.
2, via the where1 parameter in the nsp_search page to wp-admin/admin.php.
0, via the where1 parameter in the nsp_search page to wp-admin/admin.php.
0, via the post parameter in an edit delete-variation action to wp-admin/post.php.
0, via the post parameter to wp-admin/post-new.php.
2, via the (1) show_artist_id or (2) show_venue_id parameter in an add action in the gigpress.php page to wp-admin/admin.php.
1, via crafted template string specifiers in a serialized object
5, via a crafted file path to the (1) reportFileServlet or (2) exportServlet servlet.
4, via a crafted SOAP request to the (1) getBackupPolicy or (2) getBackupPolicies method.
4, via a URL in the url parameter.
0, via obtaining the target ticketId
1, via vectors related to name and message.
2, via the (1) ticket_code or (2) email parameter or (3) remote authenticated users to execute arbitrary SQL commands via the filter_order parameter.
4, via a .. (dot dot) in the filename parameter in a ticket.download_attachment task.
4, via a crafted language.save task.
0, via the value_ parameter in a check_stat action to wp-admin/admin-ajax.php.
2, via an XML request to tc~sld~wd~main/Main
4, via a crafted request
4, via unspecified vectors.
3, by leveraging a client certificate trusted by the master
4, via a crafted request to admin_lua_script.html or (2) add a domain administrator via a crafted request to admin_addadmin.html.
2, via the (1) data_target or (2) data_vote parameter in a rating_vote (wp_ajax_nopriv_rating_vote) action to wp-admin/admin-ajax.php.
4, via a crafted MP4 file.
4, by triggering a failed SplMinHeap::compare operation.
4, via shell metacharacters in the backup parameter to list/backup/index.php.
2, via the server parameter.  NOTE: this can be leveraged by remote attackers using CVE-2015-4119.2.
4, via a request to admin/users_edit.php or (2) arbitrary users for requests that conduct SQL injection attacks via the server parameter to monitor/show_sys_state.php.
0, via the address parameter
1, via modified serialized data in a salt cookie.
4, via unspecified vectors.
3, by uploading a file with a PHP extension
4, via a URL in the url parameter.
2, via the url parameter.
2, via the program parameter.
0, via the s4w-more parameter to wp-admin/options-general.php.
2, via the s4w-more parameter to the smilies4wp.php page to wp-admin/options-general.php.
4, via a crafted (1) Commit or (2) Confirm message payload.
4, via vectors related to dynamic field references in the path option.
5, via a relative path in the template parameter in a load_template action to wp-admin/admin-ajax.php.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
3, by establishing a new tty thread during shutdown of a previous tty thread.
4, via a crafted URL.
4, via a .. (dot dot) in the view parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this vulnerability exists due to an incomplete fix to CVE-2009-4050.
4, via a .. (dot dot) in the view parameter.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.  NOTE: this vulnerability exists due to an incomplete fix to CVE-2015-4180.
4, via a crafted CLI parameter
4, via a crafted option value
4, via a crafted URL
2, via unspecified vectors
4, via a malformed IPv6 packet
3, by sending a malformed LLDP packet on the local network
2, via an unspecified HTTP header
0, by triggering intermittent connectivity with many IPv6 CPE devices
0, by triggering an error during CPE negotiation
2, via an invalid TCP/IP header
5, by sending docsIfMCmtsMib SNMP requests quickly
1, by sending crafted IEEE 802.3x flow-control PAUSE frames on the local network
0, via a crafted parameter
4, via a crafted URL
2, via unspecified vectors
0, by leveraging the existence of a decryption mechanism
2, by reading HTML source code
5, by triggering an exception during attempted forwarding of unspecified IPv6 packets to a non-IPv6 device
4, via a crafted value in a GET request
0, via an unspecified value
2, via unspecified vectors
1, via crafted MPLS Label Distribution Protocol (LDP) packets
1, via crafted CLI commands
1, via unspecified vectors
2, via malformed ad messages
5, by visiting a bvsmweb URL
2, via unspecified vectors
3, by leveraging administrative privileges in one VDC
2, by entering crafted tar parameters in the CLI
1, via unspecified vectors
0, by sending many SNMP requests during a time of high network traffic
2, by sending crafted OSPFv2 packets on the local network
2, via an unspecified URL in a GET request
2, by sending crafted OSPFv2 packets on the local network
0, by sending malformed PPPoE Active Discovery Request (PADR) packets on the local network
1, by leveraging administrative privileges for storage of these commands in a Compact Flash (CF) file
4, via a crafted value in a URL
0, by reading log files
2, by sending crafted packets over the Inter-IC (I2C) bus
1, via unspecified parameters in a (1) GET or (2) POST request
0, by sending many requests
4, via a crafted URL
0, via vectors involving multiple request parameters
0, via a crafted parameter
4, via a malformed header in a GTPv2 packet
4, via a crafted command parameter
0, by placing malformed DMARC policy data in DNS TXT records for a domain
1, by leveraging access to the subordinate fabric interconnect
4, via a crafted HTTP request
4, via malformed BGPv4 packets
4, via a crafted HTTP request
2, by visiting an unspecified web page
4, via a crafted configuration attribute
3, via vectors involving contiguous memory locations
4, via a crafted series of fragmented (1) IPv4 or (2) IPv6 packets
0, via an unspecified value
3, via fragmented (1) IPv4 or (2) IPv6 packets that trigger ATTN-3-SYNC_TIMEOUT errors after reassembly failures
5, by constructing a crafted URL that leverages incomplete filtering of HTML elements
4, via a direct request to an unspecified URL
1, via crafted connections to the Java application
1, via crafted HTTP request parameters
1, via large files that are copied to a device's filesystem
1, via modified parameters in a POST request
2, via an unspecified web-page parameter
4, via a crafted URL
2, via unspecified vectors
2, via unspecified parameters in a (1) GET or (2) POST request
0, by reading the snapshot file
1, via invalid variables in an authentication packet
1, via invalid variables in a GET request
3, by reading a log file
3, by terminating a firestarter.py supervised process and then triggering the restart of a process by the root account
2, by writing script arguments to an unspecified file
1, via crafted HTTP requests
1, via invalid parameters
2, via the eval command.
4, via a file containing filenames with shell metacharacters
2, via the excl_manual parameter in the xcloner_show page to wpadmin/plugins.php.
4, via a Translation LM_FRONT_* field for a language
2, via unspecified vectors involving a cdef id.
1, via vectors related to page caching.
2, via unspecified path arguments.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a webform.
4, via vectors related to taxonomy terms.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a request to admin/config/services/campaignmonitor/lists/%/enable or (2) disable list subscriptions via a request to admin/config/services/campaignmonitor/lists/%/disable. NOTE: this refers to an issue in an independently developed Drupal module
1, via vectors related to taxonomy terms.
4, via unspecified vectors.
4, via vectors related to block content.
4, via unspecified vectors.
3, via unspecified vectors.
1, via vectors related to taxonomy terms.
4, via a URL in an unspecified parameter.
4, via unspecified vectors.
3, via vectors related to nodes posted in an Organic Groups group.
4, via (1) an autocomplete search on custom entities without an access query tag or (2) leveraging knowledge of the ID of an entity.
3, via unspecified vectors.
3, via unknown vectors.
5, via a custom breadcrumb separator.
4, via unspecified vectors.
4, via unspecified vectors.
2," via unspecified vectors involving nodes of the """"Invoice"""" content type."
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
2, via unknown vectors involving creating or editing (1) comments
3, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors related to field display settings.
4, via a crafted filename.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors involving processing confirmation delete pages.
0, by pressing the set up button and leveraging an API in the GainSpan Wi-Fi module.
4, via a crafted HTTP request
4, via a crafted HTTP request
4, via a crafted HTTP request
4, via a crafted string.
4, via a crafted string. NOTE: This issue is due to an incomplete fix to CVE-2015-4410.
5, via a crafted string.
4, via the redirect_to parameter.
4, via a .. (dot dot) in the file parameter.
4, via a .. (dot dot) in the (1) theme or (2) lang cookie parameter to AnimaGallery/.
4, via a (1) crafted check plugin
2, via an unspecified input.
4, via a crafted application.
4, via a .. (dot dot) in the dir parameter to admin/asset/add-asset-compatibility.
0, via the filter parameter to admin/asset/grid-proxy.
2, via the (1) page
0, via the graph_template_id parameter to graph_templates.php.
3, by uploading a file with an executable extension
4, via certain vectors.
0, via a full pathname in the other parameter.
0," via a full pathname in the """"Upload file from url"""" field in the file manager for professor.php."
3, by appending a crafted parameter to the file URL.
4, via unspecified vectors.
4, via a crafted CHM file.
4, via a crafted CAB archive.
4, via a crafted CAB archive.
4, via a crafted CHM file.
5, via unknown vectors.
3, via unknown vectors.
1, by leveraging lack of navigation after a paste of a URL with a nonstandard scheme
2, via unspecified use of the Web Audio API.
4, via a crafted saio chunk in MPEG-4 video data.
1, via crafted MPEG-4 video data with H.264 encoding.
4, via vectors involving a hard link to a log file during an update.
4, via a crafted name of a Mozilla Archive (aka MAR) file.
4, via a feed: URL in a POST request.
0, by leveraging the use of shared memory and accessing (1) an Atomics object or (2) a SharedArrayBuffer object.
1, via malformed WebM video data.
4, via malformed WebM video data.
5, via a SharedWorker object that makes recursive calls to the open method of an XMLHttpRequest object.
4, via an invalid size field in an esds chunk in MPEG-4 video data
1, via crafted sample metadata in an MPEG-4 video file
0, by leveraging improper interaction between resize events and changes to Cascading Style Sheets (CSS) token sequences for a CANVAS element.
4, by constructing a crafted data: URL and triggering navigation to an arbitrary http: or https: URL at a certain early point in the installation process.
3, via unknown vectors.
3, via unknown vectors.
1, via crafted attributes in the ICC 4 profile of an image.
3, by conducting a junction attack and waiting for an update operation by the Mozilla Maintenance Service.
1, via crafted JavaScript code that modifies the URI table of a media element
0, by leveraging improper interaction between shared workers and the IndexedDB implementation.
4, via a crafted header in a WebM video.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
1, via crafted JavaScript code that executes after a drag-and-drop action of an image into a TEXTBOX element.
3, by leveraging (1) duplicate cache-key generation or (2) retrieval of a value from an incorrect HTTP Access-Control-* response header.
4, via unknown vectors.
2, via unknown vectors
3, via unspecified vectors.
0, by bypassing the Installation Manager Boxmgmt CLI interface.
0, by using the Avamar Desktop/Laptop client interface to send crafted parameters.
4, via unspecified vectors.
2, via an external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, by leveraging access to a service account and writing commands to a service configuration file.
2, via the content of a post.
2, via the redirect_to parameter.  NOTE: this may overlap CVE-2015-4413.
4, via unspecified vectors.
4, via an add_user action in a request to password.cmd.
2," via the """"Custom application"""" field in the """"port triggering"""" menu."
4," via a crafted """"run-length count"""" in an image in a WMF file."
4, via a JSON string with a \ (backslash) followed by a terminator
2, via the strMessage parameter.
2, via an unexpected data type
3, by uploading a file with an executable extension using a frontend form
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the mapName parameter in an e2m_img_save_map_name action to wp-admin/admin-ajax.php and other unspecified vectors.
4, via a .. (dot dot) in the map_id parameter.
3, by creating a large number of connections
2, via the sid parameter.
2, via the local_graph_id parameter.
4, via a crafted input
5, via a long string in the (1) FilePassword property or to the (2) GetStringInfo method.
4, via a long string to the MulticastAddr method.
1, via unspecified vectors
4, via unspecified vectors.
0, via the id parameter to eqfullevent.
0," via the """"compound"""" parameter to entry.cgi."
2, via the (1) success parameter to login.php or (2) crafted URL parameters to index.php
4, via an e-mail message body with a crafted URL.
2, via the (1) usr or (2) pwd parameter.
4, via a config action to index.php.
0, via the id parameter to iframe.php.
0, via the sort parameter to system/authors.
2, via the fileName parameter.
4, via a ....// (quadruple dot double slash) in the logFile parameter.
4, via a URL in the redirurl parameter.
4, via a .. (dot dot) in the fileId parameter to AjaxFileUploadHandler.axd.
0, via the zone_id parameter to index.php.
4, via (1) the collection_description parameter to upload/manage_collections.php in an add_new action or the (2) photo_description
4, via a crafted size value for the username field.
0, via the tid parameter in a read action.
4, via a request to administrator/admins_create.php.
2, via the cat_id parameter to the default URI.
2, via the (1) ddns_domainame or (2) ddns_account parameter to ddns.stm.
5, via vectors related to weak passwords.
2, via an HTTP POST request to PlcmRmWeb/JConfigManager.
1, by leveraging use of session identifiers as parameters with HTTP GET requests.
5, via a .. (dot dot) in the Modifier parameter to PlcmRmWeb/FileDownload; or remote authenticated administrators to upload arbitrary files via the (2) Filename or (3) SE_FNAME parameter to PlcmRmWeb/FileUpload or to read and remove arbitrary files via the (4) filePathName parameter in an importSipUriReservations SOAP request to PlcmRmWeb/JUserManager.
4, via a script in /var/polycom/cma/upgrade/scripts
4, via unspecified vectors.
4, via a series of requests.
2, via unspecified vectors
3, by leveraging /dev/kvm access for an ioctl call.
4, via a .. (dot dot) in the za_file parameter.
4, via a crafted WMF file.
4, via a crafted WMF file to the (1) wmf2gd or (2) wmf2eps command.
2, via the recoveryMessage parameter to the default URI.
3, by creating a packet filter and then loading crafted BPF instructions that trigger late convergence by the JIT compiler.
0, via a full pathname in the dumpfname parameter.
4, via a .. (dot dot) in the File parameter to download.php.
0, via vectors involving JSON error messages and the /api/contents path.
0, via vectors involving JSON error messages and the /api/notebooks path.
0, via the pid parameter to index.php.
0, via the mode parameter to /body.
4, via a crafted request.
2, via the email parameter.
5, via a URL in the config['basedir'] parameter.
1, via unknown vectors related to Deployment.
2, via unknown vectors related to Types.
2, via unknown vectors related to Security.
2, via unknown vectors related to Help screens.
2, via unknown vectors related to Dialog popup.
2, via unknown vectors related to AD Utilities.
1, via vectors related to LDOM Manager.
1, via unknown vectors related to Authentication Engine.
1, via vectors related to Server : I_S.
3, via unknown vectors.
2, via unknown vectors related to Server : InnoDB
1, via unknown vectors related to Server : Optimizer.
2, via unknown vectors related to Server : Memcached.
1, via unknown vectors related to Online patching.
2, via unknown vectors related to Security.
2, via unknown vectors related to Server : Security : Firewall.
1, via unknown vectors related to Server : Security : Firewall
2, via unknown vectors related to Server : Security : Firewall
1, via vectors related to UNIX filesystem.
1, via vectors related to RBR.
1, via unknown vectors related to Server : Partition.
2, via unknown vectors related to Server : Security : Privileges.
1, via unknown vectors related to Server : Partition
2, via unknown vectors related to Mail Proxy.
2, via unknown vectors related to Security.
2, via unknown vectors related to Server : Optimizer.
2, via unknown vectors related to Solaris Kernel Zones.
1, via unknown vectors related to Server : Partition
2, via unknown vectors related to Security.
1, via vectors related to OSSL Module.
1, via vectors related to Server : DDL.
1, via unknown vectors related to Server : InnoDB.
1, via vectors related to PIA Core Technology.
1, via unknown vectors related to Solaris Kernel Zones
2, via unknown vectors related to Essbase Rapid Deploy.
1, via unknown vectors related to Security.
1, via unknown vectors related to Expense Report General.
2, via unknown vectors related to Server : Types.
1, via unknown vectors related to Framework.
1, via vectors related to FIN Resource Management (Security).
3, via unknown vectors related to Server : Security : Privileges.
1, via unknown vectors related to Solaris Kernel Zones
1, via unknown vectors related to Server : Partition.
2, via unknown vectors related to Services.
2, via unknown vectors related to Talent Acquisition Management.
4, via unknown vectors.
2, via unknown vectors related to Agent Next Gen.
3, via vectors related to DML.
1, via unknown vectors related to Server : Security : Privileges.
1, via unknown vectors related to Server : InnoDB.
2, via unknown vectors related to Content Server
2, via unknown vectors related to Kernel.
2, via unknown vectors related to Libraries.
2, via unknown vectors related to Agent Next Gen.
2, via unknown vectors related to Pivot Grid.
1, via unknown vectors related to Content Server
1, via vectors related to Agent Next Gen.
1, via unknown vectors related to Server : Replication.
2, via unknown vectors related to Security
2, via unknown vectors related to Server : InnoDB.
1, via unknown vectors related to Security.
1, via unknown vectors related to libmysqld.
1, via vectors related to Server : DML.
2, via unknown vectors related to JavaFX
2, via unknown vectors
1, via unknown vectors related to Server : Memcached.
4, via vectors related to SSO Engine.
4, via vectors related to Server : DML
2, via unknown vectors
2, via unknown vectors related to Security
1, via vectors related to NDMP Backup Service.
4, via vectors related to Boot.
4, via a REST API request.
1, by leveraging admin access.
4, via a crafted packet
4, via a crafted packet
4, via a crafted packet
4, via a crafted packet
4, via a crafted packet
4, via unknown vectors.
4, via a series of connect and disconnect actions
4, via a series of connect and disconnect actions
4, via a crafted application.
4, via unspecified vectors. IBM X-Force ID: 105196.
3, via unknown vectors.
4, via a crafted URL.
4, via a crafted URL.
4, via a crafted URL.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors. IBM X-Force ID: 105896.
4, via unspecified vectors.
4, via a crafted GIF image
4, via unspecified vectors.
4, via a crafted request.
4, via a crafted URL.
1, by leveraging presence on the cluster-wide password-change list.
0, by spoofing an executable file during a client upload operation.
4, via a crafted REST URL.
3, by leveraging a password-change requirement.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted GIF image
3, via unspecified packets.
4, via unspecified vectors. IBM X-Force ID: 106938.
3, via unspecified vectors.
4, via a URL in an unspecified parameter.
0, via the organizationName parameter to VendorDef.do.
4, via a URL in the returnURL parameter to dev/build.
2, via the (1) admin_username or (2) admin_password parameter to install.php.
0, via the table_name parameter to (1) tabella.php
0, via a full pathname in the requrl parameter.
3, via the (1) content or (2) title field in an add action in the posts page to index.php or the (3) q parameter in the posts page to index.php.
4, via a crafted XML request
4, via vectors related to inclusion of .pbl files from WML.
2, via the __report parameter of the BIRT viewer servlet.
2, via the __imageid parameter.
4, via a crafted regular expression with an excess closing parenthesis.
3, by uploading a file with a .pht extension.
4, via a crafted request to index.php/users/create.
2, via the (1) version parameter in protected/views/admin/formEditor.php; the (2) importId parameter in protected/views/admin/rollbackImport.php; the (3) bc
2, via the closedate parameter.
4, via a .. (dot dot) in the dl parameter.
5, via shell metacharacters in the (1) NEW_PASSWORD_1 or (2) NEW_PASSWORD_2 parameter to cgi-bin/chpasswd.cgi.
1, via crafted Flash content that overrides a valueOf function
1, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
0, via a NULL byte in a crafted configuration directive packet.
4, via unspecified vectors.
2, via the search_query parameter to product/search.
5, via a .. (dot dot) in the component parameter in the Request component to workorder/Attachment.jsp.
2, via the (1) query parameter in the run_query_editor_query module to CustomReportHandler.do
0, via the client_action parameter in a revslider_ajax_action action to wp-admin/admin-ajax.php.
4, via a large POST request.
2, via the REST API.
4, via a crafted package.
2, via an empty className in a packet.
1, by obtaining Java exception statements as a result of excessive web traffic.
2, via the VDPAU_DRIVER environment variable.
4, via a crafted JPEG 2000 image file.
4, via CRLF sequences in the filename of an uploaded file.
1, by leveraging unspecified methods.
4, via a link.
5, via a URL in the targetURI parameter.
4, via a long DOC file
2, via an index to a non-existent bookmark in a DOC file.
4, via a crafted file
4, via a crafted JPEG 2000 image file.
2, via the url parameter.
1, via crafted query packets.
4, via a CLIENT_CUT_TEXT message
4, via a crafted whois record.
0, via vectors involving the password lifetime period in Active Directory.
3, by triggering a failed unlink after creating a volume on a root_squash NFS pool.
5, via a crafted USB device.  NOTE: this ID was incorrectly used for an Apache Cordova issue that has the correct ID of CVE-2015-8320.
4, via an svn:// protocol string
0, by leveraging the teacher role
4, via vectors related to receiving packets.
2, via the came_from parameter to _admin/login.
2, via unspecified vectors
4, via a long hostname to the server name indication (SNI) extension
2, via the (1) user
2, via an ECH (erase characters) escape sequence with a large parameter value
1, via crafted query packets.
5, via a direct request.
5," via a crafted job configuration that is then used in an """"XML-aware tool"
4, via a direct request to the pages.
2, via directory traversal sequences in a request to jnlpJars/.
0, by using an API token of another user.
4, via a direct request to queue/api.
3, by leveraging a JNLP slave. NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-3665.
2, via the slave offline status message.
0, by leveraging the guest role and entering drafts with the editor-autosave feature.
4, via a large number of ASN.1 object identifiers in X.509 certificates.
4, via a crafted X.509 certificate
4, via a crafted serialized Java object in an HTTP request.
4, via a .. (dot dot) in the tab parameter to admin/.
4, via a URL in the redirect parameter to admin/nos/login.
2, via the (1) post-content or (2) post-title parameter to admin/edit.php.
2, via the func parameter.
2," via the """"What's going on?"""" profile field."
4, via unspecified vectors.
2, via the username field.
2, via unspecified vectors involving the transport protocol.  NOTE: ZDI appears to claim that CVE-2015-3253 and CVE-2015-5377 are the same vulnerability.
2, via an email attachment.
2, via the _mbox parameter to the default URI.
0, via the _alt parameter when uploading a vCard.
1, by reading files in the (1) config
2, via unspecified HTTP requests.
3, via unknown vectors.
4, via a comment.
4, via a malformed CONFIG REQUEST message.
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
1, via unknown vectors
1, via unknown vectors
2, via unknown vectors
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
1, via unknown vectors
2, via unknown vectors
1, via unknown vectors
1, via unknown vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unknown vectors.
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
2, via the sid cookie
5, via shell metacharacters in the id parameter to ADMIN/mailqueue.spl.
0, via the title parameter when adding a new item.
2, via unspecified vectors to install/.
2, via the PATH_INFO
2, via the sess parameter.
0, via the ANDOR parameter
2, via the title (cls.name variable) when creating a classification.
4, via a URL in the url parameter.
3, by leveraging (1) crypto-user or (2) crypto-officer access to an HSM partition.
4, via a crafted (1) 0x96002400 or (2) 0x96002404 IOCTL call.
4, via a crafted 0x96002404 IOCTL call.
4, via a .. (dot dot) in the filename parameter to includes/download.php.
0, via a full pathname in the file parameter to includes/download.php.
4, via a request with a long name that refers to itself.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-1868.
0, via a full pathname in the file parameter.
4, via a full pathname in the file parameter.
2, via unspecified parameters to (1) upload/updateDriver or (2) upload/addDriver or to execute arbitrary code with SYSTEM privileges via unspecified parameters to (3) uploadCloning.html
4, via a crafted URL using the (1) bittorrent or (2) magnet protocol.
4, via vectors related to the (1) user and (2) group rights management pages.
4, via TKEY queries.
4, via a file with crafted dimensions.
2, via the tab parameter in the gdbbpress_attachments page to wp-admin/edit.php.
4, via a .. (dot dot) in the tab parameter in the gdbbpress_attachments page to wp-admin/edit.php.
4, via a post.
2," via the """"error"""" parameter to wp-admin/edit.php."
1, via unspecified vectors related to the meta access tab.
5, via unspecified vectors.
3, via vectors involving the field settings form.
1," by leveraging the """"administer ddblock"""" permission."
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted file in the directory used to write Apache vhost files for hosted sites in a multi-site environment.
4, via unspecified parameters.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted request.
0, via the destinations parameter
4, via a social login.
3," by substituting """"me"""" for a user id in a URL."
1, via unspecified vectors related to a login link.
0, via the matrix parameter to demo/index.php.
2, via the username when creating a new user account
2, via the name in a new group to backend/groups/index.php.
3, via vectors involving a command character in an href.
0, via vectors involving multiple whitespace characters before an empty href
2, via the items[] parameter in an fsb_save_order action to wp-admin/admin-ajax.php.
3, via the (1) name parameter to dashboard/settings/categories/
4, via a request to dashboard/users/create/.
0, via unspecified vectors related to snapshot API calls.
2, via the (1) s parameter to membershiplevels.php
2, via the cpd_keep_month parameter to wp-admin/options-general.php.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
0, via the maintenance_enable parameter or (2) conduct cross-site scripting (XSS) attacks via the maintenance_text parameter to admin/pages/maintenance.
2, via the edit parameter in the qtranslate page to wp-admin/options-general.php.
3, via the (1) sub_dir parameter in a formUSBStorage request; pinCode parameter in a (2) formWpsStart or (3) formiNICWpsStart request; (4) wps_enrolee_pin parameter in a formWlanSetupWPS request; or unspecified parameters in a (5) formWlanMP
2, via the (1) albumid or (2) name parameter.
4, via a symlink attack on a file whose full path is defined using multiple wildcards in /etc/sudoers
1, via unspecified vectors
4, via a specially crafted request.
0, via a full pathname in the file parameter to download.php.
2, via the caption tag of a profile image.
3, via vectors involving a file title
4, via the cbNewsId parameter.
4, via a request to voice.htm or (b) UniFinger configuration settings via a request to bf.htm
0, by leveraging the Author or Contributor role to place a crafted shortcode inside an HTML element
5, via a crafted HTML document
2, via the redirection parameter.
4, via unspecified vectors.
4, via a crafted SSID.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted request.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4," via a Trojan horse readline.pyd file in the current working directory.  NOTE: the vendor says """"It was determined that this is a longtime behavior of Python that cannot really be altered at this point."""""
4, via a crafted TCP packet.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted entry in a ZIP archive.
4, via a Trojan horse file with a name similar to an extensionless filename that was selected by the user.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, by uploading a file with an executable extension
1, via vectors related to the targetDir variable.
4, via a crafted packet
4, via a crafted serialized object in a cookie.
4, via a ..%2f (dot dot encoded slash) in the PATH_INFO to the default URI.
3," by leveraging a """"redirect."""""
1, via unspecified vectors
3, by uploading a file with a safe extension and content type
3," via vectors related to """"traffic capture."""""
4, via a crafted request.
3, via unknown vectors.
4, via shell metacharacters in a cl-rctl command label.
4, via a symlink attack.
4, via unspecified vectors.
0, via a crafted symlink and crafted filename.
4, via O_TMPFILE filesystem operations that leverage a duplicate cleanup operation.
4, via a large iov_count value in a write request.
0, by leveraging the mishandling of unclosed HTML elements during processing of shortcode tags.
4, via a crafted diagnostic command line request to submit_net_debug.cgi.
3, via vectors involving (1) add.ctp
1, via crafted serialized data
3, by creating a zone containing a malformed DNSSEC key and issuing a query for a name in that zone.
0, via vectors involving the offset variable.
2, via an empty BIT STRING in ASN.1 data.
2, via unspecified vectors
4, via a widget title.
3, via an accessibility-helper title.
4, via a crafted string.
0, by setting the callback function in a (1) 0x220024 or (2) 0x220028 ioctl call.
4, via a crafted virtio control message.
2, via an afc command that leverages symlink mishandling.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted series of Unicode characters.
4, via a crafted file
4, via a crafted app that creates a symlink.
4, via a crafted file
4, via a crafted app that leverages incorrect privilege dropping associated with a locking error.
4, via a crafted font file
4, via a crafted font file
2, via an app that uses a crafted syscall to interfere with locking.
4, via a crafted TIFF image.
4, via a crafted web site that leverages tap events.
4, via a crafted font file
3, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via vectors related to asset handling.
2, via unspecified vectors
4, via a crafted app.
4, via a crafted video.
4, via a crafted QuickTime file.
4, via a crafted Collada file.
4, via a crafted office document.
3, via unspecified vectors.
5, via a crafted font file
1, by leveraging use of an AF_INET6 socket.
4, via a crafted movie file
4, via a crafted movie file
4, via a crafted file
4, via a crafted app
4, via a crafted file
4, via a crafted file
3, via vectors involving a CANVAS element.
4, via a crafted (1) tel://
3, via vectors involving a (1) custom event
4, via a crafted text file.
1, via unspecified vectors
4, via a crafted app.
4, via a crafted app that conducts an interception attack involving an unspecified URL scheme.
4, via a crafted enterprise app.
2, via an app that places a crafted signature in an executable file.
1, via crafted data.
3, via unspecified vectors.
4, via a crafted app
4, via a crafted app
4, via a crafted app
3, via unspecified vectors.
4, via unspecified vectors.
4, via a device backup.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted Game Center app.
4, via a crafted ITMS URL.
4, via unspecified vectors.
4, via a crafted audio file.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
2, via unspecified vectors
4, via a small hop_limit value in a Router Advertisement (RA) message.
5, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via a crafted font file.
1, via crafted text.
4, via a crafted app.
1, via unspecified vectors
4, via a crafted background app.
1, by leveraging root privileges.
3, via vectors involving a cookie for a top-level domain.
4, via vectors involving a privileged executable file.
0, via vectors involving environment variables.
2, via unspecified vectors
4, via unspecified vectors.
3, by listening to a device in the lock-screen state.
4, via unspecified vectors.
1, via unspecified vectors
1, by using an environment variable to inject code into processes that rely on this framework.
4, via unspecified vectors.
2, via unspecified vectors
4, via a crafted web site.
4, via a crafted window opener on a web site.
1, by leveraging the mishandling of the resource cache of an SSL web site with an invalid X.509 certificate.
2, via an XML document.
1, via crafted responses.
1, by inserting an Apple Ethernet Thunderbolt adapter with crafted code in an Option ROM
1, by leveraging the transaction-log feature.
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted web site.
3," by leveraging an unspecified """"type confusion"""" during Mach task processing."
4, via a crafted audio file
4, via a crafted audio file
1, via crafted metadata in an image.
4, via a crafted font file.
0, via vectors involving NVRAM parameters.
3, by uploading a file with an executable extension.
4, via a crafted 3GP file
2, via the item parameter.
4," via a """" (double quote) character in a filename in a shared folder."
4, via a long name.
4, via a crafted URL.
5, by reading /logs/sql-error.log.
1, by using the USB interface for a mount operation.
4, via a negative value of a size parameter.
4, via a crafted URL.
4, by listing a process and its arguments.
4, via a crafted DNS response.
2, via the ssid parameter.
4, via a long ipaddr parameter.
5, via a certain admin substring in an HTTP Cookie header.
3, by uploading a file with an executable extension
4, via (1) the UniqueID (aka sUniqueID) parameter to WrFreeFormText.asp in the Reports component or (2) the Find Device parameter.
4, via (1) an SNMP OID object
4, via a crafted packet on port 8190.
2, via the adminPassword parameter
4, via (1) the where parameter to rss.php or (2) the sqlQuery parameter to search.php
2, via the (1) errorNo or (2) errorMsg parameter to error.php; the (3) viewType parameter to duplicate_manager.php; the (4) queryAction
4, via (1) the id parameter to unapi.php or (2) the stylesheet parameter to sru.php.
2, via the referrer parameter.
2, via the (1) LoginPassword or (2) hiddenPassword parameter.
2, via the PingIPAddr parameter.
1, by leveraging access to the user account.
0, by uploading an executable file
4, via a direct request.  NOTE: this issue can be combined with CVE-2015-6024 to execute arbitrary commands.
4, via shell metacharacters in the DIA_IPADDRESS parameter.
4," via an """"oversized"""" XML element name."
1, via crafted content in an Office Marketplace instance
4, via a crafted web site
4, via a crafted web site
1, via crafted JavaScript that improperly interacts with use of the Cascading Style Sheets (CSS) empty-cells property for a TABLE element
4, via a crafted web site
4, via a DelegateExecute launch of an arbitrary application
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via crafted parameters in an ArrayBuffer.slice call
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
3, by modifying a webpart
4, via a crafted Office document
4, via a crafted e-mail message that is mishandled by Outlook for Mac
1, via crafted requests
4, via a crafted font
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
2, via unspecified open and close requests
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a malformed Cascading Style Sheets (CSS) token sequence in conjunction with modifications to HTML elements
2, via the (1) ga_adsense
0, by running the same code on the client-side.
4, via a long DistinguishedName (DN) entry in a certificate.
4, via a VHOST_SET_LOG_FD ioctl call that triggers permanent file-descriptor allocation.
4, via a crafted chat message
1, via crafted length fields in headers of OSPF packets
1, via crafted IPv6 packets
1, via crafted HTTP requests
0, by leveraging the Mobile and Remote Access (MRA) role and establishing a TFTP session
4, via a crafted L2TP packet
4, via a crafted IPv4 UDP packet
4, via a crafted (1) IPv4 or (2) IPv6 packet
4, via a crafted IPv6 packet
2, by triggering packet fragmentation and reassembly
0, via format string specifiers in an HTTP request
4, via a flood of TCP traffic that leads to DNS resolution delays
1, via crafted responses
1, via crafted Cisco Discovery Protocol (CDP) packets
4, via a Layer 2 packet with a reserved VLAN number
1, via crafted packets
4, via a crafted POST request
1, via crafted (1) CLI or (2) GUI commands
1, via crafted packets
1, via crafted Disconnect-Request UDP packets
4, via a Trojan horse DLL in the current working directory
1, via crafted packets
1, via an SNMP request for an OID that does not exist
1, via crafted HTTP requests
4, via a crafted HTTP request
1, via crafted CLI commands
4, via a direct request
0, via an unspecified symlink attack
4, via a crafted header in an HTTP request
4, via a crafted header in an IP packet
0, by leveraging the lack of source-path validation
4, via a crafted URL
1, via unspecified vectors
2, via unspecified vectors
0, by sending many SSL renegotiation requests
0, via vectors involving addition of an SSH key
5, via a crafted header in a TACACS packet
0, via a crafted hostname in an SNMP response
5, via a crafted header in a PMIPv6 packet
2, via unspecified vectors
1, via crafted SIP messages
0, via an unspecified HTTP request
4, via a crafted URL
4, via a crafted URL.
4, via a crafted URL.
1, via unspecified vectors
4, via a crafted header in a BGP packet
1, via unspecified parameters
2, via unspecified parameters
5, by visiting an unspecified URL
1, via unspecified vectors
1, via crafted fields in SRTP packets
2, via unspecified fields
1, by leveraging the Monitor-Only role
2, via unspecified parameters
1, via crafted URLs in REST API requests
4, via a crafted HTTP request
4, via a crafted USB device that triggers invalid USB commands
1, via crafted CLI input
1, via crafted parameters to unspecified scripts
4, via a crafted value
0, by reading an unspecified file
4, via a crafted XML document
1, via crafted parameters
4, via a TELNET connection
1, by leveraging administrative access to enter crafted environment variables
4, via FTP sessions in which the control connection is ended after data transfer
5, via a crafted value in a URL
4, via a crafted request
5, via a crafted value in a URL
4, via a large amount of network traffic
1, via crafted USB parameters
2, via an IPv4 ICMP packet with the IP Record Route option
1, via crafted parameters in an HTTP request
2, via unspecified fields
4, via a crafted filename
0, via a crafted parameter
0, by visiting an administrative page
4, via a SYN flood on the SSH port during the booting process
1, via crafted network traffic
1, via malformed requests
2, by sending arbitrary network traffic
1, via unspecified vectors
0, via invalid session tokens
2, via additional parameters to an unspecified command
2, via an SSL session that is mishandled after decryption
4, via a crafted HTTP request
4, via a crafted IKEv1 packet to a tunnel endpoint
5, via a packet with the 00-00-00-00-00-00 source MAC address
4, via a crafted URL
4, via a full pathname.
3, via opcode (1) 0x3ef or (2) 0x3f0.
1, by using Firefox with a web-developer plugin.
4, via a crafted URL.
2, via an unspecified field.
3, via vectors involving a browser plugin.
3, via unknown vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, by reading HTML source code.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted request.
4, via a crafted (1) GET or (2) POST request.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted HTTP request.
3, via unknown vectors.
3, via unspecified vectors.
4, via a .. (dot dot) in the dir parameter to index.php/apps/files/ajax/scan.php.
2, via the string parameter.
0, via the string parameter
4, via a crafted public key.
1, via unknown vectors
0," via the descr parameter in a """"new"""" action to system_authservers.php."
2, via the (1) proxypass parameter to system_advanced_misc.php; (2) adaptiveend
2, via the (1) srctrack
0, via the server[] parameter to services_ntpd.php.
0, via the time parameter to server/freichat.php.
2, via the (1) sortby or (2) manufacturer_ids[] parameter to index.php.
4, via unspecified vectors.
0, via the search parameter to ajax/ajax_search.php.
0, via the droptable parameter to phpliteadmin.php.
2, via the (1) PATH_INFO
2, via the showemail parameter in a signup action to members.php.
0, via the size parameter to get_album_item.php.
4, via a request to the instagram-portfolio page in wp-admin/options-general.php.
4," via """"insanely large inputs"""" to the (1) evbuffer_add"
4, via a deep 64-bit userspace backtrace.
4, via a crafted value in the third argument to the str_ireplace function.
2, via the (1) admin_username
2, via the (1) section parameter to site/error.php or (2) ip parameter to site/tools/searchResults.php.
2, via the querytext parameter to userdashboard.jsp.
4, via a crafted firmware image file.
2, via the Profile name field (youtube_embed_name parameter).
4, via a crafted URL.
4, via a SOAP request to service/soap/BatchRequest.
4, via a dashboard title.
4, via a saveWorkerPeek action.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via crafted data.
3, by connecting to the console Java port.
3, by triggering a memory dump.
1, by leveraging control of the sshd uid to send an unexpectedly early MONITOR_REQ_PAM_FREE_CTX request.
4, via a symlink attack on /tmp/zarafa-vacation-*.
4, via a state manipulation attack.
4, via a crafted packet.
2, via an unspecified resource.
2, via the scripts parameter to media/unit_testing/templates/6776.php.
4, via a crafted heap spray
4, via a crafted regular expression in a VL_ListAttributesN2 RPC.
2, via the QUERY_STRING.
2, via the s parameter.
4, via a crafted application
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
1, via crafted metadata in a (1) MP3 or (2) MP4 file
4, via a crafted media file
4, via a crafted media file
2, via unspecified vectors
4, via a crafted application
4, via a crafted media file
4, via a crafted audio file
4, via a crafted application
4, via a crafted application
4,send commands to
4, via a crafted media file
1, by leveraging access to the local physical environment
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted audio file
2, via unspecified vectors
4, via a crafted application
5, via a crafted media file
4, via a crafted media file
4, via a crafted media file
4, via a crafted application
4, via a crafted application
4, via a crafted application that leverages QSEECOM access
1, by leveraging pairing
1, via unspecified vectors
4, via a crafted application
4, via a crafted application
0, by leveraging improper interaction between IPC resource allocation and the memory manager
4, via a crafted application that leverages QSEECOM access
4, via a request to admin/admin_users.php.
4, via a crafted URL
2, via an SQL comment.
1, by reading the menu.
1, via crafted XML data
1, via crafted client name data
1, via crafted XML data
3, via vectors involving a whitelisted HTML element
4, via a brute force attack to the WordPress upload directory structure
1, via unspecified vectors
2, via unspecified vectors
4, via a (1) section_*
2, via the (1) wpSummary parameter to Special:FormEdit
3, via regex metacharacters in a regular expression.
3, via vectors involving base64 encoded content.
4, via a crafted AIFF file.
4, via a long USER command.
4, via a (1) note added to a time entry or an (2) activity used to categorize time tracker entries.
5, via an (1) entity title
4, via unspecified vectors.
0, by leveraging object destruction in a callback.
3, via unknown vectors.
0, by leveraging the mishandling of AppCache update jobs.
1, by leveraging incorrect AppCacheUpdateJob behavior associated with duplicate cache selection.
0, by leveraging incorrect pointer maintenance associated with certain callbacks.
1, via unspecified vectors
3, by leveraging a delay in window proxy clearing.
2, via unspecified vectors
1, via crafted JavaScript code that modifies a pointer used for reporting loadTimes data.
1, via vectors related to DOMCharacterDataModified events for certain detached-subtree insertions.
4, via a crafted web site
4, via unknown vectors.
3, via unknown vectors.
2, via the message field in a private message.
4, via a category label.
4, via a node title.
2, via the (1) cfg[projectName] parameter to index.php/admin/saveConfig
2, via the username parameter to login.xml.
1, via crafted MJPEG data.
4, via a request to signup.php.
2, via the (1) X-Forwarded-For or (2) Client-IP HTTP header.
5, by providing a correct response to a single reCaptcha.
4, via unspecified vectors.
0, by leveraging an unattended workstation and running DOM Inspector.
4, via a crafted parameter.
4, via a 0x0022201c IOCTL call.
3, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
4, by leveraging a policy setting for a user's account.
4, via unspecified vectors.
2, via unspecified input to the (1) Intellicus or (2) client-certificate upload component.
2, via unspecified input to the (1) Intellicus or (2) client-certificate upload component.
1, via crafted BER data
2, via the name element in the Info dictionary in a torrent file.
0, via the id parameter to audiotrack.cgi.
0, via the id parameter to watchstatus.cgi.
4, via shell metacharacters in the subtitle_codepage parameter to subtitle.cgi.
2, via the urls parameter in an add_url_task action to dlm/downloadman.cgi.
4, via a full pathname in the file parameter to assets/download.aspx.
4," via the """"user"""" cookie to plugins/feedback/pages/feedback.php."
0, via the q parameter to index.php.
2, via the wpbase parameter.
3, via unspecified vectors.
4, via a 0x00000ffd ioctl call.
4, via a crafted DTLS cookie in a ClientHello message.
2, via the email address in a crafted authentication token.
3, via the (1) idFilter or (2) nameFilter parameter to cftraces/filter/fl_copy.jsp; the (3) flName parameter to cftraces/filter/fl_crea1.jsp; the (4) serchStatus
3, by using a socket that was not properly bound.
4, via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability
4, via unspecified vectors.
4, via a hyperlink in a document attachment.
2, via the cmd parameter to sys/sys/listaBD2.jsp.
0, via the bd parameter to sys/sys/listaBD2.jsp.
2, via the (1) akey or (2) actserver parameter to the activate_doit function or (3) licfile parameter to the service_startup_doit functionality.
4, via a crafted document.
1, via crafted HTTP header values.
4, via a URL in the _next parameter to user/logout.
0, via the email parameter to tkmonitor/estrutura/login/Login.actions.php.
4, via a new_simple action to admin.php or (2) conduct cross-site scripting (XSS) attacks via the content parameter in a new_simple action to admin.php.
3, by uploading a file with an executable extension
5, by uploading a file with a (1) .pht or (2) .phtml extension.
4, via a user name in a comment
0, via the idstring parameter to rcp.xml.
1, by launching signed Lenovo executables.
2, via the (1) groupchatName parameter to plugins/clientcontrol/create-bookmark.jsp; the (2) urlName parameter to plugins/clientcontrol/create-bookmark.jsp; the (3) hostname parameter to server-session-details.jsp; or the (4) search parameter to group-summary.jsp.
4, via a crafted request to user-password.jsp
4, via a crafted font file
4, via a crafted font file
4, via a crafted font file
4, via a crafted app.
4, via a crafted app that accesses AtomicBufferedFile descriptors.
5, via a crafted app that conducts an unspecified symlink attack.
4, via a crafted web page.
4," via a crafted app that leverages an unspecified """"type confusion."""""
1, via crafted bookmark metadata in a folder.
4, via a crafted font file
4, via a crafted font file
4, via a crafted font file
4, via a crafted app.
3, via unspecified vectors.
4, via a crafted font file
4, via a crafted font file
4, via a crafted font file
4, via a crafted font file
1, via unspecified vectors
2, via unspecified vectors
3, via unspecified vectors.
4, via a crafted app.
4, via a Trojan horse program that is loaded from an unexpected directory by an application that has a valid Apple digital signature.
4, via a crafted Pages document.
4, via a crafted pathname.
4, via a crafted mach-o file
4, via a crafted mach-o file
4, via unspecified vectors.
4, via a crafted pathname.
2, via an unspecified userclient type.
2, via an app that provides a crafted pathname
2, via an app that provides a crafted pathname
4, via a crafted pathname.
4, via unspecified vectors.
4, via unspecified vectors.
0, via vectors involving VM objects.
4, by listening to a device in the lock-screen state.
2, via an iBooks file containing an XML external entity declaration in conjunction with an entity reference
4, via a crafted movie file
4, via a crafted movie file
5, via a crafted movie file
4, via a crafted movie file
4, via a crafted movie file
4, via a crafted movie file
4, via a crafted movie file
4, via a crafted TXXX frame within an ID3 tag in MP3 data in a movie file
4, via a crafted web site.
4, via a crafted URL.
4, via a crafted web site.
4, via unspecified vectors.
4, via a crafted iWork file.
5, via unspecified vectors.
4, via a crafted app.
4, via a crafted disk image.
4, via a malformed plist.
4, via a crafted movie file
2, via unknown vectors
2, via unknown vectors
4, via unknown vectors.
4, via a file: URL in a saved HTML document.
3, via vectors involving a CANVAS element and crafted JavaScript code.
4, via a crafted ZIP archive.
3, via unknown vectors.
3, via unknown vectors.
4, via a crafted font-family name.
2, by triggering attempted use of a data channel that has been closed by a WebRTC function.
3, by triggering a graphics operation that requires a large texture allocation.
4, via a crafted MP4 video file that triggers a buffer overflow.
4, via data: and view-source: URIs.
2, by triggering use of the no-cors mode in the fetch API to attempt resource access that throws an exception
1, via crafted JavaScript code.
5, by triggering a deque size change.
2, via an MP4 video file with crafted covr metadata that triggers a buffer overflow.
1, by leveraging creation of a database account without a password when a 'mysql_user' user parameter contains a host with a netmask.
3, by saving a node.
2, via the (1) id parameter in a dex_reservations_calendar_load2 action or (2) dex_item parameter in a dex_reservations_check_posted_data action in a request to the default URI.
1, via crafted packets
4, via unspecified vectors.
4, via unspecified vectors.
2, via the display name in the FROM field of an SIP INVITE message.
4, via a crafted WAV file.
1, by reading the cgi-bin/webproc HTML source code
4, via a modified request
0, via a full pathname in the getpage parameter.
2, via the errorpage parameter.
1, via crafted serialized data in a cookie.
1, by intercepting an outgoing password change request
1, by displaying user information in a Telnet connection.
1, by replacing the LiebertM executable file.
4, via a crafted host value.
1, by leveraging failure to limit the time between bid responses and impression notifications
4, via a long SSH username or input.
4, via a command in an SMS message
4, via a long string to /dev/hv.
4, via a crafted username.
2, via unspecified vectors
4, via a large header.
1, via unspecified HTTP POST data.
1, via unspecified vectors involving the configuration page.
5, via a (1) madvise or (2) msync system call
4, via a crafted tiff file.
0, by leveraging the lack of a certain temporary-file check.
1, via unspecified vectors related to updating the username.
3, via unspecified vectors.
2, via the (1) img or (2) url tag of a new comment.
0, by leveraging the Puppet communications protocol.
0, via vectors involving the --server argument.
4, via a crafted file
0, via the id parameter to demo/en/asyncData/getNodesForBigData.php.
2, via the failmessage parameter.
4, via a fragment identifier
2," via the (1) serial parameter to alerts/summary/profile/; the (2) urlForCreatingReport parameter to csearch/report/export/; the (3) id parameter to analysis/detail/download/screenshot; or vectors related to (4) """"Fortiview threats by users search filtered by vdom"""" or (5) """"PCAP file download generated by the VM scan feature."""""
2, via the filename of an uploaded file containing errors.
2, via unknown vectors or (2) change the contact name and language or possibly have unspecified other impact via a crafted POST request to an account-user-*.php script.
1, by leveraging an unexpired session after the user has been (1) deleted or (2) unlinked.
4, via a .. (dot dot) in the layerstyle parameter.
0, via a GET parameter
2, via unspecified vectors
4, via a crafted Indusoft Project file.
0, via the invitaion_code parameter in a pie-register page to the default URI.
2, via the (1) pathToMYSQL or (2) databaseStructureFile parameter
0, via the defaultCharacterSet parameter
2, via the (1) adminUserName
2, via the uid field in a PGP public key
2, via the (1) Media Title or (2) Media Subtitle fields.
2, via an allowed query followed by a disallowed one in the query parameter to event/runQuery.do
2, via the apikey parameter to lnl.php.
2, via the (1) selected_end_date or (2) selected_start_date parameter to lib/results/tcCreatedPerUserOnTestProject.php; the (3) containerType parameter to lib/testcases/containerEdit.php; the (4) filter_tc_id or (5) filter_testcase_name parameter to lib/testcases/listTestCases.php; the (6) useRecursion parameter to lib/testcases/tcImport.php; the (7) targetTestCase or (8) created_by parameter to lib/testcases/tcSearch.php; or the (9) HTTP Referer header to third_party/user_contribution/fakeRemoteExecServer/client4fakeXMLRPCTestRunner.php.
4, via a trailing \u in a json string to cJSON_Parse.
4, via a URL in the referrer parameter.
4, via unspecified vectors.
2, via an XML external entity declaration in conjunction with an entity reference
0, by guessing the document id. IBM X-Force ID: 107106.
4, via a crafted URL.
4, via unspecified vectors.
2, via an unspecified field.
4, via a crafted URL.
4, via a crafted workbench file.
1, via crafted requests.
2, via unknown vectors
2, via unknown vectors
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted URL.
0, by visiting the vSphere inventory.
4, via a crafted URL.
1, by leveraging access to setenv.sh and parameter.txt. IBM X-Force ID: 107861.
1, by leveraging access to the CMA install machine. IBM X-Force ID: 107862.
1, by leveraging access to the CMA install machine. IBM X-Force ID: 107863.
3, via unspecified vectors.
1, by leveraging database access.
4, via a Trojan horse program that is located in /tmp with a name based on a predicted PID value.
4, via a crafted URL.
1, by leveraging administrator privileges to execute the mqcertck program.
4, via a crafted request to a Report Builder instance URL.
4, via a crafted URL.
3, via unspecified vectors.
3, by leveraging a JazzGuest role.
2, via unspecified vectors
1, by leveraging authority for +connect and +dsp.
5, by sending a crafted URL to the Lifecycle Query Engine. IBM X-Force ID: 108619.
4, via a crafted URL.
2, by holding the Escape key.
4, via a crafted LZW stream in a GIF file.
4, via a crafted LZW stream in a GIF file.
4, via a crafted color table to the (1) bmp_decode_rgb or (2) bmp_decode_rle function.
2, via the last row of RLE data in a crafted BMP file.
4, via a crafted USB device that lacks endpoints.
1, by sending two Ethernet frames with ether_type Jumbo Frame (0x8870).
2, via the ver parameter to (1) class-doifd-download.php or (2) class-doifd-landing-page.php in public/includes/.
3," via shell metacharacters in the """"Width of preview image"""" and possibly other input fields in the """"Video Gallery Settings"""" page."
2, via unspecified vectors related to workspaces and archived artifacts.
1, via vectors related to the HTTP GET method.
4, via unspecified vectors.
4, via shell metacharacters in the (1) image_path
1, by leveraging failure to define the .write method.
4, via a crafted BMP file.
1, via crafted image and logical screen width fields in a GIF file.
2, via an odd number of elements in a coordinate pair in an SVG document.
2, via the (1) label value of an item or (2) name of a role.
3, via the (1) id parameter in an action_on_quick_icon action to item.query.php or the (2) order or (3) direction parameter in an (a) connections_logs
3, by inserting a USB device that lacks a bulk-out endpoint.
2," via the """"passwordreset&token"""" parameter."
2," via the """"userEmail"""" parameter."
2," via the """"pagedir_orderby"""" parameter."
2, via the dbhost parameter to libs/org/adodb_lite/tests/test_adodb_lite.php
3, by uploading a file with an executable extension.
1, via crafted tag attributes.
2, via an HTML entity that is mishandled by the Rails::Html::FullSanitizer class.
4, via a crafted CDATA node.
3, by leveraging an application's use of a wildcard controller route.
4, via a ..// (dot dot double slash) in a RETR command.
4, via a ../ (dot dot slash) in a RETR command.
4, via a ..\ (dot dot backslash) in a RETR command.
3, via unspecified vectors.
3, via unknown vectors.
2, by triggering an ipc_addid call that leads to uid and gid comparisons against uninitialized data
4, via a crafted SWF file
1," by leveraging an unspecified """"type confusion"
0," by leveraging an unspecified """"type confusion"
4, via unspecified vectors.
2, via the cal parameter.
2, via the page parameter.
2, via the map_id parameter.
2," via the csvfile parameter related to """"upload file functionality."""""
2, via the (1) user or (2) id parameter.
4, via a crafted GIF image file
5, via a valid FileID in the (1) serverFileIds parameter to mobile/sendMsg or (2) arg01 parameter to human.aspx.
3, via unknown vectors.
2, via the query string to mobile/.
2, via the (1) select_invitaion_code_bulk_option or (2) invi_del_id parameter in the pie-invitation-codes page to wp-admin/admin.php.
0, via a full pathname in the url parameter to AjaxProxy.php.
5, by adding a file with an executable extension as an attachment to a new ticket
1, by leveraging permissions to create a user and the _profiles_id parameter to front/user.form.php.
4, via a crafted string containing a list of e-mail addresses in conjunction with parenthesis characters that can be associated with nested comments. NOTE: the default configuration in 1.908 mitigates this vulnerability but misparses certain realistic comments.
4, via vectors involving req_ca_vrfy_smtp and req_ca_vrfy_mta.
4, via a crafted password-protected ZIP archive
0, via empty bzip2 data in a ZIP archive.
4, via shell metacharacters in the user argument in the (1) listShares function in Server.php or the (2) connect or (3) read function in Share.php.
4, via unknown vectors.
4," via a number of crafted """"KOD"""" messages."
4, via a large number of crafted requests.
2, via the (1) PATH_INFO to api/v3/public/shares/downloads/
2, via the isadmin parameter to user-edit-form.jsp.
2, via the cat_description parameter in an updatecat action to admin/categories.php.
4, via a series of crafted requests involving the ARKFS_EXEC_CMD operation.
2, via the h parameter.
2, via the (1) asc or (2) desc parameter.
2, via the (1) id
4, via an add_user action to administrator/index.php.
4, via a crafted media file
4, via a crafted application
1, via unspecified vectors
4, via a symlink attack.
4, via a symlink attack.  NOTE: This vulnerability exists due to an incomplete fix for CVE-2015-7723.
2, via the (1) remoteSourceName in the dropCredentials function or unspecified vectors in the (2) setTraceLevelsForXsApps
2, via the role name
1, via unspecified vectors in the (1) trace configuration page or (2) getSqlTraceConfiguration function
2, via the username
1, via unspecified vectors
2, via the DataVault
5, by creating a new HTTP XML/REST Value sensor that accesses a crafted XML file.
4, via a crafted audio file
2," via an unspecified connection request to the """"host-OS."""""
4, via a symlink attack on a temporary dot file that uses the name of an existing file and a (1) .aux
4, via a long USER command.
4, via a long CWD command.
4, via unspecified vectors.
4, via a crafted packet.
4, via a crafted SSID that is encountered by an applican application
4, via a crafted URL that triggers WebView anchor attachment in an applican application
3, by uploading a file that lacks an extension
2, via unspecified vectors
4, via a crafted URI.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
2, via the (1) search[column] or (2) switch parameter.
3, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via a crafted PNG file.
4, via a .phar file with a crafted TAR archive entry in which the Link indicator references a file that does not exist.
1, by including the / filename in a .zip PHAR archive.
2, via the headindex value in the header in an AIFF file.
4, via unspecified vectors.
4, via a crafted serialized object in the arguments parameter to ajax/api/hook/decodeArguments.
4, via a preemptible hypercall to the multicall interface.
4, via vectors involving the destruction of a domain and using XENMEM_decrease_reservation to reduce the memory of the domain.
2, via the viewDataTable parameter.
0, by using the Apache Axis AdminService deployment method to install a .jsp file.
4, via a request on port 40999
4, via a (1) parameter name to CMSModules/AdminControls/Pages/UIPage.aspx or the (2) CMSBodyClass cookie variable to the default URI.
4, via a URL in the link parameter.
4, via a nonzero bInterfaceNumber value in a USB device descriptor.
0, by sniffing the network for VLAN data within the padding section of an Ethernet frame.
3, via unspecified vectors.
4, via a request to services/messagebroker/nonsecurestreamingamf involving the traceroute functionality.
2, via unspecified vectors involving the ping feature.
0, via the list[select] parameter to index.php.
2, via unspecified vectors
2, via the url parameter.
4, via a long nickname.
4, via unspecified vectors.
2, via taxonomy vocabulary and term names.
2, via note text on the admin listing page.
1," by leveraging the """"Register other accounts"""" permission and knowledge of usernames."
2, via unspecified vectors
4, via a .. (dot dot) in the name of a file
1, by leveraging definition of g2d_lock and g2d_unlock lock macros as no-ops
4, via a crafted JPG.
4, via a crafted image file.
4, via a crafted BMP image file.
5, by entering a crafted URL to trigger an exception
4, via unspecified vectors.
3, via unspecified vectors.
3, via vectors involving an upload of an image file.
3, via unknown vectors.
2, by sniffing the network.
4, via a crafted XML document.
0, by using the Apache Axis AdminService deployment method to publish a class.
1, by leveraging knowledge of a password hash without knowledge of the associated password.
4, via a crafted query.
4, via a Trojan horse DLL in an unspecified directory.
2, via the (1) Attach
4, via unspecified vectors.
1, by sniffing the network.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a long password in HTTP Basic Authentication data.
4, via unspecified vectors.
4, via a long vlp filename.
0, by opening the emergency dialer. Fixed in 8.11+16.04.20160111.1-0ubuntu1 and 8.11+15.04.20160122-0ubuntu1.
4," via a large number of """"teardowns"""" of domains with the vcpu pointer array allocated using the (1) XEN_DOMCTL_max_vcpus hypercall or the xenoprofile state vcpu pointer array allocated using the (2) XENOPROF_get_buffer or (3) XENOPROF_set_passive hypercall."
4, via a ntpdc reslist command.
4, via an ntpdc relist command
2, by sending broadcast packets with invalid authentication to a broadcast client.
2, via unspecified vectors
2, via an HTTP request
0, via vectors involving the (1) GetValueForIPv4Addr
3, via unspecified vectors.
4, via a crafted e-mail address
3, by using a socket that was not properly bound.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-6937.
1, via unspecified vectors
1, via unspecified vectors to the EXECUTE_SEARCH_RULE_SET stored procedure
1," via unspecified vectors related to """"HTTP Login"
1," via unspecified vectors related to """"SQL Login"
4, via unspecified vectors.
4, via a malformed class attribute.
2, via the page title.
2, via the query string to cgi-bin/status.cgi.
0, via vectors involving large management addresses and TLV boundaries.
4, via a malformed packet.
4, via a crafted symmetrically encrypted PGP message.
4, via a crafted filesystem.
4, via a crafted (1) 3DM or (2) Flic Animation file.
4, via a crafted Filmbox document
4, via a crafted (1) U3D
4, via a long session ticket name to the session ticket extension
2, via the (1) SOMVpnSSLPortalDialog or (2) FGDMngUpdHistory.
2, via the (1) sharedjobmanager or (2) SOMServiceObjDialog.
1, via unspecified vectors to the (1) DVRSetupSave method in the STWAxConfig control or (2) SendCustomPacket method in the STWAxConfigNVR control
2, via an index value.
4, via a large payload length field value in an (1) WPS or (2) P2P NFC NDEF record
2, via unspecified vectors
2, via unspecified vectors
4, via a crafted media file
4, via a crafted media file
4, via a large number
3, by reading a cached block.
4, via a URL in the next parameter.
2," via unspecified vectors related to """"phase one 0x412 tag"
4, via a crafted serialized Java object
2, via the file name in a drag-n-drop file upload.
2, via format string specifiers in the \keywords command in a crafted TeX file.
3, by making a prediction of tvsu_tmp_xxxxxXXXXX account credentials that requires knowledge of the time that this account was created
3," by navigating to (1) """"Click here to learn more"""" or (2) """"View privacy policy"""" within the Tvsukernel.exe GUI application in the context of a temporary administrator account"
4, via a Trojan horse DLL in a client install package.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-1492.
4, via unknown vectors.
4, via a packet with an origin timestamp set to zero.
3, via unspecified vectors.
3, by sniffing the network.
4, via a modified request.
1, via crafted requests.
3, by modifying a batch file.
1, by leveraging console administrator access.
2, by adding lines to a logging script.
4, via unspecified vectors.
5, via a crafted HTML document
4, via a Trojan horse executable file in the %SYSTEMDRIVE% directory
1, via crafted packets with incorrect values.
4, via a crafted commandline argument in a link.
2, via the CAMF section in a FOVb image
4, via a crafted application with the system or camera permission
4, via a crafted application with the system or camera permission
4, via a crafted message.
1, via crafted signaling packets from a registered device.
4, via a large number of crafted ARP packets.
4, via unspecified packets.
2, via unspecified vectors related to theme settings.
4, via a crafted image
1, via crafted XML data.
0, via the plan_name parameter to packagehistory/listusagesdata.
2, via the ConnectionId parameter.
4, via shell metacharacters in the app parameter to (1) app_license.shtml
0, via vectors involving Open Script Editor
4, via a Trojan horse DLL that is located in the same folder as F-SecureOnlineScanner.exe.
4, via a crafted request with a valid username.
4, via unspecified vectors.
1, by leveraging presence in an 802.11 network's coverage area and entering an account number.
1, via crafted EDOC files.
1, via crafted EDOC files.
4, via a crafted packet with opcode (a) 0x107 or (b) 0x10a.
4, via a request to an unspecified PHP script.
0, by reading detailed error messages.
3, via XOR calculations.
2, by visiting an unspecified URL.
1, by reading the cgi-bin/passrec.asp HTML source code.
2, via the (1) loginpassword
4, via a crafted KNXnet/IP UDP packet.
4, via a crafted application with the system or camera permission.
4, via a crafted application with the system or camera privilege.
0," via the """"value"""" parameter to """"download."""""
2, via the playlistname field when creating a new playlist.
4, via a pioctl with an input buffer size of 4096 bytes.
4, via a long version string
3, via an (1) unterminated encoding value or (2) incomplete XML declaration in XML data
3, via unspecified vectors.
4, via ` (backtick) characters in a print job.
1, via crafted xMII requests
1, via crafted packets.
5, via a crafted HTTP request.
4, via unspecified vectors.
4, via vectors involving the command block list.
0, via the advSearch parameter to index.php.
2, via the (1) open-tab parameter in a wp_cta_global_settings action to wp-admin/edit.php or (2) wp-cta-variation-id parameter to ab-testing-call-to-action-example/.
4, via a .. (dot dot) in the act parameter to ajax.php.
2, via the object_name parameter in a rs-object_role_edit page to wp-admin/admin.php.
2, via the _refer parameter to wp-admin/users.php.
2," via the (1) order or (2) """"by"""" parameter to admin/orion.extfeedbackform_efbf_forms.php."
2, via the (1) xls_profile parameter to admin/mcart_xls_import.php or the (2) xls_iblock_id
4," via a .. (dot dot) in the element name of the """"work"""" array parameter to admin/bitrix.mpbuilder_step2.php."
1, via serialized data to the JMS port.
1, via vectors related to indexes.
2, via the user cookie and username parameter to admin/password_reset.lua.
0, via the rra_id parameter in a properties action to graph.php.
2, via the (1) Name
1, via crafted serialized data in the selected_graphs_array parameter in a save action.
2, via the _method parameter.
1, via crafted header dimensions in a DICOM image file
2, via an embedded JPEG-LS image with dimensions larger than the selected region in a (1) two-dimensional or (2) three-dimensional DICOM image file
2, via the PATH_INFO to rest/prototype/1/session/check.
0, via the decoratorName parameter to (1) spaces/viewdefaultdecorator.action or (2) admin/viewdefaultdecorator.action.
4, via unspecified vectors.
2, via an Authorization request that lacks a Date header.
4, via CRLF sequences in an (1) email address to the validateAddress function in class.phpmailer.php or (2) SMTP command to the sendCommand function in class.smtp.php
0, via vectors involving flash message rendering.
1, by triggering access to an unauthorized audio output device.
4, via a crafted URL.
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted e-mail message
4, via a crafted CSV file
4, via a crafted media file
4, via a crafted media file
4, via a crafted media file
5," via a crafted web site that is mishandled during """"Add to home screen"""" bookmarking."
3, via unspecified vectors.
4, via a crafted command
4, via a crafted command
4, via a crafted command
4, via a crafted command
1, via crafted packets to a TCP port.
4, via a crafted URL.
3, via crafted keyctl commands that negatively instantiate a key
2," via the """"/op *"""" command in a query."
4, via a crafted Action Message Format (AMF) payload.
4, via shell metacharacters in a font name.
4, via a circular isochronous transfer descriptor (iTD) list.
4, via a ; (semicolon) character in a print job
4, via a crafted integer value to the (1) AttachToSS
3, via unknown vectors.
2, via directory traversal sequences in the XML install file in an extension package archive.
3, via unknown vectors.
2, via unspecified session values.
4, via a crafted request.
4, via a crafted biClrUsed value in a BMP file
1, via crafted RLE data in a (1) BMP or (2) FLI file
4, via a crafted PDF document.
4," via a base64-encoded URL in conjunction with a """"clear text"""" one in a coaching page"
2," via the serendipity[entry_id] parameter in an """"edit"""" admin action to serendipity_admin.php."
0, via the cg_g parameter in a save action.
2, via the (1) Locale or (2) FailedLoginCount parameter to admin/security/EditForm/field/Members/item/new/ItemEditForm.
4, via a crafted (1) drive letter or (2) pInName argument.
2, via the dhcp_handler argument.
0, by leveraging the relationships between a key buffer and a destroyed array.
0, via format string specifiers in a string that is misused as a class name
3, by specifying KADM5_POLICY with a NULL policy name.
4, via a request specifying a NULL principal name.
1, via unknown vectors
2, via an RGBA pixel array with crafted dimensions
2, via the SamplesPerPixel tag in a TIFF image.
2, via the Username/Email.
4, via a large width field in a BMP image.
4, via a packed TIFF image.
2," via the (1) external calendar url or (2) the bank name field in the """"import external calendar"""" page."
2, via the (1) deviceTypeID parameter to DeviceType/getDeviceType.do; the (2) policyActionClass or (3) policyActionName parameter to PolicyAction/findPolicyActions.do; the deviceID parameter to (4) SingleDeviceMgmt/getDevice.do or (5) device/editDevice.do; the operation parameter to (6) ajax.do or (7) xmlHttp.do; or the (8) policyAction
4, via a crafted roster-push IQ stanza.
2, via an invalid character in a PTR response
4, via a crafted email
4, via a crafted packet with zlib compression.
4, via a crafted component name.
3, via regex metacharacters in the user name
4, via a debug_abbrev section marked NOBITS in an ELF file.
4, via a crafted JPEG 2000 image
4, via a crafted request
4, via unspecified vectors.
3, via unknown vectors.
4, via unspecified vectors.
2, via unspecified vectors related to extension data during an extension installation.
4, via unknown vectors.
4, via a link field.
1, via unspecified vectors
4, via a zero-length EAP-PWD packet.
4, via a crafted (1) commit or (2) confirm message
2, via the (1) email_sendmail[from_name]
4, via unspecified vectors.
4, via a .. (dot dot) in the _skin parameter to index.php.
4, via a crafted password.
4, via a large VERIFY_INFORMATION.Length value in an IOCTL_DISK_VERIFY ioctl call.
4, via a long vault GUID in an ioctl call.
4, via an out-of-range time value.
2, via the size argument to the __hcreate_r function
4, via a long catalog name.
0, via an invalid number of samples per pixel in a LogL compressed TIFF image
4, via a crafted TIFF image
4, via a crafted TIFF image.
4, via a crafted TIFF image
4, via a writev system call that triggers a zero length for the first segment of an iov.
2, via the (1) lengths_age or (2) lengths_incr parameter.
0, by sending certain IPv4 packets to an incompletely configured interface
4," via a """"deeply nested element with infinite size"""" followed by another element of an upper level in an EBML document."
4, via a crafted UTF-8 string
5, via a crafted length value in an EBML id
1, via crafted EBML lacing
0, via the _mbox parameter in a mail task to the default URL
0, via a full pathname in the _alt parameter
1, via crafted fields that are mishandled during the rendering of the (1) Analysis page
4, via a crafted schema-browse URL.
2, via the entry parameter to a plugins/cache URI.
2, by conducting filesystem operations before the SEP device manager recognizes a new USB device.
2," via an unexpected character immediately after the """"<!DOCTYPE html"""" substring in a crafted HTML document."
0, via vectors involving numeric form fields.
4, via a crafted GIF file.
2, via the url parameter.
1, by editing user account information in the templates.asmx.cs file.
2, via the name parameter to (1) the media page
4, via a large AIO iovec.  NOTE: this vulnerability exists because of a CVE-2012-6701 regression.
2, via the author name in a comment.
3, by uploading a file with a (1) .pht
3," via vectors related to the """"Authenticate buddy"""" menu item."
4, via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-3440.
4, via a large ZF block size in an ISO file
4, via a long pathname in an ISO file.
5, by writing to a page that is associated with a different user's file after unsynchronized hole punching and page-fault handling.
4, via a large number of languages in an EPOC installation file of type SIS_FILE_MULTILANG.
1," via unspecified vectors that trigger a """"catastrophic backtracking issue for the em inline rule"
4, via a long version string
4, via a crafted file or directory name.
1, via crafted input in a parse call
3, via unspecified vectors.
4, via a symlink attack in an archive.
3, by leveraging a template with an attribute that is not quoted.
3, by leveraging a template with an attribute that is not quoted.
4, via a long JSON-encoded number
4, via a crafted SVG
2, via an invalid blend mode in the ExtGState dictionary in a crafted PDF document.
4, via unknown vectors.
1, by writing an odd number of clusters to the third to last entry on a FAT12 filesystem
4, via a crafted imagefilltoborder call.
5, by triggering an error.
4, via a crafted block count and block size of a sparse header
4, via a crafted image
4, via a digest with trailing data
4, via a crafted application
5, via a crafted tga file.
4, via a crafted length value
4, via a crafted .pict file.
4, via a crafted png file.
4, via a crafted image file.
4, via a reply with an empty DNS address that has an (1) A or (2) AAAA record defined locally.
4, via a crafted HDR file.
4, via a crafted MIFF file.
4, via a crafted PDB file.
4, via a crafted VICAR file.
1, via crafted cpio file.
2, via an invalid character in the name of a cab file.
5, via a crafted cab files
4, via a crafted (1) lzh or (2) lha file.
4, via a crafted ar file.
4, via a crafted mtree file.
4, via a crafted 7z file
4, via a crafted tar file.
4, via a crafted mtree file
4, via a crafted rar archive.
4, via a crafted zip file
4, via a crafted mtree file.
4, via a tar file.
2, via an ISO with a directory that is a member of itself.
5, via a crafted mtree file
5, via a crafted tar file
4, via a crafted tar file.
4, via a crafted rar file.
4, via a blocked site link.
4, via a crafted application
1, via crafted data
3, by reading a zero byte as input
3, by leveraging a call to mysql_errno after a failure of my_login.
3, via vectors involving events that are mishandled during a span of multiple HW PMUs.
3, via vectors involving a bind system call on a Bluetooth RFCOMM socket.
4, via a crafted SUN file.
4, via a crafted SUN file.
4, via a crafted DDS file.
0, by leveraging improper access to a certain error field.
5, by detaching a device during an SG_IO ioctl call.
1, by leveraging incorrect handling of an swevent data structure during a CPU unplug operation.
5, by reading a tty data structure.
4, via a crafted (1) F_OFD_GETLK
4, via accept(2) system call for AF_ALG socket without calling setkey() first to set a cipher key.
2, via escape sequences that modify the window title and then are written to the terminal
4, via a large input
1, via vectors related to the forum password.
4, via unspecified vectors.
3, via unspecified vectors.
4," via vectors related to """"old upgrade files."""""
3, via vectors involving error log files.
4, via a long string sent to TCP port 4242.
1, via vectors related to m_offsets.size.
4, via a long string
1, via vectors related to computing a size in bytes
4, via a malformed pattern
1, via vectors related to extended regular expression processing.
3, via dropping a malicious file for the path.
2, via brute force attacks against the database.
2, via renaming the malware.
0, via executing preexisting specifically crafted malware during installation or uninstallation
0, via executing preexisting specifically crafted malware during installation or uninstallation
2, via multiple parameters
2, via the destination parameter.
4, via a crafted audio file with a negative sample rate.
4, via a crafted audio file.
2, via the (1) album name
2, via the (1) note title or (2) file name of attachments.
2, via the album title.
0, via the download parameter in the (1) check_download and possibly (2) check_filename function in upload/admin2/model/products/model_admin_download.php or remote authenticated users with a valid Paypal transaction token to execute arbitrary SQL commands via the ref parameter in the (3) orderUpdate function in upload/catalog/extension/payment/paypal.php.
4, via a URL in the file_path parameter to upload/admin2.
2, by reading DNS queries. A new (default) feature was added to iTerm2 version 3.0.0 (and unreleased 2.9.x versions such as 2.9.20150717) that resulted in a potential information disclosure. In an attempt to see whether the text under the cursor (or selected text) was a URL
4, via port 20931.
3, via access to device/VM restore mount points
4, via a one-byte heap overflow.
4, via a crafted Windows service.
4, via a victim's credentials
4, via a .. (dot dot) in the files parameter to css/css.php.
5, via a small compressed file that has a large size when uncompressed.
1, via unspecified vectors
2, via unspecified vectors
3, by modifying a webpart
5, via a modified RDP client
2, via unspecified vectors
4, via a crafted URL
4, via a crafted URL
1, via crafted data
4, via a crafted request
5, via a crafted Office document
4, via a crafted URL in a (1) e-mail message or (2) Office document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, via unspecified vectors
2, via unspecified vectors
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted PDF document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted application
4, via a crafted web site
1, via crafted HTTP 2.0 requests
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
2, via unspecified vectors
4, via a crafted web site
1, via unspecified vectors
1, via crafted JavaScript code
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted web site
1, via unspecified vectors
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
0, by triggering an MD5 collision.
4, via unspecified vectors.
5, by using a specially crafted and malformed URL.
4, via unspecified vectors. IBM X-Force ID: 109399.
5, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
4,upload arbitrary files. A remote attacker could exploit this vulnerability to
1, via unspecified vectors
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted URL.
1, by leveraging administrator access to a hardcoded password
2, by reading cached browser data. IBM X-Force ID: 110328.
3, via unspecified vectors.
0, by reading an Application Error message.
1, via an external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
1, via crafted XML data. IBM X-Force ID: 110510.
4, via unspecified vectors.
2, via unspecified display commands.
1, by triggering many errors.
4, via a crafted mmapplypolicy command.
4, via a crafted URL.
4, via a crafted PDF document
5, via a crafted PDF document
4, via a crafted PDF document
4, via a crafted URL
4, via a crafted URL.
1, by leveraging unspecified privileges. BM X-Force ID: 111234.
5, via unspecified vectors.
4, via unspecified vectors.
3, by reading a report.
4, via a modified .beswrpt file.
4, via a crafted URL.
4, via a crafted PDF document
4, via unspecified vectors.
0, by reading stack traces in returned responses.
3, via unspecified vectors. IBM X-Force ID: 111480.
1, via vectors related to granting unauthenticated access to Document Manager. IBM X-Force ID: 111486.
4, via a crafted URL
3, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
2, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via unspecified vectors. IBM X-Force ID: 111640.
4, via unspecified vectors. IBM X-Force ID: 111643.
4, via a crafted URL.
3, via unknown vectors. IBM X-Force ID: 111736.
4, via unspecified vectors. IBM X-Force ID: 111737.
4, via a REST API call.
4, via a crafted URL
5,upload a malicious file to
4, via a crafted web site.
1, by leveraging weak encryption. IBM X-Force ID: 112071.
0, by reading an error message. IBM X-Force ID: 112072.
1, via crafted input to an application that was built with this product.
4, via unspecified vectors.
4, via a crafted URL.
1, by reading log files.
0, by sniffing the network for HTTP traffic.
4, via a crafted URL.
2, via unknown vectors related to Scheduler
1, via vectors related to SMB Utilities.
4, via vectors related to Admin.
1, via vectors related to Cluster Manageability and Serviceability.
1, via vectors related to Libc.
1, via vectors related to Fusion HR Talent Integration.
1, via vectors related to the Activity Guide sub-component.
3, via vectors related to Security.
2, via unknown vectors related to Manage Requisition Status.
5, via vectors related to Federation protocol support.
2, via unknown vectors related to System Archive Utility.
1, via unknown vectors related to Solaris Kernel Zones
1, via unknown vectors related to Monitoring and Diagnostics.
4, via vectors related to Monitoring and Diagnostics SEC.
1, via vectors related to Enterprise Infrastructure SEC
1, via vectors related to Enterprise Infrastructure SEC
2, via unknown vectors related to Solaris Kernel Zones.
2, via unknown vectors related to Verified Boot.
1, via unknown vectors related to Scheduler
1, via vectors related to SSL support
1, via unknown vectors related to Solaris Kernel Zones
3, via vectors related to SSL support.
1, via vectors related to SSL support
1, via vectors related to NFSv4.
3, via unknown vectors.
1, via unknown vectors related to Embedded Server.
4, via vectors related to MWA Server Manager.
1, via vectors related to REST Framework
1, via vectors related to REST Framework
3, via vectors related to Kernel DAX.
1, via unknown vectors related to Fluid Homepage and NavBar.
1, via unknown vectors related to Multichannel Framework
2, via unknown vectors related to Resource Group Manager.
1, via vectors related to POS.
1, via unknown vectors related to Multichannel Framework.
0, via unknown vectors related to Fluid Core.
1, via vectors related to PIA Core Technology.
1, via unknown vectors related to Load Testing for Web Apps
1, via unknown vectors related to Load Testing for Web Apps
0, via unknown vectors related to Load Testing for Web Apps
1, via unknown vectors related to Test Manager for Web Apps
2, via unknown vectors related to Test Manager for Web Apps
1, via unknown vectors related to Test Manager for Web Apps
1, via unknown vectors related to Test Manager for Web Apps.  NOTE: the previous information is from the January 2016 CPU. Oracle has not commented on third-party claims that this is a directory traversal vulnerability in the DownloadServlet servlet
2, via unknown vectors related to Test Manager for Web Apps
2, via unknown vectors related to Test Manager for Web Apps
2, via unknown vectors related to Test Manager for Web Apps
1, via unknown vectors related to Load Testing for Web Apps
1, via unknown vectors related to Test Manager for Web Apps
2, via unknown vectors related to Load Testing for Web Apps.  NOTE: the previous information is from the January 2016 CPU. Oracle has not commented on third-party claims that the UploadFileAction servlet allows remote authenticated users to upload and execute arbitrary files via an * (asterisk) character in the fileType parameter.
1, via unknown vectors related to Load Testing for Web Apps
1, via unknown vectors related to Kernel Cryptography.
1, via unknown vectors related to Core.
1, via vectors related to SGD Core.
2, via unknown vectors related to Optimizer.
3, via vectors related to DML
3, via vectors related to DML
1, via unknown vectors related to AR Web Utilities
2, via unknown vectors related to Learner Administration.
2, via unknown vectors related to AP Web Utilities.
1, via unknown vectors related to Business Views Catalog.
1, via unknown vectors related to Common Components
1, via unknown vectors related to Self Service - Common Modules.
3, via vectors related to BIS Common Components.
3, via vectors related to BIS Common Components
2, via vectors related to BIS Common Components
1, via unknown vectors related to QA / Order Management Integration.
2, via unknown vectors related to General utilities
2, via unknown vectors related to General utilities
1, via unknown vectors related to AR Web Utilities
3, via vectors related to Java APIs.
1, via unknown vectors related to Redirection.
2, via unknown vectors related to Work Provider Administration.
2, via unknown vectors related to Oracle Diagnostics Interfaces.
1, via unknown vectors related to Messaging.
1, via vectors related to RPC.
2, via unknown vectors related to error messages.
2, via unknown vectors related to Person.
2, via unknown vectors related to Preview.
2, via unknown vectors related to Architecture.
2, via unknown vectors related to Common Components
2, via unknown vectors related to Common Components
2, via unknown vectors related to Common Components
2, via unknown vectors related to Common Techstack.
3, via unknown vectors.
1, via vectors related to OTA Self Service.
1, via vectors related to ICX LOVs.
3, via vectors related to BIS Common Components.
3, via vectors related to BIS Common Components
3, via unknown vectors.
4, via vectors related to AME Page rendering.
1, via vectors related to BIS Common Components
3, via vectors related to BIS Common Components
3, via vectors related to BIS Common Components
1, via vectors related to ICX Error.
2, via unknown vectors related to iHelp.
2, via unknown vectors related to Consolidation Hierarchy Viewer.
4, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors related to Supplier Change.
0, via unknown vectors related to Core.
1, via vectors related to DML.
1, via vectors related to DML.
2, via unknown vectors related to Optimizer.
2, via unknown vectors related to Partition.
3, via unknown vectors.
1, via unknown vectors related to replication.
1, via unknown vectors related to InnoDB.
3, via unknown vectors related to Optimizer.
4, via unknown vectors.
2, via unknown vectors related to Zones.
1, via vectors related to the Automated Installer sub-component.
3, via shell metacharacters placed in 'hostname' of a machine.
3, via vectors related to Optimizer.
1, via vectors related to DML.
1, via vectors related to FTS.
4, via vectors related to InnoDB
3, via vectors related to InnoDB.
1, via vectors related to InnoDB
4, via vectors related to JSON.
4, via vectors related to Optimizer.
3, via vectors related to Optimizer.
1, via vectors related to Options.
4, via vectors related to Partition.
1, via vectors related to Performance Schema.
1, via vectors related to Security: Encryption.
4, via vectors related to Locking.
1, via vectors related to InnoDB.
1, via vectors related to Fwflash.
3, via vectors related to OSSL Module.
1, via vectors related to Pre-Login.
1, via vectors related to UIF Open UI.
1, via vectors related to Email.
1, via vectors related to the kernel.
4, via unknown vectors.
1, via vectors related to Services Procurement.
1, via vectors related to POS.
1, via vectors related to Console.
1, via vectors related to the Login sub-component.
4, via a malformed DSA private key.
2, via the (1) role or (2) user parameter to services/usermanager/users/.
0, via the title parameter when adding a (1) link
2, via the PATH_INFO to portal.
1, via vectors related to modified requests.
3, by making a TIOCGETD ioctl call during processing of a TIOCSETD ioctl call.
4, via a file: URL in the WebHDFS URL configuration.
1, by leveraging mishandling of a resource-level exclude policy.
4, via a crafted TIFF file.
0, by leveraging an abnormally closed connection.
4, via a crafted UDP DNS response.
4, via a crafted DNS response related to CNAME response processing.
4, via a colon in a remote file name.
2, via the (1) reflect
2, via the (1) page or (2) action parameter.
0, via the delid parameter or remote authenticated users to execute arbitrary SQL commands via the (2) view
2, via the s variable.
4, via a crafted FLI file.
4, via a crafted serialized object.
4, via a .. (dot dot) in a ZIP archive entry.
4," via a """"%{}"""" sequence in a tag attribute"
3, by opening a JRMP listener.
4, via unspecified vectors.
1, via serialized data in an XML file
4," via a request that contains (a) lowercase or (b) """"meaningless"""" characters."
4, via a long digit string that is mishandled by the (1) BN_dec2bn or (2) BN_hex2bn function
1, by providing an invalid username in a connection attempt
4, via a crafted application that mishandles a Desc Size element in an ELF Note
2, via an application that triggers loading of a crafted TTF font
1, by leveraging access to the local physical environment during execution of a crafted application
5, via a crafted media file
4, via a crafted application
4, via a crafted application that leverages conn_launcher access
1, by leveraging kernel access
5, by triggering a large number of configuration entries
1, via unspecified vectors
4, via a crafted media file
4, via a crafted media file that triggers a certain negative value
4, via a crafted media file
5, via a crafted media file
4, via unspecified vectors.
4, via unspecified vectors.
1, via crafted input.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted request.
4, via a crafted RPC request.
4, via a crafted RPC request.
3, via unspecified vectors.
5, via unspecified vectors.
4, via a direct file request.
4, via a crafted web request.
4, via a malformed HTML document.
4, via a direct request.
4, via a crafted URL.
3, by reading a configuration file.
0, by executing the ping function.
0, by sending two crafted ping requests.
4, by appending a query to a REST request.
4, via a POST request containing an XML external entity declaration in conjunction with an entity reference
4, via a members/xcp_member API call.
4, via a crafted pathname.
3, via unspecified vectors.
1, by reading error messages.
4, via a modified parameter.
4, via web-site elements with crafted transparency or opacity.
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
1, by leveraging admin access and entering a sudo command.
4, via a Linux backup-restore operation.
1, by leveraging administrative privileges.
1, by leveraging access to (1) a different account with the same role as a target account or (2) an account's session at an unattended workstation.
0, via a modified token serial number within a PIN change request
4, via a modified URL.
0, via a crafted parameter to a command that is available in the sudo configuration.
2, via unspecified input that improperly interacts with the AngularJS framework.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
0, via a crafted parameter in a URL.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a folder title field that is mishandled in the Deletion popup dialog.
5, via (1) profile_desc
4, via webdynpro/dispatcher/sap.com/caf~eu~gp~example~timeoff~wd requests
2, via the _EXT_FORM_HANDLER_orderBy parameter.
2, via the _EXT_STRUCTURE_direction parameter.
1, by leveraging control over a forwarded agent-socket.
1, by leveraging mishandling of SYSCALL singlestep during emulation.
0, by modifying the instruction stream asynchronously while performing certain kernel operations.
3, by leveraging a missing NULL pointer check.
4, via a VIRTIO_GPU_CMD_GET_CAPSET command with a maximum capabilities size with a value of 0.
4, via a scanout id in a VIRTIO_GPU_CMD_SET_SCANOUT command larger than num_scanouts.
4," via a \"""" (backslash double quote) in a crafted Sender property."
3, by uploading a war file or (2) possibly write to arbitrary files and cause a denial of service by uploading an HTML file.
4, via a crafted id (aka dir) parameter
4, via a crafted dir parameter
4, via a crafted dir parameter
4, via a xml file with multiple nested open tags.
0, by leveraging improper interaction between the escapeshellarg function and internal escaping performed in the mail function in PHP. NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-10033.
4, via a crafted image file.
4, via a crafted XML file.
4, via unspecified vectors.
4, via a crafted RLE file.
4, via a crafted RLE file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted image file.
4, via a crafted TIFF file.
3, via JIT data.
4, via a crafted file
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
3," via vectors involving """"too many exceptions"
4, via a crafted XML file.
4, via a mat file with an invalid number of frames.
4, via a crafted mat file.
4, via a crafted mat file.
4, via a crafted HTTP Host header
4," via a \"""" (backslash double quote) in a crafted e-mail address in the (1) From"
4, via a crafted repo with a malicious git log in the current working directory.
5," via a crafted image name that is mishandled during a """"Run a plugin"""" action."
4, via a crafted filename that is mishandled in a certain error case.
2, via the $page['tab'] variable (aka the mode parameter).
2, via the tab parameter.
0, by leveraging incorrect permissions applied to a RESTful request.
4, via a hard link attack on the Nagios init script file
5, by writing a negative integer to the (1) cmd_expand function
4, via a crafted image.
2, via the activation parameter.
2, via the SAMLRequest parameter.
4," via a command that uses """"cardsList"""" after the handle has been released through the SCardReleaseContext function."
1, via unspecified vectors
2, by providing crafted tax-rate table values in CSV format.
4, via vectors involving categorysearch and smartSearch.
4, via a chroot command to /.
1, via unspecified vectors
4, via a crafted SAML XML request or response.
4, via a crafted non-flush packet.
2, via an empty packet line.
1, via unspecified vectors
1, by leveraging clobbering of the error variable.
1, by leveraging control over the email->from field to insert sendmail command-line arguments.
2, via the toggle_ids array parameter in latest.php.
4, via a Trojan horse resource in an unspecified directory.
4, via a crafted pathname in a banner URL field.
3, by leveraging a missing malloc check.
1, via vectors related to a string copy.
3, via unspecified vectors.
4, via a crafted SAML XML request or response.
3," by overriding NetConnection object properties to leverage an unspecified """"type confusion"
1, via crafted ioctl calls on the /dev/kvm device.
4, via a large number of device unplug operations.
4, via a truncated manifest entry in a PHAR archive.
4, via a flash.geom.Matrix callback
4, via a crafted PHAR archive with an alias mismatch.
2, via an inapplicable class name in a wddxPacket XML document
2, via an image with a crafted ICC profile
1, via vectors related to decrementing the u variable.
5, via a crafted image file.
0, via vectors involving the number of horizontal and vertical chunks in an image.
4, via a crafted WV file.
2, via unspecified vectors
4, via a crafted WV file.
4, via a crafted WV file.
4, via a crafted WV file.
4, via a .. (dot dot) in a TAR archive entry.
1, by invoking the apply.cgi URL on the web server of the device. This special URL is handled by the embedded web server (uhttpd) and processed accordingly. The web server also contains another URL
1, via crafted JPEG-XR data.
4, via a crafted epub file with JavaScript.
3, by causing a file transfer connection to expire.
4, via a file transfer request for a contact that is not in the contact list.
2, via unspecified vectors
4, via shell metacharacters in a string to the speak
4, via shell metacharacters in a string to the (1) to_speech or (2) to_mp3 method in lib/festivaltts4r/festival4r.rb.
0, via vectors involving the label_len variable
4, via vectors involving a long string in brackets in the ip_as_string argument.
2, via an empty hostname.
4, via a crafted audio file.
4, via a crafted tag value.
1, via unspecified vectors
2, by making multiple bind system calls without properly ascertaining whether a socket has the SOCK_ZAPPED status
2, via the format parameter in a download log request to index.php.
2, via the path info to index.php.
2, via the name when creating a new monitor.
0, via the limit parameter in a log query request to index.php.
2, via the ZMSESSID cookie.
4, by terminating a TLS handshake early.
4, via a crafted archive file.
2, via unspecified vectors
4, via a crafted rule that is mishandled in the yy_get_next_buffer function.
4, via a crafted rule that is mishandled in the yr_parser_lookup_loop_variable function.
4, via a large number of VIRTIO_GPU_CMD_RESOURCE_ATTACH_BACKING commands.
2, via unspecified vectors
4, via a flood of ICMPv4 Port Unreachable packets.
0, via UDP traffic that triggers an unsafe second checksum calculation during execution of a recv system call with the MSG_PEEK flag.
2, via unspecified vectors
1, via unspecified vectors
3, by leveraging inclusion of mpost in shell_escape_commands in the texmf.cnf config file.
3, via vectors involving an empty sequence.
4, via a crafted image file
1, via unspecified vectors
0, by leveraging incorrect cleanup of JP2 box data on error. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8887.
4, via a crafted file
4, via a crafted ELF file
4, via a crafted (1) sh_off or (2) sh_size ELF header value
2, via unspecified vectors
4, via a crafted TIFF image
4, via a crafted TIFF image
4, via a crafted TIFF image
2, via unspecified vectors
5, via a crafted TIFF image
4, via a crafted TIFF image
4, via a crafted TIFF image
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
4, via a crafted serialized Java object
1, via unspecified vectors
5, by sending a crafted packet several times
5, by sending a crafted packet to the SAPSTARTSRV port
1, via unspecified vectors
4, via shell metacharacters in the X-Forwarded-For HTTP header to photo/login.php.
0," by leveraging setuid execution of a """"synophoto_dsm_user --copy-no-ea"""" command."
4, via shell metacharacters in the crafted 'X-Forwarded-For' header.
2, via unspecified vectors
0, via a full pathname in the id parameter.
4, via unspecified vectors.
4, via a crafted file.
4, via a crafted file.
5, via a crafted TIFF file.
2, use the TEE without authenticating. All apps using authentication-gated cryptography are vulnerable to this attack
4, via a crafted PDF file.
4, via unspecified vectors.
4, via a crafted bmp file.
4, via a crafted bmp file.
3, via parameters in demo/phpThumb.demo.showpic.php.
4, via a carrier (aka courier_id) parameter to openbay.php.
1, by bypassing the strip_image_tags protection mechanism in system/classes/Kohana/Security.php.
5," via a URL that contains a """" character"
4, via a field that contains an exception message.
4, by sending a ping frame. The ping functionality by default responds with a pong frame and the previously given payload of the ping frame. This is exactly what you expect
5,send a specific series of messages to
0, by logging in as a user not in the cacti database
4, via an out-of-sequence NEWKEYS message
4, via a '|' character in the status_rrd_graph_img.php graph parameter
0, by examining the responses to requests for these resources.
4, via ajax_maketext_syntax_util.pl (SEC-109).
1, by faking static documents (SEC-92).
1, via DNS clustering requests (SEC-93).
3, via shell metacharacters in the username parameter (a failed login attempt returns the command-injection output to a limited login failure field). This is fixed in 16.6.
2, via an OS command in the SystemCommand parameter.
4, via a malformed image. The Samsung ID is SVE-2016-6560 (October 2016).
4, via an API.
2, via the System Console UI.
4, via a crafted string.
4, via a crafted URI.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unknown vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
4, via a crafted post that is mishandled when displaying a Timeline.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted web page.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted application.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted URL.
1, via an API call
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via a Trojan horse Node.js module in a parent directory of a directory named on a require line.
3, via unspecified vectors.
5, via unspecified vectors.
1, via crafted serialized values in a POST request.
3, via unspecified vectors.
4, via unspecified vectors.
1, via vectors related to API use.
4, via a crafted URI.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a .. (dot dot) in an unspecified path.
1, via vectors related to OpenSSH options.
3, by setting a POSIX ACL
4, via a long pathname.
4, via shell metacharacters in a directory name in an adf file.
3, via vectors related to an error message.
4, via a crafted hidden service descriptor.
4, via a crafted SSL packet.
4, via a high rate of unspecified VXLAN packets.
4, via a crafted signature record for a DNAME record
0, by leveraging certain intranet connectivity and sending a malformed HTTPS request
4, via a crafted HTTP request
2, via an HTTP request that is inconsistent with a pattern filter
1, via crafted deserialized data in an HTTP POST request
2, via unspecified parameters
4, via a crafted cookie
2, via an AnyConnect authentication attempt
0, via an unspecified parameter in a POST request
1, via crafted HTTPS requests
4, via a crafted URL
4, via a crafted HTTP request
1, via crafted REST requests
4, via a crafted HTTP request
4, via a crafted value
0, via vectors involving HTML entities
0, via a crafted parameter
4, via a crafted URL
2, via unspecified parameters
4, via a crafted URL
2, via the host tag parameter
4, via a flood of HTTPS packets
4, via a crafted URL
4, via a direct request to an unspecified URL
1, via crafted markup data
1, by leveraging administrator privileges
2, via unspecified web requests
4, via a request for an unspecified file
1, by accessing an administrative page
4, via a crafted HTTP request
4, via a crafted HTTP request
4, via a crafted HTTP request
4, via a long h_sortWireless parameter
1, via crafted Cisco Discovery Protocol (CDP) packets
1, via unspecified parameters
2, via an SNMP request for unspecified BRIDGE MIB OIDs
4, via a crafted POST request
4, via a long LanguageSelect parameter
1, by making requests during the early part of the boot process
5, via a crafted SIP message
0, by reading help files
1, via an external entity declaration in conjunction with an entity reference
1, via fragmented packets
1, via crafted fields in HTTP headers
4, via a crafted sequence of IPv6 packets
4, via a crafted TCP segment
4, via a crafted DHCPv6 Relay message
4, via a crafted header in a packet
4, via a crafted HTTP request
1, via crafted markup data
4, via a crafted value
4, via a crafted HTTP request that is mishandled during viewing of a log file
4, via a crafted HTTP request
4, via a crafted upgrade parameter
1, via crafted DHCPv6 packets
4, via a crafted mew packer executable.
4, via a crafted 7z file.
1, via crafted parameters in a GET request
4, via a crafted URL
2, via unspecified parameters
4, via a request to the Network Mobility Services Protocol (NMSP) port
4, via a crafted HTTP POST request
1, via an HTTP file-range request for cached content
0, via an unspecified HTTP status code
1, via crafted packets
1, via crafted attribute-value pairs
4, via a crafted HTTP request
1, via unspecified vectors
1, via crafted CLI input
4, via a crafted HTTP request
2, via unspecified vectors
4, via a crafted URL
4, via a crafted URI in a SIP header
4, via a crafted value
1, via crafted CLI commands
4, via a crafted HTTP request
2, by placing crafted code in a parameter value
4, via a Trojan horse tcapi.dll that is located in the same folder on a remote file share as a pcap file that is being processed.
1, via crafted ARP packets
4, via a crafted LLDP packet
1, via crafted SSH traffic
1, via crafted SCP messages
4, via a crafted HTTP request
4, via a crafted HTTP request
4, via a crafted SNMP request
1, via crafted OSPFv3 packets
2, via an invalid file
4, via a crafted GTPv1 packet
4, via a crafted URL
1, via crafted executable content in a ZIP archive
4, via a crafted URL
0, by establishing an FTP session and then improperly terminating the control connection after a file transfer
2, via GET API calls
1, via crafted field values
3, via vectors related to subtypes.
1, via unspecified vectors
1, via unspecified vectors
4, via a crafted URL
3, via vectors related to an upload's file type
1, via crafted parameters
1, by leveraging knowledge of the read-write community
2, via long parameters in a packet header
0, by leveraging unspecified container access
1, via crafted HTTP requests
1, via crafted attributes in a BGP message
1, via crafted wireless management frames
4, via a crafted attachment in an e-mail message
4, via a crafted value
4, via a crafted Cisco Discovery Protocol packet that triggers an out-of-bounds memory access
5, by sending a traffic flood to upstream devices
1, via crafted fields
4, via a crafted URL
5, via a crafted HTTP request
1, via crafted parameters
0, by reading administrative pages
4, via a crafted HTTP request
0, by injecting these commands into an application script
1, via unspecified vectors
1, via crafted parameters
5, via a crafted URL.
4, via a crafted file request to /list.
1, via crafted signature padding
2, via unspecified vectors
4, via unspecified vectors.
4, via vectors related to the option length.
4, via a crafted path
1, via crafted MetaActions in an (1) ODP or (2) OTP file.
0, via vectors involving corrupt chunks.
3, by using (1) fileUpload.do or (2) lib-1.0/external/flash/fileUpload.do to upload a JSP file
4, via a .. (dot dot) in the realName parameter.
1, via crafted entry-size values in a ZIP archive.
4, via a SQL expression in the filter parameter.
4, via a (1) stylesheet name or (2) template name to wp-admin/customize.php.
2, via an element attribute.
1, by using service manager to invoke the gbak utility with an invalid parameter.
4, via a crafted ICC color profile in a JPEG 2000 image file
2, via unspecified vectors
0, via vectors involving crafted mmap calls for /proc pathnames
2, via the nrfEntitlementReport.do CGI.
4, via a .. (dot dot) in a filename within a multipart/form-data POST request to a LiveTime.woa URL.
4, via a request to a LiveTime.woa URL
2, via the entityName parameter.
4, via a certain (1) user name
4, via a crafted URL.
4, via a PREVIEW value for the fileType field.
4, via (1) the NetworkName property value to ObjectXSNAConfig.ObjectXSNAConfig in iconfig.dll
3, via shell metacharacters in the ntpServer parameter.
1, via crafted input
4, via a .. (dot dot) in a blob name.
4, via unspecified vectors.
0, via vectors involving an unfocused custom button.
3, via unknown vectors.
4, via unspecified vectors.
0, by leveraging incorrect reliance on the resource context pointer.
2, by triggering an image download after a certain data structure is deleted
3, via unknown vectors.
3, via unknown vectors.
1, via crafted JavaScript code.
0, by triggering an error in creating an MHTML document.
4, via a crafted web site
4, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
1, by leveraging access to a renderer process and reusing a request ID.
4, via unspecified vectors.
4, via a crafted web site.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
5, by uploading a crafted image file with an executable extension
4, via unspecified vectors.
3, via unspecified vectors.
4, via a quarantined application.
3, by operating a crafted captive portal.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted USB device.
4, via a crafted app
4, via a crafted app
4, via a crafted .dfont file.
4, via a modified app.
4, via a crafted app.
4, via a Trojan horse DLL in the current working directory.
4, via a crafted app
4, via a crafted app
4, via unspecified vectors.
4, via a crafted app
4, via a crafted app
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted XML document.
4, via a javascript: URL.
4, via unspecified vectors.
4, via a crafted FlashPix image
4, via a crafted FlashPix image
4, via a crafted Photoshop file.
4, via a tel: URL.
4, via a crafted web site.
4, via a crafted geolocation request.
3, via unspecified vectors.
2, via an iBooks Author file containing an XML external entity declaration in conjunction with an entity reference
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
5, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
5, via a crafted file.
4, via a crafted file.
1, by leveraging SSLv2 support.
4, via a crafted app
4, via a crafted app
4, via a crafted app
4, via a crafted JPEG 2000 image.
4, via unspecified vectors.
3, via unspecified vectors.
4, via vectors related to unsafe user input string handling.
2, by using the concat protocol in an HTTP Live Streaming (HLS) M3U8 file
1, by using the subfile protocol in an HTTP Live Streaming (HLS) M3U8 file
4, via CRLF sequences in the mimetype parameter
2, via newline characters in a filename.
4, via a large value in the Content-Length HTTP header
4, via a long string to the (1) php_escape_shell_cmd or (2) php_escape_shell_arg function
1, via crafted network traffic.
1, via unknown vectors
4, via vectors related to the (1) Runtime Workbench (RWB) or (2) Pmitest servlet in the Process Monitoring Infrastructure (PMI)
2, via the (1) lastname
2, via unspecified vectors
0, via the imageName parameter to (1) mydevice/client/image
2, via the locale parameter to (1) mydevice/index.jsp or (2) mydevice/loggedOut.jsp.
1, by leveraging basic administrative access to create a crafted policy
4, via a crafted URL
4, via a crafted URL
4, via a crafted JPEG 2000 image.
4, via a crafted JPEG 2000 image.
4, via a large header size value for the (1) level0 or (2) level1 header in a lha archive
2, via the aggregate_type parameter in a get_aggregate command to omp.
4, via a crafted HTTP request
4, via a crafted HTTP request
3, via unknown vectors.
3, via vectors related to uninitialized memory encountered during brotli data compression
4, via a crafted GIF image.
1, via crafted WebGL content.
4, via a crafted web site that triggers a single-click action in a situation where a double-click action was intended.
4, via a data: URL that is mishandled during (1) shortcut opening or (2) BOOKMARK intent processing.
3, by leveraging a user's paste of a (1) wyciwyg: URI or (2) resource: URI.
2, via the scrollTo method.
0, by leveraging incorrect use of a pointer during processing of a ZIP archive.
4, via a long string to a PR_*printf function.
3, via unknown vectors.
1, via vectors related to js/src/jit/arm/Assembler-arm.cpp
3, by reading a Content Security Policy (CSP) violation report that contains path information associated with an IFRAME element.
4, via an MPEG-4 file that triggers a delete operation on an array.
4, via a javascript: URL.
2, via unspecified use of the Clients API.
1, by leveraging mishandling of end tags
1, by leveraging mishandling of a root element
3, by leveraging mishandling of WebRTC data-channel connections.
3, by changing a file during a FileReader API read operation.
1, by leveraging mishandling of XML transformations.
4, via a crafted NPAPI plugin.
5, via unknown vectors.
3, via unknown vectors.
5, via unspecified vectors.
3, via unknown vectors.
3, via unknown vectors.
1, via crafted chunk-encoded content.
0, via an empty HTTP Host header.
4, via a crafted serialized Java object
4, via a crafted serialized Java object
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted serialized Java object
4, via a crafted serialized Java object
4, via a crafted serialized Java object
4, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
5," via a """"GET HTTP/1.1"""" request"
4, via a crafted cpio file.
4, via a crafted request to (1) libraries/phpseclib/Crypt/AES.php or (2) libraries/phpseclib/Crypt/Rijndael.php
5, via a table name to the normalization page.
4, via a crafted request
4, via a SQL query that triggers JSON data in a response.
2, via the lang parameter.
4, via a crafted elf file.
2, via an ASN.1 BER file that lacks a public key
1, by triggering access to a paging structure by a different CPU.
1, via crafted TCP traffic.
4, via a crafted XML document.
1, via crafted MPLS packets
4, via unspecified vectors.
3, via unspecified vectors.
3, via unknown vectors.
4, via a .. (dot dot) in the server name.
4, via a crafted JPEG 2000 image.
1, via unknown vectors
4, via a crafted ELF object file.
5, by opening a socket and not sending an SSL handshake
1, by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-0752.
2, via an invalid character in an XML document.
4, via a large amount of binary data.
4, via a large amount of data.
0, via an ANY field in crafted serialized data
5, via a short invalid encoding.
4, via a crafted ICC color profile in a JPEG 2000 image file.
4, via a malformed RFC1035-encoded domain name
3, via vectors involving OPTION_6RD parsing.
2, via the event description when creating an event.
4, via a crafted header in a (1) MOVE or (2) COPY request
4, via a crafted serialized Java object
0, via the eventTime parameter to service/plugins/policies/eventTime.
1, via crafted EBCDIC ASN.1 data.
4," via a crafted time-stamp file that is mishandled by the """"openssl ts"""" command."
4, via a crafted endpoints value in a USB device descriptor.
4, via a crafted endpoints value in a USB device descriptor.
4, via a crafted endpoints value in a USB device descriptor.
4, via a crafted endpoints value in a USB device descriptor.
4, via a series of delta escapes in a crafted BMP image.
2, via unspecified input to the OS2ECP function
4, via a crafted ECC point
4, via unspecified vectors.
3, via unknown vectors.
1, via crafted packets on TCP port 102.
0, via packets on TCP port 102.
3, via unspecified vectors.
0, by leveraging certain read privileges.
1, via crafted terminal-window input.
3, via unknown vectors.
2, by modifying the file-download configuration file.
4, via a malformed PE header file.
2, via the order_id in a JSON object in the data parameter in an RSS feed request to index.php/rss/order/status.
1, via crafted JPEG 2000 data.
4, via unknown vectors.
4, via unspecified vectors.
4, via a malformed URL that triggers incorrect hostname parsing
4, via a zero value in the first octet of an IPv4 address in the u parameter to wp-admin/press-this.php.
0, via vectors involving compressed items in a reply.
4, via a crafted packet.
4, via a crafted executable
0, via the searchfield parameter
4, via a large number of options in a CAP LS message.
0, via the sc parameter to install/index.php.
3, by leveraging administrative access.
4, via unspecified vectors.
3, via unspecified vectors.
1, via vectors related to multiple mappings of MMIO pages with different cachability settings.
4, via a modified cookie.
4, via a crafted project file.
1, by defeating an msh (aka Minimal Shell) protection mechanism.
3, via unspecified vectors.
4, via a Trojan horse DLL in the current working directory.
4, via unspecified vectors.
0, by leveraging the user or guest role to modify a file.
4, via a direct request to an unspecified URL.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unknown vectors.
3, via unspecified vectors.
1, by reading detailed error messages.
4, via a crafted URL.
4, via a crafted URL.
1, by sniffing the network.
2, via unspecified vectors
0, by logging in as a user not in the cacti database.
4, via a crafted SVG file
4, via a crafted SVG file
4, via a (1) long filename or (2) many nested trees
4, via a crafted PTS (aka presentation timestamp) value in a .mov file.
2, via the 5066 (aka dnsmasq) parameter.
4, via a crafted HFS+ image.
2, via the PartitionRef field in the Long Allocation Descriptor in a UDF file.
4, via a crafted command.  NOTE: this is only a vulnerability in environments in which the administrator has not followed documentation that outlines the security risks of operating Backburner on untrusted networks.
4, via a crafted string.
4, via a crafted archive.
2, via unspecified input to (1) getimageajax.php
2, via the client_id parameter.
3, by leveraging the YUM_CLIENT restricted-user role.
0, via the stName parameter to api/content/save/1.
0, via duplicate environment variables in envp.
0, via vectors involving an invalid USB descriptor.
4, via a large SIP packet.
2, via unspecified vectors
2, via the (1) ns or (2) interface parameter to ProxyServer/register
4, via a crafted HTTP request
5, via a .. (dot dot) in the Path parameter to /Catalog
1, via vectors related to multiple eof_timers.
4, via a crafted hdlr MP4 atom.
5, by sending a certificate chain with a certificate from a non-pinned trusted CA and the pinned certificate.
5, by logging in with an empty password and valid username
4, via a crafted URL.
1, by leveraging incorrect control of permissions on the PrintScreen button.
3, via unspecified vectors.
4, via a crafted application that leverages control over a service that can call this driver
4, via a crafted application that leverages control over a service that can call this driver
4, via a crafted application that leverages root access
2, via unspecified vectors
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted file
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
5, by creating a partially overlapping window
4, via a crafted application
4, via a large size in a GSER_IOCTL ioctl call
4, via a crafted application
0, via the path parameter to log.php.
4, via a URL containing basic authentication
4, via a timing attack involving login requests.
4, via a long (1) header or (2) URI that is matched against an improper regular expression.
1, by leveraging knowledge of the controlkey or requestkey and sending a crafted packet to ntpd
5, via an addpeer request with a large hmode value.
4, via a Trojan horse riched20.dll.dll file in the current working directory
4, via a crafted packet.
4, via a crafted packet that triggers a 0xff tag value
4, via a crafted PhotoCD file.
4, via a crafted SketchUp document.  NOTE: the primary affected product may be SketchUp.
4, via a remote NDIS control message packet that is mishandled in the (1) rndis_query_response
4, via vectors involving a crafted zip file.
4, via a crafted FORMATCHUNK structure.
4, via a crafted MP2 file.
5, via a Trojan horse DLL in the current working directory of a setup-launcher executable file.
0, by making an ioctl call at a certain time.
0, by leveraging incorrect tracking of descriptor ownership and sending each descriptor over a UNIX socket before closing it. NOTE: this vulnerability exists because of an incorrect fix for CVE-2013-4312.
2, via the searchFriends function to friends.inc.php.
4, via a crafted query.
4, via (1) normalization.php or (2) js/normalization.js in the database normalization page
4, via a crafted SCP-SINK file-size response to an SCP download request.
1," by inserting an """"exceptional URL"""" in the query string"
4, via a crafted TIOCSTI ioctl call
4, via a Trojan horse DLL in an unspecified directory.
3, by inserting a USB device that lacks a (1) bulk-in or (2) interrupt-in endpoint.
0, by leveraging incorrect URL decoding.
3, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
0, by leveraging certain local file execution.
4, via a crafted application that leverages content-provider permissions
1, via vectors related to the BeginReading method.
4, via a crafted web site.
3, via unknown vectors.
3, via the multipart/x-mixed-replace content type.
3, via unknown vectors.
4, via foreign-context HTML5 fragments
4, via a SELECT element with a persistent menu.
2, via an invalid data: URL.
4, via a Content Security Policy (CSP) referrer directive with zero values.
0, via WebGL content that triggers texture access after destruction of the texture's recycle pool.
4, via a crafted web site that rapidly triggers permission requests
4, via a fingerprinting attack involving Cascading Style Sheets (CSS) pseudo-classes.
3, via unknown vectors.
3, via vectors related to Http2Session::Shutdown and SpdySession31::Shutdown
3, by providing a malformed video and leveraging a Gecko Media Plugin (GMP) sandbox bypass.
1, via directional content in an SVG document.
1, via crafted values for the PSTART and PSTOP registers
3, via unspecified vectors.
0, via malformed options data in an OPT resource record.
4, via a series of large OTR messages
1, by leveraging mishandling of the creator ID.
4, via a malformed request.
1, via XML data containing an external entity declaration in conjunction with an entity reference
1, via crafted fields in a URL.
4, via unspecified vectors.
4, via a crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
2, via modified request parameters.
3, via unspecified vectors.
4, via a crafted URL
4, via a crafted URL.
1, by specifying an unexpected file extension.
2, by reading error logs.
2, by sniffing the network.
3, via unspecified vectors.
4, via a crafted request.
4, via unspecified vectors.
0, via an invalid HTTP request.
4, via a crafted POST request
3, via unknown vectors.
1, by leveraging unspecified privileges to read a log file.
2, via an external reference in a Swagger document.
3, via unspecified vectors.
1, by reading cached web pages from a different user's session.
4, via unspecified vectors.
2, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
3, by sending a malformed POST request and then reading the Java stack trace.
0, by guessing the meeting room id. IBM X-Force ID: 113847.
2, by viewing the meeting report history. IBM X-Force ID: 113936.
1, via crafted command-line parameters to a /usr/lpp/mmfs/bin/ setuid program.
1, via crafted environment variables to a /usr/lpp/mmfs/bin/ setuid program.
0, by leveraging multiple simultaneous logins.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified vectors
2, by entering invalid file names.
0, by leveraging LMI admin access.
1, via an XML document containing an external entity declaration in conjunction with an entity reference
1, via XML data containing an external entity declaration in conjunction with an entity reference
3, via vectors involving OpenID Connect clients.
4, via unspecified vectors.
4, via unspecified vectors.
3, by uploading a file.
2, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via unspecified vectors.
0, by reading the Task List in the MMC GUI.
2, via the entries value in a dref box in an MP4 file.
4, via unspecified vectors.
5, via a crafted bytea value in a BRIN index page.
4, via a crafted git ext:: URL when cloning a subrepository.
4, via a crafted name when converting a Git repository.
2, via an IKEv2 aes_xcbc transform.
1, via crafted compressed gd2 data
4, via a long name.
4, via a crafted Jpeg2000 file.
4, via a crafted call to (1) getFromIndex or (2) getFromName in the ZipArchive class.
2, via an HTTP PUT followed by an HTTP MOVE request.
2, via the swf parameter.
5, via a crafted OGNL expression with ANTLR tooling.
4, via a symlink attack on (1) /opt/.lxc-attach-script
1, by leveraging failure to filter tool tips through the configured markup formatter.
5, via a plugin that performs (1) direct field access or (2) get/set array operations.
4, via a crafted git repository name.
1, by leveraging read access.
1, via crafted X11 forwarding data
1, via crafted X11 forwarding data.
4, via unspecified vectors.
4, via a crafted URL.
1, use logged encryption keys to access certain resources within a customer's Good deployment by gaining access to certain diagnostic log files through either a valid logon or an unrelated compromise of the server.
2, via commands executed on the Karaf command shell.
2, by sniffing traffic between the two elements during a login attempt.
4, via a crafted index.
4, via an IPT_SO_SET_REPLACE setsockopt call.
4, via a crafted USB device without two interrupt-in endpoint descriptors.
4, via a USB device without both an interrupt-in and an interrupt-out endpoint descriptor
4, via a USB device without both a control and a data endpoint descriptor.
5, via a crafted endpoints value in a USB device descriptor.
5, via a crafted endpoints value in a USB device descriptor.
5, by triggering a wddx_deserialize call on XML data containing a crafted var element.
5, by placing a PK\x05\x06 signature at an invalid location.
4, via a class name.
4, via a large packet.
3, via unspecified vectors.
3, by downloading and extracting the firmware image.
0, by leveraging contributed or custom code that calls the user_save function with an explicit category and loads all roles into the array.
3, by leveraging a configuration that permits using an email address to login and a module that permits logging in.
2, via the parent_id parameter in an item_edit action.
3, via vectors involving a negative length value.
1, via vectors related to error handling.
4, via a crafted jpeg 2000 file.
4, via a crafted jpeg2000 file.
4, via a crafted GIF file.
4, via a crafted bzip2 file
4, via a negative span length.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the filename of an image uploaded in the report section.
4, via a crafted document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted web site
1, by creating many machine accounts
1, via crafted requests
5, via a crafted NetLogon request
4, via a crafted application
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted application
4, via a crafted web site
5, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted URL
4, via a crafted URL
4, via a crafted web site
4, via a crafted Office document
4, via a crafted web page
4, via a crafted web page
4, via a crafted web page
4, via a crafted web page
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
3, by leveraging failure of Universal Outlook to obtain a secure connection
4, via a crafted web page
4, via a crafted web site
4, via a crafted web site
4, via a crafted web page
4, via a crafted web page
4, via a crafted webpage
5, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted web site
4, via a crafted web site
4, via a crafted document
4, via a crafted document
4, via a crafted document
1, via unspecified vectors
4, via a crafted web site
4, via a meeting-invitation request
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
1, by leveraging access to a memory dump
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
2, via unknown vectors
3, via vectors involving (1) the Client uploader extension or (2) extension REST handlers
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unknown vectors
1, via unknown vectors
2, via unspecified vectors
1, via vectors related to Filesystem.
3, via vectors related to Server: Optimizer.
1, via vectors related to JCE.
1, via vectors related to Engineering Communication Interface.
1, via vectors related to Web Server.
1, via vectors related to Analytics Web Administration.
1, via vectors related to Person Address Page.
1, via vectors related to Call Phone Number Page.
1, via vectors related to Server: Optimizer.
4, via vectors related to Web Container
4, via unknown vectors.
1, via vectors related to Kernel.
1, via vectors related to Security.
3, via vectors related to Server: InnoDB.
1, via vectors related to ePerformance.
3, via vectors related to Network Configuration Service.
1, via vectors related to Pre-Login.
4, via vectors related to Accounts.
1, via vectors related to ZFS.
4, via unknown vectors.
1, via vectors related to Install.
1, via vectors related to Information Manager Console.
3, via vectors related to Information Manager Console.
3, via unknown vectors.
3, via vectors related to HA for Postgresql.
1, via vectors related to SSL/TLS Module.
3, via vectors related to Server: FTS.
3, via unknown vectors.
4, via vectors related to Wireless Framework. NOTE: the previous information is from the July 2016 CPU. Oracle has not commented on third-party claims that this issue is a cross-site scripting (XSS) vulnerability
1, via vectors related to Server: InnoDB.
1, via vectors related to Kernel
1, via vectors related to JavaFX.
1, via vectors related to Server: Optimizer.
1, via vectors related to WebClient / Admin.
3, via vectors related to File Folders / URL Attachment.
3, via vectors related to Infrastructure.
3, via vectors related to GUI
4, via unknown vectors.
1, via vectors related to GUI
1, via vectors related to PC / Get Shortcut.
1, via vectors related to Server: Optimizer.
1, via vectors related to PC / Get Shortcut.
1, via vectors related to Cookie Management.
1, via vectors related to SDK
1, via vectors related to ODPDA Servlet.
1, via vectors related to SDK
1, via vectors related to PGC / Import.
1, via vectors related to PC / Notification.
3, via vectors related to Remote Launch. NOTE: the previous information is from the July 2016 CPU. Oracle has not commented on third-party claims that this issue is a cross-site scripting (XSS) vulnerability
4, via vectors related to File Folders / Attachment
1, via vectors related to File Folders / Attachment
1, via vectors related to File Folders / Attachment
1, via vectors related to UI Framework.
3, via vectors related to PC Core.
1, via vectors related to PGC / Excel Plugin.
1, via vectors related to File Load.
1, via vectors related to SDK
1, via vectors related to DBA.
4, via vectors related to Security Framework
1, via vectors related to Server: InnoDB.
4, via vectors related to Core.
4, via vectors related to Administration.
1, via vectors related to System Administration.
3, via vectors related to Core.
4, via vectors related to Server: Security: Encryption.
4, via a crafted file.
4, via a crafted TIFF image.
1, by setting the (1) v or (2) h parameter to 0.
2," by setting the """"-v"""" option to -1."
4, via a crafted TIFF image.
1, via crafted inbound data.
4, via a (1) clone
1, via vectors related to the bytecounts[] array variable.
4, via a crafted TIFF image.
1, via vectors related to the src variable.
3, via vectors related to field_tag matching.
3, by leveraging a connection created from earlier execution of an anonymous RFM included in a Communication Assembly
4, via a crafted HOST parameter
0, via an unspecified HTTP request
1, via vectors related to passwords in Web Dispatcher trace files
4, via a crafted serialized Java object
3, by leveraging a misconfiguration of sudo
1, via modified GET requests.
4, via a brute-force attack.
3, via unspecified vectors.
4, via unspecified vectors.
4, via vectors involving the ma variable.
2, via the host_group_data parameter.
4, via the FirstName field.
1, via unspecified vectors related to system databases.
1, by leveraging access to the Location HTTP header in a redirect.
2, via the c0-e3 parameter to dwr/call/plaincall/UserAjax.getUsersList.dwr.
4, via a USB device without both a master and a slave interface.
4, via a crafted serialized payload.
1, by using the GET HTTP request method.
1, by leveraging failure to disable APEI error injection through EINJ when securelevel is set.
3, via vectors involving hostent conversion. NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4458.
4, via unknown vectors.
3, via environment variables.
1," by editing the """"full name."""""
0, by leveraging missing permissions checks in unspecified XML/JSON API endpoints.
3, by reading a job configuration.
3, by leveraging a missing permissions check. NOTE: this issue can be combined with DNS cache poisoning to cause a denial of service (service disruption).
1," via unspecified vectors related to """"scheme-relative"""" URLs."
4, via unspecified vectors.
4, via a crafted HTTP request
4, via a large SamplesPerPixel value in a crafted TIFF image that is mishandled during PDF conversion. This is fixed in 8.0.
4, via a crafted application that makes an ioctl call
4, via a crafted application
2, via unspecified vectors
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
5, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted file
4, via a crafted application that uses the app-pinning feature
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
1, by leveraging access to a privileged process
4, via a crafted application
2, via unspecified vectors
4, via a crafted application
4, via a crafted application that provides a long string
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
2, via the Android Debug Bridge (adb) tool
0, via an access point that provides a crafted (1) Venue Group or (2) Venue Type value
3, by accessing (1) an external tile from a system application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application that sends a SENDACTIONFRAME command
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted wav file
1, by spoofing an update response from susapi.lenovomm.com.
0, by reading the Windows registry
4, via an ICMPv6 packet.
1, via crafted (1) ISO-TSAP or (2) Profibus packets.
1, via crafted packets.
3, by inserting a USB device with an invalid USB descriptor.
0, via vectors involving use of a hardcoded encryption key when calling the session.connect function.
4, via a direct request to examples/simple_examples/status.  NOTE: this issue can be leveraged by remote attackers to execute arbitrary code using CVE-2016-3957.
4, via a crafted length value in a USB/IP packet.
4, via a Trojan horse DLL in the current working directory
5, by shadowing a superpage mapping.
3, via traffic to TCP port 443.
2, via the query parameter to c/portal/layout.
4, via a .. (dot dot) in the fileName parameter.
4, by visiting webdynpro/resources/sap.com/tc~rtc~coll.appl.rtc~wd_chat/Chat#
0, via the navigationTarget parameter to irj/servlet/prt/portal/prteventname/XXX/prtroot/com.sapportals.navigation.testComponent.NavigationURLTester
5, via a ..\ (dot dot backslash) in the fileName parameter to CrashFileDownloadServlet
2, via the background color index in a GIF file.
4, via a crafted HTTP request
4, via a crafted HTTP request
4, via a crafted image file.
4, via a crafted image file
1, by leveraging information about the parent process.
4, via unspecified vectors.
5, via a crafted PE file
0, via the url parameter to (1) api/openUrlInDefaultBrowser or (2) api/showSB.
4, via a crafted TIFF image to tiffcp.
4, via a crafted TIFF image with zero tiles.
4, via a symlink attack on a (1) cronic.out.$$
1, via crafted coordinates.
4, via a crafted image
2, via unspecified vectors
4, via a crafted serialized PyFunction object.
4, via a ..\ (dot dot backslash) in the file parameter to ViewFile.
4, via a service definition
2, via negative values of the new size
1, via crafted serialized shopping cart data.
4, via a crafted DTD in an XML request to uddi/api/replication
4, via a crafted request
1, via unspecified vectors
2, via unknown vectors
1, via crafted input
2, via large dimensions in an image
4, via a circular split isochronous transfer descriptor (siTD) list
2, via the orderby parameter.
3, via unspecified vectors.
1, by leveraging permissions to create or edit templates.
1, via crafted Edge Side Includes (ESI) responses.
1, via crafted Edge Side Includes (ESI) responses
1, via crafted Edge Side Includes (ESI) responses.
4, via a long string
0, via the module parameter when creating a bookmark.
4, via a large number of crafted packets.
1," via vectors related to """"special characters on pages."""""
5, via a crafted FlateDecode stream in a PDF document.
4, via unspecified vectors.
4, via a crafted content stream.
2, via an object with a revision number of -1 in a PDF document.
4, via a crafted remerge call.
4, via unspecified vectors.
4, via a crafted SVG
3, via unspecified vectors.
4, via a crafted JSON file. This issue has been fixed in jq 1.6_rc1-r0.
4, via a crafted HTML document
4, via a crafted packet that triggers an unexpected array size.
4, via a long string in a packet.
4, via unspecified vectors.
1, via unspecified vectors
3, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
4, via a Trojan horse resource in an unspecified directory.
4, via a Trojan horse executable file in the %SYSTEMDRIVE% directory.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
4, via invalid input.
4, via unspecified vectors.
1, via unknown vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via XML data containing an external entity declaration in conjunction with an entity reference
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
0," by leveraging an unspecified """"type confusion"
0," by leveraging an unspecified """"type confusion"
3," by leveraging an unspecified """"type confusion"
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
3, via unspecified vectors.
1, via unspecified vectors
4, via unspecified vectors.
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
5, via a crafted OOXML spreadsheet containing an external entity declaration in conjunction with an entity reference
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
4, via unspecified vectors.
5, via unspecified vectors.
4, via a crafted Hangul Hcell Document (.cell) file.
4, via a 7zip file with a large number of substreams
4, via a crafted mtree file.
4, via a RAR file with a zero-sized dictionary.
4, via an entitlement/eval-policy-submit.jsp request.
4, via a .. (dot dot) in an archive file.
4, via a .. (dot dot) in the logFile parameter to downloadgz-ajaxprocessor.jsp.
4, via a shutdown action to server-admin/proxy_ajaxprocessor.jsp.
2, via the (1) setName parameter to identity-mgt/challenges-mgt.jsp; the (2) webappType or (3) httpPort parameter to webapp-list/webapp_info.jsp; the (4) dsName or (5) description parameter to ndatasource/newdatasource.jsp; the (6) phase parameter to viewflows/handlers.jsp; or the (7) url parameter to ndatasource/validateconnection-ajaxprocessor.jsp.
5, via a directory traversal attack on the pull requests resource.
3," by leveraging a """"logic flaw"""" in the authentication process."
4, via a crafted RTF file
1, via crafted serialized data in a cookie.
2, via the PATH_INFO.
0, via the email parameter in a recover_login action.
4, via unspecified vectors.
4, via a long argument to the utf8_encode function
4, via a long string
4, via a long string
1, via circular definitions in an SVG document.
4, via a Trojan horse cryptsp.dll
2, via the (1) ScriptSchedule parameter in the ScriptServlet servlet; the (2) winEventId or (3) winEventLog parameter in the WindowsEventLogsServlet servlet; the (4) processOS parameter in the ProcessesServlet servlet; the (5) group
4, via unspecified vectors.
2, via large dimensions in a gif file.
1, via crafted BER data
0, by clearing the high bit of the byte after invalid utf-8 encoded data.
2, via unspecified vectors
1, via unspecified vectors
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unknown vectors
2, via unknown vectors
4, via invalid handshake data.
4, via a crafted packet that triggers a 0xff tag value.
4, via a crafted packet that triggers an empty set.
4, via a crafted packet.
4, via a system user account.
4, via a flood of crafted ICMP and UDP packets.
3, by leveraging a default method.
5, via a crafted request.
3, via vectors related to improper action name clean up.
4, via a crafted expression.
1, by leveraging incorrect ordering of security checks.
2, by triggering an execmod SELinux denial with a crafted binary filename
0, by triggering an SELinux denial with a crafted file name
1, by triggering an execstack SELinux denial with a crafted filename
4, via a crafted request
4, via a VGA command.
1, by changing FIFO registers and issuing a VGA command
4," via a """"%{}"""" sequence in a tag attribute"
5, via a null value for a URL field.
0, via the token parameter to admin/addProxyConnector_commit.action
4, via vectors related to XMLRPC response encoding.
4, via a non-UTF-8 attribute value
2, via many log in attempts with an invalid password.
4, via a crafted binary
4, via a crafted binary
4, via a crafted binary
4, via a crafted binary
4, via a crafted binary
4, via a crafted binary.
4, via a crafted binary.
4, via unspecified vectors.
3, by triggering a crafted index value
0," via vectors that leverage """"type confusion."""""
5, via unspecified vectors.
4, via a modified parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted file.
4, via unspecified vectors.
4, via a long packet.
4, via unspecified vectors.
4, via vectors involving a local proxy.
4, via a message.
4, via a crafted filename field in a ZIP archive in a vlp file.
4, via unspecified vectors.
4, via unspecified vectors.
1, via unknown vectors
5, by replacing a DLL file in the package directory.
4, via a crafted DLL file.
2, via unknown vectors
4, via a message.
4, via a crafted pathname.
4, via a crafted file.
1, by closing registry handles.
1, via crafted data in a service call.
2, via vectors related to the network landscape
2, via the href attribute in an area tag in an e-mail message.
4, via a crafted HTTP Host header
1, via crafted Edge Side Includes (ESI) responses.
4, via a crafted Edge Side Includes (ESI) response.
4, via a Trojan horse DLL in the current working directory of a setup-launcher executable file.
2, via unspecified vectors involving an error message.
4, via a crafted number of planes in a VIDIOC_DQBUF ioctl call.
3, via invalid utf-8 encoded data. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-4356.
2, via unspecified vectors
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via unspecified vectors.
0, by reading the screen during the login procedure.
4, via a crafted FlashPix bitmap image
5, via a crafted FlashPix bitmap image
4, via a crafted image.
4, via a crafted Photoshop document.
4, via a crafted FlashPix bitmap image
4, via a crafted SGI image.
4, via a crafted FlashPix bitmap image
1, by leveraging Safari View Controller misbehavior.
2, via an HTTP response specifying redirection to an invalid TCP port number.
4, via a crafted invitation.
4, via a crafted web site.
4, via a crafted web site
4, via a crafted app.
4, via unspecified vectors.
4, via unspecified vectors.
1, via crafted xStride and yStride values in an EXR image.
4, via a crafted EXR image with B44 compression.
4, via a crafted app.
4, via unspecified vectors.
4," via a crafted app that leverages a """"type confusion."""""
4," via a crafted app that leverages a """"type confusion."""""
4, via a crafted file.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted HTTP/0.9 response
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted font.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted font.
4, via unspecified vectors.
5, by reading a log.
4, via a crafted PDF file.
4, via a crafted JPEG file.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted web site.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted JPEG file.
4, via a crafted SGI file.
4, via a crafted SGI file.
4, via a crafted font.
4, via a crafted font.
4, via a crafted web site.
5, via a crafted app.
4, via a crafted app.
4, via a crafted app
4, via a crafted app
4, via vectors involving a crafted SO_EXECPATH environment variable.
4, via a crafted app.
1, via unspecified vectors
1, via unspecified vectors
4, via unspecified vectors.
0," via vectors that leverage """"type confusion"
3," via vectors that leverage """"type confusion"
3, by leveraging a function call that specifies the same buffer for input and output.
3, by leveraging screen-sharing access.
3, via unspecified vectors.
5, via unspecified vectors.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site
4, via a crafted web site
4, via a crafted file.
4, via vectors related to lack of an HTTPS session for retrieving updates.
4, via a crafted web site.
4, via a crafted environment variable.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted directory pathname.
4, via a crafted font file.
4, via a crafted app.
4, via a crafted intent: URL
2, via unspecified vectors
4, via unspecified vectors.
2, via the CLIENT-IP HTTP header.
1, via crafted use of the mmap and bpf system calls.
4, via a crafted .j2k file.
4, via a crafted jp2 file. NOTE: this issue exists because of an incorrect fix for CVE-2014-7947.
4, via a URL with certain escaped characters
4, via CRLF sequences in the subject.
4, via a crafted filesystem
4, via a CPIO archive with a large symlink.
3, via unspecified vectors.
4, via unspecified vectors.
3, by creating a SYSTEM_ADMIN account.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
1, via crafted serialized data.
2, via unspecified vectors
2, via unspecified vectors
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
0, by leveraging an unanchored regex.
4, via unspecified vectors.
1, by leveraging use of the COM_getCurrentURL function in (1) public_html/layout/default/header.thtml
4, via unspecified vectors.
1, via crafted saved data
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, by leveraging failure to remove comments from an SQL statement before validation.
0, via format string specifiers in a template file via fastcgi
2, via the Customapp function.
2, via the Project function.
2, via the Project function.
2, via specially crafted requests.
4, via a page where CGI environment variables are displayed.
2, via the Schedule function.
4, via a breadcrumb trail.
2, via the Project function.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, by leveraging failure to restrict access to unknown functions.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4," via """"Messages"""" function of Cybozu Garoon Keitai."
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
5, by rescoping a token.
4, via a large number of crafted packets
2, via the NSC_TMAC cookie.
2, via the (1) First name or (2) Last name field in the HUE Users page.
4, via a request to desktop/api/users/autocomplete.
2, via the (1) Template Name field when renaming a template; (2) KDC Server host
5, via a (1) stderr.log or (2) stdout.log value in the filename parameter to /cmf/process/<process_id>/logs.
4, via a request to /api/v11/users/sessions.
5, by sending a spoofed crypto-NAK packet with incorrect authentication data at a certain time.
2, by sending spoofed packets from many source IP addresses in a certain scenario
4, via a spoofed broadcast packet.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-1548.
4, via a crypto-NAK packet.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-1547.
1, by manipulating information in guest controlled areas of xenstore.
1, by manipulating information in the backend directories in xenstore.
0, via the graph parameter to diagnosis_control.php.
1, via vectors related to the UserName GET parameter.
4, via script/cfg_show.php or (2) PCAP files via script/system/tcpdump.php.
4, via a GET request.
2, via the IP parameter to script/statistics/getconn.php.
1, by leveraging lack of the Object Size Checking feature.
2, via an unspecified parameter.
2, via unspecified form fields.
2, via an unspecified parameter.
1, via a data set lookup filter in the (1) Data Set Authoring or (2) Displayer editor UI.
4, via a crafted OpenXML document containing an external entity declaration in conjunction with an entity reference
5, by decompressing a large file containing zeroes.
2, via the connector.sourceRepoId parameter to admin/addProxyConnector_commit.action.
4, via a crafted TIFF file.
4, via a crafted external Extended Application Verification (EAV) monitor script.
4, via a crafted elf file.
2, via an object file with empty bss-like sections.
4, via a crafted dwarf file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file
4, via a crafted file.
1, via crafted frame data.
4, via a crafted file.
4, via a crafted string offset for .debug_str.
4, via a crafted object with all-bits on.
4, via a large length value in a compilation unit header.
4, via a debugging information entry using DWARF5 and without a DW_AT_name.
4, via a crafted DWARF section.
4, via a crafted DWARF section.
4, via a crafted DWARF section.
2, via vectors related to cluster peering setup.
4, via unspecified vectors.
2, via the user name field.
4, via a .. (dot dot) in the SESID parameter in conjunction with a filename in the FNAME parameter.
3, by uploading and requesting a .aspx file.
1, via TCP port 4000.
1, by reading screenshots under /private/var/mobile/Containers/Data/Application.
2, via the (1) description
2, via the (1) HTTPAgent
4, via unspecified vectors.
4, via a GET or POST request to the oxuser class. Fixed versions are Enterprise Edition v5.1.12
4, via a direct request for admin/auto.def.
3, via replay attacks.
1, by leveraging the autolearn feature.
5, by triggering a large output string from the htmlspecialchars function.
3, by triggering a large output string from a FILTER_SANITIZE_FULL_SPECIAL_CHARS filter_var call.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-5094.
4, via a large integer in the second argument.
3, by triggering an error.
2, via special characters that are mishandled during double URL decoding.
4, via a crafted e-mail message.
4, via a crafted gif file.
3, by connecting to an IPv4 TCP socket.
4, via a crafted QuickTime IMA file.
2, via unspecified vectors
4, via a | (pipe) character at the start of a filename.
0, by spoofing the version check response and supplying a crafted update.
1, via vectors related to script deletion.
1, by leveraging an unrestricted multiplication.
3, via unknown vectors.
2, via the settings parameter in a chrome-devtools-frontend.appspot.com URL's query string.
4, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unspecified vectors.
4, via unknown vectors.
4, via unknown vectors.
4, via a hostname with an escaped trailing dot.
1, by leveraging incorrect handling of a copy-on-write (COW) feature to write to a read-only memory mapping
4, via a long MacroName argument. NOTE: some references mention CVE-2016-5226 but that is not a correct ID for any Rumba vulnerability.
1, via vectors related to reading from the information transfer buffer in non-DMA mode.
4, via unspecified vectors.
5, by converting a circularly defined SVG file.
4, via a crafted svg file.
0, by creating concurrent domains and holding references to them
2, via the PID argument.
0, via vectors involving the LSC.Services.SystemService StartProxy command with a named pipe created in advance and crafted .NET assembly.
1, via crafted characters in the media type of a data: URL.
1, via crafted two-dimensional graphics data that is mishandled during clipping-region calculations.
4, via vectors involving the callback application-path parameter and a hard link.
1, by leveraging keyboard access to use the Alt key during selection of top-level menu items.
1, via crafted JavaScript that is mishandled during incremental garbage collection.
4, via unknown vectors.
1, by leveraging incorrect free operations on DTLS objects during the shutdown of a WebRTC session.
2, via a script that closes its own Service Worker within a nested sync event loop.
1, via crafted packets that trigger incorrect buffer-resize operations during buffering.
2, via an SVG element that is mishandled during effect application.
4, via left-to-right characters in conjunction with a right-to-left character set.
1," via text runs in conjunction with a """"display: contents"""" Cascading Style Sheets (CSS) property."
4, via a crafted web site.
1, by leveraging improper interaction between empty filters and CANVAS element rendering.
1, via crafted JavaScript code.
4, via a crafted fragment identifier in the SRC attribute of an IFRAME element
0, by having the Maintenance Service invoke the Mozilla Updater to run malicious local files. This vulnerability requires local system access and is a variant of MFSA2013-44. Note: this issue only affects Windows operating systems. This vulnerability affects Firefox < 50.
4, via a crafted (1) HTTP response or possibly a (2) UPnP broadcast.
1, via crafted data:text/html content in a form (1) action or (2) xlink attribute.
5, via unspecified vectors.
4," via a """"DOM link manipulation"""" attack."
3, via unspecified vectors.
4, via a malformed Portable Executable (PE) file.
5, via a .. (dot dot) in the sn parameter to brightmail/servlet/com.ve.kavachart.servlet.ChartStream.
4, via a crafted TIFF image
4, via a crafted tiff image.
3, by sending a crafted TIFF image to the rgb2ycbcr tool.
4, via a crafted tiff.
4, via a crafted bmp file.
4, via a crafted tiff image.
4, via a crafted tiff image.
4, via a crafted Tiff image.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via vectors related to reading device control information.
1, via vectors related to the information transfer buffer.
2, via an incorrect xtra.bin or xtra2.bin file on a spoofed Qualcomm gpsonextra.net or izatcloud.net host
4, via a crafted application
2, via the return parameter.
2, via unspecified vectors
1," via vectors related to a """"file injection vulnerability"
2, via unspecified vectors
4, via a large number of crafted Multiprotocol Label Switching (MPLS) packets.
3, via unknown vectors.
0, by leveraging improper handling of the owner_rights ACL entry.
1," via vectors involving """"Lack of field filters."""""
4," via a request to API routes beneath """"hosts"
1, via vectors related to policies.
2, by levering permission to create business processes.
4, via a crafted USB device that emulates many VFL_TYPE_SDR or VFL_TYPE_SUBDEV devices and performs many connect and disconnect operations.
4, via a crafted web page.
1, by leveraging failure to propagate administrative RBAC configuration to all slaves.
0, via vectors involving length specifications in received data.
4, via unspecified vectors.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-4051.
2, via the (1) addPassthrough
0, by leveraging partial initialization of internal resolver data structures.
4, via unknown vectors.
4, via a long qname.
4, via unspecified vectors.
1, via vectors related to Server: InnoDB.
1, via vectors related to Server: Log.
3, via vectors related to Server: Privileges.
1, via vectors related to Server: Replication.
4, via vectors related to Server: Security: Encryption.
1, via vectors related to Server: Connection.
3, via vectors related to Verified Boot.
1, via vectors related to Verified Boot.
1, via vectors related to APPL.
4, via vectors related to eProcurement.
1, via vectors related to Kernel
1, via vectors related to Application Designer.
1, via vectors related to Kernel
1, via vectors related to File Folders / Attachment
1, via vectors related to Administration.
3, via vectors related to Bash.
1, via vectors related to Core Services.
4, via vectors related to Core Services.
3, via vectors related to Web Container
1, via vectors related to INFRA.
3, via unknown vectors.
1, via vectors related to SMB Users.
4, via unknown vectors.
1, via vectors related to EUL Code & Schema.
2, via unknown vectors
2, via unknown vectors
4, via vectors related to Viewer.
3, via unknown vectors.
1, via vectors related to App Server.
1, via vectors related to Server: InnoDB.
1, via vectors related to Cluster Geo.
3, via unknown vectors.
1, via unknown vectors
1, via vectors related to File Manager.
3, via unknown vectors.
1, via vectors related to AD Utilities.
1, via unknown vectors
3, via unknown vectors.
2, via unknown vectors
1, via vectors related to Cluster check files.
2, via unknown vectors
1, via vectors related to Integration Broker
3, via vectors related to Integration Broker
1, via vectors related to Workflow Events.
3, via unknown vectors.
3, via unknown vectors.
3, via vectors related to INFRA.
4, via unknown vectors.
4, via unknown vectors.
4, via vectors related to Kernel.
4, via vectors related to OpenUI.
3, via vectors related to IKE.
3, via unknown vectors.
3, via unknown vectors.
3, via vectors related to AD Utilities
4, via unknown vectors.
1, via vectors related to AD Utilities.
4, via vectors related to AD Utilities
5, via vectors related to Resources Module.
1, via vectors related to Kernel Zones.
4, via vectors through Web Services.
3, via unknown vectors.
4, via unknown vectors.
3, via unknown vectors.
3, via unknown vectors.
4, via unknown vectors.
3, via vectors related to MscObieeSrvlt.
3, via unknown vectors.
1, via vectors related to Security Framework
1, via vectors related to VRDE.
1, via vectors related to Kernel Zones.
3, via vectors related to Core
1, via vectors related to DML.
3, via vectors related to Core.
1, via vectors related to Core
1, via vectors related to Lynx.
4, via vectors related to DML.
4, via vectors related to Server: InnoDB.
3, via vectors related to Server: DML.
4, via vectors related to Server: InnoDB.
3, via vectors related to Server: Memcached.
1, via vectors related to Server: Optimizer.
5, via vectors related to Server: Performance Schema
4, via vectors related to RBR.
3, via vectors related to Server: Security: Audit.
5, via a .. (dot dot) in the src parameter.
4, via a .. (dot dot) in the ATE_COMMAND parameter.
2, via the (1) ID or (2) Branch parameter.
4, via a man-in-the-middle attack that modifies the xmlMessageOut parameter.
2, via the iframeid parameter.
2, via the (1) code
4, via a crafted URI.
4, via a direct request to a page other than index.html.
4, via a JSON API call.
4, via shell metacharacters in the sn parameter to the transfer_license command.
0, via the sn parameter to the transfer_license command.
2, by reading the SQL_Config.aspx file and decrypting data with a hardcoded key in the ReadyDesk.dll file.
4, via a crafted DDS file
1, by leveraging lack of NULL pointer checks.
0, via vectors involving the for statement in computing the pixel scaling table.
1, by leveraging lack of validation of (1) pixel.red
4, via unspecified vectors.
4, via a crafted database name that is mishandled in a central column query.
4, via vectors involving a comment.
3, via vectors involving (1) server-privileges certificate data fields on the user privileges page
4, via unspecified vectors.
4, via a // (slash slash) followed by a domain in the redirect parameter.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-6501.
4, via a Trojan horse (1) msi.dll
4, via unspecified vectors.
4, via unspecified vectors.
2, via the themechanges array parameter.
1, via vectors related to variables derived from user input in a foreach loop.
3, by changing a certain header
4, via unspecified vectors.
1, via crafted table parameters.
4, via a crafted PNG file
4, via unspecified vectors.
1, via crafted packets.
2, by leveraging predictable cookies.
2, via the (1) token parameter to gwadmin-console/install/login.jsp or (2) PATH_INFO to gwadmin-console/index.jsp.
4, via a crafted email.
4, via a long (1) username or (2) password
4, via a specially crafted URL that allows limited directory traversal. Applies to MSS 12.3 before 12.3.326 and MSS 12.2 before 12.2.342 and RSG 12.1 before 12.1.362 and RWeb 12.3 before 12.3.312 and RWeb 12.2 before 12.2.342 and RWeb 12.1 before 12.1.362 and ZFE 2.0.1 before 2.0.1.18 and ZFE 2.0.0 before 2.0.0.52 and ZFE 1.4.0 before 1.4.0.14.
4, via a large integer argument
2, via unspecified vectors
4, via a crafted file.
3, via unspecified vectors.
4, via unspecified fields.
4, via a Trojan horse executable file in the %SYSTEMDRIVE% directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a large number of crafted HTTP packets.
4, via a crafted ics file.
4, via a crafted ics file.
4, via a crafted ics file.
3, by crafting a string to the icalparser_parse_string function.
4, via a crafted string to the icalparser_parse_string function.
4, via a crafted (1) HIDIOCGUSAGES or (2) HIDIOCSUSAGES ioctl call.
4, via unspecified vectors.
4, via a crafted attachment name
4, via a crafted attachment name
0, by leveraging the ability to read a post
4, via unspecified vectors.
4, via unspecified vectors.
1, by leveraging knowledge of a cookie.
4, via unspecified vectors.
0, via vectors involving the offset variable.
0, via vectors involving the q variable
4, via a crafted ISO file.
4, via a hard link attack on files extracted from an archive
1, by leveraging database stoppage.
4, via unspecified vectors.
4, via a crafted document.
4, via a crafted application
4, via a crafted application compromising a privileged process.
4, via non-printable characters in a URL.
1, via crafted TCP packets.
4, via unspecified vectors.
5, via a crafted (1) Disaster Recovery or (2) High Availability command.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
2, via an embedded string.
5, via a crafted HTTP request.
4, via a .. (dot dot) in a URL.
4, via a crafted web site.
3, via unspecified vectors.
3, by leveraging a weak algorithm.
2, by reading IM native logs.
4, via a .. (dot dot) in a URL.
1, via an XML document containing an external entity declaration in conjunction with an entity reference
2, via an embedded string.
4, via a crafted URL.
0, by leveraging an unattended workstation to conduct a post-logoff session-reuse attack involving a modified URL.
2, via an HTTP method that is neither GET nor POST.
3, by changing a certain length value
4, via a crafted TGA file.
2, via the rptStatus parameter in a Report action to WorkArea/SelectUserGroup.aspx.
5, by changing a certain string
2, via unknown vectors
2, via unspecified vectors
2, via unspecified vectors
1, via vectors related to RFC-Gateway
1, via vectors related to the SQL protocol
4, via vectors involving the audit logs
0, via an unspecified query
2, via unspecified vectors
1, via vectors related to an IMPORT statement
0, by leveraging the EXPORT statement to export files
3, via unspecified vectors.
4, via unspecified vectors.
3, by changing a certain size value
4, via unspecified vectors.
5," by sending """"special packages"""" to the LAN interface."
4, via a large frame
4, via a crafted image.
2, via certain IPv6 socket operations.
4, via a crafted svg file.
4, via a Trojan horse (1) UxTheme.dll or (2) ntmarta.dll file in the current working directory.
4, via a crafted PDF file.
2, via the Bezier data in a crafted PDF file.
4, via a large zone transfer for (1) DDNS
4, via a large (1) AXFR or (2) IXFR response.
4, via a zone transfer with unlimited data.
4, via a crafted plural forms header.
4, via a crafted packet.
4, via a large number of attempts to upload a large attachment
0, by reading the fields in the (1) ics or (2) XML calendar feeds.
2, via the (1) Description
4, via a crafted application
4, via a crafted application
0, via the postids parameter to forumrunner/request.php
4, via a crafted serialized object.
0, via the ContType parameter in a ViewContentByCategory action to WorkArea/content.aspx.
4, via a crafted URL.
4, via a crafted packet.
4, via unspecified vectors.
3, via vectors involving contributed or custom code that triggers a rebuild of the user profile form.
4, via unspecified vectors.
4, via a crafted TGA file.
3, via unspecified vectors.
4, via a negative index in a file-content buffer.
4, via vectors related to use of the character pattern [\w]* in a regular expression.
4, via a crafted jpeg file.
4, via a crafted jpeg file.
4, via a crafted jpeg file.
4, via a crafted jpeg file.
4, via a crafted jpeg file.
4, via a large size value.
4, via a large size value.
4, via a large size value.
4, via a large ident value in a kevent system call.
5, via a crafted value in the tsp parameter of the __thrsleep system call.
4," via a negative """"ts.tv_sec"""" value."
4, via a large size in a getdents system call.
3, by mounting a tmpfs with a VNOVAL in the (1) username
3, by unmounting a filesystem with an open vnode on the mnt_vnodelist.
1, by reading these files.
3, via vectors related to verifying filename lengths when writing an ISO9660 archive
1, via crafted input to newuidmap.
4, via a crafted network packet.
4, via a POST request without a registered handler.
1, via crafted XML data in a request to B1iXcellerator/exec/soap/vP.001sap0003.in_WCSX/com.sap.b1i.vplatform.runtime/INB_WS_CALL_SYNC_XPT/INB_WS_CALL_SYNC_XPT.ipo/proc
3, by leveraging fast-paths for updating pagetable entries.
4, via 64 bytes of input.
3, by reading a zero byte as input
1, via crafted UTF-8 data.
5, via a negative length value to the memset function.
4, via a crafted PDF file.
4, via shell metacharacters in the password to api/v1/cfg/oauth/save_identify_pfx/.
3, by leveraging a missing HVI check on DHPart2 packet reception.
0, via the newFileName parameter to pages/doeditattachment.action.
2, via the HTTP Host header.
3, via vectors involving the smart_str data type.
4, via a crafted spec file.
4, via a forged NTP packet
3, via unknown vectors.
5, by triggering a zero-length record in an SSL_peek call.
1, via crafted certificate operations
4, via a long GECOS field
1, via vectors related to improper sanitization of the file_name parameter
5, by leveraging a call to the UserGetRights function after Session::getAllowedUserRights.
3," by leveraging """"insufficient use of random values"""" in async jobs."
4, via unspecified vectors.
2, by running that command.
4, via a sysctl call with a path starting with 10
1, via crafted dimensions in an ICO file.
3, via vectors involving num_to_read.
4, via a crafted value
1, via unspecified API calls
0, via a crafted pathname in an HTTP request
4, via a crafted URL
1, via crafted platform commands
4, via a crafted dnslookup command in an HTTP request
2, via unspecified vectors
1, via crafted ICMP packets that require NAT
1, via crafted IP Detail Record (IPDR) packets
4, via a crafted DNS response
3, via fragmented IKEv1 packets
5, via a malformed IPv6 Protocol Independent Multicast (PIM) register packet
1, via crafted fields in an H.323 message
1, via crafted image-list parameters
1, via fragmented IPv4 packets
4, via a crafted series of Common Industrial Protocol (CIP) requests
4, via a crafted IPv4 Multicast Source Discovery Protocol (MSDP) Source-Active (SA) message
4, via a failed SSH connection attempt that is mishandled during generation of an error-log message
4, via a session identifier
4, via a crafted URL
1, via crafted (1) SSL or (2) TLS packets
1, via crafted CLI input
4, via a crafted URL
2, via the Cartridge interface
0, by making many HTTP requests for overlapping byte ranges simultaneously
1, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via a crafted URL
2, via unspecified vectors
0, via a crafted HTTP request
5, via a crafted OSPF Link State Advertisement (LSA) update
1, via crafted IKEv2 packets
4, via a crafted rate of DHCP packet transmission
1, by leveraging admin privileges
1, via crafted web-application parameters
1, via crafted parameters
5, by changing a certain size value
2, via the contentType parameter in a login action to config/userAdmin/login.tdf.
4, via a zero length for the descriptor buffer.
4, via a crafted application that makes an MT6573FDVTIOC_T_SET_FDCONF_CMD IOCTL call.
1, via vectors related to memory permission.
2, via an LDAP attribute with a crafted serialized Java object
1, by leveraging setting returnObjFlag to true for all search methods.
2, via an LDAP attribute with a crafted serialized Java object
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted packet.
3, by changing a certain count value
4, via a %2E%2E (encoded dot dot) in the minifierBundleDir parameter to barebone.jsp.
2," via the Metadata field in the """"Create Share"""" form."
3, via vectors related to pixel cache morphology.
4, via a crafted mmap call
2, via the (1) q or (2) link_type parameter to admin/media.php.
4, via a large decode array.
4, via a malformed serializable object.
4, via a malformed serializable object.
1, by leveraging knowledge of a handle parameter value.
1, by leveraging failure to implement the OAuth 2.0 Token Revocation specification.
4, via a long sequence of join and quit actions.  NOTE: the vendor disputes this issue
4, via a .. (dot dot) in the fileName parameter to servlets/FileUploadServlet.
4, via a .. (dot dot) in the fileName parameter to servlets/FetchFile.
2, via the UserName HTTP header.
3, via unknown vectors. The Samsung ID is SVE-2016-6382.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
1, by leveraging knowledge of an r_object_id value.
1, via crafted input to the (1) GeneralCmdRequest
1, via crafted input to the (1) GetSymmCmdRequest or (2) RemoteServiceHandler class.
4, via unspecified vectors.
1, by reading syslog messages
4, via a crafted SWF file.
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application that makes a linkspeed ioctl call
4, via a crafted application that makes a GET_CFG ioctl call
4, via a crafted application
4, via a crafted application
4, via a crafted application that makes a setwpaie ioctl call
5, via a crafted application that makes an iw_set_priv ioctl call
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
4, via a crafted application
2, via an access point that has a malformed SSID with GBK encoding
1, via unknown vectors
2, via an invalid data length
1, via crafted parameter data
5, via a crafted visualizer data length
5, via a large negative value for the data length
2,create shortcuts that have elevated privileges without the user's consent. This issue is rated as Moderate because it is a local bypass of user interaction requirements (access to
1, by leveraging use of a non-root servlet context path.
4, via XXE in modified update-notifier documents.
1, via crafted height and width values
5, via a crafted compressed email attachment.
0,send an incorrect selective acknowledgment to
1, via vectors related to buffer resizing.
1, by leveraging failure to check if the device is active.
4, via a zero length for the current fragment length.
1, by leveraging failure to initialize the txcq_descr object.
3, via unspecified vectors.
0, via the loginName parameter to cgi-bin/doLogin_CgiEntry and possibly other unspecified vectors.
2, via the web interface (sending mail
2, via the web interface (sending mail
2, via the itemsperpage parameter.
0, by triggering an error and then reading a Java stack trace.
3, via vectors involving an invalid password hash
2, via unknown vectors
4, via unknown vectors.
3, via unknown vectors.
2, via unknown vectors
3, via unknown vectors.
3," via vectors involving the HTTP Host header and a cached page.  NOTE: the vendor reports """"our internal analysis of this issue concluded that this was not a valid vulnerability"""" because an exploitation scenario would involve a man-in-the-middle attack against a TLS session."
3, by leveraging a call with more than one Key_Usage set in the enum value.
4, via a crafted SWF file.
4, via a Bleichenbacher variant attack.
4, via a crafted message.
4, via a base zero value for the modular exponentiation.
4, via a (1) zero value or (2) the key's modulus for the secret key during RSA key exchange.
2, via the maximum fragmentation count
4, via a crafted Subject Alt Name in an X.509 certificate.
4, via a crafted ASN.1 Bit Field primitive in an X.509 certificate.
4, via a crafted X.509 certificate.
4, via a .. (dot dot) in the plugin parameter to wp-admin/admin-ajax.php
3, by leveraging a late call to the check_ajax_referer function
4, via a crafted XML document.
4, via a crafted TGA image.
4, via a crafted TGA file
4, via a crafted TIFF image.
2, via large width and height values.
0, via the back parameter to ossim/conf/reload.php.
3, by uploading files. (
0, via vectors involving tile positions.
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
4, via a Trojan horse executable file in the %SYSTEMDRIVE% directory.
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
1, via unspecified vectors
1, via unspecified vectors
2, via unspecified vectors
3," by leveraging an unspecified """"type confusion."""""
2, via unspecified vectors
2, by bypassing ACL which should only allow authenticated users to list contents of bucket.
2, via an application that calls the (1) system or (2) popen function.
4, via unspecified vectors.
3, by leveraging failure to use a constant time comparison for HMAC keys.
2, by triggering use of the GRO path for large crafted packets
4, via vectors involving the length of a string.
1, via vectors related to a DTD.
3, by triggering a CRL operation.
4, via a crafted serialized Java object.
1, via unspecified vectors
2, via unspecified vectors
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse setup64.exe file in the installation directory.
4, via a crafted ifconfig command
3, via vectors related to L3 recursive pagetables.
4, via a pagetable update.
4, via a large row value in an sgi file.
4," via a Trojan library in a """"special path"""" in the C: drive."
2, via the closeText parameter of the dialog function.
4, via unspecified vectors.
4, via unspecified vectors.
4," via """"special characters"
4," via """"special characters"
4, via a long string in an MT_CPTYPE_PASSSALT control packet.
4, via a .. (dot dot) in an unspecified string.
4, via vectors involving a recvmmsg system call that is mishandled during error processing.
4, via a crafted onclick attribute in an IMG element.
2, via an invalid ISO 8601 time value
2, via an invalid base64 binary value
5, via a malformed wddxPacket XML document that is mishandled in a wddx_deserialize call
2, via an invalid wddxPacket XML document that is mishandled in a wddx_deserialize call
5, via a .. (dot dot) in the path parameter in a getFile action to Plone/++theme++barceloneta/@@plone.resourceeditor.filemanager-actions.
4, via a crafted GET request.
4, via a crafted AUTHENTICATE parameter.
4, via a crafted AUTHENTICATE parameter.
4, via a crafted AUTHENTICATE parameter.
1," by using the """"page creation or crafted URL"""" approach"
0, via vectors involving double quotes
2," by using the """"page creation"""" approach"
5, via vectors related to the autolink function.
2, via the site name.
2, via an invalid guest frame number.
0, by leveraging an incorrect cast.
1, via vectors involving MPTSAS_CONFIG_PACK.
4, via a large ethlite packet.
4, via a symlink attack on a folder in an archive.
5, via a crafted JP2 file
4, via a crafted GZIP response.
1, by tricking an administrator into uploading an image file that has a crafted filename.
4, via a crafted urlholder parameter.
1, via vectors related to cursor.mask[] and cursor.image[] array sizes when processing a DEFINE_CURSOR svga command.
4, via a crafted packet.
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
2, via unspecified vectors
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
1, via unspecified vectors
2, via unspecified vectors
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted Office document
0, via an unspecified parameter
4, via a crafted document
4, via a crafted document
4, via a crafted web site
4, via a crafted web site
1, via unspecified vectors
2, via unspecified vectors
2, via unspecified vectors
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted document
4, via a crafted web site
4, via a crafted web site
4, via a Trojan horse executable file
4, via a crafted bmp image file.
4, via a crafted file.
2," by reading the """"value"""" field of the SMTP user settings in the notifications configuration tab."
1, via crafted HTTP requests.
3, via the (1) id parameter in an activate_address address controller action
4, via dbcc import_sproc SQL injection.
3, via vectors related to incorrect quoting.
2, via format string specifiers in the (1) username or (2) host argument.
4, via a crafted OpenSSH key file.
4, via a crafted (1) -m or (2) -c argument.
4, via a crafted file.
4, via a wddxPacket XML document that lacks an end-tag for a recordset field element
4, via a long locale string.
0, via an incorrect boolean element in a wddxPacket XML document
4, via a crafted directory name.
1, by leveraging failure to limit process IO loop to the ring size.
4, via a crafted MP3 file.
4, via a crafted broadcast mode packet.
2, via the poll interval in a broadcast packet.
0, via an origin timestamp of zero.  NOTE: this vulnerability exists because of a CVE-2015-8138 regression.
4, via a crafted mrulist query.
2," by reading the """"value"""" field of the proxy user settings in """"system settings / scan settings / anti spam"""" configuration tab."
1," via vectors related to """"uploading files to wrong location."""""
1, via vectors involving the variable s.
3, via unknown vectors. Note: This vulnerability exists due to an incomplete patch for CVE-2016-2317.
4, via unknown vectors.
4, via vectors involving the header information and the file size.
4," via a file containing an """"unterminated"""" string."
1, via an XML document containing an external entity declaration in conjunction with an entity reference
4, via a (1) Log Browser
2, via an XML document containing an external entity declaration in conjunction with an entity reference
3, via unspecified vectors.
5, via a crafted DiskFileItem in a relay-request payload that is mishandled during deserialization.
4, via a crafted VM.
4, via a crafted HTTP request.
4, via a crafted mp3 file.  NOTE: this issue was originally reported as involving a NULL pointer dereference.
4, via a crafted mp3 file.
3, by using a certain character when the database is configured to use Big5 Asian encoding.
4, by attaching a crafted HTML file to a ticket.
1, via crafted input.
4, via a crafted file.
4, via unspecified vectors.
4, via a crafted PSD file.
1, via vectors related to the number of pixels.
4, via a crafted VIFF file.
4, via a crafted PICT file.
4, via a crafted SUN file.
4, via a crafted file.
4, via a crafted HDR file.
4, via a crafted PSD file.
4, via a crafted PSD file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted PSD file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted VIFF file.
4, via a crafted XCF file.
4, via a crafted file.
4, via a crafted PDB file.
4, via a crafted PSD file.
4, via a crafted WPG file.
4, via a crafted file.
4, via a crafted PSD file.
4, via a crafted profile.
4, via a crafted PDB file.
4, via a crafted file.
4, via unspecified vectors.
0, by converting an image to rgf format.
1, via crafted SHELLOPTS and PS4 environment variables.
5, via a crafted TIOCSTI ioctl call.
4, via a crafted AVI file.
4, via a * (asterisk) at the end of the input.
1, via crafted input.
4, via shell metacharacters in the sc array parameter.
4, via a crafted string.
4, via a .. (dot dot) in the embedded layer data in an image.
3, via vectors involving an HTTP exception.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted dynamic library in an unspecified directory.
4, via a crafted Thunderbolt adapter.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted MP4 file.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted font.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site that uses HTTP redirects.
4, via a crafted app.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted app.
4, via unspecified vectors.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app that leverages object-lifetime mishandling during process spawning.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted app.
4, via a crafted .gcx file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted .gcx file.
4, via a blob URL on a web site.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted certificate profile.
4, via a crafted font.
4, via a crafted app.
4, via a crafted web site.
4, via unspecified vectors.
4, via a crafted web site.
4, via unspecified vectors.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
5, via unspecified vectors.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted file.
4, via a crafted file.
1, via unspecified vectors related to Mach port name references.
2, via unspecified vectors related to Mach port name references.
5, via a crafted string.
0, by leveraging the availability of excessive options during lockscreen access.
4, via a crafted string.
4, via unspecified vectors.
2, via the version parameter.
2, via the author parameter.
2, via the src parameter.
2, via the title parameter.
2, via the section parameter.
4, via a crafted AVI file.
2, via direct object reference
2, via the username parameter.
2, via the apikey parameter.
4, via a crafted repository URL.
4, via a crafted repository name.
4, via a zero-length message received over a notify socket.
4, via a zero-length message received over a notify socket
4, via a crafted file.
4, via a crafted 8BIM chunk
4, via unspecified vectors.
4, via unspecified vectors.
4," via """"MultiReport"""" function."
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the parameters hostname
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
2, via specially crafted commands.
2, via specially crafted POST requests.
4, via a specially crafted webpage.
4, via unspecified vectors.
3, via unspecified vectors.
2, via the parse_line function used in some userland utilities.
4, via a specially crafted executable file in an unspecified directory.
2, via the search parameter.
2, via the month parameter.
2, via the page parameter.
2, via specially crafted ATC file.
2, via specially crafted mail template.
2, via unspecified vectors
3, by uploading a ZIP file containing a file with a crafted extension
4, via an admin/adduser.php request.
4, via a crafted AVI file.
4, via a crafted file.
2, by setting the (1) receive or (2) transmit descriptor ring length to 0.
0, by leveraging the execution of a certain stop operation even if the corresponding start operation had failed.
4, via a crafted ioprio_get system call.
3, by accessing an I/O data structure after a certain callback call.
0, via vectors involving omission of the firmware name from a certain data structure.
3, by connecting a device
5, by reading a /proc/*/environ file during a process-setup time interval in which environment-variable copying is incomplete.
1, via unspecified vectors
4, via vectors involving image type and geometry
0, via vectors involving length fields
4, via a length value of INT_MAX
0, via vectors involving length fields.
0, via vectors involving length fields.
4, via a crafted response.
3, by leveraging mishandling of reply data.
0, via vectors involving length fields.
0, via vectors involving filter name lengths.
0, by leveraging the lack of range checks.
4, via a reply in the (1) XRecordStartOfData
2, via an empty string.
5, by leveraging a gem name collision on a secondary source.  NOTE: this might overlap CVE-2013-0334.
1, via unspecified vectors
3, via unspecified vectors.
4, via unspecified vectors.
1, via crafted userparams.
2, via the use of the .libfile operator in a crafted postscript document.
1, via vectors related to a reference leak in .setdevice.
0, by leveraging type confusion in .initialize_dsc_parser.
4, via a crafted valider_xml request.  NOTE: this issue can be combined with CVE-2016-7998 to execute arbitrary PHP code.
2, via the var_url parameter in a valider_xml action.
2, via the var_url parameter in a valider_xml action.
4, via a large number of VIRTIO_GPU_CMD_RESOURCE_CREATE_2D commands.
4, via a large number of crafted buffer page select (PG) indexes.
4, via a colormap with a large number of entries.
4, via vectors related to a ReferenceBlob and a NULL pointer.
0, by uploading an HTML file with a crafted (1) INCLUDE or (2) INCLURE tag and then accessing it with a valider_xml action.
4, via a URL in the var_url parameter in a valider_xml action.
3, via scanning an email with a forged attached filename that uses a null byte within the filename extension.
2, via the GUI or GUI terminal commands.
3, via specific conditions.
4, via McAfee McUICnt.exe onto a Windows system.
4, via a command-line utility.
4, via a crafted web site.
0, via pages in the target process memory get.
4, via a URL parameter.
4, via a crafted user input.
4, via a crafted user input.
4, via a crafted user input.
4, via a crafted HTTP request parameter.
4, via a crafted input file.
4, via a crafted authentication cookie.
4, via a crafted authentication cookie.
2, via the server HTTP response spoofing.
5, via a crafted HTTP request parameter.
4, via unspecified vectors.
4, via a crafted HTML link.
5, via a crafted input file.
4, via a crafted input file.
3, via unspecified vectors.
4, use conditions.
2, via command line interface. With affected versions
4, via unspecified vectors.
1, via vectors related to Server: Replication.
4, via vectors related to Candidate Gateway.
1, via vectors related to Server: Security: Privileges.
3, via vectors related to Server: Replication.
1, via vectors related to Server: InnoDB Plugin.
1, via vectors related to Server: InnoDB.
1, via vectors related to Server: Performance Schema
1, via vectors related to Mobile Application Platform.
1, via vectors related to Talent Acquisition Manager.
3, via vectors related to Integration Broker
3, via unknown vectors.
4, via unknown vectors.
1, via vectors related to LDAP.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vectors.
4, via a remote shell.
4, via IPSec/TLS decryption.
3, by uploading a new webui theme.
3, by using a man-in-the-middle (MITM) attack via the Fortisandbox devices probing feature.
1, via crafted packets to TCP port 4410.
1, via crafted traffic to TCP port 4410.
4, via a cat-file command with a crafted object file.
4, via a cat-file command with a crafted object file.
1, via vectors related to an I/O read operation.
0, by sending an empty string parameter to a 9P operation.
4, via MySQL's LOAD_FILE.
4, via shell metacharacters in the timezone parameter.
4, via shell metacharacters in the cache_id parameter.
2, via an archive file containing a symlink to /eng_ptn_stores/prod/sensorSDK/data/ or /eng_ptn_stores/prod/sensorSDK/backup_pol/.
4, via shell metacharacters in the file name of an uploaded file.
4, via shell metacharacters in the cache_id parameter.
4, via shell metacharacters in the cache_id parameter.
4, via shell metacharacters in the cache_id parameter.
4, via shell metacharacters in the cache_id parameter.
4, via a .. (dot dot) in the dID parameter.
4, via a crafted AVI file.
4, via a long csp packet.
2, via specially crafted SFP packets.
4, via a long packet.
4, via a crafted Postscript document that calls .sethalftone5 with an empty operand stack.
2, via an HTTP inter-protocol attack.
4, via a long SSID Information Element in a command to a Netlink socket.
0, by using the vfs syscall group in the trinity program
2, by triggering use of the GRO path for packets with tunnel stacking
4, via a large interval timer reload value.
1, by leveraging failure to limit DMA buffer size.
4, via a crafted file.
4, via a crafted mp3 file
4, via a crafted mp3 file.  NOTE: this issue exists due to an incomplete fix for CVE-2016-8675.
4, via a crafted image file
4," via a crafted file.  NOTE: the vendor says """"This is a Q64 issue and we do not support Q64."""""
1, by calling the dwarfdump command on a crafted file.
2, by calling the dwarfdump command on a crafted file.
2, by calling the dwarfdump command on a crafted file.
4, via a crafted SCT header.
4, via a crafted image
4, via a crafted image
4, via a crafted BMP image.
4, via a crafted image
5, via a crafted non-printable multibyte character in a filename.
3, via multiple EmptyStream attributes in a header in a 7zip archive.
4, via a crafted BMP image in an imginfo command.
4, via a crafted XRsiz value in a BMP image to the imginfo command.
4, via a crafted YRsiz value in a BMP image to the imginfo command.
4, via a crafted BMP image to the imginfo command.
5, via a crafted BMP image
4, via a crafted BMP image
4, via a crafted BMP image
4, via a crafted BMP image.
4, via a crafted BMP image
4, via a crafted BMP image
4, via a crafted BMP image
4, via a crafted BMP image
4, via a crafted BMP image
4, via a crafted BMP image
3,create documents according to
2," by sending many duplicate KEXINIT requests.  NOTE: a third party reports that """"OpenSSH upstream does not consider this as a security issue."""""
4, via a large number of (1) states or (2) tags
4, via a crafted image
4, via a valid URI followed by an invalid one in the CALLBACK header of an SUBSCRIBE request.
4, via a crafted image
0, by leveraging incorrect use of unfiltered data when registering on a site.
4, via a crafted JPEG2000 image embedded in a PDF document
4, via a crafted JPEG2000 image embedded in a PDF document
4, via a crafted file.
4, via a crafted file.
1, by calling the imginfo command with a crafted BMP image. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8690.
2, by calling the imginfo command with a crafted BMP image.
4, via a crafted file
2, via the sort parameter.
2, via the orderby parameter.
2, via the orderby parameter.
2, via the sort parameter.
2, via the orderby parameter.
2, via the orderby parameter.
2, via the orderby parameter.
1, by intercepting the higher-privilege user's cookie value from its HTTP request and then reusing it in subsequent requests. IBM Reference #: 1993718.
5,create a cluster object to
5, via a crafted wmf file
2, via the management plane
5, via a crafted TIOCSTI ioctl call.
2, via the is_what parameter.
2, via the version parameter.
4, via a large svg file.
3, via unknown vectors.
2, via the fileid parameter.
5, via a large number of Txattrcreate messages with the same fid number.
5, by reading xattribute values before writing to them.
4, via a crafted offset
3, via vectors involving a reference to the source fid object.
3, by leveraging failure to free an IO vector.
1, via vectors related to incomplete escape sequences.  NOTE: this vulnerability exists due to an incomplete fix for CVE-2016-7563.
0, by leveraging physical access to a VDI for temporary disconnection of a LAN cable. NOTE: as of 20161208
4, via unspecified vectors.
5, by calling ION_IOC_FREE on two CPUs at the same time.
1, via crafted serialized data that is mishandled during __wakeup processing.
2, via the QBE.EQ.REF_NUM parameter.
2, via the rac parameter.
2, by sending specially crafted packets to port 19234/TCP.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a .. (dot dot) in the URI.
3, by uploading a file with an executable extension
3, by uploading a file with an executable extension
2, via the s_additionalhtmlhead
2," by using the """"crafted image file"""" approach"
1," by using the """"crafted image file"""" approach"
2, via the (1) content_type or (2) subtype parameter.
3, via unspecified vectors.
4, via vectors related to handling of .nessus files.
4, via unspecified vectors.
4, via a crafted image
4, via a crafted mp3 file.
4, via a crafted mp3 file.
4, via a crafted mp3 file
5, by uploading a theme file with an zip extension
4, via a crafted file
4, via a Trojan horse git.exe file in the current working directory. NOTE: 2.x is unaffected.
0, via vectors involving APIs and an activity that computes an out-of-bounds array index
4, via action=search&module=search with the search_string parameter.
4, via address/addContentToSearch/id/ and a trailing string
4, via users/getUsersByJSON/sort/ and a trailing string.
4, via a modified id number
1, via crafted TIFF_SETGET_C16ASCII or TIFF_SETGET_C32_ASCII tag values.
4, via a crafted image.
4, via a crafted serialized Java object
4, via a crafted control mode packet.
2, via an oversized image.
0, by changing certain data on shared rings
5, by loading a 32-bit ELF symbol table.
1, by leveraging lack of canonical address checks.
5, via a crafted file
5, via a crafted image file.
4, via a crafted image file.
4, via a very large integer.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via vectors involving snap handling.
4, via a crafted address.
4, via unspecified vectors.
4, by leveraging a missing permission check.
1, via vectors related to login.
4, via unspecified vectors.
5, via unspecified vectors.
3, via vectors involving Mod control panel logs.
0, via vectors involving editing users.
0, via vectors involving pruning logs.
4, via vectors involving templates.
3, via vectors involving sending mails.
4, via vectors related to low adminsid and sid entropy.
3, via unspecified vectors.
0, by leveraging missing directory listing protection in upload directories.
3," via vectors related to """"style import."""""
4, via unspecified vectors.
4, via unspecified vectors.
3, via vectors involving a short name.
4, via unspecified vectors.
4," via vectors related to """"loose comparison false positives."""""
4, via unspecified vectors.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via huge allocation.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via large width and height values
4, via a crafted NSF music file.
0, by setting the tags TIFF_SETGET_C16ASCII or TIFF_SETGET_C32_ASCII to values that access 0-byte arrays.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-9297.
1, by leveraging inconsistent naming of access query tags.
1, by leveraging failure to specify a correct cache context.
4, via a crafted URL.
4, via a JPEG file with a TIFFTAG_JPEGTABLES of length one.
4, via a crafted request.
1," by using the """"malformed dwarf file"""" approach"
2, by navigating directly to /admin.php?mod=admin&func=panel
4, via a crafted tif file.
0, by utilizing the variable name 'escapedips' - however this was not the case. The Sophos ID is NSWA-1258.
4, via a crafted image file.
4, via a crafted file.
4, via a crafted bit pattern in a signed leb number
4, via a crafted image.
4, via a crafted image.
2, via an HTTPS request to the sap.com~P4TunnelingApp!web/myServlet URI
2, via the sap.com~tc~bpem~him~uwlconn~provider~web/bpemuwlconn URI
2, via an HTTP GET request requesting a long URI with only '/' and '.' characters.
4, via a symlink attack on the log file.  NOTE: this can be leveraged by remote attackers using CVE-2016-9565.
4, via a large counter value in an 0x62430028 IOCTL call.
5, by sending a specially-crafted cross-origin HTTP request.
4, via a crafted ics file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via the start_line parameter.
3, by providing a 'skip count' that goes beyond initialized buffer.
3, by providing a 'write count' that goes beyond the initialized buffer.
4, via a crafted Javascript file.
4, via a crafted HTML page.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, by overwriting a function pointer.
4, via unspecified vectors.
5, via a category or directory name.
1, via crafted XFS filesystem operations.
2, via the search parameter.
4, via vectors involving the (1) client cache partition
4, via a crafted image file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-9556.
4, via a crafted SNDRV_PCM_TRIGGER_START command.
4, via a crafted application that makes sendmsg system calls
4, via a crafted FLIC file.
4, via a crafted series of skip and count pairs.
4, via a crafted file
0, via an invalid file
4, via a too small section.
4, via a crafted file.
0, by sending an asynchronous abort.
3, via vectors involving an asynchronous abort while at EL2.
3, via vectors involving a (1) data or (2) prefetch abort with the ESR_EL2.EA bit set.
4, via vectors involving an asynchronous abort while at HYP.
3, via vectors involving left shift of a negative value.
3, via vectors involving left shift of a negative value.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via vectors involving left shift of a negative value.
4, via vectors involving left shift of a negative value.
4, via a crafted SWF file.
4, via a crafted SWF file.
4, via a crafted SWF file.
2, via large dimensions in a jpeg image.
4, via a crafted SWF file.
4, via (1) SAPGUI or (2) Internet Communication Framework (ICF) over HTTP or HTTPS
3, by uploading a serialized file.
0, by leveraging improper pointer arithmetic.
0, by leveraging improper pointer arithmetic.
4, via vectors involving left shifts of negative integers.
3, via vectors involving big-endian CRC calculation.
4, via a large compression method value in the central directory file header.
2, via the upfiletitle or media_title parameter (aka the media title).
1, by leveraging mishandling of the < (less than) character in attribute values.
1, by leveraging mishandling of special characters in attribute values
0, via vectors involving the order of resource cleanup.
3, by leveraging a missing cleanup operation in FileOperations.
4, by leveraging a missing cleanup operation in the handle backend.
3, by leveraging a missing cleanup operation in the proxy backend.
4," via a """"supposedly-ignored"""" operand size prefix."
1, via crafted serialized data in a wddxPacket XML document
0, via an empty boolean element in a wddxPacket XML document.
1, via crafted serialized data.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-6834.
4, via a crafted FramebufferUpdate message containing a subrectangle outside of the client drawing area.
5, via a crafted FramebufferUpdate message with the Ultra type tile
4, via a crafted regular expression with a repeating pattern.
0, by leveraging improper conversion of return values to boolean.
4, via a crafted Nasal script.
3, via vectors related to log files and bounce messages.
0, via vectors involving the about:blank URL and data: URLs
4, via a crafted document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
2, via unspecified vectors
4, via a crafted web site
4, via a crafted document
4, via a crafted application
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted Office document
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted web site
4, via a crafted email or chat client
4, via a crafted web site
4, via a crafted web site
4, via a crafted application
4, via a crafted web site
4, via a crafted document
4, via a crafted email with specific HTML tags
1, by leveraging failure to properly calculate the length of 4-byte characters in the Unicode Non-Character range.
4," via a """"same root name but with a suffix"""" attack. NOTE: This vulnerability exists because of an incomplete fix for CVE-2016-1242."
4, via a crafted model in the current working directory
3, via unspecified vectors.
3," by using """".."""" in tar archive entries"
2, via the graph_template_input_id and graph_template_id parameters.
0, via the parent_id parameter to tree.php and drp_action parameter to data_sources.php.
2, via the pad content
4," via a .cbt file that is a TAR archive containing a filename beginning with a """"--"""" command-line option substring"
4, use to authenticate with a Docker Registry. This functionality did not check permissions
1,compromise Oracle Hospitality Simphony First Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2, via the fields parameter.
2, via the SSH protocol. User passwords and passphrases for encrypted SSH keys are stored in plaintext in a configuration file.
1, by overwriting the stack. Please note that libffi is used by a number of other libraries. It was previously stated that this affects libffi version 3.2.1 but this appears to be incorrect. libffi prior to version 3.1 on 32 bit x86 systems was vulnerable
4, via a crafted file.
4," via a javascript: URI in the """"movie"""" parameter."
4," via the helpkey parameter. Exploitation requires authenticated reflected cross-site scripting for user accounts assigned either the """"Administrators"""" or """"Content Administrators"""" role."
4,use the Filemanager to
4,compromise BI Publisher. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle BI Publisher. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise Oracle Payment Interface. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Agile PLM. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Outside In Technology. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Applications Manager. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Access Manager. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise FSCM. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Hospitality Hotel Mobile. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle FLEXCUBE Direct Banking. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Integrated Lights Out Manager (ILOM). Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Outside In Technology. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality OPERA 5 Property Services. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle Hospitality e7. Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Hospitality Suite8. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Hospitality Property Interfaces. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality Guest Access. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality Cruise Fleet Management. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Hospitality WebSuite8 Cloud Service. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise PeopleSoft Enterprise FSCM. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Access Manager. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Integrated Lights Out Manager (ILOM). Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Access Manager. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Siebel UI Framework. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise FSCM. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Agile PLM. Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Siebel CRM Desktop. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle Hyperion Financial Reporting. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Hyperion BI+. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Hospitality Suite8. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Hospitality Suite8. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise PT PeopleTools. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Hospitality Suite8. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Hospitality Suite8. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Hospitality Simphony. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Hospitality Hotel Mobile. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise PeopleSoft Enterprise PT PeopleTools. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality Guest Access. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality Cruise Fleet Management. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Hospitality Suite8. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise PeopleSoft Enterprise FSCM. Successful attacks of this vulnerability can result in unauthorized read access to
4, use of PAM. Affected Juniper Networks Junos OS releases are: 14.1 from 14.1R5 prior to 14.1R8-S4
3, via simultaneous file-descriptor operations that leverage improper might_cancel queueing.
3, by uploading a crafted file with a .. (dot dot) in the file name.
4, via a crafted filename.
0, by controlling the arguments to a replaceChild call.
4, via a long third argument in a DeviceIoControl call.
4, via a crafted request.
0, by examining the redirect URL that is returned in a request for the permalink ID number of a private album. The permalink ID numbers are easily guessed.
4, via a crafted request.
4, via a crafted request.
2, via the cat_false or cat_true parameter in the comments or status page to cat_options.php.
2, by pressing backspace after each PIN guess.
5," uses a dynamic link library(DLL) called """"avilib.dll"""" which is used by the application to send binary packets to the device that allow to control the device. One such action that the DLL provides is change password in the function """"sendchangename"""" which allows a user to change the Wi-Fi name on the device. This function calls a sub function """"sub_75876EA0"""" at address 0x758784F8. The function determines which action to execute based on the parameters sent to it. The """"sendchangename"""" passes the datastring as the second argument which is the name we enter in the textbox and integer 1 as first argument. The rest of the 3 arguments are set to 0. The function """"sub_75876EA0"""" at address 0x75876F19 uses the first argument received and to determine which block to jump to. Since the argument passed is 1"
5," uses a dynamic link library(DLL) called """"avilib.dll"""" which is used by the application to send binary packets to the device that allow to control the device. One such action that the DLL provides is change password in the function """"sendchangepass"""" which allows a user to change the Wi-Fi password on the device. This function calls a sub function """"sub_75876EA0"""" at address 0x7587857C. The function determines which action to execute based on the parameters sent to it. The """"sendchangepass"""" passes the datastring as the second argument which is the password we enter in the textbox and integer 2 as first argument. The rest of the 3 arguments are set to 0. The function """"sub_75876EA0"""" at address 0x75876F19 uses the first argument received and to determine which block to jump to. Since the argument passed is 2"
4, via a crafted .flv file
4, via a crafted .flv file
4, via a crafted .flv file
4, via a crafted .flv file
4, via a crafted .rle file
5, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
5, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
5, via a crafted .rle file
5, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
5, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
5, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
5, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
4, via a crafted .rle file
5, via a crafted .rle file
3, by triggering (1) certain error responses from a MySQL server or (2) a loss of a network connection to a MySQL server. The use-after-free defect was introduced by relying on incorrect Oracle mysql_stmt_close documentation and code examples.
2, via the body to blog/add/
1, via vectors related to logging debug messages.
3, by triggering object-initialization failures.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via Relay Service Server.
4, via a Trojan horse DLL in an unspecified directory.
5, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4," via """"Cabinet"""" function."
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a specially crafted executable file in an unspecified directory.
4, via a specially crafted command.
4, via a Trojan horse DLL in an unspecified directory. Note this is a separate vulnerability from CVE-2017-10865.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory. Note this is a separate vulnerability from CVE-2017-10863.
2, via specially crafted HTTP/1 header.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors. Note that this vulnerability affects OpenAM (Open Source Edition) implementations configured as SAML 2.0IdP
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
2, via specially crafted HTTP/2 header.
4, via a Trojan horse DLL in an unspecified directory.
0, by leveraging the copying of uninitialized padding fields in Xen block-interface response structures
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted binary file
2, via the aoData parameter
0, via the opertype parameter
0, via the id parameter
4, use of an initial /%5C sequence to defeat traversal protection mechanisms; the initial /%5C sequence was apparently not discussed in earlier research on this product.
4, via a crafted filename that is mishandled in an upload notification and in the myfiles component
0, via a crafted parameter in a URL
4, via a crafted MNG image.
4, via a zero-length color_image data structure.
1, via crafted packet data. The crash occurs in the EXTRACT_16BITS function
4, via a crafted source (aka -S) file. NOTE: there might be a limited number of scenarios in which this has security relevance.
4, via a crafted file
4, via a crafted HTML file.
4, via a crafted jpg file.
4, via a crafted jpg file.
5, via a crafted jpg file.
4, via a crafted jpg file.
4, via a crafted nsf file.
4," via a crafted audio file that is mishandled in the code for the """"block_type != 2"""" case"
3, via unspecified vectors.
1, via crafted URI.
4, via shell metacharacters in the crafted file name of RTF documents.
2, via the logo_upload action.
2, via the path parameter.
4, via a crafted serialized payload.
2, via the type parameter.
4, via unspecified vectors.
4, via a Trojan horse (1) shfolder.dll
4, via a Trojan horse (1) shfolder.dll
4, via a Trojan horse (1) shfolder.dll
4, via a Trojan horse (1) shfolder.dll
2, via the (1) article_id parameter to label.php; or (2) type parameter to synotheme.php.
4, via unspecified vectors.
0, via specially crafted HTTP Referer headers
4, via a direct request for the /services/getFile.cmd?userfile=config.xml URI.
3," by using a URL Manager """"Add Site"""" action to enter this code after a '"
3, by leveraging a guest/user/normal account to submit a modified privilege parameter to /form2userconfig.cgi.
4, via a crafted file parameter.
4, via a crafted RSA signature.
2, via an unlock action with an old session ID (for the same user account) that had been created for an earlier session. NOTE: Vendor states that issue does not exist in product and does not recognize this report as a valid security concern.
2, via the folder
0, by uploading an image via a route=images action.
4, via a long response.
1, by using unsupported
0, by leveraging insufficient validation methods and missing cross server side checking mechanisms.
4, via shell metacharacters in the less command.
4, via a dollar sign ($) metacharacter in the argument to chroothole_client.
4, via a crafted MS-DOS device file
4, via a crafted avi file.
4, via a crafted wav file.
4, via a crafted wav file.
4, via a crafted wav file.
1, by leveraging use of qemu_map_ram_ptr to access guest ram block area.
0, via vectors involving the upload of help desk videos.
2, via the (1) PATH_INFO to the main page; the (2) beanReference parameter to the JavaBean viewer page; or the (3) pyTableName to the System database schema modification page.
3, by leveraging a missing access control.
4, via a crafted hcom file.
4, via a crafted snd file
1, via malformed compressed data.
1," by parsing the """"t"""" parameter within modTMCSS Proxy. Formerly ZDI-CAN-4744."
1," by parsing the """"T"""" parameter within modTMCSS Proxy. Formerly ZDI-CAN-4745."
0, by parsing the tr parameter within Proxy.php. Formerly ZDI-CAN-4543.
0, by parsing the T parameter within Proxy.php. Formerly ZDI-CAN-4544.
4, via a crafted APE file.
5,send malformed/crafted packets to
4, via a crafted DHCP options string.
4, via a crafted file.
1, via JPEG data that is too short.
4, via a crafted DTD in an XML request
2, via the sessionID parameter
3, via an fget command or (2) write to arbitrary files and consequently execute arbitrary code via an fdir command
0, via the responsecode parameter to shp/shp_result.jsp
0, via vectors involving automatic deletion of security contexts on error.
4, via a crafted Ruby script
2, via directory traversal sequences in the fieldName parameter to servlets/ajax_file_upload. This results in arbitrary code execution by requesting the .jsp file at a /assets URI.
4, via a crafted ACPI table.
4, via a malformed DJVU image.
0, via the user parameter in a login action.
4," via a request starting with """"GET /../"""" on TCP port 4321."
4, via a malformed JNG file.
2, via an ONVIF GetSnapshotUri request.
5, via a long URI in a GET request.
3, by leveraging a predictable random number generator seed. This is fixed in C9(UN)_V2_170511.
2, by triggering many media connections.
4, via a crafted file.
5, via a crafted file
5, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
5, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted mid file. NOTE: a crash might be relevant when using the --background option.
4, via a crafted mid file. NOTE: a crash might be relevant when using the --background option. NOTE: the TiMidity++ README.alsaseq documentation suggests a setuid-root installation.
4, via a crafted MP3 file.
4, via a crafted mid file. NOTE: CPU consumption might be relevant when using the --background option.
4, via a crafted mp3 file.
4, via a crafted MP3 file.
4, via a request to __mg_admin?save.  NOTE: this issue can be leveraged to execute arbitrary code remotely.
2, uses the web management interface of the device to provide the user's Wi-Fi credentials so that the device can connect to it and have Internet access. This device acts as a Wireless Blood pressure monitor and is used to measure blood pressure levels of a person. This allows an attacker who is connected to the Blipcare's device wireless network to easily sniff these values using a MITM attack.
2, via the upload and display of crafted text
5, via non-sanitized Markdown content in a new thread or a thread comment.
4, by including and loading a C library.
2, via an IMG element with both single quotes and double quotes.
2, via directory traversal sequences in the file parameter in a type=database request
3, via vectors involving goform/setSnmp.
3, via vectors involving home.asp.
4, by placing a Trojan horse WINHTTP.dll in the %APPDATA%\Dashlane directory.
4, via a crafted stream.
4, via a specially crafted previewable file.
4, via a malformed PRE file
4, via a malformed PRE file
2, via the query string to admin.php.
2, via the format parameter in admin.php.
2, via the (1) version
1, via XSS vulnerabilities or sniffing non-SSL traffic on the network
4, via syslog.
0, via specially crafted HTTP Referer headers.
4, via a '!2' string.
4, via a crafted cert8.db file.
0, by sniffing the network and leveraging the lack of SSL. NOTE: the vendor response
4, via a crafted DNxHD file.
4, via a crafted packet.
4, via a crafted file
2, via the tags array parameter.
4, via a Trojan horse ADVAPI32.DLL in the current working directory because of an untrusted search path
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted Flexible Image Transport System (FITS) file.
4, via a crafted file that is mishandled in an OpenPixelCache call.
4, via a crafted file that is mishandled in an AcquireSemaphoreInfo call.
1, via crafted traffic to TCP port 1583. The overflow occurs after Server-Client encryption-key exchange. The issue results from an integer underflow that leads to a zero-byte allocation. The _srvLnaConnectMP1 function is affected.
5, by uploading a .php file composed of concatenated image data and script data
5, by sending a specially crafted request to an affected SharePoint server
5, by sending a specially crafted request to an affected SharePoint server
5, by sending a specially crafted request to an affected SharePoint server
0,use a specially crafted file to
5,use cross-site forgery to
4," via a specially crafted URL aka """"ASP.NET Core Elevation Of Privilege Vulnerability""""."
3, by failing to properly handle objects in memory
4, via a crafted name.
2, via the avgnan
2, via specially crafted HTTP Referer headers
2, via the url parameter.
2, via the id parameter.
2, via the domain_name parameter.
2, via the username parameter.
2, via the username parameter.
4, via prog_id field.
4, via .htaccess file.
2, use it as a library in order to trigger this vulnerability.
2, use it as a library in order to trigger this vulnerability.
2, use the file as a library in order to trigger this vulnerability.
2, use the file as a library in order to trigger this vulnerability.
2, use the file as a library in order to trigger this vulnerability.
2, use the file as a library in order to trigger this vulnerability.
4, via vectors related to error path.
0, via vectors involving transitive grants.
3, via vectors involving maptrack free list handling.
4, via vectors related to map_grant_ref.
5,send a malformed email to
3, by leveraging a race condition between a read operation and a store operation that involve different overrides.
0, by guessing tokens or identifiers. IBM X-Force ID: 123909.
3,use the component to
3, by providing a user with a malicious .arf file via email or URL and convincing the user to launch the file. Exploitation of this vulnerability could allow arbitrary code execution on the system of the targeted user. This vulnerability affects Cisco WebEx Business Suite meeting sites
0, by saving an incorrect channel status inquiry. IBM X-Force ID: 124354
3, by providing a user with a malicious WRF file via email or URL and convincing the user to open the file. A successful exploit could cause an affected player to crash
4, via a crafted file
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted file
4, via a crafted binary file.
4, via vectors involving an envelope_s structure pointer when the packet format is unknown.
0, via vectors involving the keyfile variable.
0, via vectors involving the (1) vallen variable in the iottlv_parse_sequence function or (2) typ
1, via vectors related to ssl_halen when running ccn-lite-sim
3, by leveraging failure to allocate memory for the comp or complen structure member.
0, via vectors involving the vallen and len variables.
0, by leveraging incorrect memory allocation.
0, via vectors involving the typ and vallen variables.
1, by leveraging failure to check for out-of-bounds conditions
0, by leveraging missing NULL pointer checks after ccnl_malloc.
0," via vectors involving packets with """"wrong L values."""""
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted file.
4, via a crafted file.
5, by sending a large amount of HTTP packets.
0,"use a hidden API URL """"/goform/SystemCommand"""" to"
4, via a .. (dot dot) in the query string
1, via unspecified vectors in IMmailSrv
1, via unspecified vectors in IMmailSrv
4, via a crafted file.
4, via a crafted file.
4, via a crafted VIFF file.
4, via a crafted BMP file.
2, via the userfile[0] parameter.
1, by gaining access to local files.
2, via the delreport parameter.
4, via a crafted mkv file.
4, via a crafted mkv file.
4, via a crafted mkv file.
4, via a crafted mkv file.
4, via a crafted mkv file.
2, via the (1) class1 parameter or the (2) anyid parameter.
5, via a crafted minion ID.
2, via the (1) linkname
4, via a crafted file
4, via a crafted binary file.
4, via a crafted mkv file.
4, via a crafted mkv file.
4, via a crafted mkv file.
4, via a crafted mkv file.
4, via a crafted file.
4, via a long environment variable.
4, via a regular expression with a '\N{}' escape and the case-insensitive modifier.
4, via a request to mybonus.php or (2) add administrators via unspecified vectors.
4, via a crafted mp3 file.
2, uses an SPV wallet
4, via a crafted (1) SYNCAPPLY
4, via a crafted user name.
3, via timing attacks.
0,send a specially crafted message that would cause a channel to
0, via the keyword parameter to index.php.
3, via unknown vectors.
4," via a crafted response query string passed to the """"name"""" variable."
1, by manipulating the prepended time offset.
2, use an authentication source defined in config/authsources.php via vectors related to improper validation of user input.
1, by leveraging use of the standard comparison operator to compare secret material against user input.
0, by leveraging an incorrect check of return values in signature validation utilities.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
2, via the file upload functionality.
4, via a crafted regular expression with an invalid '\N{U+...}' escape.
1, by crafting an RSS item that includes shell code in its title and/or URL.
2, via the url parameter to Launderer.php.
2, via the PATH_INFO to (1) cheaters.php or (2) confirm_resend.php.
2, via the conusr parameter.
2, via the userid parameter.
2, via the or parameter.
4, via a crafted fpx image.
4, via a crafted fpx image.
4, via a crafted fpx image.
4, via a crafted fpx image.
4, via a crafted fpx image.
4, via a crafted fpx image.
4, via a crafted fpx image.
3, via SSH and escalate privileges to root access with the same credentials.
3,upload arbitrary files leading to
4, via a crafted password.
3, via vectors involving a symlink to the . directory
4, via a model/__show_info.php?REQUIRE_FILE= absolute path traversal attack
4, via a crafted gig file.
4, via a crafted gig file.
4, via a crafted gig file.
4, via a crafted gig file.
4, via a crafted gig file.
2, via the PHPSESSID parameter.
4, via a crafted .asn1 file.
4, via a long string to the open method.
4, via a request to phpsftpd/users.php.
0, via the account parameter to phpsftpd/users.php.
2, via an ssh URL with an initial dash character in the hostname
5, via a crafted file.
5, by creating a symbolic link from a temporary file to various files on the system
4, via a crafted PDF file.
4, via a rogue access point and a man-in-the-middle attack.
1, by leveraging lack of anti-CSRF tokens.
4, via a crafted libmcmclnx.so file in the current working directory
2, via an exposed key.
2, by retrieving credentials from this file.
1, via vectors related to incorrect literal handling
4, via a crafted file.
1, via sudo command execution. The vi program can be accessed through sudo
4, via a crafted GET request.
1, by leveraging failure to properly clear ifq_so from pending packets.
3, by triggering a NULL first argument.
4, via shell metacharacters in the user parameter to cgi-bin/webupg.
2," via the """"server name"""" field in actions/ChangeConfiguration.html."
5, by sending a crafted image file.
4, by sending a crafted JPEG file.
2, via the (1) ping_addr parameter to PingIframeRpm.htm or (2) dnsserver2 parameter to WanStaticIpV6CfgRpm.htm.
4, via unspecified vectors.
4, via a /dev/dtracehelper attack involving the dtrace_dif_variable and dtrace_getarg functions.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted ZIP archive.
4, via a Siri request for private-content notifications that should not have been available in the lock-screen state.
4, via a crafted QuickTime file.
4, via a crafted app.
4, via a crafted AppleScript file that is mishandled by osadecompile.
0, by leveraging an error in packet counters.
4, via a crafted app.
4, via a crafted archive file.
4, via a crafted archive file.
4, via a crafted image file.
4, via a crafted archive file.
4, via a crafted app.
2, by bypassing the Same Origin Policy for quarantined HTML documents.
4, via a crafted font.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
5, via a crafted AppleScript file that is mishandled by osadecompile.
4, via a crafted font file.
4, via a crafted app that performs kext loading.
1, via crafted text.
4, via a crafted app.
4, via a crafted app.
4, via a crafted image.
1, by leveraging TLS 1.0 support.
4, via a crafted app.
4, via a crafted mach binary.
5, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a Reply With Message action in the lock-screen state.
4, via a crafted app.
4, via a crafted app.
4, via a crafted text file.
4, via a crafted font.
4, via a crafted app that accesses process information at a high rate.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app that triggers type confusion.
4, via a crafted web site.
4, via a crafted app.
3, by leveraging mishandling of S/MIME credential encryption.
4, via a crafted app.
4, via a crafted app.
0, by leveraging the transmission of client certificates.
3, by leveraging mishandling of client certificates.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
0, by leveraging the lack of installation of an S/MIME certificate by the recipient.
1, via certain interactions involving entry of the root user name.
4, via a crafted app.
1, by leveraging incorrect S/MIME certificate selection.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
1, by leveraging incorrect message handling
4, via a crafted app.
2, by inserting arbitrary code into the unquoted service path.
5, via a crafted new_modulename parameter to backend/addons/ajax_create.php. NOTE: this can be exploited via CSRF.
3, by leveraging root access.
2, via the $_SERVER['HTTP_USER_AGENT'] parameter to example_form.ajax.php or example_form.php.
3, by exploiting tmwfp.sys. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit the vulnerability.
4, via a cron job injection on a vulnerable system.
4, via a local file inclusion on a vulnerable system.
3, by triggering a disconnect within a certain tcp_recvmsg code path.
4, via a file that begins with many '\0' characters.
2," via the """"id"""" parameter in an add_edit_theme task in the wpdevart_gallery_themes page to wp-admin/admin.php."
4, via shell metacharacters in the pingAddr parameter to mnt_ping.cgi.
4, via shell metacharacters in the command parameter to the /script URI.
4, via a crafted serialized object.
2, via the (1) partnerId or (2) playerVersion parameter to server/admin_console/web/tools/bigRedButton.php; the (3) partnerId
5, by uploading a .php attachment and then requesting it in the helpdezk\app\uploads\helpdezk\attachments\ directory.
2, via large files because arbitrarily many files are read into memory
4, via a crafted mp4 file.
5, via a crafted xar archive
1, via crafted multiboot header address values
0, via resource exhaustion or possibly gain root privileges.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-1324.
2, via resource exhaustion
2, via resource exhaustion or possibly gain root privileges
4, via a crafted file.
0, by leveraging the mishandling of certain username substring relationships
4, via a crafted flif file.
2, via the menuId parameter.
2, via the (1) CompanyName
0, via the Title parameter to htdocs/admin/menus/edit.php.
2, via the statut parameter.
1, by crafting URLs with a .cgi extension
4, via a crafted file.
1, by leveraging access to a guest account to obtain a session ID
4, via a JSONP endpoint
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted 0x9C402088 IOCTL call.
4, via a crafted file.
1, by leveraging failure to filter uploaded files.
2, via the (1) customer name or (2) subject in a ticket.
1, by using the IEM_CookieLogin cookie with a specially crafted value.
1, via crafted LAN traffic.
4," via email with crafted """"Content-Type: text/enriched"""" data containing an x-display XML element that specifies execution of shell commands"
5, by creating a hard link under /var/lib/gimps
1, by sniffing network traffic for search responses from the OhMiBod API server and then editing the username
0, by leveraging incorrect length validation.
4, via a crafted DNS response.
4, via a crafted IPv6 router advertisement request.
4, via a crafted DHCPv6 request.
1, by crafting an RSS item with a media enclosure (i.e.
2, via the (1) timeline parameter in content_timeline_class.php; or the id parameter to (2) pages/content_timeline_edit.php or (3) pages/content_timeline_index.php.
2, via the f_filename parameter in a fingerprintdo action to admin/app/physical/physical.php.
4, via a crafted URL.
5, via unspecified vectors.
4, via a (1) URL in the startat parameter to xda/help/en/default.htm or (2) /%09/ (slash encoded horizontal tab slash) followed by a domain in the redirectUrl parameter to xda/component/virtuallinkconnect.
4, via a (1) URL in the startat parameter to xda/help/en/default.htm or (2) /%09/ (slash encoded horizontal tab slash) followed by a domain in the redirectUrl parameter to xda/component/virtuallinkconnect.
4, via a crafted .jb2 file
4, via a crafted .svg file
4, via a crafted .svg file
4, via a crafted .svg file
4, via a crafted .epub file
4, via a crafted .epub file
5, via a crafted .epub file
4, via a crafted .epub file
4, via a crafted .epub file
4, via a crafted .mobi file
4, via a crafted .djvu file
4, via a crafted .djvu file
5, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .djvu file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .xps file
4, via a crafted .ani file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted request
4, via a cross site scripting (XSS) vulnerability in the uname parameter.
4, via a cross site scripting (XSS) vulnerability in the dialog parameter.
4, via a cross site scripting (XSS) vulnerability in the jqlQuery query parameter.
1, by using the .desktop file extension
0, via the url parameter
2," via the Questions field in an """"Add New FAQ"""" action."
2," via the """"Title of your FAQ"""" field in the Configuration Module."
2, via the (1) page parameter or (2) kbAction parameter in the kbAmz page to wp-admin/admin.php.
2, via the (1) author (inside the INFORMATION tag)
3, via an XML-RPC encoded document sent as part of the user registration process.
4, via a modified OrderNo parameter.
5, via a direct request for a PDF document.
4, via a crafted SVG document
4, via a crafted .xps file
5, via a crafted .xps file
5, via a crafted .xps file
5, via a crafted .djvu file
4, via a crafted .djvu file
5, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .jb2 file
4, via a crafted .djvu file
2, via the PATH_INFO to search/.
3, by uploading a file with an executable extension
5, by exploiting CVE-2017-14706. This affects DenyAll i-Suite LTS 5.5.0 through 5.5.12
5, by making a typeOf=debug request to /webservices/download/index.php
4, via a crafted file
4, via a crafted BPG file
2, via the Menu ID when adding a menu.
4, via a crafted font file.
4, via a crafted SMB1 request.
5, by leaving a competitive match at a specific time during the initial loading of that match.
4, via a crafted .js file
0, via the filter parameter to module/module_filters/index.php.
4, via a crafted BPG file
5, via a crafted BPG file
2, via an HTTP POST request to a long URI that does not exist
2, via the User-Agent HTTP header
4, via a crafted JPEG file.
2, via predictable Security Access (SA) data to the internal CAN bus (or the OBD connector). This affects the airbag control units (aka pyrotechnical control units or PCUs) of unspecified passenger vehicles manufactured in 2014 or later
5, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .xps file
4, via a crafted REST API HTTP request that conducts an XXE attack
4, via a crafted string
4, via a long username parameter to /login.
2, via the object parameter to module/admin_conf/index.php.
2, via the bp_name parameter to /module/admin_bp/add_services.php.
2, via the url parameter to module/module_frame/index.php.
5, via a crafted file that is accessed with the ImfOpenInputFile function in IlmImf/ImfCRgbaFile.cpp. NOTE: The maintainer and multiple third parties believe that this vulnerability isn't valid.
4, via a crafted font file
4, via an SG_GET_REQUEST_TABLE ioctl call for /dev/sg0.
4, via a crafted DICOM image
1, via vectors related to reading extended attributes.
3," by leveraging """"limited access to the machine."""""
1, by leveraging the zoommtg:// scheme handler.
2, via the (1) URL value of an item or (2) user log history. To exploit the vulnerability
3, by leveraging a write-what-where condition that occurs after a race condition and a NULL pointer dereference.
3, via symbolic link.
4, via a crafted AVI file.
2, via the hosts array parameter to module/admin_device/index.php.
0, via the searchtags parameter to index.php. If the victim is an administrator
2, via unspecified vectors
5, via a crafted fn parameter that corresponds to the exact filename.
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
5, via a crafted .pdf file
4, via a crafted .pdf file
5, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
5, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
5, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .pdf file
4, via a crafted .tif file
1, via crafted /dev/snd/seq ioctl calls
1, by triggering slow data-channel read operations
1, by leveraging failure of the server to clear allocated heap memory.
2," via the """"page name"""" (aka nodename) parameter during the creation of a new page"
1, by reading files on the server or sending TCP requests to intranet hosts (aka SSRF)
4, via a crafted file
1, via vectors related to dst calculation.
2, via the Description field.
4," via a """"Cookie: PHPSESSID="""" header. This can be used to achieve persistent access to the admin panel even after an admin password change."
4, via a KVM_CHECK_EXTENSION KVM_CAP_PPC_HTM ioctl call to /dev/kvm.
4, via a symlink attack on the updater binary itself.
4, via vectors involving the --self-repair option.
4, via a crafted file.
1, by leveraging incorrect ordering of DDL replication and ACL checking.
5, via a crafted WASM file that triggers an incorrect r_hex_bin2str call.
4, via a crafted ELF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs in a crafted domain name.
4, via a crafted HTML page.
4, via a crafted Windows Registry entry
4, via a crafted HTML page
4, via IDN homographs in a crafted Chrome Extension.
4, via a crafted HTML page
1, by leveraging that position.
4, via a malicious server.
4, via a crafted HTML page.
4, via a crafted PPD file
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious server.
4, via a crafted PDF file that is mishandled by PDFium.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page
4, via a crafted HTML page.
4, via a crafted HTML page.
4, by triggering a leaked cross-origin URL via a crafted HTML page.
4, via a crafted HTML page.
2, by inspecting protocol traffic.
4, via IDN homographs in a crafted domain name.
4, via IDN homographs in a crafted domain name.
4, via IDN homographs in a crafted domain name.
5, by dragging and dropping a javascript: URL into the URL bar.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via unspecified vectors. All users are urged to move to a fixed version and change passwords used by Veritas NetBackup to access the OST shares on the NetApp AltaVault as a precaution.
2, via the Plug-in for NAS File Services. All users are urged to move to version 3.0.1 and perform the mitigation steps or upgrade to 4.0 following the product documentation.
5,use a regex and cause the system to
0,send a specially crafted request that could cause a channel process to
5, by reading a variable JSON file in certain situations involving Offline Drop Targets.
1," by leveraging the """"draggable feeds"""" feature."
1, via crafted system calls that trigger mishandling of packet_fanout data structures
3, by uploading a .exe file and then proceeding in spite of the error message.
3, by using a specific User-Agent string.
4, via a crafted MP4 file
3, via vectors involving a custom page.
4, via a crafted string
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
5, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
5, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
5, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .tif file
5, via a crafted .dds file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
5, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
5, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
4, via a crafted .dwg file
5, via a crafted .dwg file
5, via a crafted .dll file that is mishandled during an attempt to render the DLL icon
5, via a crafted .dll file that is mishandled during an attempt to render the DLL icon
5, via a crafted .dll file that is mishandled during an attempt to render the DLL icon
2, via the (1) date_from
3, via the search-for parameter.
3," via vectors involving """"image path execution hijacking."""""
4," via vectors involving an Immediately Invoked Function Expression """"function()"""" substring"
2," via the """"checkemail"""" parameter."
0, via the group_name parameter to module/admin_group/add_modify_group.php (for insert_group and update_group).
2," via the """"content brief"""" or """"content extended"""" field"
4, via a large VPN server-list file.
0, via the conf_Layout_OwnTitle parameter to view/view.shtml. NOTE: this might overlap CVE-2007-5214.
4, via a crafted URI.
4, via a brute-force attack.
2, via the NAME parameter.
3, via disk field.
2, via the NAME parameter.
4, via unspecified vectors.
4, via (1) COMMAND
2, via the dest_folder_path parameter.
2, via the dest_folder_path parameter.
4, via the dest_folder_path parameter.
0, via the id parameter to newsdesk/newsdesk.php.
2, via the host parameter to module/capacity_per_device/index.php.
4, via unspecified vectors. IBM X-Force ID: 132549.
3, via unspecified vectors. IBM X-Force ID: 132550.
4," via a crafted ELF file that triggers a """"buffer overflow on fuzzed archive header"
2, via the graph parameter to module/capacity_per_label/index.php.
5, by sending `../` in the url path for GET requests.
0, via BGP UPDATE messages
3, by calling a REST API with incorrect authorization checks.
2, by having them visit a plugins/content/sige/plugin_sige/print.php link with a crafted img
4, via a crafted update request when no updates are available.
3, by specifying /bin/sh as the command to execute.
4, via a filename with a .php extension
4, via a crafted USB device
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
5, via a crafted USB device
4, via a crafted USB device
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device
3, via vectors involving a crafted state parameter.
4, via vectors involving a crafted web site that leverages file:// mishandling in Firefox
5, by sending a specific IOCTL after setting the memory in a particular way.
5, by sending a specific IOCTL after setting the memory in a particular way.
5, by sending a specific IOCTL after setting the memory in a particular way.
5, by sending a specific IOCTL after setting the memory in a particular way.
2, via the DHCP vendor class ID field (P148).
2, via the login screen using the default password of 123 and submit arbitrary requests.
4," via a """"favorite."""""
4, via a radio URL.
0,create arbitrary files on vulnerable installations of NetGain Systems Enterprise Manager 7.2.730 build 1034. Although authentication is required to
0, by overwriting arbitrary files on vulnerable installations of NetGain Systems Enterprise Manager 7.2.730 build 1034. Although authentication is required to exploit this vulnerability
0, by creating arbitrary files on vulnerable installations of NetGain Systems Enterprise Manager 7.2.730 build 1034. Although authentication is required to exploit this vulnerability
0, by creating arbitrary files on vulnerable installations of NetGain Systems Enterprise Manager 7.2.730 build 1034. Although authentication is required to exploit this vulnerability
4, by inserting a token into an X-Auth-Token header of a new request. NOTE: github.com/openstack/swauth URLs do not mean that Swauth is maintained by an official OpenStack project team.
3," by creating a hard link in a directory on which """"chown"""" is called recursively by the OpenRC service script."
2, via the path_rrdtool parameter in an action=save request to settings.php.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device.
4, via a crafted USB device. NOTE: the function was later renamed __dvb_frontend_free.
4, via a crafted USB device.
4, via a crafted USB device.
1, by leveraging access to the assp user account to install a Trojan horse /usr/share/assp/assp.pl script.
0, by placing the Log Path under the web root
1, by placing the Log Path into a private directory
3, via shell metacharacters in the name of an uploaded PCAP file.  NOTE: this issue can be exploited without authentication by leveraging the user registration feature.
4, via a crafted file
4, via a crafted request parameter in a WSDL project file.
4, via unspecified vectors.
4, via unspecified vectors.
2, use an invalid memory address
2," via the """"access_token"""" parameter."
2, via the -fn option.
2, via the userDesc parameter.
2, via the name parameter.
2, via the map viewer mode.
2, via the filename parameter.
2, via the username parameter.
3, via the prog_id parameter.
2, via the package parameter.
4, via unspecified vectors.
5, by writing to the configuration file.
4," via (1) the ntpclientcounterlogfile parameter to cgi-bin/mainv2 or (2) vectors involving curl support of the """"file"""" schema in the firmware update functionality."
1, by leveraging failure to restrict URL access.
3, by uploading a file
2," via the """"homepage"""" value of a """".gemspec"""" file"
2, via the Step Template Name parameter.
2, via the Variable Set Name parameter.
1, by leveraging use of GSI and VOMS extensions.
3," by leveraging """"full"""" (not necessarily admin) privileges to post an invalid profile to the admin API"
4," via a crafted javascript: URL in the """"homepage"""" value of a """".gemspec"""" file."
4, via a crafted e-mail message because of a hardcoded realloc size
2, via cross site scripting (XSS) vulnerabilities in various rss properties which were used as links without restriction on their scheme.
1, by being able to authenticate to a directory bound to an application using the feature. Given the following situation: the Crowd application is bound to directory 1 and has a user called admin and the Google Apps application is bound to directory 2
4, via a Cross-site request forgery (CSRF) vulnerability.
4, via a cross site scripting (XSS) vulnerability through the name of a project or filter.
4, via a cross site scripting (XSS) vulnerability in the orderby parameter.
4, via a Server Side Request Forgery (SSRF). When running in an environment like Amazon EC2
4, via a crafted Mach-O file
1," by leveraging failure to escape the """"key"""" argument."
3, by leveraging an unspecified configuration.
4, via a crafted terminfo file
1, via vectors related to failed authentication requests alerts.
4, via brute force.
2, via directory traversal sequences in the dir parameter
4, via a predictable /client-data/<client_id>/collections/##/usermgmt.xml URL
4, via a crafted update URL
4, via a long API request that is mishandled during logging.
0, by obtaining the admin password via a frame.html?content=/dev/mtdblock/5 request
4, via a crafted SO_RCVBUF setsockopt system call in conjunction with XFRM_MSG_GETPOLICY Netlink messages.
3, via vectors involving BDAT commands.
4, via vectors involving BDAT commands and an improper check for a '.' character signifying the end of the content
4, via a crafted restore path.
4, via a NULL value in a 0x82730008 DeviceIoControl request to \\.\Viragtlt.
2, via the action parameter.
4, via a crafted WAV
4, via a crafted NSV file.
0," via the """"keyword"""" parameter to /wp-admin/options-general.php?page=inlinks/inlinks.php."
4, uses an admin/trees/add/process request with a crafted _tags[] parameter that is mishandled in a later admin/ajax/dashboard/approve-change request.
1, by leveraging incorrect sign extension.
0, by leveraging register truncation mishandling.
4, via a Trojan horse DLL in an unspecified directory.
1, by leveraging the mishandling of Populate on Demand (PoD) errors.
4, via a NULL value in a 0x82730010 DeviceIoControl request to \\.\Viragtlt.
4, via a NULL value in a 0x82730020 DeviceIoControl request to \\.\Viragtlt.
5, by conducting a cross-site scripting (XSS) attack involving the username-form-id parameter to freeradius.users.php.
4, uses a popup callback page with auth0.popup.callback().
2, via the description field in the custom command functionality.
4, via a crafted TIFF file.
1, via crafted OpenGraph data.
4, via a crafted request that is mishandled during admin log viewing
4, via a single.php?id= request.
4, via a listings.php?catid= or ads-details.php?ID= request.
2, via an ELF file that lacks section headers.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file
3,send specific parameters to
2, via the shared memory IPC. IBM X-Force ID: 134807.
5, by unsetting vring alignment while updating Virtio rings.
4, via a crafted tool name in a job configuration form
3, by creating a crafted cron job.
2, via the web interface.
4, via a crafted GIF
2, by placing invalid data into the configuration file. This vulnerability requires an attacker with access to the file system where the configuration file is stored; however
2, by reading the index.cgi?page=wifi HTML source code
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730088.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730074.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730020
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730008
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730054.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82732140.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730030.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730050.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82730070.
4, via a \\.\Viragtlt DeviceIoControl request of 0x82736068.
2, via management web interface views.
4, via a crafted file.
3, by connecting to TCP port 53 and sending data that begins with many '\0' characters
4, via a flood of ICMP packets.
4, via a remote shell.
4, via a remote shell.
0, via the src parameter
1, by modifying registry keys.
4, via a crafted token field to admin/admin_ping.php
0, by leveraging an incorrect mask for reference-count overflow checking in shadow mode.
0, by leveraging incorrect error handling for reference counting in shadow mode.
3, by mapping a certain auxiliary page.
1, via crafted JavaScript code that redirects to a child tab and rewrites the innerHTML property.
0, via the result_message parameter to includes/concours_page.php.
5, by visiting CMSInstall/install.aspx and then navigating to the CMS Administration Dashboard.
2, via the map_id parameter to view/advancedsettings.php.
2, via the 'sysName' parameter.
4, via a crafted web site that uses the WebSocket Protocol.
2, via the (1) cie_type
3, via shell metacharacters in the interface field of an admin/wportal command to cgi-bin/luci
4, via shell metacharacters in the interface field of an admin/dhcps command to cgi-bin/luci
4, via a crafted DTD in an XML request involving util/xmlrpc/Handler.ashx.
4, via a comment.
3, via vectors related to an e-mail address field.
2, via an ssh URL with an initial dash character in the hostname
4, use of an intended public key for encryption
5, via a long response.
3, by leveraging mishandling of 32-bit ALU ops.
1, by leveraging incorrect BPF_RSH signed bounds calculations.
0, by leveraging unrestricted integer values for pointer arithmetic.
0, by leveraging improper use of pointers in place of scalars.
0, by leveraging the lack of stack-pointer alignment enforcement.
1, by leveraging mishandling of invalid variable stack read operations.
4, via a crafted PDF file
1, by modifying the leasetrigger field in the odhcpd configuration to specify an arbitrary program
5, via a user=download request with a pathname in the path parameter.
2, via the id parameter.
2, via the rowid parameter.
2, via the socid parameter.
4, via a flood of IP packets with a TTL of 1.
2, via the 'name' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input.
4, via the 'id' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input.
4, via the 'id desc' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input.
2, via the 'name' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input.
0, via the id parameter to admin/review_userwise.php.
4, via a crafted PATH_INFO to service-list/category/.
4, via a long string to TCP port 888.
4," via a long """"Title name"""" field in """"mail box"""" data that is mishandled in an """"Open from mail box"""" action."
4, via a crafted PPT file
4, via a long HTTP response.
4, via a crafted ZIP archive.
2, via the (1) email parameter to login.php; the (2) season_id parameter to themes/flixer/ajax/load_season.php; the (3) movie_id parameter to themes/flixer/ajax/get_rating.php; the (4) rating or (5) movie_id parameter to themes/flixer/ajax/update_rating.php; or the (6) id parameter to themes/flixer/ajax/set_player_source.php.
2, by triggering failure of audio registration
2, via the search parameter to index.php/knowledge_base/get_article_suggestion/.
0, by requesting other websites via the Parity web proxy engine (reusing the current website's token
4, via shell metacharacters in the username field
1, via vectors related to negative pitch.
4, via various Cross-site request forgery (CSRF) vulnerabilities.
4, via a cross site scripting (XSS) vulnerability in via a specially crafted repository branch name when trying to display deleted files of the branch.
4, via a Server Side Request Forgery (SSRF) vulnerability.
4, via a path traversal vulnerability through the default branch name.
4, via a cross site scripting (XSS) vulnerability in the messagesThreshold parameter.
4, via a cross site scripting (XSS) vulnerability in the name of a release.
4, via a cross site scripting (XSS) vulnerability in the name of a release.
4, via a Cross-site request forgery (CSRF) vulnerability.
5, via a long POST request to the login_action function in /cgi-bin/login_action.cgi (aka cgipage.cgi).
4, via a long reply.
4, via a Cross-site request forgery (CSRF) vulnerability.
4, via a cross site scripting (XSS) vulnerability through the value of the csrf token cookie.
4, via a cross site scripting (XSS) vulnerability through the name of a branch.
4, via a cross site scripting (XSS) vulnerability through the contents of an uploaded file.
4, via a cross site scripting (XSS) vulnerability through the description of a macro.
4, via a cross site scripting (XSS) vulnerability through the key parameter.
4, via a cross site scripting (XSS) vulnerability in the issuesURL parameter.
4, via a cross site scripting (XSS) vulnerability through the invited reviewers for a review.
4, via a cross site scripting (XSS) vulnerability in the name of a commit author.
4, via a cross site scripting (XSS) vulnerability in the filename of a backup.
4, via a cross site scripting (XSS) vulnerability through the contents of a comment on the snippet.
5, via a cross site scripting (XSS) vulnerability through the location setting of a configured repository.
4, via a cross site scripting (XSS) vulnerability through the base path setting of a configured file system repository.
0, via an improper authorization vulnerability.
4, via a cross site scripting (XSS) vulnerability in the title of a Trello card.
4, via a cross site scripting (XSS) vulnerability through various fields.
4, via a cross site scripting (XSS) vulnerability in the name of quick filters.
4, via a cross site scripting (XSS) vulnerability in nested wiki markup.
4, via a JNDI injection.
2, use as part of performing a phishing attack via an open redirect.
4, via a XXE vulnerability.
1, via an Information Disclosure vulnerability in the logging feature. The affected versions are before version 4.8.3.
4, via a Remote Code Execution (RCE) vulnerability. The vulnerability allowed for various problematic OSWorkflow classes to be used as part of workflows. The fix for this issue blocks usage of unsafe conditions
4, via a maliciously crafted file
2, by sending POST requests to the CUPS daemon in conjunction with DNS rebinding. The localhost.localdomain name is often resolved via a DNS server (neither the OS nor the web browser is responsible for ensuring that localhost.localdomain is 127.0.0.1).
2," via the """"utype"""" parameter."
4, via a crafted iso file.
4, via a crafted iso file.
3, by leveraging a race condition with __dm_destroy during creation and removal of DM devices.
4, via DIO requests.
1, by triggering use of MADVISE_WILLNEED for a DAX mapping.
4, via a crafted file
1, via crafted use of mlockall and munlockall system calls.
1, via crafted XMP data in a .avi file.
4, via a .pdf file containing JPEG data
4, via a crafted .asf file.
4, via a crafted .ps file.
1, via crafted XMP data in a .qt file.
1, by repeating validation requests.
5, by using a noflush_merge option that triggers a NULL value for a flush_cmd_control data structure.
5, via a crafted aac file.
5, via a crafted file.
4, via a crafted aac file
4, via a crafted audio file.
4, via a crafted media file.
4, via a crafted media file.
4, via a crafted file.
4, via a large value
4, via a long alert() argument in JavaScript code
1, via crafted use of the open and fallocate system calls with an FS_IOC_FIEMAP ioctl.
4, via a crafted LZMA file
3, by writing to a file under /sys/kernel/debug in certain circumstances
4, via a crafted PDF file
2, via the wbg_login parameter.
4, via a special sequence of Serial Wire Debug (SWD) commands because there is a race condition between full initialization of the SWD interface and the setup of flash protection.
2, via the BoxTrapper API (SEC-238).
4, via a Fileman::getfileactions API2 call (SEC-239).
3, via forwarders (SEC-240).
1, via Encoding API calls (SEC-242).
3, via an ImageManager_dimensions API call (SEC-243).
4, via api2 (SEC-244).
2, via the ClamScanner_getsocket API (SEC-251).
2, via the Htaccess::setphppreference API (SEC-232).
4, via an NVData_fetchinc API call (SEC-233).
2, via an attempted screen touch of a non-existing display. The Samsung ID is SVE-2017-9383 (August 2017).
3, via symlink attacks.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via language.php.
4, via contact.php.
4, via unspecified vectors.
2, via specially crafted saved data.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, via specially crafted HTTP Referer headers.
4, via SOAP requests.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via application menu.
3, via unspecified vectors.
3, via unspecified vectors.
2, via specially crafted captcha_chalange parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted executable file in an unspecified directory.
4, via unspecified vectors.
4, via shop_id.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted executable file in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
2, via unspecified vectors
1, via unspecified vectors
4, via Clock Settings.
4, via WebUI.
4, via WebUI.
4, via WebUI.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a specially crafted executable file in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4," via """"File Transfer Web Service""""."
4," via """"File Transfer Web Service""""."
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
0, via specially crafted input
4," via """"Rich text"""" function of the application """"Space""""."
4," via """"Rich text"""" function of the application """"Memo""""."
4, via mail function.
0," via Garoon SOAP API """"WorkflowHandleApplications""""."
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
5, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted contact card.
5, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted GarageBand project file.
0, by leveraging text input during the loading of a page.
3, by leveraging a window-close action during a debugger-pause state.
1, by leveraging mishandling of links during drag-and-drop actions.
4, via a crafted .dfont file.
1, by leveraging DES support.
1, by leveraging membership in the admin group on a network directory server.
4, via unspecified vectors.
3, via correlation with this certificate.
3, via unspecified vectors.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
5, via unspecified vectors.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
5, via a crafted web site.
4, via a crafted web site.
1, by reading an iCloud authentication prompt on the lock screen.
4, via a crafted app.
0, by leveraging the use of an encryption key derived only from the hardware UID (rather than that UID in addition to the user passcode).
1, by leveraging the SafariViewController's incorrect synchronization of Safari cache clearing.
4, via a crafted app.
1, by leveraging Active Directory certificate trust that should not have remained.
4, via a crafted ipp: or ipps: URL.
4, via a tel: URL in a PDF document
4, via a crafted web site.
4, via a crafted font file.
4, via a crafted font file.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
1, by leveraging use of cleartext HTTP.
4, via a crafted media file.
3, by leveraging a mistake in typing an e-mail address.
1," by leveraging an unspecified """"type confusion."""""
4, via a crafted image file.
4, via a crafted image.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
3, by leveraging a successful result from a SecKeyRawVerify API call with an empty signature.
4, via a crafted web site.
4, via a crafted certificate.
4, via a file: URL in an iBooks file.
4, via a crafted app.
3, via unknown vectors.
0, by leveraging unexpected permission changes during an iCloud Sharing Send Link action.
4, via a crafted audio file.
4, via a crafted .mov file.
4, via a crafted JPEG file.
4, via a crafted web site.
0, by leveraging the presence of Home Control on Control Center.
5, via a crafted font file.
4, via a crafted app.
4, via unspecified vectors.
4, via a crafted app.
4, via a crafted font file.
4, via a crafted app.
5, via a crafted C++ app that is mishandled during demangling.
4, via a crafted web site.
4, via a crafted app.
5, via a crafted web site.
1, via crafted frame objects.
5, via a crafted web site that leverages the mishandling of strict mode functions.
4, via a crafted web site.
1, by leveraging lack of authentication for OTR packets.
4, via a crafted app.
4, via a crafted font file.
4, via a crafted app.
4, via unspecified vectors.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted text message.
4, via a crafted audio file.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted file.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
1, via crafted use of frames on a web site.
4, via a crafted web site.
3, via unknown vectors.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a third-party app.
4, via a crafted X.509 certificate file.
4, via a crafted web site.
4, via a crafted font file.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web page
5, via a crafted web site that triggers prototype mishandling.
4, via a crafted elements on a web site.
4, via a crafted app.
5, via a crafted web site that improperly interacts with the history menu.
5, via a crafted web site.
4, via a crafted book.
2, via an untrusted certificate.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
5, via a crafted web site that improperly interacts with WebKit Editor commands.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
5, via a crafted web site that improperly interacts with container nodes.
4, via a crafted app.
5, via a crafted web site that improperly interacts with pageshow events.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted SQL statement.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted SQL statement.
4, via a crafted SQL statement.
4, via a crafted SQL statement.
5, via a crafted web site.
1, via crafted data.
1, via crafted data.
1, via crafted data.
4, via a crafted web site.
4, via a crafted web site.
1, via crafted data.
5, via a crafted web site that improperly interacts with cached frames.
4, via a crafted web site.
4, via a crafted web site.
5, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
5, via a crafted web site that improperly interacts with frame loading.
0," by formatting the SAML request ID field to be the chosen system property which could be obtained in the """"InResponseTo"""" field in the response."
4, via a crafted application that leverages instruction emulation for fxrstor
4, via path traversal.
4,create new items (e.g. jobs) to
4,create groups with a higher privilege level than the tenant administrator should have. This would allow an attacker with tenant administration access to
2, via the sequencer in order to trigger this vulnerability.
2, via the sequencer in order to trigger this vulnerability.
2, via the sequencer in order to trigger this vulnerability.
2, via the sequencer in order to trigger this vulnerability.
2, via the sequencer in order to trigger this vulnerability.
2, via the sequencer in order to trigger this vulnerability.
2, via the sequencer in order to trigger this vulnerability.
1,use the file as an asset in order to
1,use the file as an asset in order to
2, use it as a library in order to trigger this vulnerability.
2, via the next parameter.
0, via the srcintf parameter during Firewall Policy Creation.
2, via the policy global-label parameter.
2, via an improperly sanitized POST parameter in the FortiWeb Site Publisher feature.
2," via the filter input in """"Applications"""" under FortiView."
2, via the action input during the activation of a FortiToken.
2, via the Replacement Message HTML for SSL-VPN.
2, via the CLI command 'copy running-config'.
0, by communicating with the server process over a control channel
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Retail Invoice Matching. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise Oracle Outside In Technology. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Outside In Technology. Successful attacks of this vulnerability can result in unauthorized access to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2,compromise Oracle FLEXCUBE Direct Banking. Successful attacks of this vulnerability can result in unauthorized access to
1, by leveraging incorrect ordering of security parameter verification in a client
2,compromise PeopleSoft Enterprise HCM ePerformance. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Workbench. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Communications Security Gateway. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle FLEXCUBE Enterprise Limits and Collateral Management. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle FLEXCUBE Enterprise Limits and Collateral Management. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Oracle Social Network. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise JD Edwards EnterpriseOne Tools. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized read access to
4, via a crafted authentication packet.
3,compromise Sun ZFS Storage Appliance Kit (AK). Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle GlassFish Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Solaris. Successful attacks of this vulnerability can result in takeover of Solaris. Note: CVE-2017-3632 is assigned to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, use mysql_stmt_close(). Please see: https://dev.mysql.com/doc/refman/5.7/en/mysql-stmt-execute.html
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
3, via physical access.
5, via a URL that was not completely validated.
4, via a HTTP backend-response.
2, via the HTTP backend-response.
4, via a crafted HTTP request parameter.
4, via unspecified vector.
4, via a command-line utility.
4, via a cross site request forgery attack.
1, via read files on the webserver.
0, via injecting malicious JavaScript into a user's browsing session.
4, via a crafted HTTP request parameter.
1, via crafted user input of attributes.
3, via unsalted hashes.
4, via a URL parameter.
2, via specially crafted URLs.
2, via application pages inability to break out of 3rd party HTML frames.
4, via a crafted authentication cookie.
2, via an inadequate implementation of SSL.
1, via insecure use of RC4 encryption cyphers.
2, via the server banner leaking potentially sensitive or security relevant information.
4, via modification of the HTTP request.
4, via modification of the HTTP request.
1, via HTTP response header.
1, via HTTP response header.
1, via HTTP response header.
2, via the appliance web interface.
3, via manipulation of registry parameters.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted URL page.
4, via a crafted HTML page
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via dbus-send commands to a BurnImage D-Bus endpoint.
4, via a crafted bookmark.
4, via IDN homographs in a crafted domain name.
4, via a crafted domain name.
4, via a crafted domain name containing a U+0620 character
4, via a crafted HTML page.
4, via a crafted HTML page
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted MHTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted PDF file.
5, via a crafted HTML page
4, via a crafted HTML page.
4, via a crafted HTML page
4, via a crafted HTML page
4, via a crafted PDF file.
4, via unspecified vectors.
4, via a message without a nick.
2, via an invalid nick message.
4, via a crafted ANSI x8 color code.
0, via vectors involving strings that are not UTF8.
3, by editing /usr/local/contego/scripts/mgrconfig.pl.
2, via unspecified vectors
4, via a crafted executable
0, via split encoded Apple Property List data.
1, by reading data in an XOR format within the /etc/config/uLinux.conf configuration file.
4, via unspecified vectors.
0, via vectors that trigger an out-of-bounds write operation.
2, via an executable in an archive
4, via a crafted executable.
4, via a crafted executable file.
1, via crafted policy language information in an X.509 certificate with a Proxy Certificate Information extension.
4, via a crafted OpenPGP certificate.
4, via a crafted OpenPGP certificate.
4, via a crafted OpenPGP certificate.
2, via the term parameter to the default URI.
0, via the id parameter to gxadmin/index.php.
0, via the recipient parameter to gxadmin/index.php.
4, via a string containing a formatting sequence (%[) without a closing bracket (]).
4, via a malformed command
2, via the server argument to the (1) i5_connect
0, via the D$EVAL parameter to the default URI.
4, via a series of crafted requests
3, by leveraging a missing authorization check for the (1) getInformation
4, via a URL in the HTTP Referer header.
3, by leveraging back-office access to provide a .. (dot dot) in the fm_selected array parameter.
3, by leveraging a leak of an encrypted password during a web-console operation.
2, via the (1) name or (2) version header of a plugin.
1, via vectors involving a Flash file upload.
4, via a crafted directory name of a theme
4, via a spoofed mail server with the mail.example.com name.
4, via a .swf file in a (1) comment frame or (2) avatar frame.
1, by leveraging knowledge of a password hash.
4, via vectors involving left shift of a negative value.
4, via a crafted file.
4, via vectors involving left shift of a negative value.
4, via a crafted file.
4, via vectors involving left shift of a negative value.
4, via a crafted image.
4, via a crafted image.
4, via a crafted image.
4, via a crafted file.
4, via vectors involving a pixel cache.
4, via a crafted TIFF file.
4, via a crafted PSD file
4, via a crafted PSD file
0, by leveraging an improper cast
4, via tag names.
1, via crafted parameters.
2, via the type parameter.
4, via a URL
2, via the id parameter.
0, by leveraging the Python string format method.
4, via a large number of device unplug operations.
4, via a large number of device unplug operations.
2, via unknown vectors
4, via a .. (dot dot) in the existing-folder and new-folder parameters.
2, via the existing-folder parameter.
1, via crafted serialized data in a salt cookie in a login request.
1, via Apple Property List data that is too short.
0, by leveraging the selection of a large value for a random number.
1, by reading from a pipe after an incorrect buffer-release decision.
4, via a large number of VIRTIO_GPU_CMD_RESOURCE_ATTACH_BACKING commands.
4, via a javascript: URL.
2, via the activation parameter.
2, via the modules parameter.
5, via a crafted size value in a VC4_SUBMIT_CL ioctl call.
4, via a large number of VIRTIO_GPU_CMD_RESOURCE_ATTACH_BACKING commands.
4, via a crafted texture instruction.
2, via an RRE message with subrectangle outside framebuffer boundaries.
4, via a crafted serialized Java object
3, by leveraging a default privileged account.
4, via a specially crafted archive.
4, via a crafted image filename.
2, via the cat parameter.
1, by leveraging the presence of an affected plugin or theme that mishandles a crafted post type name.
4, via a crafted excerpt.
0, via format string specifiers in a template file.
0, via vectors involving the (1) success or (2) failure parameter.
4, via a newline character in the redirect location.
2, via the addendum parameter.
0, by leveraging improper checking of logfile permissions.
4, via a specially crafted OOXML file
4, via a crafted file.
4, via a crafted file.
0, via vectors involving the data transfer length.
4, via a file transfer request for a contact that is not in the contact list.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-10189.
3, by conducting a Lenstra side-channel attack.
4, via UEFI APIs.
4, via unspecified vector.
4, via unspecified vector.
4, via unspecified vector.
4, via a side-channel analysis.
4, via local access.
4, via channel-based man-in-the-middle.
4, via a side-channel analysis.
4, via a side-channel analysis of the data cache.
3, via unspecified vectors. At least in LoadRunner
1, via serialized data in the cookies related to the delivery scripts.
2, via the user's email address.
4, via unspecified parameters.
4, via a crafted file.
3, via vectors involving an offset size of zero.
3, via vectors involving an integer node that is treated as a PLIST_KEY and then triggers an invalid free.
4, via a crafted video file.
4, via a malformed datetime string.
0, via vectors involving the current stts index.
3, via vectors involving ncdt tags.
4, via a crafted SMI file
4, via a crafted ASF file.
5," via a ncdt sub-tag that """"goes behind"""" the surrounding tag."
1, via vectors related to the number of languages in a video file.
0, via vectors involving extended content descriptors.
0, via vectors involving PSM parsing.
4, via a series of requests for a large file using an HTTP Range header.
4, via a crafted file.  NOTE: this typically has no risk; this crash of this command-line program has no further consequences for availability.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
1, via MegaRAID Firmware Interface (MFI) commands with the sglist size set to a value over 2 Gb.
4, via a large number of VIRTIO_GPU_CMD_RESOURCE_UNREF commands sent without detaching the backing storage beforehand.
4," via """"%0A"""" characters in the PATH_INFO to __session_start__/."
2, via the (1) domain or (2) transport parameter to domain/add; the (3) name parameter to mailbox/add/did/<domain id>; the (4) goto parameter to alias/add/did/<domain id>; or the (5) captchatext parameter to auth/lost-password.
4, via a Trojan horse executable file in the %SYSTEMDRIVE% directory
4, via a crafted fpx file.
2, via the search parameter.
4, via a crafted file.
4, via a crafted image.
0, via vectors involving GRE flags in an IPv6 packet
4, via a .. (dot dot) in the randstr argument.
0, via the S801F0334 parameter to hdd.htm.
4, via a crafted rule that is mishandled in the yara_yyparse function.
4, via a crafted rule that is mishandled in the yr_compiler_destroy function.
0, via the delete parameter to delete.php
4, via a crafted virtio-crypto request
4," via a crafted filename starting with a """" (double quote) character and a command substitution metacharacter."
4, via unspecified vectors.
4, via a crafted VIRGL_CCMD_CLEAR command.
2, via the nav_data name.
4, via a crafted YAML file.
3, via vectors involving vertext_buffer_index.
3, by creating a ZIP archive in which a .asp file has a ..\ in its pathname
2, via an absolute path traversal attack on sitecore/shell/download.aspx with the file parameter.
4, via (1) an application that makes crafted system calls or possibly (2) IPv4 traffic with invalid IP options.
3, via vectors related to control transfer descriptor sequence.
5, via a crafted ZIP file.
4, via a crafted ZIP file.
4, via a crafted ZIP file.
4, via a crafted ZIP file.
4, via a crafted ZIP file.
4, via a %2E%2E%252e (encoded dot dot slash) in the image path
1, by leveraging lack of netns ownership check.
4, via a multithreaded application that peels off an association in a certain buffer-full state.
4, via vectors involving the transfer mode register during multi block transfer.
4, via a large number of VIRGL_CCMD_BLIT commands.
2, via the num_elements parameter.
4, via unspecified vectors.
3, via multiple msgserver/group?group= requests with a crafted size of the group parameter
2," via the str_log_name parameter in a """"Web Admin Portal > Log Configuration > Add"""" action."
4, via a crafted application that makes concurrent perf_event_open system calls for moving a software group into a hardware context.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-6786.
5, via a malformed IOCTL call.
4, via a malformed IOCTL call.
4, via a crafted edoc file.
4, via a malicious URL provided to the user
4, via a GET request. /finance/help/en/frameset.htm is the URI for this component. The vendor response is SAP Security Note 2368106.
2, via the order parameter.
2, via the cntnt01fbrp_forma_form_template parameter in admin_store_form.
4, via exportxml.
4, via defaultadmin.
4, via shell metacharacters in the ping_IPAddr field of an HTTP POST request.
4, via a malformed BMP image with a crafted biSize field in the BITMAPINFOHEADER section.
4, via a crafted POST request to <vimbadmin directory>/application/controllers/DomainController.php
4, via shell metacharacters in the selected_events[] parameter in the (1) acknowledge
2, via the (1) bp_name
2, via the (1) project or id parameters to topics/deletetopics.php; the (2) id parameter to bookmarks/deletebookmarks.php; or the (3) id parameter to calendar/deletecalendar.php.
3, by uploading a file with an executable extension
2, via the token parameter.
4, via a crafted 0x00090028 IOCTL call
4, via a long URI in a GET request.
4, via a Trojan horse DLL in the current working directory of the Kindle Setup installer.
4," via a .. (dot dot) in a """"GET /uir/"""" request."
4, via a crafted filename.
5, via a crafted image containing a malformed chunk size descriptor.
4, via a crafted image containing a malformed image size descriptor in the IHDR chunk.
4, via a crafted binary file.
4, via a crafted PostScript document.
4, via a crafted binary file
5, by launching a fork bomb in the sandbox
2, via the sandbox backup function. The root cause is that the findFilesToZip function doesn't filter Line Feed (\n) characters in a directory name.
3, via vectors related to parsing properties.
2, by destroying context 0 (zero).
3, via vectors involving a TCP packet with the URG flag.
1, via vectors related to printing an error message.
4, via a crafted image entry offset in an ICO file
4, via a crafted image entry size in an ICO file.
4, via a large TIFF file.
4, via a crafted request to index.plx.
4, via a CGISESSID cookie. On CloudBridge (the former name of NetScaler SD-WAN) devices
0, via vectors involving the sprog variable.
4, via a crafted SANE_NET_CONTROL_OPTION packet.
4, via a crafted DEX file.
1," via crafted web requests."""""
4, via shell metacharacters in the host_name field of an HTTP POST request
4, via a small samples per pixel value in a CMYKA TIFF file.
4, via a crafted XML document.
4, via a multithreaded application that makes PACKET_FANOUT setsockopt system calls.
1, via crafted pkt_length and offlen values
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via vectors related to a palette with no colors.
3, via the host_name parameter to dnslookup.cgi. NOTE: this issue can be combined with CVE-2017-6334 to execute arbitrary code remotely.
5, by using a 'system' entrypoint from fbudf.so.
4, via a long string in the HTTP Referer header.
4, via a large number of VIRGL_OBJECT_VERTEX_ELEMENTS commands.
4, via a crafted DEX file.
4, via vectors related to allocating a new APDU object.
4, via a crafted DEX file.
4, via a crafted e-mail message.
4, via a crafted PE file with WWPack compression.
4, via a pcap file with an over-size packet.
4, via a crafted filter.
5, via a crafted plist file.
4, via a crafted plist file.
4, via a crafted plist file.
4, via a crafted plist file.
4, via a crafted plist file.
4, via a crafted plist file.
1," via crafted use of """"declare(ticks="""" in a PHP script. NOTE: the vendor disputes the classification of this as a vulnerability"
2, via the W_AD1 parameter to Forms/oadmin_1.
4, via a crafted DEX file.
2, via an application path on the command line.
4, via a long variable.
5, via vectors related to an argument with multiple null bytes.
4, via a crafted /dev/datum device.
2, via an invalid setting in a :config directive
4, via a malformed mode configuration directive.
0, via vectors involving the number of link endpoint list descriptors
4, via CRLF sequences in the host subcomponent of a URL.
3, via vectors involving directory-permission loosening logic.
2, via the txtFrom parameter.
5, via a large length value in an agent protocol message and leveraging the ability to connect to the Unix-domain socket representing the forwarded agent connection
2, via the (1) TABLE parameter to esbus/servlet/GetSQLData or (2) QUERY parameter to KK_LS9ReportingPortal/GetData.
1, via vectors related to Conferencing Nodes.
4, via an ACT_ALERT_EVENT request that causes memory corruption in the pmmasterd daemon.
0," via the m1_description parameter (aka """"Design Manager > Categories > Category Description"""")."
2," via the """"adminpage > sitesetting > General Settings > globalmetadata"""" field."
0, by reading the HTML source code of the password.cgi file.
1, by leveraging failure to add the previous hop realm to the transit path of issued tickets.
2, via the 'action_type' parameter.
2, via the 'view_type' parameter.
4, via a .. (dot dot) in a GET command.
4, via unknown vectors.
4, via a modified level parameter to dapur/ in an app=user&act=edit action.
5, via a crafted audio file.
4, via a crafted WAV file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via vectors related to a large number of coefficients.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted image.
4, via a crafted image.
4, via a crafted image.
2, by sending specially crafted network packets to port 443/TCP or port 80/TCP.
1, via crafted system calls that leverage certain decrement behavior that causes incorrect interaction between put_ucounts and get_ucounts.
0, via the name_2 parameter to admin/column/delete.php.
4, via a long MLST command.
1, via XML data in usb.xml.
2, via the event attribute in a time tag.
4, via a crafted ABAP code
5," via a request_key system call for the """"dead"""" type."
4, via a large value.
0, by crafting any valid parameter.
2, via unspecified vectors
3, via an NfSen socket
5, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app that uses symlinks.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
5, by operating a crafted network that requires 802.1X authentication
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted file.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site that uses SVG filters.
4, via a crafted movie file.
4, via a crafted app.
4, via a crafted XML file.
4, via a crafted web site that uses FRAME elements.
4, via a crafted web site.
4, via a crafted XML file.
4, via a crafted app.
4, via a crafted audio file.
4, via a crafted audio file.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted file.
4, via a crafted app.
4, via a crafted audio file.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
1, by leveraging proximity for 802.11.
1, by leveraging proximity for 802.11.
4, via a crafted app.
4, via a crafted archive file.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted iBooks file.
4, via a crafted app.
2, by reading search results that contain locked-note content.
4, via a crafted Mach-O file.
4, via a crafted app.
0, by reading unintended cleartext transmissions.
4, via a crafted app.
4, via a revoked X.509 certificate.
4, via a crafted web site.
1, by leveraging incorrect handling of a denied setting after an upgrade.
4, via a crafted string that is mishandled by the glob function.
4, via a crafted web site.
3, by hijacking a cleartext AutoDiscover V1 session during the setup of an Exchange account.
4, via a crafted web site that is mishandled during parent-tab processing.
4, via a custom URL scheme.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted image.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
1, via crafted Wi-Fi traffic.
4, via a crafted web site.
1, via crafted Wi-Fi traffic.
4, via a crafted web site.
1, via crafted Wi-Fi traffic.
1, via crafted web content that incorrectly interacts with the Application Cache policy.
1, via crafted Wi-Fi traffic.
4, via a crafted web site.
1, via crafted Wi-Fi traffic.
4, via vectors involving a focus-change event.
4, via a crafted app.
1, via crafted Wi-Fi traffic that leverages a race condition.
1, via crafted Wi-Fi traffic.
4, via a crafted web site.
4, via a crafted image.
5, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
5, via a crafted app.
4, via a crafted Office document.
1, by leveraging read access to a backup archive that was supposed to have been encrypted.
4, via a crafted Mach-O file.
4, via a crafted Mach-O file.
4, via a crafted Mach-O file.
4, via a crafted Mach-O file.
3, by leveraging a timing bug to read a secure-content screenshot that occurred during a locking action.
0, by reading keyboard autocorrect suggestions.
0, by sniffing the network during use of the captive portal browser
1, by leveraging cookie mishandling.
4, via a crafted app that leverages Keychain data mishandling.
0, by leveraging its presence in a cleartext HTTP transmission to an Adobe Marketing Cloud server operated for Apple
4, via a crafted app that reads the location variable.
1, by reading Disk Utility hints
4, via a crafted web site.
4, via a crafted web site that sends a 401 Unauthorized redirect.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
3, by leveraging screen-sharing access.
4, via a crafted app.
4, via a crafted web site.
2, via special characters that trigger command injection.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
1, via crafted source code.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4," via shell metacharacters in the customfmt parameter (aka the """"Custom output format"""" field)."
4, via a large (1) read or (2) write TFTP protocol message.
4, via a multipart/form-data POST request without a MIME boundary string.
4, via a large command size in an SG_NEXT_CMD_LEN ioctl call
4, via unspecified vectors.
4, via a crafted h264 video file.
4, via a crafted h264 video file.
4, via unspecified vectors.
2, via unspecified request parameters.
4, via unspecified parameters.
2, via unspecified request parameters.
5, by modifying 'window_title' in the application configuration. This requires privileged access to MantisBT configuration management pages (i.e.
4, via a GET request.
4, via unspecified vectors.
5," by sending a """"Change cipher spec"""" packet without pre-handshake."
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
2, via Directory Path Traversal
2, via an application that makes a long series of FMA3 instructions
4, via a crafted BMP image. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8698.
4," via a long header beginning with """"If: <http://"""" in a PROPFIND request"
4, via a crafted HID report.
4, via a crafted PE file.
4, via a crafted file. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8862 and CVE-2016-8866.
4, via a flood of TCP RST packets
4, via unspecified vectors.
2," via the url parameter to findusers.php. An example attack uses """"into outfile"""" to create a backdoor program."
1, by sending HTTP POST requests. The vulnerability consists of improper input sanitisation of the text fields on the MQTT/IBM Cloud config page
2, via the config_key parameter to the setup/index.php?action=welcome URI.
2, via the core_path parameter.
4, via window.open.
4, via a crafted HTML page
4, via another user's stolen session and CSRF tokens or the adomName parameter in the /fpc/sec/customer/policy/getAdomVersion request.
2, via the FortiAnalyzer Management View.
2, via the 'Name' and 'Description' inputs in the 'Add Revision Backup' functionality.
0, via the applicationSearch parameter in the FortiView functionality.
4, via a hidden Close button
2, via the url parameter.
1," via exploiting the Windows """"security alert"""" dialog thereby popping up when the """"VPN before logon"""" feature is enabled and an untrusted certificate chain."
2," via the """"host"""" parameter on the 'System > Configuration > SNMP > Add SNMP Trap Manager' screen."
5, by importing a file.
0, by revoking keyring keys being used for ext4
0, by leveraging an incorrect limit for port values when handling redirects.
4, via vectors related to an already in-use fid.
4, via a crafted PDF document.
4, via a crafted PDF document.
4, via a crafted PDF document.
4, via a crafted PDF document.
4, via a crafted PDF document.
4, via a crafted PDF document.
3, via the currentHTMLURL parameter.
4," via a flood of packets with Martian source IP addresses (as defined in RFC 1812 section 5.3.7). This product enables net.ipv4.conf.all.log_martians by default.  NOTE: the vendor reports """"It has been proved that this vulnerability has no foundation and it is totally fake and based on false assumptions."""""
4, via a crafted UDP packet.
2, via the POST data in an admin/index.php?s=publish&x=filemanager request for a filename with a double extension
3, by reading a workstation screen during use of a --write-out argument ending in a '%' character
0, by leveraging improper validation of requests to revoke a Traps agent license.
2, via the (1) username
2, via the drafts diff REST resource.
3, by submitting a specially crafted request to the viewFile endpoint. Note that the attack can be performed without authentication if Guest access is enabled (Guest access is disabled by default).
0, via vectors involving error messages.
4, via saveAs and launchURL calls with directory traversal sequences.
4, via a malformed JPEG image.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
2, by sending overly long junk payload for the MXView client login credentials.
2, via an empty field that should have contained a hostname or IP address.
5, via a request to a vendor-supplied CGI script that is used to read HTML text file
0, by abusing ext4 mechanics of delayed allocation.
0, by performing an upload with a safe file extension (such as .jpg) and then invoking the duplicate function to change to the .php extension.
4, via a \x00\x01\x00\x00\x00\x05\x01\x5a\x00\x03\x00 request to the Modbus port (502/tcp). Subsequently the application may be arbitrarily downloaded
5, by connecting to the device via TELNET. This is fixed in recent versions including 1.4.8.
5, via a crafted SWF file. NOTE: this issue exists because of an incomplete fix for CVE-2016-9831.
3, via vectors involving overwriteDemand for order and OrderByAllowed.
4, via a crafted image.
4, via a crafted image.
4, via a crafted image.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
1, by triggering failure of a certain bitmap operation.
4, via a crafted file.
4, via a crafted file.
1, by leveraging failure to verify the path to the encoded ruby script or scrub the PATH variable.
2, via the first parameter to the KLoader setuid program.
4, via a long RPC reply
4, uses escapeshellcmd() to sanitize the sendmail command before executing it. The use of escapeshellcmd() is not correct in this case since it doesn't escape whitespaces
1, via large values in the width and height parameters to otp_logon_ui_resources/qr
4, via a malformed PDF document
4, via a crafted Web Assembly file.
2, via unspecified vectors
1, via vectors related to copying VGA data via the cirrus_bitblt_rop_fwd_transp_ and cirrus_bitblt_rop_fwd_ functions.
4, via a long password.
2, via the Forgotten Password feature.
4," via webUI """"Login Disclaimer"""" redir parameter."
4, via 'Comments' while saving Config Revisions.
2," via the """"Groups"""" input while creating or editing User Groups."
2, via the HTML source code.
4, via a CSRF attack. This is because of the 'allow-access-from domain' child element set to *
4, via a crafted Web Assembly file.
5, via a crafted .djvu file
4, via a long argument. An example threat model is automated execution of DMitry with hostname strings found in local log files.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted Mach0 file.
4, via a crafted PostScript document.
4, via a crafted PCX file.
4, via a crafted CSS file.
4, via a crafted file.
0, via operations on long strings. NOTE: the vendor disputes this
1, by inserting commands in a local configuration dialog in the control panel.
1, via vectors related to a VNC client updating its display after a VGA operation.
4, via a crafted plist file.
4, via a crafted PDF document.
2, via the (1) show_prn parameter to webapp/users/prnow.jsp or show_month parameter to (2) webapp/users/blhistory.jsp or (3) webapp/users/prhistory.jsp.
2, via the (1) printer name when adding a printer in the admin panel or (2) username parameter to webapp/users/user_reg.jsp.
4, by pushing a specially crafted application that can write arbitrary files to the Cloud Controller VM.
5, by pushing a specially crafted application.
4, via a crafted PDF document.
4, via vectors involving image uploads.
3, via calculation of a session cookie or CSRF nonce.
0, via vectors involving the orig_value variable.
2, via via unspecified vectors.
3, by composing a new entry as an editor user. This is related to lack of the serendipity_event_xsstrust plugin and a set_config error in that plugin.
4, via a single-context INVEPT instruction with a NULL EPT pointer.
5, via a symlink attack on a temporary file.
2, via the message ring page count.
4, via shell metacharacters in the username parameter in a login request.
5," via a crafted .mov file that is mishandled during the opening of a directory in """"Browser"""" mode"
4, via a crafted rule that is mishandled in the yr_re_exec function.
4, via a crafted subtitles file.
4, via a crafted subtitles file.
4, via a crafted subtitles file.
4, via a crafted subtitles file.
4, via a crafted image.
4, via a crafted image.
4, via a flood of UDP packets on port 500 (used for L2TP over IPsec)
4, via a crafted DeviceIoControl request to \\.\PSMEMDriver.
5, via a crafted audio file.
4, via a crafted audio file.
4, via a crafted audio file.
4, via a crafted archive.
4, via a crafted audio file.
4, via a crafted filter that is mishandled by etterfilter.
4, via a crafted .mkv file. One threat model is a victim who obtains an untrusted crafted file from a remote location and issues several user-defined commands
4, via a crafted audio file.
4, via a crafted audio file.
3, via vectors related to m_offsets.size.
4, via unknown vectors.
5," via a crafted .mkv file that is mishandled during the opening of a directory in """"Browser"""" mode"
4, via a crafted file. One threat model is a victim who obtains an untrusted crafted file from a remote location and issues several user-defined commands including Ctrl-+ commands.
4, via a register.php?act=edit&id=1 request.
3, via vectors involving an upload of a .htaccess file.
4, by spoofing a callerID and leveraging a privileged helper app.
4, via a crafted font in a PDF document.
4, via a crafted font in a PDF document.
4, via a crafted font in a PDF document.
4, via a specially crafted application
4," via a specially crafted WiFi packet aka """"HoloLens Remote Code Execution Vulnerability."""""
4, via a specially crafted website or a specially crafted document or email attachment
0, by redirecting the user to a specially crafted website
4, via a crafted URI that lacks the cid parameter.
4, via a crafted .mov file
4, via a crafted getpage parameter.
4," via a crafted JPEG 2000 file that is mishandled during the opening of a directory in """"Browser"""" mode"
4, via a large file that is mishandled by listswf
4, via a crafted regular expression.
4, via a crafted PDF file.
1, via iRODS virtual pathnames. To exploit this vulnerability
1," via vectors related to the """"Show Snippet"""" functionality."
4, via a crafted file
4, via a string that ends with an '[' character.
4, via an AF_UNSPEC connect system call during the DCCP_LISTEN state.
3, by requesting a review of a source package with a crafted YAML file.
3, by changing a certain sequence-number value
4, via a crafted CSS file.
4, via a crafted archive.
4, via a crafted archive.
4, via a crafted archive.
4, via a crafted archive.
4, via a crafted archive.
1, by leveraging failure to verify arguments to the mount helper DBUS service.
2, via specially crafted XML SOAP packets.
4, via a crafted .m3u file.
4, via a crafted .m3u file.
4, via a crafted CSS file.
4, via WPS_info.xml.
1, by leveraging use of the accept system call.
2, via the name of an uploaded image.
4, via a crafted PostScript document.
2, via the code parameter to admin/editusertag.php
4, via a crafted XML document in a request to irj/servlet/prt/portal/prtroot/com.sap.visualcomposer.BIKit.default
4, via unspecified vectors.
4, via a crafted template.xml file.
3, by using a crafted USB device (posing as an io_ti USB serial device) to trigger an integer underflow.
0, by leveraging reference count mishandling.
4, via a crafted .tif file.
4, via a crafted .tif file.
4, via a crafted rule.
4, via unspecified vectors.
4, via a specially crafted HTTP Cookie header.
4, via a specially crafted fname parameter of a GET request.
2, via the (1) T1 or (2) tmLastConfigFileModifiedDate parameter to log_management.cgi.
4, via a crafted request to SProtectLinux/scanoption_set.cgi
1, by leveraging failure to validate software updates.
1, by leveraging unencrypted communications with update servers.
0, by leveraging an unrestricted quarantine directory.
2, via the (1) S44
4, via a crafted ELF file
4, via a crafted ELF file with many program headers
4, via a crafted ELF file
4, via a crafted ELF file.
0, by leveraging improper channel callback shutdown when unmounting an NFSv4 filesystem
4," via a large number of """"VIRTIO_GPU_CMD_SET_SCANOUT:"""" commands."
2," via the (1) """"paramFile"""" parameter to /Site/Troubleshooting/DiagnosticReport.asp"
4, via a crafted image.
4, via a crafted image.
1, by entering more than 20 blank spaces in the password field during an admin login attempt.
2, by triggering crafted operations on array data structures.
5, via a long string because of an Integer overflow in mysqli_real_escape_string.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted wav file.
4, via a crafted wav file.
0, via the bgColor parameter to Telerik.ReportViewer.axd.
4, via a crafted image
4, via a crafted image
4, via a crafted image
4, via a crafted image
4, via a crafted image
4, via a crafted image
5, via a crafted image
4, via a crafted PDF document
4, via a crafted PDF document
4, via a crafted PDF document
4, via a crafted DNS response with an empty question section.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
5, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via unspecified vectors.
3, by uploading and attaching a crafted photo to a Card.
0, by sniffing the network and leveraging the lack of SSL.
3, by uploading a crafted HTML file. The attack vector is the content of this file
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted mp4 file.
4, via a crafted wav file.
4, via a crafted wav file.
4, via a crafted wav file.
4, via RMI ports.
4, via a crafted FLAC file.
4, via a crafted file.
4, via a crafted mp4 file.
4, via a crafted rule that is mishandled in the _yr_re_emit function.
1, via padded zero characters
4, via a crafted file parameter.
0, via the sec parameter to view_man.cgi
4, via a crafted XSPF playlist file.
4, via a crafted authentication request.
0, by making multiple login requests to the server.
2, uses the value passed in it to fill up buffer using the sprintf function. However
4, via a crafted wav file.
0, via the add parameter to podcastReceiverAdmin.view or (2) update Internet Radio Settings via the urlRedirectCustomUrl parameter to networkSettings.view.  NOTE: These vulnerabilities can be exploited to conduct server-side request forgery (SSRF) attacks.
0, via the name parameter to playerSettings.view.
4, via a crafted request to userSettings.view.
1, via unspecified vectors
2, via the testid parameter to wp-admin/admin.php.
2, via the cs-all-0 parameter.
2, via the yr parameter.
4, via a POST request to /oauth/token.
4, via core\admin\modules\developer\modules\designer\form-create.php. The attacker creates a crafted table name at admin/developer/modules/designer/ and the injection is visible at admin/dashboard/vitals-statistics/integrity/check/?external=true.
0, via the id parameter to wp-admin/admin.php.
4, via a command line with a long name argument that is mishandled in a strcpy call for argv[0]. An example threat model is a web application that launches dnstracer with an untrusted name string.
4, via a crafted rule (involving hex strings) that is mishandled in the _yr_re_emit function
5, by uploading a crafted package
5, by uploading a crafted package containing a PHP web shell
4," via a crafted tables object in manifest.json in an uploaded package. This issue exists in core\admin\modules\developer\extensions\install\process.php and core\admin\modules\developer\packages\install\process.php. NOTE: the vendor states """"You must implicitly trust any package or extension you install as they all have the ability to write PHP files."""""
2, via the description parameter. This issue exists in core\admin\ajax\pages\save-revision.php and core\admin\modules\pages\revisions.php. Low-privileged (administrator) users can attack high-privileged (Developer) users.
4, via core/admin/modules/developer/modules/views/create.php. The attacker creates a crafted table name at admin/developer/modules/views/create/ and the injection is visible at admin/ajax/auto-modules/views/searchable-page/ or admin/modules_name.
0, by leveraging the ability to create files in an unspecified directory.
2, via the PATH_INFO in an acp.php URL
2, via the page parameter.
4, via a crafted DNS response.
4, via a crafted file that is mishandled in the yr_re_fast_exec function in libyara/re.c and the _yr_scan_match_callback function in libyara/scan.c.
4, via a forged MAC address.
5, by connecting to the device's xfinitywifi hotspot.
0, by leveraging local network access and connecting to the syseventd server
5, by adding a routing-table entry that specifies the LAN IP address as the router for that network.
3, by enabling a TELNET daemon (through CVE-2017-9479 exploitation) and then establishing a TELNET session.
4, via shell metacharacters in commands.
3, by sniffing Wi-Fi traffic and performing simple arithmetic calculations.
1, by leveraging the device's operation in UI dev mode.
4, via unspecified vectors.
1, by leveraging knowledge of the CM MAC address.
5, by establishing a session to the wan0 WAN IPv6 address and then entering unspecified hardcoded credentials. This wan0 interface cannot be accessed from the public Internet.
4," by pressing """"EXIT"
3, by connecting a cable to the Ethernet port
0, by pulling up the diagnostics menu on the set-top box
1, by leveraging root access. In other words
0, via Server Side Request Forgery (SSRF).
4, via a cross site scripting (XSS) vulnerability in the review filter title parameter.
4, via a cross site scripting (XSS) vulnerability through the name of a repository or review file.
4, via a cross site scripting (XSS) vulnerability through the charset of a previously uploaded file.
4, via a cross site scripting (XSS) vulnerability through the start date and end date parameters.
4, via a crafted DEX file.
4, via a crafted .rb file.
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4," via a """".."""" in the path field. In other words"
4, via a crafted POST request to registresult.htm.
4, via a crafted mp3 file.
2, via XSS sequences in a revision name.
4," via cmdline. Synology Photo Station employs the synophoto_dsm_user program to authenticate username and password by """"synophoto_dsm_user --auth USERNAME PASSWORD"""""
2, via the crafted version parameter.
4, via unspecified vectors.
2, via the image parameter.
2, via the title parameter.
0, by sending the username parameter in conjunction with an empty password parameter
2, via the jobid parameter to wp-admin/edit.php.
3, by placing a Trojan horse ViPNet update file in the update folder. The attack succeeds because of incorrect folder permissions in conjunction with a lack of integrity and authenticity checks.
0, via the map_language parameter to backend/pages/lang_settings.php.
4, via a crafted document.
4, via a crafted document.
4, via a crafted document.
2, via the file upload functionality.
4, via a crafted jpg file. NOTE: Maintainer asserts the issue is due to a bug in downstream code caused by misuse of the libjpeg API.
4, via a crafted document.
4, via a crafted file.
4, via a crafted document
2, via the (1) original or (2) new parameter.
1, via crafted common data.
1, via crafted country data.
1, via crafted currency decimal-sign data.
4, via a crafted document.
4, via a crafted document.
2," via the """"r"""" parameter."
4, via a crafted document.
4, via a crafted document.
2, via the dbprefix parameter
4, via a crafted binary file
4, via a crafted binary file
4, via a crafted binary file
4, via a crafted binary file
4, via a crafted binary file
4, via a crafted binary file.
4, via a crafted binary file.
2, via the Client-IP or X-Forwarded-For HTTP header to /include/stat/stat.php in a para action.
2, via the (1) Name or (2) Description parameter to RM/Reservation/ReserveNew; the (3) Description parameter to RM/Topology/Update; the (4) Name
2, via the database_username
4, via a crafted PDF document.
4, via a crafted PDF document.
2, via unknown vectors
4, via a crafted image
2, via the Description field in a Site name updated.
2, via the Description field in My account Name updated
4, via api/saveconfig.
4, via unspecified vectors.
5, by inserting a mobile device into a personal computer through a USB cable.
5, by inserting a mobile device into a personal computer through a USB cable.
2, via the watupro_questions parameter in a watupro_submit action to wp-admin/admin-ajax.php.
4, via a crafted PostScript document. This is related to a lack of an integer overflow check in base/gsalloc.c.
0, via the virtual_name parameter to /admin.php (i.e.
0," via HTTP POST data beginning with a """"<?php """" substring"
4, via vectors involving disp+work.exe
4, via a crafted serialized Java object in a request to metadatauploader
4, via a crafted DIAG request
4, via a crafted file.
2, via an XML document containing a crafted ArticleIDs element within a GetArticleHitsArray element.
4, via a crafted PDF document
4, via a crafted .fpx file
4, via a crafted .fpx file
5, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
5, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
5, via a crafted .fpx file
4, via a crafted .fpx file
5, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
5, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
4, via a crafted .fpx file
5, via a crafted .bie file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted binary file
4, via a request to add/set a key
1, by leveraging failure to scan inside disk image (aka DMG) files.
2, via the &#5610; Unicode character followed by the &#3903; Unicode character.
0, by changing the value of a message queue head pointer between two kernel reads of that value
0, by changing the value of a message queue head pointer between two kernel reads of that value
0, by changing the value of a message queue head pointer between two kernel reads of that value
5, via a crafted file.
4, via a crafted file.
3, via SNMP
5, by sending a crafted IPv6 packet to the system. This issue is limited to systems which receives IPv6 DHCP packets on a system configured for DHCP processing using the JDHCPD daemon. This issue does not affect IPv4 DHCP packet processing. Affected releases are Juniper Networks Junos OS: 12.3 versions prior to 12.3R12-S10 on EX Series; 12.3X48 versions prior to 12.3X48-D70 on SRX Series; 14.1X53 versions prior to 14.1X53-D47 on EX2200/VC
4, use DHCP. Affected releases are Juniper Networks Junos OS: 12.1X46 versions prior to 12.1X46-D40 on SRX Series; 12.3X48 versions prior to 12.3X48-D20 on SRX Series; 14.1X53 versions prior to 14.1X53-D40 on EX2200/VC
0, by sending the user a link or email attachment with a malicious ARF file and persuading the user to follow the link or launch the file. Successful exploitation could allow the attacker to execute arbitrary code on the user's system. This vulnerability affects Cisco WebEx Business Suite meeting sites
0, by sending the user a link or email attachment with a malicious ARF file and persuading the user to follow the link or launch the file. Successful exploitation could allow the attacker to execute arbitrary code on the user's system. This vulnerability affects Cisco WebEx Business Suite meeting sites
3,upload arbitrary files to
4, via a crafted non-conformant Thor bitstream.
5, by authenticating to the application and then sending a crafted HTTP request to the targeted application. A successful exploit could allow the authenticated attacker to issue commands on the underlying operating system as the root user.
2, use this vulnerability to open an SSH connection to an affected Cisco IOS or IOS XE device with a source address belonging to a VRF instance. Once connected
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted file.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via quiz.cgi.
4, via quiz_op.cgi.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via a specially crafted file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1, via vectors related to URL display.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via formSysCmd parameter.
4, via sysCmd in formWsc parameter.
4, via targetAPSsid parameter.
1, via HTTP request and response.
2, via HTTP request and response.
4, via sysCmd parameter.
4, via targetAPSsid parameter.
1, via HTTP request and response.
4, via submit-url parameter.
4, via FactoryPassword parameter or bootmode parameter of a certain URL.
3, via filename parameter.
4, via FactoryPassword parameter of a certain URL
4, via export.cgi encKey parameter.
4, via import.cgi encKey parameter.
0, via tools_firmware.cgi date parameter
0, via netWizard.cgi date parameter
0, via tools_system.cgi date parameter
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
2, via the UserGroup Management section of admin page.
1, via Wiki page view.
2, via the modal for creating Wiki page.
2, via the app settings section of admin page.
4, via a Trojan horse DLL in an unspecified directory.
2, via specially crafted ATC file.
2, via specially crafted ATC file.
5, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, via HTTP requests for mail search.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via HTTP requests.
4, via Keitai Screen.
3, via HTTP requests.
0,send a specially crafted email attachment to
3, via packet replay.
4, via packet replay.
2, via an AVI file.
2, by breaking AST boundaries. This vulnerability appears to have been fixed in 1.7.0 and later.
2, via The victim must run maliciously crafted flash component. This vulnerability appears to have been fixed in 6.1.
2, via The victim must visit on a specially crafted URL..
2, via The victim must visit on a specially crafted URL..
3,send test notifications to
1, via Attacker must be have access to an admin account on the target site. This vulnerability appears to have been fixed in 2.8.
0, via Admin must follow a link. This vulnerability appears to have been fixed in 5.1.
0, via Logged in user must follow a link. This vulnerability appears to have been fixed in 1.2.9.
0, via Admin must click on link. This vulnerability appears to have been fixed in 2.1.1.
0, via Attacker must have access to admin account. This vulnerability appears to have been fixed in 2.8.
2, via Can be triggered intentionally (or unintentionally via CSRF) by any logged in user. This vulnerability appears to have been fixed in 1.24.
0, via Admin must follow a link. This vulnerability appears to have been fixed in 5.1.
1, via network connectivity (Remote attack).
0, via User controlled variable in import templates function.
2, via An authenticated user can upload a specially crafted zip file to get remote code execution. This vulnerability appears to have been fixed in after commit 72a02ebaaf95a80e26127ee7ee2b123cccce05a7 / version 3.14.4.
5," by crafting a three backtick wrapped payload with a character in front: L: """"```<script>alert();</script>```"""". NOTE: This has been argued as a non-issue (see references) since it is not the parser's job to sanitize malicious code from a parsed document."
2, via an IT or MO3 file with many nested pattern loops.
0, by triggering certain failure conditions. NOTE: a third party disputes the relevance of this report because the failure can only occur for physically proximate attackers who unplug SAS Host Bus Adapter cables.
3, via creating a malicious .DLL file and installing it in a specific directory: %PROGRAMFILES%\ESTsoft\ALZip\Formats
4, via a direct request to the install/ or log/ URI.
5, by sending a crafted FTP request on port 21 that begins with many '\0' characters
4, via a 0x953826DB DeviceIoControl call.
4, via a 0x953827bf DeviceIoControl call.
5, by triggering a failure of resource retrieval.
2, via the import logs feature.
2, via the search functionality (the search box of the Dashboard).
1, via crafted XML data.
4, via a server description.
1, by leveraging support for updating the antivirus command and parameters used to scan file uploads.
0, via vectors involving integer parameters without quotes.
2, via the foruserlogin parameter to adherents/cartes/carte.php.
4, via a malformed PNG file that is mishandled during a call to the babl_format_get_bytes_per_pixel function in babl-format.c in babl 0.1.46.
4, via a malformed PPM file
0, via directory traversal sequences in the pathname parameter to www/file.php.
2, via the implementation of portalPictureUpload functionality. This is fixed in version 2.6.1_Windows.
0, via the userName parameter in the local user creation functionality. This is fixed in version 2.6.1_Windows.
4, via file:// URLs
4, via vectors involving a mostVisitedSites command.
5, uses a third-party library for converting `xpc_object_t` types in to `NSObject` types for sending XPC messages. When IPVanish establishes a new connection
2, via an HTML document because the resource consumption of onloadwff.js grows with the number of INPUT elements.
4, via a crafted file.
0, via the changes_cp parameter to the index.php/admin/themes/sa/templatesavechanges URI.
4, use of the JavaScript WebGL API.
3, via unspecified parameters.
4, via unspecified vectors.
2, via the diy\module\member\controllers\admin\Setting.php 'index' function because an attacker can control the value of $cache['setting']['ucssocfg'] in diy\module\member\models\Member_model.php and write this code into the api/ucsso/config.php file.
2, via the diy\dayrui\controllers\admin\Syscontroller.php 'add' function because an attacker can control the value of $data['name'] with no restrictions
5, via a specially crafted URL beginning with the /Web%20Client/ substring.
2, via an authorization digest header.
1, by passing payloads in an Instagram profile's bio.
1, by passing payloads in a comment on an Instagram post.
0, via the tag[pinyin] parameter to the /index.php?m=tags&f=index&v=add URI.
5, via a crafted name of a component
4, via a crafted xfs image.
4, via a crafted xfs image.
4, via a crafted ELF file.
4, via a page title.
4, via a crafted binary file
4, via a symlink attack.
4, via a long TFTP error packet
0, via format string sequences in a TFTP error packet.
2, via format string sequences in a TFTP error packet.
4, via a link that becomes available after posting an article.
2, via the Database Prefix field on the Database Info screen of install.php.
0, via the name[] parameter to the /upload URI.
2, via unexpected INT 80 processing
0, via QMP live insertion of a CDROM
0,use a specially crafted URL to
4, via a Browser Refresh attack on vulnerable installations. An attacker must be using a AD logon user account in order to exploit this vulnerability.
2, via the (1) patient parameter to interface/main/finder/finder_navigation.php; (2) key parameter to interface/billing/get_claim_file.php; (3) formid or (4) formseq parameter to interface/orders/types.php; (5) eraname
2, via the newtemplatename and form_body parameters.
2, via the scan parameter.
2, use this flaw to execute code with the permissions of superuser in the database. Versions 9.3 through 10 are affected.
2, by changing the platform configuration
5, by sending a crafted command which will result in a code path that calls the UND undefined ARM instruction.
1, via crafted system calls.
1, via crafted packets.
2, via the HTTP Referer header.
4, via a crafted torrent file.
2, via the id parameter.
3, by uploading a file with an executable extension
4, via a crafted file.
4, via a browser/liferay/browser.html?Type= or html/js/editor/fckeditor/editor/filemanager/browser/liferay/browser.html URI. NOTE: the vendor disputes this issue because file upload is an expected feature
5, via a crafted description value. This can be exploited through CSRF.
2, via the search panel.
0, via URIs that do not exist
1, uses the data written to this section as arguments to functions. This causes a denial of service condition when invalid pointers are written to the mapped section. This driver has been used with Dell
2, use this flaw to create arbitrary symlinks pointing anywhere on the server and execute arbitrary code on glusterfs server nodes.
4, via a crafted ext4 image because balloc.c and ialloc.c do not validate bitmap block numbers.
0,use a incorrect bounds check in the CDROM driver CDROM_MEDIA_CHANGED ioctl to
4, by uploading a .phtml file.
2, via the admin web UI.
4, via a crafted file
2, via the invitation codes grid.
4, via a crafted file.
4, via a crafted file.
4, via a session.cgi?ACTION=logout request involving a long REMOTE_ADDR environment variable.
3, by triggering an incorrect Safe::add call.
4, via index.php?r=admin/admin/admindel.
4, via m=admin&c=admin&a=add.
4, via a request with a long HTTP Host header.
4, via admin.php/role/add.html.
2, via the argument of an ioctl on device /dev/gcioctl with the command 3221773726 and cause a kernel crash.
2, via the argument of an ioctl on device file /dev/rpmsg-omx1 with the command 3221772291
2, via the argument of an ioctl on device /dev/dsscomp with the command 1118064517 and cause a kernel crash.
2, via the argument of an ioctl on device /dev/gcioctl with the command 3224132973 and cause a kernel crash.
2, via the argument of an ioctl on device /dev/gcioctl with the command 3222560159 and cause a kernel crash.
2, via the argument of an ioctl on device /dev/gcioctl with the command 1077435789 and cause a kernel crash.
2, via the argument of an ioctl on device /dev/twl6030-gpadc with the command 24832 and cause a kernel crash.
1, via crafted JPEG data.
2, use this vulnerability to install vulnerable packages to further compromise a system.
4, via an admin/index.php?empty=table (aka Clear Table) action.
4, via a crafted vcf file.
4, via a crafted attribute name of an Attribute.
4, via a crafted pdf file.
4, via a crafted vcf file.
4, via a crafted vcf file.
4," via the """"copyright information office"""" field. NOTE: the vendor indicates that the product was not intended to block this type of XSS by a user with the admin privilege."
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via include/ajax/update_manager.ajax in the update system.
2, via the /pandora_console/ajax.php ajax endpoint.
4," via a crafted """"refr"""" parameter in a """"/pandora_console/index.php?sec=estado&sec2=operation/agentes/estado_agente&refr="""" call."
4, via a crafted file.
4, via a crafted PDF document.
4, via a crafted PDF document.
4, via sniffing/MITM attacks and authenticate as the target user.
4, via an applyCoupon action in an admin-ajax.php request.
4,create custom fields to
4, via a crafted site name to the manager/processors/save_settings.processor.php file.
4, via \\.\pipe\WindscribeService.
3,upload supplied data to
2, via the filename parameter.
2, via the dest_folder parameter.
2, via the 'playlist' POST parameter.
2, via the file1 parameter.
2, via the POST parameter filename. This can be used to place attacker controlled code on the file system that can then be executed. Further
2, via the act parameter.
4, via a crafted binary file.
4, via a crafted ELF file.
4, via a crafted binary file.
4, via a crafted PE file.
4, via a crafted Mach-O file.
4, via a crafted binary file.
4, via a crafted binary file.
4, via a crafted ELF file because of an uninitialized variable in the CPSE handler in libr/anal/p/anal_avr.c.
4, via a crafted ELF file.
0, via JavaScript code that triggers access to a NULL URL
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted audio file.
4, via a crafted file
2, via an unauthenticated remote request
1," by modifying the """"referral_site"""" cookie to have an XSS payload"
5, by sending a specially crafted HTTP request.
1, via crafted HTTP requests.
4, via CSRF.
4, via a crafted file
4, via a crafted file
3, by reading logcat output.
4, via adjtimex.
1, via crafted HTTP requests to toServerValue.cgi.
5, via a crafted website name by doing an authenticated POST HTTP request to admin/settings/general.
4, via a crafted .swf file.
2, by sending all of the prj parameter values from 870000 to 875000 in t=0&rq=0 requests to TCP port 11010.
4, via /admin.php/sys/editpass_save.
2, via an unspecified vector. It affects the 1000 and 2000 devices 6.0.x up to Build 446
2," via the picture upload feature. A user with elevated privileges could upload a photo to the system in an SVG format. This file will be uploaded to the system and it will not be stripped or filtered. The user can create a link on the website pointing to """"/storage/poc.svg"""" that will point to http://localhost/pagekit/storage/poc.svg. When a user comes along to click that link"
2, via the url parameter to etc/loginerror.html.
4, via a crafted DTD in an XML request.
2, via an integer overflow during syntax parsing. This was addressed by fixing stack size detection on Linux in jsutils.c.
4, via a NULL pointer dereference during syntax parsing. This was addressed by adding validation for a debug trace print statement in jsvar.c.
5, via an Out-of-bounds Read during syntax parsing in which certain height validation is missing in libs/graphics/jswrap_graphics.c.
4, via a Buffer Overflow during syntax parsing because strncpy is misused in jslex.c.
4," via a Buffer Overflow during syntax parsing of """"VOID"""" tokens in jsparse.c."
4, via a Buffer Overflow during syntax parsing
4, via a Buffer Overflow during syntax parsing because a check for '\0' is made for the wrong array element in jsvar.c.
4, via a Buffer Overflow during syntax parsing because of a missing check for stack exhaustion with many '{' characters in jsparse.c.
4, via a Buffer Overflow or Out-of-bounds Read during syntax parsing of certain for loops in jsparse.c.
5,create a denial-of-service condition on vulnerable installations of Quest NetVault Backup 11.2.0.13. Although authentication is required to
1, via crafted Bluetooth Low Energy (BLE) traffic.
3, by reading /var/www/xms/xmsdb/default.db.
3,upload malicious code to
2, use this vulnerability to reboot affected devices
2, via the filterPattern parameter.
2, via the Server field in an HTTP response header
0, via the content parameter to index.php?m=admin&c=media&a=fileconnect.
4, via a crafted AMS file because of an invalid write near address 0 in an out-of-memory situation.
4, via a crafted pff file. NOTE: the vendor has disputed this as described in libyal/libpff issue 66 on GitHub.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted mobi file.
4, via a crafted ntfs file. NOTE: the vendor has disputed this as described in libyal/libfsntfs issue 8 on GitHub.
4, via a crafted ntfs file. NOTE: the vendor has disputed this as described in libyal/libfsntfs issue 8 on GitHub.
4, via a crafted ntfs file. NOTE: the vendor has disputed this as described in libyal/libfsntfs issue 8 on GitHub.
4, via a crafted ntfs file. NOTE: the vendor has disputed this as described in libyal/libfsntfs issue 8 on GitHub.
4, via a crafted ntfs file. NOTE: the vendor has disputed this as described in libyal/libfsntfs issue 8 on GitHub.
2, by using the image/jpeg content type for a .htaccess file.
4, via a query on the GroupSummaryCounts related table.
4, via a query on a m_center data related table.
5, by sending a specially crafted request to the server.
2, via certain window.open and document.write calls.
5, via server/node_upgrade_srv.js directory traversal with the firmware parameter in a downloadFirmware action.
5, via a crafted archive that holds directory traversal filenames.
2," via the """"file"""" parameter"
5, by replacing a helper.json file.
2, via BGP mask expressions in birdc.
3, via manipulation of an unsanitized GET parameter during a forgotPasswordChange.jsp?key= password change.
2, via the id parameter.
4, via a crafted lnk file. NOTE: the vendor has disputed this as described in libyal/liblnk issue 33 on GitHub.
4, via a crafted lnk file. NOTE: the vendor has disputed this as described in libyal/liblnk issue 33 on GitHub.
4, via a crafted lnk file. NOTE: the vendor has disputed this as described in libyal/liblnk issue 33 on GitHub.
2, via the post comments functionality
4, via a malformed file.
5, via a crafted PAM image file.
2, via the PATH_INFO to the /wt3/mydocs.php URI.
4, via a crafted file.
4, via a side channel with local access. A list of impacted products can be found here: https://www.intel.com/content/dam/www/public/us/en/documents/corporate-information/SA00233-microcode-update-guidance_05132019.pdf
4, via a side channel with local access. A list of impacted products can be found here: https://www.intel.com/content/dam/www/public/us/en/documents/corporate-information/SA00233-microcode-update-guidance_05132019.pdf
4, via a side channel with local access. A list of impacted products can be found here: https://www.intel.com/content/dam/www/public/us/en/documents/corporate-information/SA00233-microcode-update-guidance_05132019.pdf
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via network.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
2, via the templates/frontend/pages/search.tpl parameter (aka the By Author field).
1, by using the text/xml or application/xml Content-Type in a public_html/admin/?app=vqmods&doc=vqmods request.
2, via the dirId URL parameter.
2, via empty POST requests.
2, via URL path names.
4, via a URL path.
1, via uploaded file names.
2, via the 'state' URL parameter.
4, via a Download URL of 127.0.0.1 or localhost.
4, via cross-site scripting.
3, via directory names.
0, via multiple application metadata fields: Short Description
2, by uploading SVG images with embedded JavaScript.
1," by modifying the """"file1"""" URL parameter"
2," via the """"name"""" POST parameter."
2," via the """"encrypt_key"""" URL parameter."
1," by modifying the """"path"""" URL parameter.  NOTE: the """"filename"""" POST parameter is covered by CVE-2018-11345."
2, via the System Announcement feature.
4, via a malicious filename.
2," via the """"secret_key"""" URL parameter."
2," via the """"rocommunity"""" URL parameter."
1," by manipulating the """"file"""" and """"folder"""" URL parameters."
0, by modifying the filename POST parameter.
1," by modifying the """"name"""" POST parameter."
2, by placing malformed text in the title.
4, via a crafted command line. NOTE: It is unclear whether there are any common situations in which redis-cli is used with
5, via a long string as the argument for an IPv4 or IPv6 command-line parameter. NOTE: It is unclear whether there are any common situations in which ntpq or ntpdc is used with a command line from an untrusted source.
4, via cloning.
4, via compromised firmware.
0," via IP spoofing during """"Easy Enrollment."""""
4, via a compromised host PC after a reset.
4, via a virtualization attack.
0, via remote root SSH access.
4, via user-space emulation.
0, via remote root SSH access.
4, via a crafted POST request
4," via a long query that is processed by the strcat function. NOTE: the software maintainer disputes this because """"the code had computed the required string length first"
4, via an XGROUP command in which the key is not a stream.
3," by using """"admin:"""" as the name of a cookie."
4, via a /admin/setup Referer header.
2, use the GWAVA product name (i.e. GWAVA 6.5).
4,upload files to
2, by referencing blocking elements. Affected releases are SUSE Linux SMT: versions prior to 3.0.37.
0, by confining the worker via KVM. Affected releases are openSUSE Open Build Service: versions prior to 70d1aa4cc4d7b940180553a63805c22fc62e2cf0.
5, by tricking obs-service-refresh_patches to delete them. Affected releases are openSUSE Open Build Service: versions prior to d6244245dda5367767efc989446fe4b5e4609cce.
2, by specifying crafted request IDs. Affected releases are openSUSE Open Build Service: versions prior to 01b015ca2a320afc4fae823465d1e72da8bd60df.
4, via a crafted file.
1,upload any malicious file to
5, via a flienamecsv=../ directory traversal. This can be exploited via CSRF.
4, via a MediaOutputResource's resource request
4, via a /DATA/ substring in a path with an org.richfaces.renderkit.html.Paint2DResource$ImageData object
4, via a comma-separated list of URLs in the orig_url parameter
2, via the catalog.noTitlesSearch parameter (aka the Search field).
4, via a Trojan horse puiframeworkproresenu.dll file in the current working directory.
4, via a direct request for the data/fileinfo.xml or job/job.json file
0, via the s parameter
4, via a direct request for Data/Log/year_month_day.log.
4, via /redbin/rpwebutilities.exe/text?LFN=../ directory traversal.
2, via an invalid LFN parameter to the /redbin/rpwebutilities.exe/text URI.
4, via a direct request for the html/log or services/system/info.html URI.
1, by omitting the csrf_token parameter.
4, via a request to web/cgi-bin/hi3510/param.cgi.
4, via a crafted SSI file.
0, via data plane packet injection.
4, via shell metacharacters in the wps_setup_pin parameter to /data/wps.setup.json.
4, via a long type parameter to /data/syslog.filter.json.
4, via data/reboot.json.
4, via a direct request for the inverter_info.htm or english_main.htm URI.
2, via the DMLC_PS_ROOT_URI and DMLC_PS_ROOT_PORT env variables. In versions older than 1.0.0
1, by leveraging directory traversal in the wp-admin/post.php thumb parameter
4, via a direct request for the /dashboard/deposit URI
2, via an empty hostname.
4, via a direct request for the basic.html#ipsettings or basic.html#datadelivery URI.
4, via a direct request for the meter_information.htm
2, via the config/configUser.htm or config/configTelnet.htm URI.
4, via a direct request for the #!/system URI.
4, via a direct request for the default/index.lsp or default/log.lsp URI.
4, via a direct request for the nep/status/index/1 URI.
4, via a crafted ntfs filesystem.
4, via a crafted ntfs filesystem.
4, via a crafted ntfs filesystem.
3, by triggering a large pAlphaBlend->cbBitsSrc value.
4," via a .. (dot dot) in the """"op/op.UploadChunks.php"""" """"qquuid"""" parameter.  NOTE: this can be leveraged to execute arbitrary code by using CVE-2018-12940."
5," by uploading a file with an executable extension specified by the """"qqfile"""" parameter. This allows an authenticated attacker to upload a malicious file containing PHP code to execute operating system commands to the web root of the application."
3," by adding a system command at the end of the """"cacheDir"""" path and following usage of the """"Clear Cache"""" functionality. This allows an authenticated attacker"
0, by sending additional SQL commands to the application server. An attacker can use this vulnerability to perform malicious tasks such as to extract
2, via the action parameter.
2, via the name field.
1," by pulling information from the database with the """"cddocument"""" parameter in the """"Downloading Electronic Documents"""" section."
0, by abusing the unrestricted file upload in the WBM.
3,upload arbitrary files to
4, via a crafted file.
2, via an invalid csrf_token_value field.
2, via the onefilecms_username and onefilecms_password fields.
4, via a .php filename on the New File screen.
5, via a .php filename on the Upload screen.
2, via the parameter 'method' to GraphicalView.do.
5, by sending a specially crafted request to the server with a computerName=../ substring to the /agenttrayicon URI.
4, via a modified URL path.
2," via the """"timeout"""" URL parameter."
2, via the index.php?r=admin/photo/delpic picname parameter.
4," via """"..%f"""" sequences."
2," via the """"id"""" parameter."
3, via execution of attacker controlled binaries.
1, via crafted packets
2," via the """"ssid"""" value"
4, via a crafted .aiff file.
2, via the Delete File(s) screen
2, via the i and f parameters
4, via a crafted audio file. The vulnerability can be triggered by the executable sndfile-deinterleave.
3, via unspecified vectors.
2, via the file_path parameter.
2, via the PHPSESSID parameter.
2, via the (1) command
2, via the (1) MKD or (2) RMD command.
2, via the (1) MKD or (2) RMD command.
2, via the world readable configuration.
2, via the world readable configuration.
2, via the (1) folder_path or (2) real_path parameter.
2, via the (1) folder_path or (2) real_path parameter.
2, via the file_path parameter.
2, via the world readable configuration.
2, via the world readable configuration.
2, via the URL parameter.
2, via the uid parameter.
2, via the version parameter.
4, via client-initiated renegotiation.
2, via the dsm_path parameter.
3, via unspecified vectors.
2, via the filename parameter.
2," via the """"ftpUser"""" POST parameter."
2," via the """"ntpServerIp2"""" POST parameter. Certain payloads cause the device to become permanently inoperable."
1," by modifying the """"User phrases button"""" field."
2, via the user's password.
2, via the user's username.
2," via the """"sambaUser"""" POST parameter."
1," by modifying the """"Input your notice URL"""" field."
2," via the """"ipAddr"""" POST parameter."
0, via an unauthenticated POST request.
2," via the """"subnet"""" POST parameter."
3, by making a GET request for password.htm.
2," via the """"name"""" parameter."
2, via an unauthenticated POST request.
4, via the adminUsername and adminPassword parameters.
2," via the """"method"""" parameter."
2," via the """"path"""" parameter."
2," via the """"username"""" cookie."
3, by sending a modified HTTP Host header.
2," via the """"lines"""" URL parameter."
2," via the """"groupname"""" parameter."
2, by placing JavaScript in their usernames.
2," via the """"path"""" URL parameter."
2, by placing JavaScript in users' usernames.
2," via the """"options[sysname]"""" parameter."
3, via their descriptions.
2," via the """"pwd"""" parameter during user creation."
4, via JavaScript.
2," via the """"username"""" parameter during user creation."
2, via the user's username.
2," via the """"Event"""" parameter."
2, via the edit password form.
2," via the """"checkport"""" parameter."
2," via the """"Event"""" parameter."
0, via JavaScript in Shared Folders' names.
2," via the """"checkName"""" parameter."
2," via the """"modgroup"""" parameter."
2," via the """"filename"""" URL parameter."
2," via the """"modgroup"""" parameter."
2, via the command injection.
4, via a cross site scripting (XSS) vulnerability in attached files.
4, via a cross site scripting (XSS) vulnerability in linked issue keys.
4, via a Cross-site request forgery (CSRF) vulnerability.
2," via the """"newname"""" parameter."
2, via the statut parameter.
2, via the country_id parameter.
2, via the statut_buy parameter.
2, via the status_batch parameter.
2, via the SSH username variable.
2, via the back_url parameter in the file scan component.
2, via the /FlexiCapture12/Login/Server/SevaUserProfile FlexiCaptureTmsSts2 parameter.
2, via the mask
4, via Apple-Text
2," via the """"/xml/system/control.xml"""" URL"
2," via the """"/xml/menu/getObjectEditor.xml"""" URL"
2," via the """"/xml/system/control.xml"""" URL"
2," via the """"/xml/system/setAttribute.xml"""" URL"
2, via specially crafted HTTP requests.
4, via a crafted ELF file because of missing input validation in r_bin_dwarf_parse_comp_unit in libr/bin/dwarf.c.
4, via a crafted Mini Crash Dump file.
4, via a crafted .class file because of missing input validation in r_bin_java_line_number_table_attr_new.
1," by leveraging validation of the X-pimcore-csrf-token anti-CSRF token only in the """"Settings > Users / Roles"""" function."
1, via crafted JSON data.
4, via a direct request to /Maintenance/configfile.cfg.
4," via the /ConfigWizard/ChangePwd.esp?2admin URL (Attackers can login using the """"admin"""" username with password """"admin"""" after a successful attack)."
4, via /Status/SystemStatusRpm.esp.
4, via a direct POST request for the inc/user.ini file
2, via the shared memory IPC
2, via the shared memory IPC
2, via the shared memory IPC
4, via a direct request for /dashboard/addplan
4, via a symlink to a fake database file.
4, via a series of packets with random MAC addresses.
4, via backquote characters
5, via backquote characters
4, via a .txt?.php#.jpg URI in the SRC attribute of an IMG element within info[content] JSON data to the index.php?m=member&c=index&a=register URI.
4, via a doaddsave action to admin/index.php
5, by visiting /details/index.php. This can also be exploited through CSRF.
4, via a crafted MP4 file.
4, via a crafted dwg file.
2, via the group name.
4, via a crafted 8-bit BMP in which one or more of the color indices is out of range for the number of palette entries.
2, via the 'answer' and 'answers' parameters.
2, via the sid parameter.
0," via the form[nickname] parameter to the index.php?m=core&f=set&v=sendmail URI. When the administrator accesses the """"system settings - mail server"""" screen"
2, via the form[content] parameter to the index.php?m=feedback&f=index&v=contact URI.
2, via the index.php?m=promote&f=index&v=search keywords parameter.
1, via escape from a restricted CLI
4, via a specific function call sequence. Only affects PHP when linked with an external libgd (not bundled).
4, via a profile avatar field
4, by decompiling a compiled .NET object (such as a DLL or EXE file) with a specific embedded resource file.
4, via a checkcode (aka verification code) URI in which the values of font_size
2, via physical console to escalate their privileges and run arbitrary code under root privileges.
4, via a crafted index.php?s=Admin-Tpl-ADD-id request
2," via the """"name"""" URL parameter."
2, via the username URL parameter.
2," via the """"username"""" URL parameter."
2," via the """"username"""" URL parameter."
2," via the """"name"""" URL parameter."
2," via the """"username"""" URL parameter."
4, via a malformed URL path.
2, via the payload in a POST request.
4,upload files to
2," via the """"hook"""" URL parameter."
2," via the """"hook"""" URL parameter."
2," via the """"hook"""" URL parameter."
2," via the """"load_script"""" URL parameter."
1, by leveraging failure to block the slf4j-ext class from polymorphic deserialization.
3, by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.
1, by leveraging failure to block unspecified JDK classes from polymorphic deserialization.
3, by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.
2, via the ONVIF interface
4, via eventscript.cgi.
4, via a crafted /admin.php?s=Tpl/Add/id/ URI.
4, via a template file containing PHP code
0, by being the first party to use the secure token.
4, via a crafted RPC request.
5, via RPC.
4, via a crafted attachment.
0, by making an RPC call before garbage collection occurs.
4, via a crafted RPC call.
4, by decompiling a compiled .NET object (such as a DLL or EXE file) with a specific file
4, via a crafted request.
1, via crafted HTTP forms.
2, via the web application API.
5, by visiting adm1n/admin_ip.php or data/admin/ip.php. This can also be exploited through CSRF.
2, via the (1) first name or (2) last name field in the edit profile page.
4, via video playback.
2, via the /contingency/servlet/ServletFileDownload file parameter
2, via large font_size
4, via a direct request for the /webapp.py URI.
4, via ADB by modifying read-only system properties at runtime. Specifically
0, by modifying the URL requests sent to the application.
5, by uploading a file with a PHP extension via the images upload form and accessing it in the images directory.
2," via the """"docid"""" parameter when the mode is set to get."
2," via the """"docid"""" parameter when the mode is set to delete."
5," by writing a file with a PHP extension via the """"docid"""" and """"content"""" parameters and accessing it in the traversed directory."
2, via the (1) catid or (2) providerid parameter.
3, via the search_term parameter.
2, via the (1) eid
2, via the 'search_term' parameter.
2, via the 'id' parameter.
2, via the 'text' parameter.
2, via the 'encounter' parameter.
2, via the 'temporary_files_dir' variable in interface/super/edit_globals.php.
2, via the 'search_term' parameter.
3," by making a crafted request to interface/main/daemon_frame.php after modifying the """"hylafax_server"""" global variable in interface/super/edit_globals.php."
4," by making a crafted request to interface/billing/sl_eob_search.php after modifying the """"print_command"""" global variable in interface/super/edit_globals.php."
5," by making a crafted request to interface/fax/fax_dispatch.php after modifying the """"hylafax_enscript"""" global variable in interface/super/edit_globals.php."
3," by making a crafted request to interface/fax/faxq.php after modifying the """"hylafax_server"""" global variable in interface/super/edit_globals.php."
4, via a crafted clfs file. NOTE: the vendor has disputed this as described in the GitHub issue comments.
4, via a crafted esedb file. NOTE: the vendor has disputed this as described in the GitHub issue comments.
4, via a crafted esedb file. NOTE: the vendor has disputed this as described in the GitHub issue comments.
4, via a crafted esedb file. NOTE: the vendor has disputed this as described in the GitHub issue comments.
4, via a crafted esedb file. NOTE: the vendor has disputed this as described in the GitHub issue comments.
2, via the /deleteMO.do method parameter.
4, via a crafted ICO file.
4, via a crafted RLE file.
4, via a crafted RLE file.
2, via an initial /\ substring in the user/login redirect_to parameter
2, via an XSS payload in the SSID name and Security Key fields.
1," via crafted PHP and JavaScript code in the """"Current Position"""" field."
1, via crafted JavaScript code in the Name field of a profile.
1, via crafted JavaScript code in the First Name
4, via a crafted issue / link.
4, via a crafted TIFF file
4, via a direct request or forced browsing to a page other than URL intended. IBM X-Force ID: 142561.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
3, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
3, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or an email attachment and persuading the user to open the file by using the affected software. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
2, by gaining local access to a system running Microsoft Windows and protected by Cisco Immunet or Cisco AMP for Endpoints and executing a malicious file. A successful exploit could allow the attacker to prevent the scanning services from functioning properly and ultimately prevent the system from being protected from further intrusion.
4," via a value that is mishandled in a CSV export.  NOTE: the vendor has stated """"this is not a security problem in DokuWiki."""""
5, by adding a LocalCommand to the SSH configuration file in the user home folder.
2, via https requests for predictable URLs.
3, via opening a connection on port 8083 to a device running the Five9 SoftPhone(issue 1 of 2).
1, by leveraging access to a read-only auditor role.
4, via port 8000
1, via crafted HTTP requests.
2, via the popup title parameter.
2, via the popup title parameter.
0, via fields in the Conference Scheduler Service that could affect other application users. Affected versions of IP Office include 10.0 through 10.1 SP3 and 11.0 versions prior to 11.0 SP1.
4, via a crafted request.
1, via crafted payloads
4," use its functionality. The handler can be invoked using any method that invokes the URL handler such as a hyperlink in an email. The user is not prompted when the handler processes the """"send"""" command"
5,"send arbitrary emails from an active account. URL parameters for the """"send"""" command with the """"attachment_"""" prefix designate attachment parameters. If the value of an attachment parameter corresponds to"
4, via NotifyAccess. This can be used to improperly influence systemd execution and possibly lead to root privilege escalation. Affected releases are systemd versions up to and including 239.
4,upload files to
4, via user.cgi.
1, by providing the full path. For example
2, use this vulnerability to remotely execute arbitrary code.
4, via a crafted HTTP request.
4, via a crafted HTTP request.
4, via Autodiscover_new.php.
2, use the new API key to execute API calls at elevated privileges.
1, by leveraging mishandling of the seccomp policy for threads other than the main thread.
4, via salt-api(netapi).
3, by using a man-in-the-middle (MITM) attack.
1, via fragmented packets
4, via a flood of random MAC addresses
2, via the wcr_machineid cookie.
2, via the hostname field in a DHCP request.
2, via the description field in an AddPortMapping UPnP SOAP request.
1, via crafted JavaScript code in the First Name
0, by leveraging the Import feature and modifying a CSV file.
4, via a flood of random MAC addresses
2, via the language parameter to session/language.
2, via the startdate or enddate parameter to leaves/validate.
4, via DHCP.
4, via a direct request to the /web URI.
4, via a crafted file.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted video file.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
2," via the """"username"""" GET parameter."
4," via shell metacharacters in the """"dbName"""" POST parameter."
4," via shell metachracters in the """"X-Forwarded-for"""" HTTP header."
4, via a malicious MediaServer request to /userRpm/MediaServerFoldersCfgRpm.htm.
2," via the """"payload"""" URL parameter."
4, via a ZIP bomb.
5, via a crafted web site.
2, via the db or action parameter to to bin/wxis.exe/bibliopac/.
4, via a crafted .fig file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via Single sign-on function.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via New Page modal.
5, via unspecified vectors.
4, via unspecified vectors.
3, via command injection.
3, by providing a crafted link to the victim.
4, via a POST request.
1, by manipulating the phone book entries or manipulating the domain name sent to the device from the domain controller.
4, via a specifically crafted TCP request to port 12345 and 22306
2, via an unspecified sequence of FTP commands.
2, via the diy/module/member/controllers/Api.php ajax_save_draft function with the dir parameter.
2, via the caname parameter to the /xml/net_WebCADELETEGetValue URI.
4, via a crafted x:xmpmeta structure
4, via a flood of random MAC addresses
2, via the Team Name field.
4, via a crafted TIFF file
4, via a crafted image file
4, use of $GLOBALS.
2, via directory traversal sequences in the flv parameter. This can be leveraged for database access by deleting install.lock.
4, via a crafted pdf file
4, via a crafted pdf file
3, by uploading a .php filename with the image/jpeg content type.
4, via a SetNetworkTomographySettings request by leveraging admin access.
2, via directory traversal sequences in the bakfiles parameter. This can allow the product to be reinstalled by deleting install_lock.txt.
2, via an inverted comma.
0, via arguments to the range options.
1, by appending slashes in the URL path.
1, by appending slashes to the URL request.
1, by appending slashes in the URL.
1, by leveraging improper transaction and event signature validation.
3, via file impersonation. For example
2," by skipping the """"Cancel"""" step"
4, via a malicious JPEG file
2, via the Orgs name field.
0, by inserting their name into a string that is executed in a shell command. By inserting metacharacters this can be exploited to run arbitrary commands as root. The requests also match those of the HTTP protocol and can be triggered on any web page rendered on the device by requesting resources stored at an http://127.0.0.1:1668/ URI
2, via the (1) discription or (2) comments field
4, via a crafted image file due to an out-of-bounds write.
4, via a modified HTTP request.
4, via a direct HTTP request to /qsr_server/device/reboot on port 9080.
4," via HTTP requests on port 8081. NOTE: the vendor disputes the significance of this report because their documentation states that with """"blind port forwarding ... Putting OctoPrint onto the public internet is a terrible idea"
2, via the query parameter (aka the Search Field).
5, via a progressive JPEG file that lacks an AC Huffman table.
4, via a .wav file with large BytesPerSec and SamplesPerSec values
4, via a file:./../ substring in an include statement.
4, via a Flash file because views/lib/AntiCSRF.py can overwrite the request.host value with the content of the X-Forwarded-Host HTTP header.
4, via a series of packets with random MAC addresses
4, via /portal/server.pt/user/user/ requests. When WCI is synchronised with Active Directory (AD)
4, via a modified id parameter.
5, via a modified id parameter.
4, via a crafted .ocd file.
4, via a malformed packet that triggers a buffer overflow.
4," via a single """"GET / HTTP/1.1\r\n"""" line."
2, via the appGet.cgi hook parameter.
5," by setting a long sh_path0 value and then sending an appGet.cgi?hook=select_list(""""Storage_x_SharedPath"""") request"
4, via a request to start_apply.htm.
1, via vectors related to login request parameters
1, via vectors related to login request parameters
4, via unspecified vectors.
4, via a malicious JPEG file
4, via a direct request for files/temporary.txt.
4, by intercepting a security-question response during the initial configuration of the application.
4, via a request that lacks a timestap parameter.
2, via the varvalue field.
2, via the attrvalue[] array parameter.
2, via the rewrite url setting.
2, via the cfg_author field in conjunction with a crafted cfg_webpath field.
4, via a dial-in session that provides a FAX page with the JPEG bit enabled
4, via a crafted DTD in an XML request.
2, via the sourceUri parameter to qsr_server/device/getThumbnail.
4, via malformed data.
4, via shell metacharacters in an includeHosts call.
4, via a crafted image file.
4, via a crafted image file.
5," via an """"Edit color palette"""" search that triggers an """"index out of range"""" condition. NOTE: this issue is disputed by multiple third parties because the described attack scenario does not cross a privilege boundary."
2, via the text parameter to cursor.execute().
4, via a crafted HDF5 file.
2, via the Header Name of a content (Blog
1, via crafted XML inside an imported package configuration (.ZIP file) within the Kofax/KFS/Admin/PackageService/package/upload file parameter.
2, via directory traversal sequences in a filename within a ZIP archive.
4, via shell metacharacters in the io_mode
2, via the area parameter.
2, via the PATH_INFO to index.php because $_SERVER['PHP_SELF'] is mishandled.
2, via the accBackupDir parameter.
2, via the filedir parameter.
0, by intercepting the user name and PIN during the initial configuration of the application.  NOTE: the vendor says that
1, by exploiting its Forgot Password feature.  NOTE: the vendor says that
4, via a crafted CSV file that is accessed through the Import CSV File menu.
4, via a mixed-case file extension
4, via a crafted URL.
4, via a crafted HDF5 file.
4, via a crafted HDF5 file. This issue was triggered while converting a GIF file to an HDF file.
4, via a crafted HDF5 file. This issue was triggered while converting an HDF file to GIF file.
4, via a crafted HDF5 file. This issue was triggered while converting a GIF file to an HDF file.
4, via a crafted HDF5 file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
2, via an autonomous system (AS) path containing 8 or more autonomous system number (ASN) elements.
0, via the select_mid parameter in an letgo.cgi request.
2, via the navigate-user cookie.
4, via a POST request with engine=picnik and id=../../../navigate_info.php.
2, via the /snmpGet oids parameter.
3, by triggering a buffer overflow in the parsing of command line arguments passed to nsd.exe. IBM X-force ID: 148687.
5, via a crafted TIFF file
2, via directory traversal sequences in the oldimg parameter in an action=modify request. This can be leveraged for database access by deleting install.lock.
2, via an absolute pathname in the oldimg parameter in an action=modify request. This can be leveraged for database access by deleting install.lock.
2, use that account to execute arbitrary PHP code by leveraging app/common/model/AdminAnnex.php to add .php to the default list of allowable file-upload types (.jpg
3, by editing a plugin's name to contain that code. This name is then injected into app/admin/model/AdminPlugins.php.
4, via a .. (dot dot) in a zip file
5, by using a /console/file/manage.php?type=action&action=addfile&path=..%2F substring to upload
0, via the wsdlLib parameter to /ctcprotocol/Protocol. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
0, via the sys_jdbc parameter to /TestJDBC_Web/test2. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
0, via the wsdlPath parameter to /ctcprotocol/Protocol. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
2," via the """"Primary button Text"""" or """"Second button text"""" field."
5, via shell metacharacters in the cgi-bin/adv_nat_virsvr.asp Addr parameter (aka the Local IP Address field).
4, via unspecified vectors.
0,send a specially crafted request to
0,construct a pathname that is able to
1, via vectors involving errorhandler setup. NOTE: this issue exists because of an incomplete fix for CVE-2018-17183.
4, via iso.3.6.1.4.1.236.11.5.11.81.10.1.5.0 and iso.3.6.1.4.1.236.11.5.11.81.10.1.6.0 SNMP requests.
4, via a Trojan horse wintab32.dll file located in the same directory as a .nxs file
2, via the ScrIPaddrEndTXT parameter.
4, via a URL parameter.
4, via a URL query string parameter.
1, by making requests to private services listening on ports 8000
4, via inter-processor debugging. With a debug host processor A running in non-secure EL1 and a debug target processor B running in any privilege level
1, by leveraging exposure of system operators in the saved execution stack in an error object.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
4, via a direct request for /WebContent/startup.tar.gz with userName=admin in a cookie.
4, use XStream's available protection mechanisms to restrict unmarshalling.
2, via an HTTP Referer Header.
4,send information to
4, use Dashboard's Service Account for reading secrets within the cluster.
0, via vectors involving the 1Policy operator.
4, via Advanced_ASUSDDNS_Content.asp
4, via a crafted 0xc0d8b300 ioctl call.
1, via crafted JavaScript code on vulnerable installations.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted WPAD file.
4, via a crafted HTML page.
5, by sending a carefully crafted payload to TCP port 2222.
2," via the """"id"""" parameter."
0, by placing this code in a crafted User-agent Disallow value in the robots.php txt parameter.
4, via a crafted pdf file
4, via a crafted pdf file
4, via a crafted pdf file
5, via a crafted pdf file
4, via a crafted pdf file
4, via a crafted pdf file
1, via PHP code in attachments[] data to models/attachment.php.
2, via the dashboard_name parameter in the /ajax_form.php resource
2, via directory traversal sequences in the dbname parameter. This can be leveraged to reload the product by deleting install.lock.
0, by modifying the packet size to be higher than the UI limit of 1472.
4," via a Trojan horse """"%PROGRAMFILES%\BFK 5.2.9\syscrb.exe"""" file because of insecure permissions for the BUILTIN\Users group."
0, by creating an LNK file that points to a second LNK file
1, by leveraging use with an on-premise installation with Skype for Business.
1, by leveraging failure to validate X.509 certificates when used with an on-premise installation with Skype for Business.
1, by leveraging failure to validate X.509 certificates when used with an on-premise installation with Skype for Business.
2, via the views/admin/dashboard/ URI.
4, via shell metacharacters in the ntp field within JSON data to the /robot/initialize endpoint.
5, via a crafted /Size value in a pdf file
0, via a specific pdf file
2," via the """"homepage title"""" parameter"
3," via the """"board title contents"""" parameter"
2," via the """"Extra Contents"""" parameter"
2," via the """"mobile board head contents"""" parameter"
2," via the """"board head contents"""" parameter"
2," via the """"Menu Link"""" parameter"
2," via the """"board tail contents"""" parameter"
2," via the """"mobile board title contents"""" parameter"
2," via the """"mobile board tail contents"""" parameter"
2," via the """"board group extra contents"""" parameter"
2, via the username parameter to the Login Form.
0, via JavaScript content in a file whose name lacks an extension. Such a file is interpreted as text/html in certain cases.
2, via directory traversal
1, via directory traversal in an m=database&c=down_sql&name=../ URI.
4, via base64-encoded serialized data
2, via the Leostream Agent API.
4, via a template file.
4, via ..%2F directory traversal in a .php filename in the upload/e/admin/ecmscom.php path parameter.
2," via the """"Upload File or Image"""" feature"
4, via an action/add_user.php POST request.
3," by uploading a .shtml file with """"#exec cmd"""" because rejected files remain on the server"
4," via a U3D sample because of a """"Read Access Violation near NULL starting at FoxitReader!safe_vsnprintf+0x00000000002c4330"""" issue."
2, via directory traversal in the po-admin/route.php?mod=library&act=delete id parameter.
1, via crafted input to the SMTP parser
3, by leveraging Editor or Admin permissions.
3," by specifying a .php filename in a """"SET GLOBAL general_log_file"""" statement"
4, via a negative integer in the RTSP Content-Length header.
2, via the IPv4Address field.
2, via the IPv4Address field.
4, via a crafted file.
5, by visiting tianti-module-admin/cms/column/list directly to read the column list page or edit a column.
5, by visiting tianti-module-admin/user/skin/list directly because controller\usercontroller.java maps a /skin/list request to the function skinList
0, by uploading an image file with contents that represent an admin session
2, via the 'Domain Name' field when adding a new domain.
4, via a file upload.
4, via a modified URL because user and customer preferences are mishandled.
4, via a modified URL.
5, via a crafted mod_name parameter in a POST request. NOTE: unlike in CVE-2018-17317
2, by placing this code in the index.php?s=index/install/setup2 DB_PREFIX field
4," via a """"code: Buffer.from(my_code"
1, via crafted bytecode.
0, by using the type parameter to bypass the standard admin\controller\uploadfile.php restrictions on uploaded file types (jpg
2, via the 'username' parameter.
2, via the 'upsetting[bburl]' parameter.
4, via a special HTTP request.
2, via the host parameter to the install/ URI.
4, via a direct request for the /data/0/admin.txt URI.
0, by reading the user name and encrypted password hard-coded in an Inventory Agent configuration file.
1, via vectors related to missing update validation.
4, by crafting a POST request payload (with authentication).
5, by replaying api.stripe.com /v1/tokens XMLHttpRequest data
1, via crafted XML data in a request body.
4, via a specially crafted DNS SRV or NAPTR response
0, by crashing the Common Industrial Protocol (CIP) network stack. The vulnerability allows the attacker to crash the CIP in a way that it does not accept new connections
2, via the includes/Admin/Menus/Submissions.php (aka submissions page) begin_date
5, by modifying a base64-encoded pathname in an m=admin&c=media&a=delfilehandle&id= call
3, via vectors involving IPC_RMID shmctl calls
4," via a U3D sample because of a """"Read Access Violation near NULL starting at FoxitReader!std::basic_ostream >::operator<<+0x0000000000087906"""" issue."
4," via a U3D sample because of a """"Read Access Violation starting at U3DBrowser+0x000000000000347a"""" issue."
4," via a U3D sample because of a """"Data from Faulting Address may be used as a return value starting at U3DBrowser!PlugInMain+0x0000000000031a75"""" issue."
4," via a U3D sample because of a """"Read Access Violation near NULL starting at U3DBrowser!PlugInMain+0x0000000000053f8b"""" issue."
4," via a U3D sample because of a """"Data from Faulting Address controls Branch Selection starting at U3DBrowser!PlugInMain+0x00000000000d11ea"""" issue."
4," via a U3D sample because of a """"Data from Faulting Address controls Branch Selection starting at U3DBrowser!PlugInMain+0x00000000000d11bb"""" issue."
4," via a U3D sample because of a """"Data from Faulting Address controls Branch Selection starting at U3DBrowser!PlugInMain+0x000000000012dff5"""" issue."
4, via a crafted file.
3, by uploading a php file via modules/orderfiles/upload.php with auptype equal to product (for upload destinations under modules/productfiles)
4, via a crafted http:// URL in a .m3u file.
4, via a Secret Service API call and the D-Bus interface if the keyring is unlocked
1, by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.
1, by leveraging failure to block the openjpa class from polymorphic deserialization.
1, by leveraging failure to block the jboss-common-core class from polymorphic deserialization.
4, via a ZIP import.
3, by placing a Trojan horse file into the permissive bin directory.
2, via the index.php?m=admin&c=data&a=clear URI.
1, via BMP data because of a ConvertToPDF_x86!ConnectedPDF::ConnectedPDFSDK::FCP_SendEmailNotification issue.
1, via TIFF data because of a ConvertToPDF_x86!ConnectedPDF::ConnectedPDFSDK::FCP_SendEmailNotification issue.
0, via multiple attack vectors depending on the device's configuration. Further analysis also indicated this vulnerability could be leveraged to achieve a Denial of Service (DoS) condition
4, via an unserialize call for the com
1, via crafted system calls that reach a situation where the apic map is uninitialized.
1, via crafted system calls that reach a situation where ioapic is uninitialized.
2, via an HTTP request because /api/addusers doesn't check
2, use this information in subsequent attacks against the system.
2, via the (1) keyword parameter to groups.php; (2) username parameter to login.php; or (3) date parameter to search.php.
2, via the (1) id parameter to join_group.php or (2) comment_id parameter to story.php.
4, via a .pht or .phar file
0, by uploading an executable file.
4, via a crafted POST request to a vendors/neato/robots/[robot_serial]/messages Neato cloud URI on the nucleo.neatocloud.com web site (port 4443).
0, via SQL injection that uses a .php filename in a SELECT INTO OUTFILE statement to admin/admin.php.
1," by using the image/jpeg content type in an upload to the zb_system/admin/index.php?act=UploadMng URI. NOTE: The vendor's position is """"We have no dynamic including. No one can run PHP by uploading an image in current version."""" It also requires authentication."
1, via crafted DNS packets to port 53/udp.
4," via a """"Login Background > Program Upgrade > Compressed Packet Upgrade"""" action in which a .php file is inside a ZIP archive."
3, by mishandling of data by the application based on an incorrect return by the httpServletRequest#authenticate() API when an unprotected URI is accessed. IBM X-Force ID: 153629.
3," via use of """"eval"""" with mixed case"
4, via a crafted file.
2, by navigating with a modified page_id
2, by navigating with a modified page_id.
4, via a TCP connection.
1, via Directory Traversal by leveraging full access to the associated OSSEC server.
5, by uploading a .php file with the image/jpeg content type.
2, via the (1) c parameter or (2) a parameter.
3, by creating a symlink through which the openlitespeed program can be invoked with a long command name (involving ../ characters)
2, via the crontab/task/edit?addr=localhost%3a20001 command and args parameters
2, via the code parameter.
3, via the lib/StepProcessing/step-processing.php (aka submissions download page) redirect parameter.
4, via a crafted wav audio file because WavpackSetConfiguration64 mishandles a sample rate of zero.
4, via a crafted WavPack Lossless Audio file
1, via crafted x86 assembly data
1, via crafted x86 assembly data
5, via a long HTTP HEAD request.  NOTE: this product is discontinued.
4, via a long HTTP POST request.  NOTE: this product is discontinued.
0, by inserting arbitrary HTML into the 'TodUrlAdd' URL parameter in a /urlfilter.cmd POST request.
2, via an empty string in the message argument to the imap_mail function.
4, via a POST request (ManufacturerName parameter) to the web server on the device. The web server is running with root privileges and the injected code will also run with root privileges.
4, via a crafted application that sends data to WifiService.
2, via specially crafted PVA file has to be provided as input. This vulnerability appears to have been fixed in 9807d3976be0e92e4ece3b4b1701be894cd7c2e1 and later.
2, via specially crafted RM file has to be provided as input. This vulnerability appears to have been fixed in a7e032a277452366771951e29fd0bf2bd5c029f0 and later.
0, by sending crafted HTTP requests to an unprotected endpoint.
2," via the """"address"""" (POST) or """"town"""" (POST) parameter to adherents/type.php."
2, via the transphrase parameter to public/notice.php.
4, via the desiredstock parameter.
2," via the """"address"""" (POST) or """"town"""" (POST) parameter to user/card.php."
2, via the employee parameter.
5,send a combination of messages to
5,send a combination of messages to
3, by allocating / deallocating memory
5,send a combination of messages to
2, via the ONVIF GetStreamUri method and GetVideoEncoderConfigurationOptions method.
2, via certain ONVIF methods such as CreateUsers
2, via the goform/formLanguageChange currTime parameter.
2, via the sysCmd POST parameter.
1, via crafted use of the filter parameter
1, via directory traversal
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted HTML page.
2, via the filesystem.
1, uses an unencrypted access point for these credentials
4, via a PvrdmaSqWqe ring element with a large num_sge value.
4, via a mixed-case extension and an extra '.' character
5, via a backname[] directory-traversal pathname followed by a crafted substring.
4," via a double extension and a modified """".php"""" substring"
3,upload arbitrary files to
4, via Wi-Fi
2, by setting the User-Agent header in an HTTP(S) request to a value containing a long digit string. (The UAP-Core project contains the vulnerability
0, via the vgnextoid parameter to a menuitem URI.
3, by changing SSLContext and the boolean values while hooking the application. NOTE: This id is disputed because some parties don't consider this is a vulnerability. Their rationale can be found in https://github.com/square/okhttp/issues/4967.
5, by creating a %TEMP%\par-%username%\cache-exiftool-8.32 folder with a victim's username
4, via a long name. NOTE: this is not a Microsoft product.
0, via the tfa_enable_tfa parameter due to missing nonce validation.
4, via a cross site scripting (XSS) vulnerability in the rendering of retrieved content from a url location that could be manipulated by the up_projectid widget preference setting.
2, via the word export feature.
2, via an insufficient session expiration vulnerability.
4, via a cross site scripting (XSS) vulnerability in the href parameter.
4, via a cross site scripting (XSS) vulnerability in the wbuser parameter.
0, via the ftemp parameter in an enews=EditMemberForm action because this code is injected into a memberform.$fid.php file.
5, via a long second argument. NOTE: this is not a Microsoft product.
4, via a crafted website and steal sensitive data and credentials. Affected releases are Pulse Secure Virtual Traffic Manager 9.9 versions prior to 9.9r2 and 10.4r1.
0, by leveraging incorrect permission validation.
1," by utilizing the /v1/keys """"?scope=all"""" and """"?user=<username>"""" query filter parameters. Enterprise editions with RBAC enabled are not affected."
4, via a crafted file
4, via a crafted object.
4, via /get_getnetworkconf.cgi on port 8080
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
4, via iso.3.6.1.4.1.4491.2.4.1.1.6.1.1.0 and iso.3.6.1.4.1.4491.2.4.1.1.6.1.2.0 SNMP requests.
0, by rewriting the length of a dynamic array in memory
1, by using the $_POST['community'] parameter to html/pages/addhost.inc.php during creation of a new device
4, via iso.3.6.1.4.1.2863.205.10.1.30.4.1.14.1.3.32 and iso.3.6.1.4.1.2863.205.10.1.30.4.2.4.1.2.32 SNMP requests.
4, via iso.3.6.1.4.1.4413.2.2.2.1.5.4.1.14.1.3.10001 and 1.3.6.1.4.1.4413.2.2.2.1.18.1.2.3.4.1.2.10001 SNMP requests.
4, via iso.3.6.1.4.1.4413.2.2.2.1.5.4.1.14.1.3.10001 and 1.3.6.1.4.1.4413.2.2.2.1.18.1.2.3.4.1.2.10001 SNMP requests.
4, via iso.3.6.1.4.1.2863.205.10.1.30.4.1.14.1.3.32 and iso.3.6.1.4.1.2863.205.10.1.30.4.2.4.1.2.32 SNMP requests.
4, via iso.3.6.1.4.1.2863.205.10.1.30.4.1.14.1.3.32 and iso.3.6.1.4.1.2863.205.10.1.30.4.2.4.1.2.32 SNMP requests.
4, via iso.3.6.1.4.1.4413.2.2.2.1.5.4.1.14.1.3.10001 and 1.3.6.1.4.1.4413.2.2.2.1.18.1.2.3.4.1.2.10001 SNMP requests.
4, via iso.3.6.1.4.1.4413.2.2.2.1.5.4.1.14.1.3.10001 and 1.3.6.1.4.1.4413.2.2.2.1.18.1.2.3.4.1.2.10001 SNMP requests.
5, via iso.3.6.1.4.1.4413.2.2.2.1.5.4.1.14.1.3.32 and iso.3.6.1.4.1.4413.2.2.2.1.5.4.2.4.1.2.32 SNMP requests.
3," by reading """"callback="""" lines in a debugfs file."
4, via a crafted file
4, via a crafted file.
4, via a crafted file
4, via a crafted file.
2, via the jsmol.php data parameter.
4, via server-side template injection
3," by reading """" ref *desc *node"""" lines in a debugfs file."
3," by reading """"*from *code *flags"""" lines in a debugfs file."
3, by leveraging CAP_NET_ADMIN to read the ipddp_route dev and next fields via an SIOCFINDIPDDPRT ioctl call.
3, by changing a job-search intention
2, via the booking_id parameter.
4, via a crafted admin.php?s=Tpl/Add/id request
4, via a crafted YAML file.
4, via a crafted YAML file.
4, via a crafted request parameter in a WSDL file.
4, via a newline character (e.g.
2, via an attempted conversion to the jp2 format.
0, by entering this code during an index.php sadmin_fileedit action.
5, by using root/run/adm.php to modify the boot/bootskip.php file.
2, via the root/tools/adbug/binfo.php URI.
2, via the root/tools/adbug/binfo.php?phpinfo1 URI.
2, via the root/tools/adbug/check.php URI.
2, via the public/install/#/step3 URI.
1, via JavaScript code in the First Name field.
1, via crafted JavaScript code in the First Name and Last Name field.
1, via crafted JavaScript code in the KeySkills field.
4, via a crafted XRMD command.
4, via HDMI
4, via a crafted DTD in an XML request.
4, via a large integer in a --cpuset-mems or --cpuset-cpus value
2, via the flt parameter to Nodes-Traffic.php
4, via User-Management.php.
0, via the reg parameter in mh.php.
2, via the query.php component.
4, via User-Chat.php.
4, via a Java deserialization variant.
2, via path traversal with the path parameter
2, via path traversal with the path parameter
2, via path traversal with the path parameter
3, by crafting a jpg image file. The root cause is a missing check of header payloads that may be (incorrectly) larger than the maximum file size.
4, via a crafted file.
4, via a 20.4 kHz audio signal
4, via a cross site scripting (XSS) vulnerability in the cyclePeriod parameter.
4, via a missing authorisation check.
4, via a cross site scripting (XSS) vulnerability in the country parameter.
4, via mailing-list attachments (SEC-452).
2, via the Fileman::viewfile API (SEC-444).
0, by leveraging ClamAV installation (SEC-408).
4, via awstats (SEC-362).
2, via the WHM /cgi/trustclustermaster.cgi (SEC-364).
2, via the Landing Page (SEC-405).
4, via exim.conf (SEC-308).
1, by leveraging backups (SEC-339).
4," via a crafted file. There is """"cfg_new->AVCLevelIndication = cfg->AVCLevelIndication;"""" but cfg could be NULL."
4, via a crafted file.
4, via components/api.py.
2, via the host_id parameter.
2, via the host_id parameter.
2, via the ns_id parameter.
4, via a POST request.
2, via the panel/members/edit/1 URI.
2, via the Group message slash command.
2, via the Channel header slash command API.
2, via the invite_people slash command.
2, via invalid LaTeX text.
3, use cases
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle WebCenter Sites. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Workbench. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Hospitality Guest Access. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality Guest Access. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Hyperion Data Relationship Management. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise OSS Support Tools. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality Cruise Shipboard Property Management System. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Siebel Engineering - Installer and Deployment. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise SCM Purchasing. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality Cruise Fleet Management. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise PeopleSoft Enterprise FSCM. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Banking Payments. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Banking Corporate Lending. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Business Intelligence Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle HTTP Server. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Hospitality Suite8. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality Simphony First Edition. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality Simphony First Edition. Successful attacks of this vulnerability can result in unauthorized access to
1,compromise Sun ZFS Storage Appliance Kit (AK). Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Application Object Library. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise MICROS Retail-J. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise MICROS Retail-J. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Sun ZFS Storage Appliance Kit (AK). Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Hardware Management Pack. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Sun ZFS Storage Appliance Kit (AK). Successful attacks of this vulnerability can result in unauthorized ability to
0,compromise Sun ZFS Storage Appliance Kit (AK). Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Sun ZFS Storage Appliance Kit (AK). Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Oracle SuperCluster Specific Software. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise JD Edwards EnterpriseOne Tools. Successful attacks of this vulnerability can result in unauthorized access to
1,compromise JD Edwards EnterpriseOne Tools. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality OPERA 5 Property Services. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality OPERA 5 Property Services. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Primavera Unifier. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized read access to
1, by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets
2,compromise Enterprise Manager Ops Center. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2,compromise Oracle Hospitality OPERA 5 Property Services. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Hospitality OPERA 5 Property Services. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Agile Product Lifecycle Management for Process. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise PeopleSoft HRMS. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise CS Financial Aid. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise Oracle Fusion Middleware. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Fusion Middleware MapViewer. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Retail Xstore Office. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise Oracle GlassFish Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality Cruise Fleet Management. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality Cruise Fleet Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Hyperion BI+. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle GlassFish Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Outside In Technology. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Outside In Technology. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle WebLogic Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle WebCenter Portal. Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
0,compromise Solaris. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
3,compromise Oracle Retail Xstore Payment. Successful attacks of this vulnerability can result in unauthorized access to
1,compromise Oracle Retail Customer Management and Segmentation Foundation. Successful attacks of this vulnerability can result in unauthorized access to
4, via local access.
4, via a side-channel analysis.
2, via the network.
4, via physical access.
4, via a terminal page fault and a side-channel analysis.
3, via adjacent access.
2, via local privileged access.
4, via local access.
4, via local access.
4, via a side-channel analysis
4, via a side-channel analysis
4, via a terminal page fault and a side-channel analysis.
4, via local vector.
4, via local access.
4, via network access.
3, via physical access.
4, via a non-paged pool overflow.
2, via the network.
4, via a buffer overflow.
4, via a system calls.
3, via administrator privileges.
4, via local access.
4, via a speculative buffer overflow and side-channel analysis.
4, via local access.
4, via local access.
4, via local access.
4, via remote access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
2, use the `which` npm module instead.
1," use prepared statements and did not sanitize the $_POST[""""oId""""] variable before passing it as input into the SQL query."
2," by using the """"Assets->Upload files"""" screen and then the """"Replace it"""" option"
3, by using a time trigger or by direct request. There is a bug in this functionality which leaves behind photos taken and shared on the secret chats
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
1, via crafted name constraints.
4, via a crafted app.
5, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted audio file.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
4, via a crafted text message.
4, via a crafted web site.
4, via a crafted web site.
5, via a crafted app.
2, via an unspecified injection.
2, via an unspecified injection.
4, via a crafted app.
2, by sending HTML e-mail that references remote resources but lacks a valid S/MIME signature.
1, by leveraging symlink mishandling.
0, by leveraging improper array indexing.
4, via a crafted web site.
1, by leveraging incorrect configuration-profile persistence.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted string containing a certain Telugu character.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted URL.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
2, by leveraging lack of a user-confirmation requirement.
4, via a crafted app.
4, via a crafted app.
4, via a Class 0 SMS message.
4, via a crafted app.
4, via a crafted string.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
5, via a crafted web site that leverages input into a partially loaded page.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted app.
0, by leveraging the display of cached data on a locked device.
4, by listing a process and its arguments during sysadminctl execution.
4, via a crafted app that leverages device properties.
3, via vectors involving a backup restore.
0, by leveraging an inconsistency in the user interface.
4, via a crafted app.
4, via a crafted URL in a text message.
4, via a crafted web site.
4, via a crafted web site that leverages a race condition.
4, via a crafted app.
4, via a crafted app.
4, via a crafted text file.
4, via a crafted web site.
4, via a crafted web site that triggers a WebCore::jsElementScrollHeightGetter use-after-free.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app that replaces a privileged port name.
4, via a crafted font file.
4, via a crafted web site.
4, via a crafted app.
5, via a crafted web site that triggers an @generatorState use-after-free.
4, via a crafted app that leverages type confusion.
0, by leveraging the transmission of S/MIME client certificates.
5, via a crafted web site that leverages a getWasmBufferFromValue out-of-bounds read during WebAssembly compilation.
4, via direct exfiltration.
4, via a crafted app that leverages a race condition.
1, by leveraging the misparsing of entitlement plists.
4, via a crafted app that triggers a SetAppSupportBits use-after-free because of a race condition.
4, via a crafted web site.
4, via a crafted web site.
4, via a crafted app.
2, via an unspecified injection.
4, via a crafted app.
4, via a crafted app that leverages a logic error.
4, via a crafted message.
4, via a crafted app.
4, via a crafted app.
4, via a crafted app.
4, via Siri.
5, via a crafted web site that leverages type confusion.
4, via a crafted web site.
4, via a crafted app.
4, via a crafted message.
4, via Siri.
4, via a crafted app.
1, by restricting options offered on a locked device. This issue affected versions prior to iOS 12.0.1.
1, by restricting options offered on a locked device. This issue affected versions prior to iOS 12.0.1.
0, via Reply With Message on a locked device. This issue was addressed with improved state management. This issue affected versions prior to iOS 12.1.
0, by restricting options offered on a locked device. This issue affected versions prior to iOS 12.1.
1, by restricting options offered on a locked device. This issue is fixed in iOS 12.1.1. A local attacker may be able to share items from the lock screen.
1, by deleting the HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\Sophos Endpoint Defense\ registry key.
4, via a crafted file.
0, by flipping pool buffer size
4, via a modified cookie
2, by setting the arguments to the activex method. this can be leveraged for code execution.
1, by setting the arguments to the activex method. this can be leveraged for code execution.
4, via a long argument to the (1) BottomText or (2) TopText property.
4, via a cross site scripting (XSS) vulnerability in the display url of a configured application link.
4, via a cross site scripting (XSS) vulnerability in the handling of response headers.
5, via a cross site scripting (XSS) vulnerability in the name of user submitted add-on names.
4, via a cross site scripting (XSS) vulnerability in the issuetype parameter.
2, via the PATH_INFO to admin/tools.
2, via the login form's username field (aka the login parameter to the ban_canLogin function in index.php).
4, via a malformed path attribute in an UPDATE message.
1, via crafted UDP packets.
4, via a modified aid parameter.
2, by reading the loginName lines at the js/userLogin.js URI. NOTE: default passwords for the standard usernames are listed in the product's documentation: Dealer with password seatel3
4, via a direct request to MenuDealerGx.html
4,send malicious code to
4," via (1) the repoId or (2) format parameter to service/siesta/healthcheck/healthCheckFileDetail/.../index.html; (3) the filename in the """"File Upload"""" functionality of the Staging Upload; (4) the username when creating a new user; or (5) the IQ Server URL field in the IQ Server Connection functionality."
4," via (1) the repoId or (2) format parameter to service/siesta/healthcheck/healthCheckFileDetail/.../index.html; (3) the filename in the """"File Upload"""" functionality of the Staging Upload; (4) the username when creating a new user; or (5) the IQ Server URL field in the IQ Server Connection functionality."
4, via a crafted HTTP request.
4, via a flood of fragmented UDP packets.
4, via spoofing. It does not authenticate the intended server before opening a browser window. An unauthenticated attacker capable of conducting a spoofing attack can redirect the browser to gain execution in the context of the WinLogon.exe process. If Network Level Authentication is not enforced
4, via spoofing. When the client is configured to use HTTP
2, via the archiver\index.php action parameter.
1, by leveraging improper memory address validation.
2, via the malicious user's email.
2, via the nb parameter (aka the page limit number).
3, by reading /var/log/magicspam/mslog.
2, via the command parameter.
4, via vectors involving TLS.
4, via a request that updates a setting. In ej_update_variables
4, via a crafted HTTP request
4, via a /cgi-bin/getSysStatus request
0, by supplying tagged data that is internal to the database module.
1," by supplying both a """"linkdn"""" and """"containerdn"""" database argument"
5, by sending a response containing a specially constructed options section. Affects ISC DHCP versions 4.1.0 -> 4.1-ESV-R15
2, use in DNSSEC validation. Due to an error in the managed-keys feature it is possible for a BIND server which uses managed-keys to exit due to an assertion failure if
0, via a large QEMU reply.
5, by reading dmesg data from an SBS HC printk call.
4, via a crafted presentation file
4, via unspecified vectors.
4, via a user-options URL.
5," by reading dmesg data from a """"software IO TLB"""" printk call."
3, by sending a large number of connect commands.
3," by reading dmesg data from a """"pages/cpu"""" printk call."
2, via the 'Add new weather data source' upload function.
2, via the directory parameter. This issue exists in core/admin/ajax/developer/extensions/file-browser.php.
4, via a read request. To exploit this issue
4, via a malicious artefact.
1, by sniffing network traffic.
1, by sniffing network traffic.
3, by leveraging failure to use encryption during information transmission.
3, by leveraging back-office access to provide a ..\ in the param.path parameter.
0, via Server Side Request Forgery (SSRF)
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page and user interaction.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via an executable file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page
4, via a crafted domain name.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
3, via IDN homographs via a crafted HTML page.
4, via a local non-HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted video file.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a local process.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted PDF file.
4, via a crafted Chrome Extension.
4, via IDN homographs via a crafted domain name.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
1," by impersonating all the pipes through a use of an """"insecurely created named pipe"""". Ensures full access to Everyone users group."
0, via the search parameter to wp-admin/upload.php.
4, via a crafted (a) web page
2, via the Modify Page screen
4, via a malicious artefact.
0," by impersonating all the pipes through a use of \.\pipe\PSANMSrvcPpal -- an """"insecurely created named pipe."""" Ensures full access to Everyone users group."
4, via a crafted web site
3, via the vendor/adodb/adodb-php/server.php sql parameter in a request to the 127.0.0.1 IP address. NOTE: the vendor disputes the significance of this report because server.php is intended to execute arbitrary SQL statements on behalf of authenticated users from 127.0.0.1
4, via a malicious program.exe executable in the %SYSTEMDRIVE% folder.
3, via shell metacharacters in the ping test arguments on the Diagnostics page.
4, via a crafted MP4 file.
0," by impersonating all the pipes through a use of \\.\pipe\WPSCloudSvr\WpsCloudSvr -- an """"insecurely created named pipe."""" Ensures full access to Everyone users group."
0,send a specially crafted message to
0, by injecting arbitrary HTTP headers
1, by leveraging lack of CSRF protection.
4, via a crafted RSASSA-PSS signature that lacks a mask generation function parameter.
2, via the flickrRSS_set parameter to wp-admin/options-general.php.
0, via the flickrRSS_id parameter to wp-admin/options-general.php.
0, via the flickrRSS_tags parameter to wp-admin/options-general.php.
4, by sending a crafted packet to TCP port 9124.
1, via crafted authority data in a URL.
2, via an invalid filter parameter
3, by sending a crafted packet to TCP port 9121.
3, via resource exhaustion
3, via an AF_IRDA socket.
4, via a JSONP hijacking attack.
3, via unspecified vectors.
3, by leveraging improper cleanup of memory used for negotiation key storage.
3, by connecting to the filter communication port and then using IOCTL 0x8000204C to \\.\ZemanaAntiMalware to elevate privileges.
5, via ADB. Modifying the read-only properties by an app as the system user creates a UNIX domain socket named factory_test that will execute commands as the root user by processes that have privilege to access it (as per the SELinux rules that the vendor controls).
5, by sending IOCTL 0x80002010 and then using IOCTL 0x8000204C to \\.\ZemanaAntiMalware to elevate privileges.
0, by leveraging cleartext password storage.
4, via a crafted AVI file.
4, via a direct request to the .html file for a specific screen
5," via an 'action: """"user""""' request to iframe.gr_-ifr"
2, via not verifying a particular DLL file signature.
4, via a crafted user input.
5, via a command-line utility.
2, via Java management extensions (JMX).
4, via a crafted HTTP request parameter.
4, via a specially crafted HTTP request.
3, via unspecified vectors.
2, via the system administrator granting McTray.exe elevated privileges (by default it runs with the current user's privileges).
4, via unspecified vectors.
4, via unspecified vectors.
1, via appliance web interface.
4, via a crafted web site.
4, via editing of local policy files when offline.
2, via specific set of circumstances.
2, via while scanning a specifically crafted file . GetSusp is a free standalone McAfee tool that runs on several versions of Microsoft Windows.
4, via a crafted HTTP post packet.
2, via specially crafted malware.
4, via a specially crafted HTTP header sent to the logging service.
2, via specially crafted malware.
2, via specially crafted malware.
2, via specially crafted malware.
4, via a maliciously crafted RF64 file.
4, via a URL in a notification
2, via multiple parameters to the /cvms-hub/privado/seccionesmib/secciones.xhtml resource. The POST parameters are j_idt118
4, via a crafted image file
5, via a crafted HTML document that triggers a redirect to an x-marked://preview?text= URL. The value of the text parameter can include arbitrary JavaScript code
2, via JavaScript code in the url parameter to the /api/proxy URI
4, via a direct request to zb_system/function/lib/upload.php.
4, via =WEBSERVICE calls in a document
2, via an array value for a parameter to class/connect.php.
2, via an array value for a parameter to admin/tool/ShowPic.php.
4, via a Content-Location header in an email attachment.
2, via the REST API.
2, via the REST API.
5, via a 127.0.0.1:port value in the HTTP 'Host' header
4, via a direct request for include/downmix.inc.php or inc/inc_archives_functions.php.
4, via a single argument (aka the command parameter).
4, via a crafted AVI file.
4, via a large item count.
3, by triggering a negative wake or requeue value.
4, via a maliciously crafted pict file.
1, via HTML content in an editor
4," via C# code in a """"Pages -> Edit -> Template -> Edit template properties -> Layout"""" box.  NOTE: the vendor has responded that there is intended functionality for authorized users to edit and update ascx code layout."
4, via /getGroupTimeLineJSON.action.
1,compromise the entire cluster through a specially crafted API call. Network access to
5, via a Sybil attack. This issue exists because of an incomplete fix for CVE-2016-1549.
4, via a .. (dot dot) in the contentbase parameter to rpc/set_all.
5, via a specific file due to inappropriate decoding.
4, via a JPX image with zero components.
4, via a crafted mode 6 packet with a ntpd instance from 4.2.8p6 through 4.2.8p10.
3, by leveraging an ntpq query and sending a response with a crafted array.
2," via the """"message"""" parameter."
2," via the """"order"""" parameter."
4, via a large number of digits in the ticket number format setting.
1, by leveraging guest access and guessing a 6-digit number.
2," via the """"sort"""" parameter."
4, via a crafted URL.
0, via the friendlyname parameter to rpc/set_all.
4," via a malicious devicename parameter in a link that is entered via the """"Pages -> Edit template properties -> Device Layouts -> Create device layout (and edit created device layout) -> Design"""" screens.  NOTE: the vendor has responded that there is intended functionality for authorized users to edit and update ascx code layout."
5, via a direct request for the idashboards/config.xml URI
4, via a direct request for the idb/config?CMD=installLicense URI
1, by leveraging lack of anti-CSRF tokens.
4, via a maliciously crafted DSDIFF file.
4, via a crafted URL.
4, via a crafted file. NOTE: this may overlap CVE-2017-11552.
4, via a findOne() or findAll() call
4, via unspecified vectors.
0, via the ajax_path parameter to editor/extensions/pagebuilder/includes/ajax_shortcode_pattern.php
4, via a direct request to 3/qq_connect2.0/API/class/ErrorCase.class.php or 3/ucenter_api/code/friend.php.
0," via the """"timezone"""" parameter in step 4 of a fresh installation procedure."
2, via an invalid LIST
0, via a specific pdf file
0, via a specific pdf file due to lack of loop checking
4, via a specific pdf file
0, via a specific pdf file
2," via the """"id"""" parameter."
0, by leveraging control over DB LOGIN NAMES data during installation to provide a long
4, via a crafted file.
4, via a direct request to application/install/templates/s1.php.
3, by triggering a creation failure.
4, via non-preemptable L3/L4 pagetable freeing.
5, by triggering a grant-table transition from v2 to v1.
0, by leveraging the mishandling of configurations that lack a Local APIC.
2, via the json parameter.
4, via a crafted pdf file.
4, via a mh_load_end_addr value greater than mh_bss_end_addr
2, via an AVI file with crafted dimensions within chroma subsampling data.
4, via front/fileupload.php. This feature is protected using different types of security features like the check on the file's extension. However
4," via a specially crafted GET request without a leading """"/"""" and without authentication."
4," via a specially crafted GET request with a leading """"/"""" in the URL."
3, by making a user issue a manipulated POST request.
2, via specially crafted URLs.
4, via a crafted ELF file
2, by sending exactly 11 bytes.
2, via certain requests to TCP ports 8258 and 8257.
4, via a direct request to includes/mysql2i/mysql2i.func.php or addons/phpmailer/phpmailer.php.
4, via a modified ID field to /lib/attachments/attachmentdownload.php.
4, via a buffer overflow in ncfsd.sys.
5, via a delete action in a request to secmail/getmessage.exe or (2) spoof arbitrary users and reply to their messages via a request to secserver/securectrl.exe.
0, via the mailboxid parameter to secmail/getmessage.exe.
2, via the option1 parameter in a reply action to secmail/getmessage.exe.
4, via a .. (dot dot) in the filename parameter to secupload2/upload.aspx.
4, via a .. (dot dot) in the option2 parameter in an attachment action to secmail/getmessage.exe.
4, via an HTML-formatted e-mail message.
2, via invalid characters in the username and password parameters
4, via a crafted application that makes mmap system calls and has a large pgoff argument to the remap_file_pages system call.
4, via vectors involving (1) a greeting message
4, via '${xyz}' Glide Scripting Injection in the sysparm_media parameter.
4, via a crafted XML file.
5," by reading """"ffree: """" lines in a debugfs file."
2, via many read accesses to files in the /sys/class/sas_phy directory
0,send a specially crafted URL with an embedded script to
0, by leveraging root access to write to the check_interval file in a /sys/devices/system/machinecheck/machinecheck<cpu number> directory. NOTE: a third party has indicated that this report is not security relevant.
0, by removing the application after TomEE is setup (if using the application to install TomEE)
4, via index.php?module=Contacts&view=List (app parameter).
4, via a corrupt AFF image that triggers an unexpected pagesize value.
4,send an IOCTL to
5,send IOCTL 0x85FE2608 to
2, via the Service Description parameter while creating a WAN service.
4, via a variant of the CVE-2018-7269 attack in conjunction with the Redis extension.
4, via a variant of the CVE-2018-7269 attack in conjunction with the Elasticsearch extension.
2, by triggering an out-of-array error case.
1, via crafted data. EventData in the slf4j-ext module in QOS.CH SLF4J
2, via Code Injection in the where parameter.
4, via a crafted repository index file.
0, via a specific pdf file
4, via a specific pdf file
4, via a specific pdf file
0, via a specific pdf file
4, via a specific pdf file
4, via a specific pdf file
0, via a specific pdf file
0, via a specific pdf file
4, via vectors related to MSXML libraries.
4, via a /descriptorByName/hudson.tasks.Mailer/sendTestMail request.
2, via the Web Client webserver.
4, via a title that is not escaped.
2, via the virtual_del parameter.
2, via the selInfoKey1 parameter.
2, via PHP code in the POST data of an index.php?m=member&c=member_content&a=init request.
4, via unspecified parameters.
4, via a crafted file.
4, via a malformed URL.
1, by crafting a malicious request.
4, via a malicious SVG image.
4, via xp_cmdshell. In some cases
4, via a crafted .exe file.
2, via the code parameter.
1, by reading the new_lan_ip variable on the error_page.htm page.
1, by reading the custom_id variable on the blocking.asp page.
3, by providing a long string to the blocking.asp page via a GET or POST request. Vulnerable parameters are flag
4, via a ../ in a filename of a received file
4, via malicious attachments.
4, via malicious attachments.
2, via the commit_msg parameter.
4, via a crafted URL.
2, via the ObjectID parameter.
4, via title parameter.
2, via the host parameter.
2, via the host parameter.
4, via unspecified vectors.
1, by exporting an archive in CSV format.
2, via the malicious file name.
4, via unspecified vectors.
4, via malicious attachments.
2, via the malicious file name.
2, via the (1) username
2, via the fullname parameter.
2, via the (1) cal_id or (2) original_cal_id parameter.
2, via the (1) family_name
4, via a crafted payload.
4, via a crafted HTTP request.
4, via a crafted HTTP request.
2, via directory traversal sequences in the oldimg parameter in an action=modify request. This can be leveraged for database access by deleting install.lock.
2, via directory traversal sequences in the oldimg or oldflv parameter in an action=modify request. This can be leveraged for database access by deleting install.lock.
2, via directory traversal sequences in the oldimg parameter in an action=modify request. This can be leveraged for database access by deleting install.lock.
4, via a crafted image file
2, via the /cgi-bin/cgiServer.exx page parameter
2, via the sortfield parameter to /accountancy/admin/accountmodel.php
4, by poisoning a configuration file.
2, by passing specially crafted arguments to the update_crld script.
2, via the tab GET parameter.
2, via the contact form.
4, via an admin/index.php?id=filesmanager&delete_dir=./&path=uploads/ request.
4, via a side-channel attack on the directional branch predictor
4, via a malicious login request to forum.ghp.  NOTE: this may overlap CVE-2014-3791.
4, via a specially crafted XML request
4, via a crafted .exe file
2, via the email
4, via IOCTL 0x80030030.
2, via the app_id parameter to zb_users/plugin/AppCentre/plugin_edit.php because of an unanchored regular expression
4, via a crafted name of a component
3, by reading user/scripts/login_par.js.
2, via the loginName field to technicianAction.do.
2, via the refiles array parameter
0, via the egroup parameter to uploads/dede/stepselect_main.php because code within the database is accessible to uploads/dede/sys_cache_up.php.
0, via inject malicious scripts in HTTP referer header.
2, via the NDIS miniport driver.
2, via the named pipe responsible for Forticlient updates.
2, via the parsing of the file.
2, via the sql parameter. Consequently
2, via the newlistname parameter.
2, via the url parameter. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-14611
4, use a document database (DirtyDB
2, via directory traversal sequences in the oldimg parameter. This can be leveraged for database access by deleting install.lock.
5, by sending a malformed request to the interactive service. This could cause a denial-of-service through memory corruption or possibly have unspecified other impact including privilege escalation.
1, via certain rapid sequences of actions that include app opening
4, via a long filename.
3, by replaying a logon message.
4, via a serialized .NET object in an Authorization HTTP header.
0, by leveraging the ability to login to an unprivileged account on the server.
2, via the webname or weburl parameter.
1, via vectors involving a Host HTTP header that is modified to specify a web server under the attacker's control.
0, by sending specific types of valid SIP traffic to the device. In this case
0, by sending specific commands from a peered BGP host and having those BGP states delivered to the vulnerable device. This issue affects: Juniper Networks Junos OS: 18.1 versions prior to 18.1R2-S4
1,use social engineering techniques to
4, via local access.
4, via network access.
3, via physical access.
4, via network access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via network access.
3, via network access.
4, via local access. L-SA-00206
4, via adjacent access.
3, via local access.
2, via an adjacent access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via network access.
4, via local access.
4, via local access.
3, via local access.
4, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via network access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
2, by sending specially crafted commands using AMQP protocol versions below 1.0 (AMQP 0-8
2, via the payload needs to be stored in the database and the victim must see the db value in question.
0, via An authorized SSH user with the allowscp permission.
5, by using double-encoded HTML entities that are not properly escaped during rendering
1, by placing it in a ZIP archive and using the MoxieManager (for .NET) plugin before 2.1.4 in the moxiemanager directory within the installation folder ICS\ICS.NET\ICSFileServer.
5, via a crafted certificate in the TLS certificate handshake message
2, via the first form field of a configuration screen
4, via a form validation HTTP endpoint.
4, via a form validation HTTP endpoint.
0,create a Git tag in a workspace and attach corresponding metadata to
5, by embedding a reference to a local executable file such as the /Applications/Calculator.app/Contents/MacOS/Calculator file.
0, via a long configuration key value. An attacker must be able to download files to the device in order to exploit this vulnerability.
3, by providing a token by crafting with hmac(). The component is: JWT.pm
1, by putting code in reminder description. The impact is: Admins can phish any user or group of users for credentials / credit cards. The component is: Tools > Reminder > Description .. Set the description to any iframe/form tags and apply. The attack vector is: The attacker puts a login form
2, via the parsing of malicious YAML files.
4,create directories on overlayfs to
3, use reflection to introduce new
1,create or update credentials to
4, uses external entities for extraction of secrets from the Jenkins master
4,upload supplied data. This can be used to
2, via multiple different requests.
4, via the tjp6jp6y4
2, via the user
4, via a .php URL in the plugins/ueditor/php/controller.php?action=catchimage source[] parameter because of a lack of inc/zzz_file.php restrictions. For example
4, via shell metacharacters in the filename in a /ubus/uci.apply update_nds_webroot_from_tmp API call.
4, via a /ubus/uci.apply config request.
3, via shell metacharacters in the filename in a /ubus/controller.icc.update_nds_webroot_from_tmp update_nds_webroot_from_tmp API call.
4, via shell metacharacters in a /manager?action=getlogcat priority field.
4, via shell metacharacters in the /goform/systemlog?cmd=set logserver field.
4, via shell metacharacters in the backupUCMConfig file-backup parameter to the /cgi? URI.
2, via the sord parameter in a listCodeblueGroup API call to the /cgi? URI.
4, via manipulation of an unsanitized GET parameter: /zhndnsdisplay.cmd (name)
2, via the index.php?m=Admin&c=config&a=edit site_domain parameter.
3, by attempting to authenticate with an invalid UTF-8 sequence as the username.
0, via a specific HTTP request. This affects certain devices labeled as HI3510
3, by connecting to the stream with hidden credentials (guest or user) that are neither displayed nor configurable in the camera's CamHi or keye mobile management application. This affects certain devices labeled as HI3510
5, by continuing to accepting content after maxContentLength is exceeded.
2," via the """"unarchive"""" functions. It is exploited using a specially crafted zip archive"
2, via the exec function. The variable `commonName` controlled by user input is used as part of the `exec` function without any sanitization.
3," via the """"execSync()"""" argument."
2," via the """"exec"""" argument. The cmd argument used within index.js"
2," via the """"exec"""" argument. It is possible to inject arbitrary commands as part of the metadata options which is given to the """"exec"""" function."
2, via the includes/fields/upload.php (aka upload/submit page) name and tmp_name parameters.
3, by uploading a JavaScript file to include executable extensions in the file/edit/config/config.yml configuration file.
5, via a /DataLog.csv?log= or /AlarmLog.csv?log= or /waitlog.cgi?name= or /chart.shtml?data= or /createlog.cgi?name= request.
2, use the vulnerability to compromise confidentiality and integrity and availability of the affected system. At the time of advisory publication no public exploitation of this security vulnerability was known.
2, via the Wallpaper Carousel application to obtain sensitive Clipboard data and the user's stored credentials (partially). This occurs because of paste access to a social media login page.
0, by visiting easily guessable exportpdf/all_claim_detail.php?claim_id= URLs.
0, by visiting easily guessable dashboard/uploads/claim_files/claim_id_ URLs.
2," via the """"Documents"""" area. This vulnerability is related to """"uploadDocFile.aspx""""."
4, via http://[target]/smarthome/devicecontrol without any authentication. CVSS 3.0 base score 10 (Confidentiality
2, via an unauthenticated web request.
4, via local access.
3, via physical access.
4, via local access.
4, via a side channel with local access. A list of impacted products can be found here: https://www.intel.com/content/dam/www/public/us/en/documents/corporate-information/SA00233-microcode-update-guidance_05132019.pdf
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local attack.
4, via network access.
4, via local access.
4, via local access.
4, via a side channel with local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local attack.
4, via local access.
4, via network access.
3, via network access.
4, via local access.
3, via network access.
4, via network access.
4, via network access.
3, via network access.
4, via network access.
4, via network access.
3, via network access.
3, via network access.
3, via adjacent access.
0, via data plane packet injection. To exploit the vulnerability
2, via the (1) #300583 - List Manager Dashboard module
0, via additional form parameter submissions.
3, by uploading a file with an executable extension.
3, by posting a username and e-mail address to ucenter/repass.php
4, via capture-replay. Physically proximate attackers can use this information to unlock unauthorized Tzumi Electronics Klic Smart Padlock Model 5686 Firmware 6.2.
0, by using the Photo Sharing Plus application to execute a backdoor API command
1, via crafted MPEG-4 video data.
5, by uploading a .htaccess file that specifies SetHandler x-httpd-php for a .txt file
0, by using different payloads and injecting multiple parameters. This vulnerability is fixed in a later firmware version.
5, via an origin2://game/launch URL for QtApplication QDesktopServices communication.
4, via a crafted HTTP PUT operation for an event with a long iCalendar property name.
4, via a specially crafted iptables-save file. This is related to add_param_to_argv in xshared.c.
2, via the AgentConsole/UserGroupQuery.php ShowUser parameter.
2, via the ServerConf/DataManagement/DiskManager.php FORMNAS_share parameter.
4," via a <?php substring in the second text box. NOTE: the vendor indicates that there was an assumption that the content is """"made editable on its own."""""
5, by entering a specially crafted string with nested repetition operators.
3, by entering a specially crafted string with nested repetition operators. NOTE: the software maintainer disputes that this is a vulnerability because the issue cannot be exploited via ModSecurity.
3, by entering a specially crafted string with next# at the beginning and nested repetition operators. NOTE: the software maintainer disputes that this is a vulnerability because the issue cannot be exploited via ModSecurity.
3, by entering a specially crafted string with set_error_handler# at the beginning and nested repetition operators. NOTE: the software maintainer disputes that this is a vulnerability because the issue cannot be exploited via ModSecurity.
3, by entering a specially crafted string with $a# at the beginning and nested repetition operators. NOTE: the software maintainer disputes that this is a vulnerability because the issue cannot be exploited via ModSecurity.
3, by requesting a password change and specifying the admin parameter.
5, via a long string
0, via the go parameter to admin/index.php
5, by placing a phone call using a specially crafted caller ID number. This can further lead to remote code execution by chaining this vulnerability with a command injection vulnerability also present in FusionPBX.
0, by replacing an emoji file (under the /sdcard/tencent/MicroMsg directory) with a crafted .wxgf file. The content of the replacement must be derived from the phone's IMEI. The crash occurs upon receiving a message that contains the replaced emoji.
0,upload a malicious JSP file into the /okm:root directories and move that file to
4, via upload.php. The $IllegalExtensions value only lists lowercase (and thus .phP is a bypass)
3, via manipulation of an unsanitized user field of the Authorization header for HTTP Basic Authentication
3, via manipulation of GET or POST parameters. The attacker can also cause a denial of service (application outage).
4, via a crafted ZIP file because of a HAVE_LZMA_H typo. NOTE: this only affects users who downloaded the development code from GitHub. Users of the product's official releases are unaffected.
4, by crafting a Cineon image with an incorrect claimed image size. This occurs because ReadCINImage in coders/cin.c lacks a check for insufficient image data in a file.
1, by crafting an XWD image file in which the header indicates neither LSB first nor MSB first.
1, by crafting an XWD image file
1, by crafting an XWD image file
4, use this to cause a denial of service. This has been fixed in stable kernel releases 4.4.182
4, via a persistent HTTP GET Request Hash Link Replay
4, via a crafted HTTP PUT Request
2, via the URL parameter to the Login component.
5, by sending a special RTSP over HTTP packet. The vulnerability was found in many cameras using hisilicon's hardware and software
4, via a /protected/vendor/codeception/codeception/tests/data/app/view/index.php POST request.
1, by performing latency attacks.
4," via denial of service vulnerability in issue search when ordering by """"Epic Name""""."
4, via a cross site scripting (XSS) vulnerability in the priority icon url of an issue priority.
2, via the id parameter. The attack can be performed unauthenticated if OpenProject is configured not to require authentication for API access.
4," via a """"Sapling Wood-Chipper"""" attack."
4, via a long HELP command
1, via UDP packets with a 0 payload
1, via crafted RPC requests
4, via cmdline.
2, via the type parameter.
2, via the uploadphoto parameter.
1, via crafted network traffic.
2, via the title parameter.
2, via the name parameter.
2, via the object_id parameter.
3, via unspecified vectors.
2, via the crafted 'X-Real-IP' header.
5,create a symlink to
4, via a HIDPCONNADD command
4, via a crafted web page over HbbTV.
4, via a SYN flood attack over a wired or Wi-Fi LAN.
4, via a maliciously constructed invalid JPEG input. This issue affects HHVM versions prior to 3.30.9
4, via a maliciously constructed invalid JPEG input. This issue affects HHVM versions prior to 3.30.9
5, via specially-crafted EXIF tags in WEBP images. This issue affects WhatsApp for Android before version 2.19.143 and WhatsApp for iOS before version 2.19.100.
2, via an unspecified vector.
4, via {} in a ws/gatshipWs.asmx/SqlVersion request.
4, via reconfiguration of either service.
3, via DLL hijacking.
2, via the administrative API.
2, via the administrative API.
2, via the DeviceID parameter.
4, via a modified input file.
4, via shell metacharacters in a POST request.
4, via telnet. The telnet service is running on port 2323; it cannot be turned off and the credentials cannot be changed.
4, via shell metacharacters in a POST request.
3, by measuring a button width
1, by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content
3, via port tcp/5010.
4, via port tcp/5010.
2, via the Sitecore Rocks Hard Rocks Service.
0, by changing the value of ioc_number between two kernel reads of that value
0, by querying the entire watchlist table. Fixed in 1.32.2
2, via the restricted thick client browser. The attack uses a long sequence of crafted keyboard input.
2, by running exploit code inside a firejail sandbox and having the sandbox terminated. To succeed
4, via a long TFTP error packet
4, via a long TFTP error packet
3, by convincing a targeted user to follow a malicious link. Successful exploitation could cause the application to load libraries from the directory targeted by the URI link. The attacker could use this behavior to execute arbitrary commands on the system with the privileges of the targeted user
4, via GET parameters.
2, via the web API. In order to exploit this vulnerability
0, by correcting the way the policy is applied to Yammer App.
4, via a modified authority parameter.
2, via the :source! command in a modeline
4, via a radio signal between 198 kHz and 203 kHz
4, via a symlink attack
5, by spoofing GUIDs in pinboard update requests
2, via the password reset form.
1, by setting the arguments to the ActiveX method. This can be leveraged for code execution.
2, via the ShellOpen method. This can be leveraged for code execution
2, via specifically crafted configuration file. This can be leveraged for code execution.
5, by loading a module with a crafted name.
3, via snippets (that are attached to widgets and then eval'd to dynamically determine their visibility) by crafting a malicious POST request that tricks administrators into adding the code.
1, via several API endpoints.
5, via a --keys-dir option that causes acceptance of an untrusted signing key.
1, via crafted ioctl calls to /dev/dri/card0.
2, via the method parameter.
2, via the DISPLAY environment variable.
4, via a crafted image.
4, via TOARU_SYS_FUNC_MMAP
5, by tricking an authenticated user into visiting an attacker controlled web page.
3, via vectors involving an IFRAME element
0,create a malicious link in order to
4, via a crafted PNG image file
4, via a crafted PNG image file
5, via a crafted CRW image file.
5, via a crafted WEBP image file.
4, via a crafted PNG image file.
2, via an invalid data location in a CRW image file.
5, by returning a crafted response that lacks a space character.
2, via an email sent to a mailing list consumed by Patchwork. This affects the function msgid in templatetags/patch.py. Patchwork versions v2.1.4 and v2.0.4 will contain the fix.
4, via PIE compilation.
5, by sending a crafted request. If authentication is enabled
3, via JSON commands to ubus. The 3DES key is used to decrypt the provisioning file provided by Adamo Telecom on a public URL via cleartext HTTP.
2, via directory traversal sequences in a filename within nsz archive.
2, via the /ApplicationEngine/Search/Refine/Set page.
3, by opening a crafted Ogg Vorbis file.
3, by opening a crafted Ogg Vorbis file.
5, by opening a crafted Ogg Vorbis file.
5, by opening a crafted Ogg Vorbis file.
5, by opening a crafted Ogg Vorbis file.
5, by opening a crafted Ogg Vorbis file.
5, by opening a crafted Ogg Vorbis file.
5, by providing a crafted regular expression. Oniguruma issues often affect Ruby
3, by providing a sufficiently long query string when POSTing to any valid cgi
4, by listing a process
3, by listing a process
1, via TCP port 81
4, via a cookie because a cookie's username field allows eval injection
2, via the index.php/Pay/passcodeAuth passcode parameter.
5, via a specially crafted POST request. The application will reflect the recipient value if it is not in the NateMail recipient array. Note that this array is keyed via integers by default
1, by injecting arbitrary web script or HTML via arbitrary file extension while creating a support ticket.
0, via a crafted parameter to a CGI script
4, via url cgibin/ExportSettings.cgi?Download=filepath
0, by browsing the source code of the page.
2, via the country
2, via the apply_sec.cgi setup_wizard parameter.
4, via shell metacharacters in the online_firmware_check.cgi check_fw_url parameter.
2, via an IP address with a long hostname.
4, via includes/evf-entry-functions.php
4, via includes/payments/class-payments-query.php.
2, via the PagingStart parameter.
3, via Sahi Launcher. Also
2," via the code parameter to /port_3480/data_request because the """"No unsafe lua allowed"""" code block is skipped."
4, via a crafted .mp4 file.
3, by using a victim's credentials
3, by storing a new stream message containing an XSS payload. The stored payload can then be triggered by clicking a malicious link on the Notifications page.
2, by correcting how Microsoft IIS Server sanitizes web requests.
3, by manipulating a small JPEG file to specify dimensions of 64250x64250 pixels
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page on iOS.
4, via a crafted HTML page.
3, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
1, via crafted TLS connections.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted executable.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted PDF file.
4, via a crafted application.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted URL.
3, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
1, by ensuring that Azure App Service sanitizes user inputs.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
1, via crafted clipboard content.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via local code.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page. (Chrome security severity: High)
2, use the vulnerability to compromise availability of the service provided by the software.
4, via a modified language cookie
1, via many requests to launch a compile operation. The requests use the pages/exec.php?exec_env=production&exec_module=itop-hub-connector&exec_page=ajax.php&operation=compile URI. This only affects the community version.
4, via a Direct Request (aka Forced Browsing).
4, via a laser
0, via the $REQUEST['adaptive-images-settings']['source_file'] parameter in adaptive-images-script.php.
0, via the $REQUEST['adaptive-images-settings'] parameter in adaptive-images-script.php.
4, via vectors related to htx_manage_client_side_cookies in proto_htx.c.
4, via a zero bitrate in an MP3 file.
2, via an ELF file with a zero-size section group (SHT_GROUP)
3, via port 9988.
4, via a skewed offset larger than the size of the PE section in a UPX packed executable
4, via a tools/sourceViewer/index.html?filename=../ URI.
4, via filemanager/model.php.
4, via modules/nextgen_gallery_display/package.module.nextgen_gallery_display.php.
4, via a lattice attack. The issue occurs because dsa.c fixes two bits of the generated nonces.
4, via admin/user/add
2, via the getAttachmentDirectoryForNewAttachment inpKey value.
4, via a crafted UPnP SSDP packet.
4, via a crafted image file.
4, via the extractfile API1 call (SEC-496).
4, via ajax_maketext_syntax_util.pl (SEC-498).
4, via securitypolicy.cg (SEC-487).
4, via a simple HTTP request.
4, via a simple HTTP Request.
4, via a crafted .ogg file.
2, via an ELF file
2, via path traversal in the filename parameter.
4, via network access.
4, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via local access.
3, via physical access.
4, via com/libs/Table.php because Subscribers Table ordering is mishandled.
2, via an SBI bootloader memory write operation.
1, via Path Traversal
2, via the wp-admin/admin-post.php reset-cmb parameter.
2, via the wp-admin/admin-post.php?page=fvplayer&fv-email-export=1 URI.
2, use this flaw to intercept all keystrokes of a victim user who is using the graphical interface
5,send a reply in chunks. A bounds check which was supposed to
1, via crafted DHCP request packets to etc_ro/web/internet/dhcpcliinfo.asp.
1, via hardcoded credentials into a shell
4, via a hidden etc_ro/web/adm/system_command.asp shell feature.
2, via Mobile Connection Test. When the Mobile Connection Test is submitted
4, via a modified selApp variable to personalData/resumeDetail.cfm. This includes personal information and other sensitive data.
4, via a crafted .mkv file.
4, via a missing permissions check.
4," via """"cookie tossing"""" a CSRF cookie from a subdomain of a Jira instance."
4, via a cross site scripting (XSS) vulnerability through the name of a missing branch.
4, via a cross site scripting (XSS) vulnerability in the reviewedBranch parameter.
4, via an improper authorization vulnerability.
3, by submitting a malicious command to the service_edit.php file (which will insert the malicious command into the database). To trigger the command
5, via a crafted HTML mail message. This vulnerability is distinct from CVE-2015-4657.
3, use this to upload a malicious .aspx file and gain Remote Code Execution on the site.
3," by specifying a """"user id"""" parameter and file name"
4, via a crafted recruitment_online/personalData/act_personaltab.cfm multiple-part POST request with a predictable WRC01_USERID parameter. Moreover
3, by crafting a corrupted XWD image file
3, by crafting a Matlab image file that is mishandled in ReadImage in MagickCore/constitute.c.
4, via a crafted TIFF image file
3, via an out-of-bounds read) by crafting a corrupted JB2 image file that is mishandled in JB2Dict::JB2Codec::get_direct_context in libdjvu/JB2Image.h because of a missing zero-bytes check in libdjvu/GBitmap.h.
2, via an XML entity expansion attack with an inline DTD.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a declined stream in a response to a T.38 re-invite initiated by Asterisk. The crash occurs because of a NULL session media object dereference.
2, via the value parameter.
5, via --output argument injection in the username parameter to /cgi-bin/cmh/webcam.sh.
2, via the 0xe2 0x81 0xa8 0xe2 0x81 0xa7 byte sequence
4, via a plugin.
1, by arranging for a client to never be writable.
2, via the activity timeline.
2, via the merge request endpoint.
2," via injecting specially crafted """"ExportLogs"""" type IPC client requests to the fctsched process."
2, via the id parameter.
3, by uploading a SCORM file with an executable extension. This allows an unauthenticated attacker to upload a malicious file (containing PHP code to execute operating system commands) to the web root of the application.
3, by placing a Trojan horse docker-credential-wincred.exe file in %PROGRAMDATA%\DockerDesktop\version-bin\ as a low-privilege user
3, by provisioning a privileged container. Fixed in MicroK8s 1.15.3.
4, via a webshell.
4, via a trailing backslash.
4, via a crafted PUT request to an unauthorized resource.
2, via the /password.jsn URI.
0,upload files without any extension (even if the application was configured to
4, via a crafted OpenID Connect authorization request. To be vulnerable
3, by creating a gaming server and inviting a victim to this server
3, by uploading a malicious file during the HA registration period. A successful exploit could allow the attacker to execute arbitrary code with root-level privileges on the underlying operating system. Note: This vulnerability can only be exploited during the HA registration period. See the Details section for more information.
0, by accessing the physical interface of a device and inserting a USB storage device. A successful exploit could allow the attacker to execute scripts on the device in an elevated security context.
3, by connecting to an affected device using NETCONF over SSH. A successful exploit could allow the attacker to connect to the device on the NETCONF port. Valid credentials are required to access the device. This vulnerability does not affect connections to the default SSH process on the device.
1, by intercepting authentication traffic in transit.
0, via XSS or an IFRAME tag included within the site.
0,create low-privileged accounts that do not have the ability to
2, via the POST /api/users API
3, via slow client-side HTTP traffic from a single source.
0, by sending incorrect JSON data to the REST API
2, via the spsshell feature.
2, via the recruitment_online/personalData/act_acounttab.cfm txtNewUserName and hdNP fields.
4, via a title directory-traversal pathname followed by a crafted substring.
4, via knowledge of the hard-coded key.
2, via sending specially crafted IPC client requests to the fctsched process due the nanomsg not been correctly validated.
2, via the use of static credentials.
4, via a parameter of the logon page.
2," via specially crafted """"BackupConfig"""" type IPC client requests to the fctsched process. Further more"
1, via diagnose debug commands.
4, via titles of admin box buttons on the home page.
4, via extensions of uploaded files.
2, via their survey responses that will be included in the export CSV file.
2, via an HTTP POST request to certain URLs related to the ReGa core process.
4, via a crafted query.
1, by manipulating the U-Boot environment via the CLI after connecting to the internal UART interface.
4, via storage/emulated/0/Notes/PDF on TCP port 8080 without authentication.
4, via a crafted HTTP request.
4, via a crafted HTTP request.
5, via a crafted value for a URL field.
2, via the handle parameter (webExMeetingLogin.jsp) and meetingKey parameter (deleteWebExMeetingCheck.jsp).
4, via a direct request for the /sysinfo_json.cgi URI.
2, via the username or password parameter.
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software. Successful exploitation could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software. Successful exploitation could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software. Successful exploitation could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software. Successful exploitation could allow the attacker to execute arbitrary code on the affected system.
5, via a non-parameterized INSERT INTO statement
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software. Successful exploitation could allow the attacker to execute arbitrary code on the affected system.
4, via a login/?reason=failure&NTLM= URI.
0, by abusing an undocumented feature in scheduled tasks.
4, via /install by placing the code in the name of an object in the database.
4, via a buffer overflow involving a long NoJs parameter to the /LoginAdmin URI.
5, by exploiting a Structured Exception Handler (SEH) based buffer overflow in an HTTP POST parameter
5,create a symlink pointing to
2, via the pid parameter.
4, via a side-channel timing attack because ECDSA scalar multiplication is mishandled
4, use a long series of unique session IDs.
4, via a reboot.cgi request.
1,use the Harbor API to
2, via the admin dashboard. This occurs because classes/Visualizer/Gutenberg/Block.php registers wp-json/visualizer/v1/update-chart with no access control
3, via Location Name.
2, via the Web Admin and SSL VPN consoles.
2, by accessing freed memory locations via an SSH1_MSG_DISCONNECT message.
4, via admin/template.php?action=del&tpl=../ directory traversal.
2, via the sortBy parameter because error messages are mishandled.
2, via the command_hostaddress parameter. NOTE: some sources have listed CVE-2019-17017 for this
4, via /WiKIDAdmin/userPreregistration.jsp. The preRegistrationData parameter is vulnerable: a reflected cross-site scripting occurs immediately after a .csv file is uploaded. The malicious script is stored and can be executed again when the List Pre-Registration functionality is used.
4, via /WiKIDAdmin/groups.jsp. The groupName parameter is vulnerable: the reflected cross-site scripting occurs immediately after the group is created. The malicious script is stored and will be executed again whenever /WiKIDAdmin/groups.jsp is visited.
2, via the processPref.jsp key parameter.
2, via the source or subString parameter.
4, via /WiKIDAdmin/adm_usrs.jsp. The usr parameter is vulnerable: the reflected cross-site scripting occurs immediately after the user is created. The malicious script is stored and will be executed whenever /WiKIDAdmin/adm_usrs.jsp is visited.
2, via the wp-admin/tools.php?page=view-broken-links s_filter parameter in a search action.
0, by using many different forged X-Forwarded-For or Client-IP HTTP headers.
4, via shell metacharacters in the Ping Test field.
2, via the ActiveX method in RexViewerCtrl30.ocx. That could lead to disclosure of sensitive information. User interaction is required to exploit this vulnerability in that the target must visit a malicious web page.
3, by issuing a HTTP GET request with a specially crafted parameter. User interaction is required to exploit this vulnerability in that the target must visit a malicious web page.
4, via URLs. The attacker could theoretically social engineer an authenticated user into submitting the URL
3, by leveraging a page-writability race condition during addition of a passed-through PCI device.
3, by leveraging a race condition that arose when XENMEM_exchange was introduced.
0, by leveraging incorrect use of the HVM physmap concept for PV domains.
3, by leveraging a long-running operation that exists to support restartability of PTE updates.
5, by visiting genieDisableLanChanged.cgi. The attacker can then
5, via a substring ending with .jpg
0, by gaining elevated privileges through file modifications.
0, via manipulations such as strtr.
4, via a long URL.
2, via the HTTP DELETE method
0, by overwriting this file with a malicious payload.
4, via a crafted file.
0,use the Relative Path Overwrite (RPO) technique to
2, via the Command Line field of main.php?p=60807&type=4 (aka the Configuration > Commands > Discovery screen). CVE-2019-17501 and CVE-2019-16405 are similar to one another and may be the same.
2, via the /osm/report/ password parameter.
1, by leveraging admin access and sending a /HNAP1/ request for SetMasterWLanSettings with shell metacharacters to /squashfs-root/www/HNAP1/control/SetMasterWLanSettings.php.
1, by leveraging admin access and sending a /HNAP1/ request for SetWizardConfig with shell metacharacters to /squashfs-root/www/HNAP1/control/SetWizardConfig.php.
2, via the FileName parameter to /FTPDiag.asp.
2," via the """"Connected Clients"""" field to /wlanAccess.asp. An intranet host can use a crafted hostname to exploit this."
4, via a crafted ruleDbBody element in a StoreRules request to the upnp/control/rules1 URI
5," by attempting to unzip a malformed ZIP archive. NOTE: the discoverer states """"This use-after-free is triggered prior to the double free reported in CVE-2017-12858."""""
4, via a query for many comments
3, by crafting a malicious page and dispersing it to a victim via social engineering
4, via a modified candidate id and an additional password parameter. The outcome is that the password of this other candidate is changed.
4,supply PHP code to
0, by injecting malicious JavaScript code into the description field of a Device Maintenance schedule.
2," via sending specially crafted """"StartAvCustomScan"""" type IPC client requests to the fctsched process due the argv data not been well sanitized."
2, via the FortiClientConsole executable service path.
0, via the tolang parameter
4, via a doSaveSetup action to admin/index.php
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
5, by sending a user a malicious ARF or WRF file via a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system.
2, via CVP API calls through the Configlet Builder modules. This vulnerability can potentially enable authenticated users with read-only access to take actions that are otherwise restricted in the GUI.
0,upload .php files in order to
2, via the SSH username
0, by crashing an application via a text file containing many directional characters.
2, via the student
0, via the id parameter to the edit page for Customer
3, via malformed commands.
4, via VIRGL_CCMD_BLIT commands.
4, via VIRGL_CCMD_RESOURCE_INLINE_WRITE commands.
2, by delivering crafted text content to a user
0,upload arbitrary files that can result in code execution. The issue occurs because the application fails to
2, via change password requests because there is no session management.
2, via the lang parameter.
4, via a VCPUOP_initialise hypercall. hypercall_create_continuation() is a variadic function which uses a printf-like format string to interpret its parameters. Error handling for a bad format character was done using BUG()
1, by leveraging race conditions in pagetable promotion and demotion operations. There are issues with restartable PV type change operations. To avoid using shadow pagetables for PV guests
1, by leveraging the erroneous enabling of interrupts. Interrupts are unconditionally unmasked in exception handlers. When an exception occurs on an ARM system which is handled without changing processor level
5, via a XENMEM_add_to_physmap hypercall. p2m->max_mapped_gfn is used by the functions p2m_resolve_translation_fault() and p2m_get_entry() to sanity check guest physical frame. The rest of the code in the two functions will assume that there is a valid root table and check that with BUG_ON(). The function p2m_get_root_pointer() will ignore the unused top bits of a guest physical frame. This means that the function p2m_set_entry() will alias the frame. However
3, via DMA in a situation where an untrusted domain has access to a physical device. This occurs because passed through PCI devices may corrupt host memory after deassignment. When a PCI device is assigned to an untrusted domain
4, by installing and using descriptors. There is missing descriptor table limit checking in x86 PV emulation. When emulating certain PV guest operations
3, by attempting to connect to the device via SSH. A successful exploit could allow the attacker to access the configuration as an administrative user if the default credentials are not changed. There are no workarounds available; however
4, via injection of an unverified partition table.
0, via APIs that accept invalid pointers.
4, via an RTLO (aka Right to Left Override) approach
2, via an arbitrary empNo value to the ORMEDMIS/Data/PY/T4W2Service.svc/RetrieveW2EntriesForEmployee URI
2, via the gravatar URL parameter.
2, via the user_id parameter.
1, via crafted messages. Notably
3, by triggering pci_dma_mapping_error() failures
5, by triggering static_config_buf_prepare_for_upload() or sja1105_inhibit_tx() failures
3, by triggering drm_writeback_connector_init() failures
3, by triggering sof_get_ctrl_copy_params() failures
5, by triggering platform_device_add_properties() failures
4, via /default.php?idx=17.
4, via a crafted object query.
2, via an HP System Event Utility system service.
4, via a GET request. NOTE: This is an End-of-Life product.
4, via a download_mgr.cgi stack-based buffer overflow.
4, via a stack-based buffer overflow. There is no size verification logic in one of functions in libscheddl.so
1, via input data that triggers an error.
2, via the exec.cgi script
2, via the save.cgi script for payload upload and the testtcl.cgi script for its execution.
2, via the exec.cgi and exec1.cgi scripts
4, via a .html file
1, by using the 'forgot password' functionality as it returns distinct messages for invalid password and non-existing users.
4, via a malformed bitmap image.
4, via a malformed bitmap image. This may occur after the use-after-free in CVE-2017-9182.
2, via the calc and icalc IRC commands.
0, by removing the CSRF token from a request.
4, via a backdoor account
3, by triggering i40e_setup_channel() failures
3, by triggering kcalloc() or v3d_job_init() failures
3, by triggering mlx5_vector2eqn() failures
3, by triggering ida_simple_get() failure
5, by triggering mlx5_crdump_collect() failures
3, by triggering copy_form_user() failures
4, by triggering of_fdt_unflatten_tree() failures
3, by triggering crypto_reportstat_alg() failures
3, by triggering usb_submit_urb() failures
3, by triggering copy_from_iter_full() failures
3, by triggering kfifo_alloc() failures
3, by triggering nl80211hdr_put() failures
4, by triggering mwifiex_map_pci_memory() failures
5, by triggering mwifiex_map_pci_memory() failures
5, by triggering alloc_page() failures
3, by triggering iwl_pcie_init_fw_sec() or dma_alloc_coherent() failures
3, by triggering crypto_report_alg() failures
3, by triggering pm_runtime_get_sync() failures
3, by triggering rhashtable_init() failures
4, by triggering bfa_port_get_stats() failures
3, by triggering mfd_add_hotplug_devices() or pm_genpd_add_device() failures
5, by triggering usb_submit_urb() failures
3, by triggering dma_get_sgtable() failures
3, by triggering devm_add_action_or_reset() failures
4, by triggering rsi_prepare_beacon() failures
5, by triggering wait_for_completion_timeout() failures. This affects the htc_config_pipe_credits() function
5, by triggering ca8210_get_platform_data() failures
2, by triggering copy to udata failures
3, by triggering usb_submit_urb() failures
2, by storing malicious content in the database.
5, by sending a crafted link-state PDU to an affected system to be processed. A successful exploit could allow the attacker to cause all routers within the IS&ndash;IS area to unexpectedly restart the IS&ndash;IS process
5, by accessing a specific uniform resource locator (URL) 
4, via shell metacharacters in the cgi-bin/luci autoUpTime parameter.
4, via a variety of methods
2, by setting the arguments to the activex method. A remote attacker could induce a user to access a crafted web page
2, by setting arguments to the activeX method. Download of Code Without Integrity Check vulnerability in ActiveX control of Inogard Co
1, by sending specific link-state PDUs to an affected system to be processed. A successful exploit could allow the attacker to cause incorrect calculations used in the weighted remote shared risk link groups (SRLG) or in the IGP Flexible Algorithm. It could also cause tracebacks to the logs or potentially cause the receiving device to crash the IS&ndash;IS process
2, by pointing symlinks to files such as /etc/shadow.
5, by sending a crafted Forms/wireless_autonetwork_1 POST request.
5, by submitting a reboot.html GET request without being authenticated on the admin interface.
5, by submitting a rom-0 GET request without being authenticated on the admin interface.
5, by submitting a crafted Forms/dns_1 POST request.
4, by submitting a crafted Forms/WlanMacFilter_1 POST request without being authenticated on the admin interface.
0, by accessing the configuration interface
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
2, by sending specially crafted packets over the network without authentication.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
2, via the redirect parameter.
2, via the id parameter.
2, via the fax_uuid parameter.
2, via the app_uuid parameter.
2, via the id and/or voicemail_id parameter.
2, via the c parameter.
2, via the dialplan_uuid parameter.
0, by writing arbitrary commands in any file and execute them as root. This issue was resolved in Wowza Streaming Engine 4.8.5.
5, by creating a shared password with HTML code as the title.
3, by triggering a NULL alloc_percpu result.
4, via a crafted BMP and/or TIFF file that triggers a malformed SEH
5, via a plugin test.
4, via a plugin test.
3, by providing a LIBGL_DRIVERS_PATH environment variable
3, by triggering data-structure access during pagetable-height updates. When running on AMD systems with an IOMMU
3, via degenerate chains of linear pagetables
3, via DMA in a situation where an untrusted domain has access to a physical device (and assignable-add is not used)
2, by leveraging race conditions in pagetable promotion and demotion operations
3, by uploading a .php file.
3, by uploading a .php file.
2, via the HNAP_AUTH header timestamp value. In HTTP requests
1, via crafted network packets. This could be used to execute arbitrary commands on the system.
2, by specifying arbitrary values for the recId and filename parameters of the /Home/GetAttachment function.
2, via certain types of self-referential views in conjunction with ALTER TABLE statements.
4, via RAPR/BlockedClients.html.
4, via RAPR/TriggerServerFunction.html.
3, by manipulating page elements using development tools. Note that the attacker must already have admin/root privileges on the product console to exploit this vulnerability.
5,create a symbolic link to
0, by disabling or otherwise preventing them to start. An attacker must already have administrator privileges on the target machine in order to exploit the vulnerability.
2, by starting with an arbitrary title
4, via a crafted image file. NOTE: this may be related to the SDL_Image product.
5, by setting a very small RLIMIT_DATA resource limit. When executing chpass or passwd (which are setuid root)
1, by inserting an additional property to the user-input
1, by appending data to root-owned files.
4, via WieldFeedServlet servlet.
4, via FailOverHelperServlet.
4, via enable->debug->script->exec with ../../../bin/sh as the parameter.
4, via a POST request with the attribute xcmd=get-platform-depends to admin/_cmdstat.jsp via the uploadFile attribute.
4, via a POST request with the attribute xcmd=import-category to admin/_cmdstat.jsp via the uploadFile attribute.
4, via a POST request with the attribute xcmd=packet-capture to admin/_cmdstat.jsp via the mac attribute.
4, via a POST request with the attribute xcmd=spectra-analysis to admin/_cmdstat.jsp via the mac attribute.
2, via the public static java.lang.Class java.lang.Class.forName(java.lang.Module
4, use of the taint feature). This issue is similar to CVE-2018-11805.
1, via crafted hostnames in DHCP requests
4, by creating a Trojan horse %SYSTEMDRIVE%\node_modules\.bin\wmic.exe file.
2, via the web pages /monitor/s_headmodel.php and /vam/vam_user.php.
2, via the web pages /vam/vam_anagraphic.php
0, by injecting the vulnerable parameter in the PHP Web page /common/vam_monitor_sap.php.
4, via a crafted request.
3, by using a leaked hash (the hash never expires until used).
4, via a crafted file
4, via a Broken Access Control vulnerability in the /rest/whitelist/<version>/check endpoint. The affected versions are before version 8.13.3
2, via the (1) tproject_id parameter to keywordsView.php; the (2) req_spec_id parameter to reqSpecCompareRevisions.php; the (3) requirement_id parameter to reqCompareVersions.php; the (4) build_id parameter to planUpdateTC.php; the (5) tplan_id parameter to newest_tcversions.php; the (6) tplan_id parameter to tcCreatedPerUserGUI.php; the (7) tcase_id parameter to tcAssign2Tplan.php; or the (8) testcase_id parameter to tcCompareVersions.php. Authentication is often easy to achieve: a guest account
4, via a conflicting name
1, by spoofing the From information of an email message.
4, via a urn: to the M-SEARCH method in ssdpcgi() in /htdocs/cgibin
2, via the urn: to the M-SEARCH method in ssdpcgi() in /htdocs/cgibin
2, via the urn: to the M-SEARCH method in ssdpcgi() in /htdocs/cgibin
3, via shell metacharacters in the ip_src parameter in an index.php?operation/netflow/nf_live_view request. This issue has been fixed in Pandora FMS 7.0 NG 742.
4, via a crafted JPEG file.
4, via api/settings/log?file=../ path traversal. In other words
5,create a malicious program to
0, via the value parameter in a localization (loc) command to elogd.c.
4, via a crafted SVG document to elogd.c.
1, by leveraging access to the nagios user account
4, via a side-channel attack.
4, via a DLL hijacking vulnerability.
1, via an information disclosure vulnerability.
0, via an improper authorization vulnerability.
5, via a Cross-site request forgery (CSRF) vulnerability.
4, via a Server Side Request Forgery (SSRF) vulnerability due to a logic bug in the JiraWhitelist class.
1, via an Information Disclosure vulnerability in the comment restriction feature. The affected versions are before version 7.6.17
4, via a Cross-site request forgery (CSRF) vulnerability. The affected versions are before version 7.13.9
2, via an Improper Authentication vulnerability: Workflow names; Project Key
4, via a Denial of Service (DoS) vulnerability on the UserPickerBrowser.jspa page. The affected versions are before version 7.13.9
4, via a cross site scripting (XSS) vulnerability in Issue Navigator Basic Search. The affected versions are before version 7.13.9
4, via a cross-site request forgery (CSRF) vulnerability. The affected versions are before version 7.13.3
4, via a cross site scripting (XSS) vulnerability in the project configuration feature. The affected versions are before version 8.3.0.
2, via an Application Denial of Service vulnerability in the /rendering/wiki endpoint. The affected versions are before version 8.8.0.
4, via a DLL hijacking vulnerability in Tomcat. The affected versions are before version 8.5.5
0, via MySQL dump streaming (SEC-531).
4, via shell metacharacters in the kuid parameter.
2, via the setPrice function
4, via a large Slack import.
4, via a LaTeX message.
3, via many backtick characters.
1, via crafted characters in a SQL LIKE clause to an APIv4 endpoint.
4, via a crafted link.
4, via a crafted PNG file. The affected versions are before version 8.5.4
1, via repeated requests to a certain endpoint in the Gadget API. The affected versions are before version 8.5.4
4, via a cross site scripting (XSS) vulnerability in the Add Field module. The affected versions are before version 8.7.0.
4, via a Cross-Site Scripting (XSS) vulnerability in link targets.
4, via SysV init. This issue affects: MongoDB Inc. MongoDB Server v4.0 versions prior to 4.0.11; v3.6 versions prior to 3.6.14; v3.4 versions prior to 3.4.22.
3,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle Communications Diameter Signaling Router (DSR). Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
5,compromise Oracle Argus Safety. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a GFM-rendered field
2, by visiting the /rss.xml page. NOTE: This project is not covered by Drupal's security advisory policy.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted URL.
4, via a /management/users/register request.
1, via crafted packet data that requires excessive evaluation time within the packet classification algorithm for the MegaFlow cache
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle VM VirtualBox. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Solaris. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Retail Xstore Office. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise JD Edwards EnterpriseOne Tools. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Configurator. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle SOA Suite. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle AutoVue 3D Professional Advanced. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Oracle WebCenter Sites. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Core RDBMS. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
2, uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to
4,compromise Java SE. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to
2,compromise Primavera P6 Enterprise Project Portfolio Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Solaris. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Oracle Outside In Technology. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Data Integrator. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle Demantra Demand Management. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Oracle Hyperion Workspace. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle HTTP Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Application Object Library. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality Gift and Loyalty. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise BI Publisher (formerly XML Publisher). Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Hyperion Planning. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Siebel Core - Common Components. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Payments. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle iRecruitment. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Hospitality Simphony. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle FLEXCUBE Universal Banking. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Retail Customer Management and Segmentation Foundation. Successful attacks of this vulnerability can result in unauthorized access to
1,compromise Oracle Business Intelligence Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
5,compromise Siebel UI Framework. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Data Integrator. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality Reporting and Analytics. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise HCM Human Resources. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality Cruise Dining Room Management. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Siebel Core - DB Deployment and Configuration. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle FLEXCUBE Direct Banking. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise SCM eProcurement. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Application Object Library. Successful attacks of this vulnerability can result in unauthorized ability to
2, via an incorrect authorisation check.
4, via a cross site scripting (XSS) vulnerability in the searchOwnerUserName parameter.
0, by tricking the victim into clicking on a specially crafted link. This affects OES versions OES2015SP1
4,send files to
2, via the fixture_text argument in sqla_yaml_fixtures.load.
4, via a crafted HTTP request parameter.
4, via a specific set of circumstances.
3, via unspecified vectors.
0, via running McAfee Tray with elevated privileges.
2, via specially crafted malicious sites where the GTI reputation is carefully manipulated and does not correctly trigger the ENS Firewall to block the connection.
2, via execution from a compromised folder.
4, via a carefully crafted upload to a remote website which is correctly blocked by DLPe Web Protection. This would then render as an XSS when the DLP Admin viewed the event in the ePO UI.
4, via a specially crafted DLP policy
2, via incorrect handling of expired GUI sessions.
2, via specifically crafted UDP packets.
1, via remote logging when it is enabled.
4, via a specially crafted custom rule containing HTML.
4, via unspecified vectors.
2, via the GUI or GUI terminal commands.
2, via specially crafted malware.
2, via the GUI or command line.
1, via execution from a compromised folder.
2, via incorrectly auto completing password fields in the admin browser login screen.
1, via incorrect protection of temporary files.
2, via sniffing the traffic between the Agent Handler and the SQL server.
4, via DLPe processes being killed just prior to the screen being locked or when the screen is locked. The attacker requires physical access to the machine.
0, via incorrect access control applied to the DLPe log folder allowing privileged users to create symbolic links.
1, via incorrect access control.
2, via specially crafted parameters.
2, via specially crafted parameters.
2, via specially crafted parameters.
2, via specially crafted input.
4, via a carefully constructed message sent to DLPe which bypasses DLPe internal checks and results in DLPe reading unallocated memory.
2, via an encrypted message sent to DLPe which when decrypted results in DLPe reading unallocated memory.
5, via crafting a complex webpage that will trigger the Web Gateway to block the user accessing an iframe.
2, via running McAfee Tray with elevated privileges.
0, via tricking the administrator to click on a carefully constructed malicious link.
5, via a crafted web page that contains an iframe via does not send an X-Frame-Options HTTP header.
2, via the ePO extension not using a secure connection when testing LDAP connectivity.
2, via specially crafted messages.
1, via execution from a compromised folder placed by an attacker with administrator rights.
0, via carefully placing malicious files in specific locations protected by administrator permission.
2, via carefully constructed POST request extracting incorrectly recorded data from log files.
2, via carefully constructed GET request extracting insecurely information stored in the database.
2, via using the atduser credentials
3, via code injection into EPSetup.exe by an attacker with access to the installer.
1, via unauthorized use of the configuration tool.
0, via generating an authorization key on the client which should only be generated by the network administrator.
0, via carefully constructed HTTP requests.
2, via carefully constructed time based payloads.
0, via carefully constructed HTTP requests.
1, via accessing sensitive files on the system. This was originally published with a CVSS rating of High
4, via a carefully crafted web site.
4, via a carefully crafted web site.
2, via the local folder placed there by an attacker.
4, via a cross site scripting attack.
4, via a crafted DNS Query address field in a JSON API request.
5, by sending a specially crafted request to the Web Interface application.
0, by modifying the PID file in /var/run/jboss-eap/ allowing the init.d script to terminate any process as root.
1, by modifying system files without user's knowledge. Successful exploitation requires uncommon system configuration.
0, by assuming that it is a relative URL
2, by causing libvirt to block.
2, via the onerror parameter in the /__r2/query endpoints.
2, via the iso.3.6.1.4.1.3212.100.3.2.7.4 OIDs. A remote
3, by requesting /images/browserslide.jpg via HTTP. A remote
1, via crafted HTTP POST requests to conference.cgi. A remote
0, by tricking legitimate users into clicking a crafted link.
3,upload an executable to
2, via the ssid parameter.
2, via the encryption parameter.
2, via the key parameter.
2, via the bssid parameter.
3,upload any file to
2, by restoring old data. IBM X-Force ID: 158336.
0, via IPMI using default OpenBMC password even after BMC password was changed away from the default password. IBM X-Force ID: 158702.
5, by spoofing a trusted entity using man in the middle techniques due to not validating or incorrectly validating a certificate. IBM X-Force ID: 160072.
2, via an unprotected API. IBM X-Force ID: 162263.
1, by injecting parameters into setuid files.
0, by unmasking certain secure values in documents. IBM X-Force ID: 171248.
0, via a stack trace due to mishandling of certain error conditions. IBM X-Force ID: 172128.
0, via incorrect autocomplete settings in New Data Server Connection page. IBM X-Force ID: 172129.
0, via incorrect autocomplete settings in New Content Backup page. IBM X-Force ID: 172130.
4,compromise the server. Exploitable unauthenticated command injections exist in YouPHPTube Encoder 2.3 a plugin for providing encoder functionality in YouPHPTube. The parameter base64Url in /objects/getImage.php is vulnerable to
4,compromise the server. Exploitable unauthenticated command injections exist in YouPHPTube Encoder 2.3 a plugin for providing encoder functionality in YouPHPTube. The parameter base64Url in /objects/getImageMP4.php is vulnerable to
4,compromise the server. Exploitable unauthenticated command injections exist in YouPHPTube Encoder 2.3 a plugin for providing encoder functionality in YouPHPTube. The parameter base64Url in /objects/getSpiritsFromVideo.php is vulnerable to
4, via a malicious 'fzsftp' binary in the user's home directory.
2, by using crafted commands.
4, via Ruby's `Kernel.open` method. Processes are vulnerable only if the undocumented method `Nokogiri::CSS::Tokenizer#load_file` is being called with unsafe user input as the filename. This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
5,use l2ping to
4, use a privileged user account.
5, by impersonating a currently logged in session.
2, by leaking memory from the host process.
0, via modifying the contents of a file used by several FortiClientMac processes.
0, by reassembling the image through specific methods.
2," via the """"err"""" parameter of the error process HTTP requests."
2, via attack reports generated in HTML form.
0, by impersonating the LDAP server.
4, via unsetting the keys encryption password in FortiOS 6.2.0
2, via the search field in the webUI.
0, by reusing the stored OAuth token
1,compromise the affected BlueCats network implementation. The attacker would first need to
2, via the void_transaction.php filterType parameter.
2, via the member/index.php main parameter
4, use of a proxy server to obtain cleartext of transport encryption via malicious network proxy.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Intent.
4, via a crafted HTML page.
4, via a crafted APK.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a downloaded .desktop file.
4, via a crafted domain name.
4, via a crafted domain name.
4, via a crafted domain name.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via Apple Events.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via crafted XML data.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted video file.
4, via a crafted string copied to clipboard.
4, via a crafted PDF file.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted URL.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
0, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
5, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via a specially crafted page.
3, via unspecified vectors.
4, via a specially crafted page.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via a specially crafted page.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
2, via Customize Item function.
2, via the application 'Memo'.
2, via the application 'Management of Basic System'.
4, via unspecified vectors.
2, via the application 'Portal'.
2, via the application 'Bulletin'.
2, via the Log Search function of application 'logging'.
2, via the Item function of User Information.
2, via the application 'Work Flow'.
2, via the user information.
2, via the application 'Mail'.
2, via the application 'Portal'.
2, via the application 'Scheduler'.
2, via the application 'Multi Report'.
2, via the Multiple Files Download function of application 'Cabinet'.
2, via the application 'Bulletin' and the application 'Cabinet'.
2, via the application 'Address'.
2, via the authentication of Cybozu Garoon.
2, via the Login Screen.
2, via the application 'Cabinet'.
3, via unspecified vectors.
4, via unspecified vectors.
1, via vulnerable application and conduct phishing attacks.
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via updating user's 'Basic Info'.
2, via the process of login.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the application 'E-Mail'.
2, via the application 'Scheduler'.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a malicous wireless LAN access point. A successful exploitation may result in a malicious file being downloaded/executed.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the Management Page.
2, via the Management Page.
2, via the Analysis Object Page.
3, via HTTP referer.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a specially crafted image.
4, via unspecified vectors.
3, via unspecified vectors.
2, via Command Line Interface (CLI).
1, via Web User Interface.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via a specially crafted URL.
2, via the 'Customapp' function.
2, via the application 'Address'.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via RSS reader.
4, via a specially crafted page.
4, via unspecified vectors.
2, via the keyword parameter (aka $search_term or the Search field).
4, via a .. (dot dot) and %2f to the default URI.
2, via the API.
5, by navigating to the SMTP configuration page. NOTE: the vendor considers this a best-practice violation but not a vulnerability. The vendor plans to fix it at a future time.
2, via directory traversal sequences.
4, via a crafted YAML file.
3, by uploading with a safe file extension and then renaming with a mixed-case variation of the .php extension
2, via an HP Touchpoint Analytics system service.
1, via TCP port 59777 requests on the local Wi-Fi network. This TCP port remains open after the ES application has been launched once
1," by using the """"Perform a right-click operation to access a forgotten dev menu to insert user passwords that otherwise would require the user to accept a second-factor request in a mobile app."""" approach"
5,send IOCTL 0x8016E000 along with a user defined string to
4, via a specially crafted packet
2, via Command Injection in crafted Tidal Job Buffers (TJB) parameters. NOTE: this vulnerability exists because the CVE-2014-3272 solution did not address AIX operating systems.
1, via forging that DLL.
4, via a field in the traffic group interface.
2, via the HTML source code.
1, by using vectors involving portal/List/index and list/:id to inject this code into data\conf\route.php
2, via the SubscribeURL field in SubscriptionConfirmation JSON data.
4, via a %0d%0a in a URI.
1, by changing the Wi-Fi network password to include crafted escape characters. This is related to the WebUI module.
3," by crafting a long buffer in the """"Comment"""" field of an IP reservation form in the admin panel. This is related to the CcspCommonLibrary module."
1, by crafting an AJAX call responsible for DDNS configuration with an exactly 64-byte username
0, via the uri parameter
1, by putting files inside the web directories.
1, by using % characters within the extension
4, via an admincp.php?app=apps&do=pack request.
4, via an admincp.php?app=apps&do=uninstall request.
1,use both label text and references text to
4, via a specially crafted SDP protocol violation.
4, via shell metacharacters in a crafted /HNAP1 request. This occurs when the GetNetworkTomographyResult function calls the system function with an untrusted input parameter named Address. Consequently
4, via a crafted /HNAP1 request. This occurs when any HNAP API function triggers a call to the system function with untrusted input from the request body
0, via the subject parameter in wp-content/plugins/wp-support-plus-responsive-ticket-system/includes/ajax/submit_ticket.php.
2, by reading the ressources/settings.inc ldap_admin and ldap_password fields
4, via shell metacharacters in the index.cgi?action=View_Cert certname parameter.
2, via the GetClientInfo HNAP API. Consequently
4, via the SetFactoryDefault HNAP API. Consequently
4, via an admin/database_backup.php?action=import&dopost=deldir&tbname=../ URI.
2, via the (1) page
2, via fields as follows: (1) Title
4, via a crafted DTD in the SAML authentication system.
4, via DBusHelperProxy.cpp. Certain types can cause crashes
2, via the portal/admin_category/addpost.html alias parameter because the mishandling of a single quote character allows data/conf/route.php injection.
5, via a crafted swf file that triggers a memory allocation failure
5, via a crafted swf file that triggers a memory allocation failure.
4, by sending a long message to the client.
4, via a crafted wasm file.
5, via a crafted prefix value because of configuration file mishandling in the N=83 case
3, by making a cgi-bin/qcmap_web_cgi Page=GetWiFi_Setting request and then reading the wpa_security_key field.
3, by making a /cgi-bin/qcmap_auth type=getuser request and then reading the token field. This token value can then be used to change the Wi-Fi password or perform a factory reset.
2, via the (1) destination parameter to delete feature; the (2) destination parameter to edit feature; (3) content parameter in the profile feature.
1, via specially crafted IOCTL requests and elevate system privileges. This occurs because the device object has an associated symbolic link and an open DACL.
4, via a \.. to port 6677. Additionally
2, via the SetWLanRadioSettings HNAP API to the web service provided by /bin/goahead.
2, via login page customization.
4, via a crafted HDF5 file. This issue was triggered while repacking an HDF5 file
0, by clicking the Copy button twice.
4, via action=del&filename=../ directory traversal.
4, via index.php?s=Admin-Data-Down-id-..\ or index.php?s=Admin-Data-Del-id-..\ directory traversal.
2, via an incorrect authorisation check.
4, via a Cross-site request forgery (CSRF) vulnerability.
2, via an information disclosure vulnerability.
4, via a Server Side Request Forgery (SSRF) vulnerability due to a logic bug in the JiraWhitelist class.
3," by going to the """"Setting -> Mailbox configuration -> Registration email template"""" screen"
1, via crafted dimensions for the verification code image.
4, via a filename containing two image extensions and ../ sequences
3, via log files.
4, via TELNET.
2, via the network interface. Affected hardware products: Bosch DIVAR IP 2000 (vulnerable versions: 3.10; 3.20; 3.21; 3.50; 3.51; 3.55; 3.60; 3.61; 3.62; fixed versions: 3.62.0019 and newer)
3, by triggering vfs_read failures.
1, use credentials from a prior HTTP request for authorization purposes. Affected releases are TIBCO Software Inc. TIBCO ActiveMatrix BusinessWorks: versions up to and including 6.4.2.
2, by entering maliciously crafted XML in an existing field.
0, via the database_host parameter if the installer remains present in its original directory after installation is completed.
2, via the form[name] parameter in a mod=column request
5, by using action=installmodule to upload a ZIP archive
0, via the n_file parameter to visualizza_contratto.php with invalid arguments (any non-numeric value)
2, via the ntp_server parameter in an ntp_sync.cgi POST request.
2, by setting the arguments to the ActiveX method. This can be leveraged for remote code execution.
1," by leveraging the """"publish Bash shell scripts"""" feature to insert """"/Applications/Utilities/Terminal app/Contents/MacOS/Terminal"""" into the TCP data stream."
1," by replacing its signatures with a """"standalone"""" or """"timestamp"""" signature."
4, via SSH (on TCP port 22345) and escalate to root (because the password for root is the WebUI admin password concatenated with a static string).
1, via crafted XAML objects.
4, via a new autodiscovery job.
2, via the API when using fusekeys and malicious user id.
1, via write access to config.inc.php and import_xiconfig.php.
2, via the xiwindow parameter.
2, via the product_option[] parameter.
5, by renaming a previously uploaded file to have a .php extension.
3, via API key issues.
4, via a crafted serialized Hessian object because blacklisting of com.caucho.naming.QName and com.sun.org.apache.xpath.internal.objects.XString is mishandled
0, via the opt[base][BG_SITE_NAME] parameter to the bg_console/index.php?m=opt&c=request URI.
2, via an HTTP session on port 10000
0, by hijacking the insecure communications with the service. This vulnerability also affects Telekom MagentaCLOUD through 5.7.0.0 and 1&1 Online Storage through 6.1.0.0.
4, via a direct request to the p2p/api/ or p2p/lib/ or p2p/images/ URI.
4, via unspecified vectors.
5, by sending a series of \x19\xb2\x00\x00\x00\x06\x43\x01\x00\xac\xff\x00 (aka UID 0x43) requests to TCP port 502.
2, via the brandUrl parameter.
2, via the url parameter.
2, via the page parameter.
2, via many simultaneous sdctl/comm/lite_auth/ requests.
5, via a client that makes many connection attempts and drops certain packets.
2, via many simultaneous /?Key=PhoneRequestAuthorization requests.
4," via """"<!--#exec cmd="""" in a .shtml file to ck_upload_handler.php."
1," by leveraging the """"Java file manager"""" and """"Upload and Download"""" privileges to upload a crafted .cgi file via the /updown/upload.cgi URI."
0, by loading an image
4, via shell metacharacters to handle_load_config.php.
4, via a 0xffff datalen field value.
4, via a ZIP bomb.
0, via a large crontab file because the calloc return value is not checked.
0, via a large crontab file because an unlimited number of lines is accepted.
4, via a crafted video file in Matroska format
5, via a crafted video file in Matroska format
4, via a crafted video file in Matroska format
2, via an unpublished API.
4, via a crafted Markdown file
5, by visiting index.php?s=Admin-Index to modify the set of allowable file extensions
0, by entering this code in a template/default_pc/html/art Edit action. This occurs because template rendering uses an include operation on a cache file
1, via many simultaneous /?Key=PhoneRequestAuthorization requests.
4, via a client that makes many socket connections through a configured port.
1, via many simultaneous /start-stop requests.
2, via an IMG element with a data: URL
2, via an IMG element with a data: URL
1, by using the pidfields and idfields parameters
1,construct documents containing hyperlinks pointing to
3, by sending a serialized .NET object in the HTTP POST parameter __CSRFTOKEN.
5, by sending a serialized .NET object in an HTTP POST parameter.
4, via user/save_list.php?ACSION=&type=email&category=white&locate=big5&cmd=add&new=hacker@socialengineering.com&new_memo=&add=%E6%96%B0%E5%A2%9E without any authorizes.
4, via useradmin/cf_new.cgi?chief=&wk_group=full&cf_name=test&cf_account=test&cf_email=&cf_acl=Management&apply_lang=&dn= without any authorizes.
4,use GETS method to
4, via /admin/academic/studenview_left.php StudentID parameter.
4, via invalid encoding.
4, by trying to fetch a non-existing page. When the non-existing page is requested
3, by creating a new user account
2, via the id parameter.
4, via a crafted file
5, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
4, via a crafted file
2, by using sudo with the tcpdump command
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access. The list of affected products is provided in intel-sa-00343: https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00343.html
4, via local access.
4, via local access. The list of affected products is provided in intel-sa-00343: https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00343.html
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access. The list of affected products is provided in intel-sa-00330: https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00330.html
4, via a side channel with local access. The list of affected products is provided in intel-sa-00334: https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00334.html
4, via local access.
1, via adjacent access
4, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via adjacent access.
3, via adjacent access.
3, via adjacent access.
4, via local access. This affects Intel� Smart Sound Technology before versions: 10th Generation Intel� Core&#8482; i7 Processors
4, via local access.
4, via local access.
3, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via network access.
4, via local access.
4, via local access.
0, by correcting the way Microsoft OneDrive App for Android handles sharing links.
4, via a stack-based out-of-bounds read. It only occurs on systems where gethostname() does not have '\0' termination of the returned string if the hostname is larger than the supplied buffer. (Linux systems are not affected because the buffer is always large enough. OpenBSD systems are not affected because the returned hostname always has '\0' termination.) Under some conditions
4, via unescaped input.
4, via WebDisk UAPI calls (SEC-541).
1, via Branding API calls (SEC-543).
4, via a cpsrvd rsync shell (SEC-544).
4, via a cpsrvd rsync shell (SEC-545).
4, via PassengerApps APIs (SEC-546).
5, via adjacent access. An unauthenticated
2, via short writes or urgent data
2, via an unsecured ajax action in com/classes/Ajax.php. It is possible for an unauthenticated attacker to insert malicious JavaScript in several of the popup's fields by sending a request to wp-admin/admin-ajax.php with the POST action parameter of sgpb_autosave and including additional data in an allPopupData parameter
0, via the wps_sta_enrollee_pin parameter in a set_sta_enrollee_pin.cgi POST request. TRENDnet TEW-632BRP 1.010B32 is also affected.
4, via a POST to ntp_sync.cgi with a sufficiently long parameter ntp_server.
0, via the dns_query_name parameter in a dns_query.cgi POST request. TRENDnet TEW-632BRP 1.010B32 is also affected.
0, via the date parameter in a system_time.cgi POST request. TRENDnet TEW-632BRP 1.010B32 is also affected.
4, via shell metacharacters in the fileName POST parameter.
2, via the From field of an email.
4,send an IOCTL to
4, via a direct request to val_users.php3.
4, via shell metacharacters in the PKG parameter to uninstall.php3.
2, use in wired and wireless mediums through insecure communication channels exposing sensitive information to a remote attacker with ability to intercept network traffic.
0," by sniffing the network for an """"Authorization: Basic"""" HTTP header."
5, by uploading a .php file in the admin/js/ directory.
0, via the GET parameter file.
2, by injecting PHP code into any POST parameter when saving global settings.
0, by saving the code to be executed as the wkhtmltopdf path via admin/save-settings.php.
0, by fixing the way the ASP.NET Core cookie parser handles encoded names.
2, via the POST parameter imgName (for the new name) and imgUrl (for the current file to be renamed).
0, via the GET parameter crdir
2, via the POST parameter inpCurrFolder.
2, via the POST parameter data.
0, via the GET parameter p.
0, via the GET parameter p.
0, via the GET parameter p.
0, via the GET parameter p.
0, via the GET parameter p.
0, via the GET parameter p.
0, via the GET parameter p.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
0, via the GET parameter sort.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
5, via a crafted request.
2, via the /domains/list URI.
4, via upload.php. The extension .php7 bypasses file upload restrictions.
4," via """"persist-config --command /bin/sh"""" because of the Sudo configuration."
4, via Sudo.
4, via a crafted filename in the users' image upload section.
4, via a specific communication service.
3, by providing a crafted FIT image to a system configured to boot the default configuration.
4, via ignite-jta or quartz-core: org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup
4, via a Delete call.
5, use them to log into the cluster as any user who logged into the cluster via the WebUI or via the command line in the last 24 hours. Once the backup is older than 24 hours the OAuth tokens are no longer valid.
0, by reading the log file. The highest threat from this vulnerability is to data confidentiality.
3, via cron jobs.
4, via v-change-user-password (aka the user password change script).
5, via shell metacharacters that are mishandled on an su command line in app/Lib/SudoMessageInterface.php.
2, via the Test Connection feature (aka testGrafanaConnection) of the Grafana Module.
3," by placing a hostname containing """"dev"""" or """"staging"""" in the HTTP Host header."
4," via a modified Email ID to the """"Select Role of the User"""" page. NOTE: A contributor to the CodeIgniter framework argues that the issue should not be attributed to CodeIgniter. Furthermore"
0, by modifying the HTTP client-server data stream so that the Location header is associated with attacker-controlled executable content in the postDownload field.
4, via a crafted packet.
4, via a crafted project file.
4, via AAMRequestProcessor servlet.
2, via the webcam and microphone due to a missing permission request handler.
4, via RPC
4, via RPC.
1, via RPC from a Low Integrity process via TempShutDownMachine.
3, via RPC from a Low Integrity process.
2, via RPC from a Low Integrity process.
4, via RPC.
5,create a denial-of-service condition on affected installations of C-MORE HMI EA9 Firmware version 6.52 to
4, via HTTPS. The issue results from the lack of proper validation of the certificate presented by the server. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root. Was ZDI-CAN-9647.
5, use of an inappropriate encryption algorithm. An attacker can leverage this in conjunction with other vulnerabilities to execute code in the context of root. Was ZDI-CAN-9649.
4, via a crafted binary protocol header to try_read_command_binary in memcached.c.
2, by measuring cache usage during an import.
2, via the page parameter to service-monitoring/src/index.php. This vulnerability is fixed in versions 1.6.4
1, via HTML content in a MediaWiki page.
4, via a payload hosted by an attacker-controlled web page.
2, via the deviceName POST parameter.
2, via the WifiName POST parameter.
4, uses a crafted reply by an authoritative name server to amplify the resulting traffic between the recursive and other authoritative name servers. Both types of service can suffer degraded performance as an effect. This is triggered by random subdomains in the NSDNAME in NS records. PowerDNS Recursor 4.1.16
3, by writing to a PHP file in the web directory. (Also
4, via a crafted Link Layer packet(Equivalent to CVE-2019-17060
3, via vectors involving a Wi-Fi session with GPS enabled
0,create hard links in some ESET directories and then force the product to
4, via SSRF). Note: The ability to upload visualization plugins requires administrator privileges.
4, via shell metacharacters in the index.cgi cert_issuer
0, by assigning an arbitrary bank transaction ID during the payment-details entry step.
4, via tun_darwin.go or tun_windows.go. A user can also use Nebula to execute arbitrary code in the user's own context
2, via the wp_ajax_core37_lp_save_page (aka core37_lp_save_page) AJAX action.
2, via the c37_wpl_import_template admin-post action (which will execute in an administrator's browser if the template is used to create a page).
2, via the accept-to-be-teacher action parameter.
2, via the idx_update_recaptcha_key AJAX action and a crafted idx_recaptcha_site_key parameter
2, via the unsecured rankmath/v1/updateRedirection REST API endpoint. In other words
2, via the unprotected wp_ajax_cf7dp_save_settings AJAX action and the ui_theme parameter. If an administrator creates or modifies a contact form
4, via a \\.\SecureDocDevice handle. Exploiting this vulnerability results in privileged code execution.
0, by writing a JSP file to the webroot directory via directory traversal.
4, via add_cars.php. There are no upload restrictions for executable files.
2, via CSV injection if a wp-admin/index.php?page=search-meter Export is performed.
4, via info.php4.
0, by reading the configuration file.
4, by uploading and executing an ASHX file.
4, via a malformed window-function query because the AggInfo object's initialization is mishandled.
4, via authenticated api/index.php REST API calls. NOTE: the API is not available by default.
0, by adding additional roles to their account.
2, via the fileName parameter.
0, via Lua bytecode embedded in an uploaded .crawlrc file.
2, via the view/settings-form.php woe_post_type parameter.
4, via a crafted URL
3, by modifying a privileged user's task. This can also affect all users who are signed in on the system if a shell is placed in a location that other unprivileged users have access to.
4, via a server mode packet with a spoofed source IP address
4, via a servlet call.
0,use OGNL scripting which offers the possibility to
5, by setting load_examples=False in the config then you are not vulnerable.
5, via an api.php?action=query&meta=globaluserinfo&guiuser= request. In other words
4, via a homoglyph attack
1, via crafted post content.
4, via CSV.
0, by manipulating an id field in the POST request for altering an address.
4,send HTTP POST request to
1, via Local File Inclusion.
5, by sending a crafted request.
4, via a crafted packet to UDP port 4800. NOTE: Moxa Service is an unauthenticated service that runs upon a first-time installation but can be disabled without ill effect.
2, by calling one of several driver routines that map physical memory into the virtual address space of the calling process. This could enable low-privileged users to achieve NT AUTHORITY\SYSTEM privileges via a DeviceIoControl call associated with MmMapIoSpace
4, via malicious L2CAP frames.
1, via crafted SNMP packets to snmp_ber_decode_string_len_buffer in os/net/app-layer/snmp/snmp-ber.c.
3, by writing to the /tmp/hl2_relaunch file
4, via a ../ sequence and
4, via /isg/opendoor.php.
4, via /index.php.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via network access.
3, via physical access.
3, via physical access.
3, via physical access.
3, via physical access.
4, via adjacent access.
4, via adjacent access.
4, via network access.
3, via local access.
4, via adjacent access.
4, via local access.
4, via adjacent access.
3, via local access.
4, via adjacent access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via network access.
4, via network access.
3, via local access.
4, via local access.
4, via network access.
4, via network access.
4, via local access.
4, via adjacent access.
4, via adjacent access.
3, via network access.
4, via local access.
4, via physical access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
5, by selecting a different origin and removing focus from the input element. This vulnerability affects Firefox < 76.
4, via a directory traversal to bigbluebutton.properties. NOTE: this issue exists because of an ineffective mitigation to CVE-2020-12112 in which there was an attempted fix within an NGINX configuration file
4, via %2e%2e%2f directory traversal
4, via NuGet.
0, by modifying an ASPX template.
0, by reconfiguring the Converter Executable setting from ffmpeg.exe to a different program.
4, via an X-Forwarded-For client HTTP header to the getIp function.
4, via a crafted HTTP request with sources/users.queries.php newValue directory traversal.
0, by sending specifically constructed requests without authentication This issue affects: WAGO 750-362
4, via a get parameter.
1, by using the xp_cmdshell stored procedure.
3, by sending a single email.
5, by sending a single email.
2, via directory traversal in a plugin name to rcube_plugin_api.php.
4, via shell metacharacters in a configuration setting for im_convert_path or im_identify_path.
2, via an Integer Overflow and a Buffer Overflow because a banner can trigger a line number to CSI functions that exceeds INT_MAX.
2, by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader
4, via a non-alphanumeric menu parameter.
4, via a SAML assertion that lacks a Signature element
2, via the PATH_INFO to home.php.
3, via browser JavaScript.
0, via the go parameter to faq/faq_admin.php or shoutbox_panel/shoutbox_admin.php
0, via the cat_id parameter to downloads/downloads.php or article.php. NOTE: this might overlap CVE-2012-6043.
1, via concurrent calls to dw_spi_irq and dw_spi_transfer_one
0, via mail log strings (SEC-505).
2, via the account backup feature (SEC-540).
4, via IPv4/IPv6 address fields.
2, via the UserID of Admin Users.
2, via Name parameter of Storage Connectors.
4, via /index.php
4, via /index.php
5,upload a profile image to
3, by uploading a custom generated ZIP file and leveraging the file extraction feature present in the web application. The extracted files will be placed in the targeted user folders.
0, by scanning for their advertising beacons.
0, by observing cleartext payload data. This allows re-identification of devices
3, uses all of them. This allows for re-identification of a device
4, via a symlink attack that uses chown
5,use the Linux-based Running Average Power Limit (RAPL) interface to
0, by linking the path to a directory containing code executed by root.
1, via crafted packet data to the built-in modem because 0x800b3e94 (aka the IF subcommand to top-level command 7) has a stack-based buffer overflow.
0, via the size parameter
0, via the key parameter in a login request.
2, via the TASKS_LIST__pt.querystring parameter.
3," via the """"Content>File Uploads"""" screen. These files can contain JavaScript code and thus lead to Stored XSS."
4, via a getFileProtectionSettings call to AjaxServlet.
2, via the admin/index.php?nv=users&op=user_add URI.
4, via an admin/index.php?nv=users&op=edit&userid= URI. The old password is not needed.
2, by sending an unauthenticated crafted packet over the network
2, by placing shell metacharacters in RRDdatabase_status_path (via a main.get.php request) and then visiting the include/views/graphs/graphStatus/displayServiceStatus.php page.
0, via HTML source code
2, via clicking on a link
3, via API
1, via embedding javascript or HTML tags in a GET request.
4, via a crafted SecurEnvoyReply cookie.
4, via admin/index.php?id=filesmanager because
4, via a /modules/ POST request.
4, via Groovy Script.
4, via a crafted H.264 Annex-B video (.avi for example) file.
4, via a Trojan horse I2PSvc.exe file because of weak permissions on a certain %PROGRAMFILES% subdirectory.
1, via Compose Msg
2, via command injection in the servicestart parameter.
0,upload and overwrite any writable files outside the intended folder. This can lead to
4, via macros.
2, via the debug interface and exception handling.
2, via the debug interface by utilizing the CPU or DMA module.
2, via the debug interface.
4, via a power glitch and a specific flash patch/breakpoint unit configuration.
2, via the debug interface and exception handling.
1, via fault injection into inter-IC bonding wires (which have insufficient physical protection).
2, via the debug interface by utilizing the CPU.
2, via the probing of easily accessible bonding wires and de-obfuscation of the observed data.
4, via a power glitch and a specific flash patch/breakpoint unit configuration.
2, via the debug interface by utilizing the DMA module.
0, by reading the configuration file.
4, via a proxy operation.
4,use Google Assistant to
0, via the widgetId parameter to service-monitoring/src/index.php. This vulnerability is fixed in versions 1.6.4
0, via the widgetId parameter to host-monitoring/src/toolbar.php. This vulnerability is fixed in versions 1.6.4
0, via the order parameter of a wpdLoadMoreComments request. (No 7.x versions are affected.)
4, via a hostname with a trailing space character
0, by guessing the ID of the file. This issue affects: Drupal Core 8.8.x versions prior to 8.8.10; 8.9.x versions prior to 8.9.6; 9.0.x versions prior to 9.0.6.
4, via a crafted address in an msi-x mmio operation.
5, by uploading a malicious aspx file. The issue is caused by insufficient file extension validation and insecure file operations on the uploaded image
0, by providing an address near the end of the PCI configuration space.
4, via a crafted mm_index value during an ati_mm_read or ati_mm_write call.
4, via a crafted DLL in the current working directory.
4, via a crafted DLL in the current working directory when FoxitStudioPhoto366_3.6.6.916.exe is used.
0, by predicting transmit timestamps for use in spoofed packets. The victim must be relying on unauthenticated IPv4 time sources. There must be an off-path attacker who can query time from the victim's ntpd instance.
2, via the viewMode
0, via a Title parameter that is mishandled in a CSV export.
4, via ticket/card.php?action=create with the subject
4, via a side-channel analysis
4, via a crafted SSDP message due to a NULL pointer dereference in the functions FindServiceControlURLPath and FindServiceEventURLPath in genlib/service_table/service_table.c.
2, via the File Manager feature.
2, via the File Repository Manager feature.
3, by performing a header injection in HTTP responses
4, via a leaked password-reset token of the admin. (As an admin
2, via multiple parameters through Unicode Transformations (Best-fit Mapping)
2, via the savefilepath field.
2, via the form/formDeviceVerGet URI
4, via a Change Name or Change Surname operation.
4, via a Trojan horse .exe file
2, via an unauthenticated crafted HTTP request. This affects C110
2, via an unauthenticated crafted HTTP request. This affects C110
2, via an unauthenticated crafted HTTP request. This affects C110
2, via an unauthenticated crafted HTTP request. This affects C110
4, via a crafted CLI command. This affects C110
2, via an unauthenticated crafted HTTP request. This affects C110
4, via a crafted HTTP request. This affects C110
1,construct documents containing hyperlinks pointing to
5, via shell metacharacters in the host field of the ping command. Exploitation through CSRF might be possible. NOTE: software maintainers consider the report invalid because it refers to an old software version
5," via a crafted filename in the users' image upload section because of a lack of entity encoding. NOTE: this issue exists because of an incomplete fix for CVE-2020-10596. The vendor states """"this is not a massive issue as you are still required to be logged into the admin."""""
3, by controlling a register.
4, via a ticket.
0, by using either their username or the email address associated with their account. However
4, via a SQL injection attack that uses the User Name or Password field on the login page.
2, via the tccj-content parameter. This is displayed in the page footer of every front-end page and executed in the browser of visitors.
3,upload JavaScript files that are dangerous for clients to
3, via SQL injection in central/executar_login.php.
2, via the action kick_ban_wifi_mac_allow with a sufficiently long qcawifi.wifi0_vap0.maclist key.
2, via the action st_dev_connect
2, via the action set_sta_enrollee_pin_wifi1 (or set_sta_enrollee_pin_wifi0) with a sufficiently long wps_sta_enrollee_pin key.
2, via the action wifi_captive_portal_login with a sufficiently long REMOTE_ADDR key.
2, via the action auto_up_fw (or auto_up_lp) with a sufficiently long update_file_name key.
2, via the action ping_test with a sufficiently long ping_ipaddr key.
4, via a large number
2, via an Cross Site Scripting (XSS) vulnerability by pasting javascript code into the editor field.
2, via an Improper authorization vulnerability.
2, via an Cross Site Scripting (XSS) vulnerability by uploading a html file.
4, via a Cross-Site Scripting (XSS) vulnerability
4, via a Server-Side Request Forgery (SSRF) vulnerability.
4, via a Man-in-the-Middle (MITM) attack.
4, via insecure deserialization
4, via a cross site scripting (XSS) vulnerability. The affected versions are before version 8.5.4
2, via an Insecure Direct Object References (IDOR) vulnerability in the Administration Permission Helper. The affected versions are before version 7.13.6
4, via a Cross-Site Scripting (XSS) vulnerability in user macro parameters. The affected versions are before version 7.4.2
4, via a Regex-based Denial of Service (DoS) vulnerability in JQL version searching. The affected versions are before version 7.13.16; from version 7.14.0 before 8.5.7; from version 8.6.0 before 8.10.2; and from version 8.11.0 before 8.11.1.
1, via an Information Disclosure vulnerability in the /browse.PROJECTKEY endpoint. The affected versions are before version 7.13.7
1, via an Information Disclosure vulnerability in the /ViewUserHover.jspa endpoint. The affected versions are before version 7.13.6
1, via an Information Disclosure vulnerability in the HTTP Response headers. The affected versions are before version 7.13.18
4, via a Cross-Site Scripting (XSS) vulnerability in Jira issue filter export files. The affected versions are before 8.5.9
4, via a missing permissions check in the ActionsAndOperations resource. The affected versions are before 7.13.18
5, by creating a specially crafted GitHub issue.
5, by creating a specially crafted GitHub issue comment.
4, via user-supplied regex in EyeQL. The affected versions are before version 4.8.4.
4, via a Denial of Service (DoS) vulnerability in the MessageBundleResource within Atlassian Gadgets. The affected versions are before version 4.8.4.
2, via an Information Disclosure vulnerability in the x-asen response header from Atlassian Analytics. The affected versions are before version 4.8.4.
5, via a template injection vulnerability in Jira smart values using mustache partials. The affected versions are those before version 7.1.15.
4," via societe/document.php in which """"disabled"""" is changed to """"enabled"""" in the HTML source code."
3, via unknown vectors.
4, via shell metacharacters in the zone field (obtained from the web interface).
2, via the filter parameter. This can lead to remote command execution because the product accepts stacked queries.
2, via the `dumpxml` command.
4, uses c-ares lib. The highest threat from this vulnerability is to this service availability.
1, use Apache SSO or Open ID Connect external authentication sources
0, via vectors involving directory junctions.
2, via the Script Content box on the Add Cron Job screen.
1, via template import for the midwinter theme.
2, via the id parameter.
4, use a crafted request to initiate a session with limited functionality
1,use the internal WebSockets API for CodeMeter (All versions prior to
4,compromise Oracle Security Service. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Siebel UI Framework. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Hyperion BI+. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Applications Framework. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle iLearning. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Financial Services Analytical Applications Infrastructure. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle Financial Services Analytical Applications Infrastructure. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Hospitality Reporting and Analytics. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Primavera Unifier. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Application Object Library. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle CRM Technical Foundation. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Retail Customer Management and Segmentation Foundation. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle Retail Customer Management and Segmentation Foundation. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Hyperion BI+. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Hyperion BI+. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle CRM Technical Foundation. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Hospitality RES 3700. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Hospitality Suite8. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle Applications Manager. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle Applications Manager. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle FLEXCUBE Universal Banking. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Banking Corporate Lending. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Banking Payments. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise RDBMS Security. Successful attacks of this vulnerability can result in unauthorized access to
4, via a long line in a response that is mishandled by nic_format_buff.
4, via shell metacharacters in a modified /system?action=ServiceAdmin request (start
2, via the wp-admin/post.php Client Name
2, via the Title (aka imageTitle) or Caption (aka description) field of an image to wp-admin/admin-ajax.php.
2, via the user_email
2, use an AST transforming annotation such as @Grab.
1, by manipulating the Clean & Optimize feature with an NTFS junction and an Object Manager symbolic link.
1, by sending packets
4, via backup/plugin.php.
2, via the Topology-Map.php xo parameter.
2, via the Assets-Management.php sn parameter.
2, via the Topology-Routes.php rtr parameter.
2, via the Assets-Management.php chg parameter.
2, via the Monitoring-Incidents.php id parameter.
2, via the snmpget.php ip parameter.
2, via the Monitoring-Setup.php tet parameter.
2, via the Monitoring-Map.php hde parameter.
2, via the Topology-Linked.php dv parameter.
2, via the Reports-Devices.php page st[] parameter.
0, by sniffing unencrypted UDP traffic.
4, via a web-administration request that lacks a password parameter.
3, by leveraging administrative privileges to set a crafted server name.
2, via long input values.
0, by sniffing unencrypted UDP traffic.
4, via a web-administration request that lacks a password parameter.
1, by leveraging administrative privileges to set a crafted server name.
2, via long input values.
1, by sniffing unencrypted UDP traffic.
4, via a web-administration request that lacks a password parameter.
0, by leveraging administrative privileges to set a crafted server name.
2, via long input values.
2, use the _Previewers_ plugin (>=v1.10.0) or the _Previewer: Easing_ plugin (v1.1.0 to v1.9.0). This problem is fixed in version 1.21.0. To workaround the issue without upgrading
5, by unserializing the form without any restrictions. This was fixed in 3.0.2.328.
0, by leveraging the ability to create a custom field with a crafted field name.
3," via MySQL """"select * from Administrator_users"""" and """"select * from Users_users"""" requests."
4, via a crafted DTD in an XML request.
4, via a shell metacharacter in the ping
1, by manipulating malicious flagged file locations with an NTFS junction and an Object Manager symbolic link.
0, by leveraging improper access to a certain error field.
1, by using the p->serial_in pointer which uninitialized.
2, via Directory Traversal
1, by using opportunistic locks.
1, via intercepting network traffic. Since 1.5
3, uses IPC (Inter-Process Communication) primitives to enable the processes to cooperate. The remotely callable methods from remotable objects available through interprocess communication allow loading of arbitrary plugins (i.e.
4, via capture-replay if TLS is not used to protect the underlying communication channel.
2, use this information to launch further attacks.
5, via a brute-force attack.
4, via a content-based blind SQL injection attack.
0, by tricking that user to click on a website controlled by the attacker.
4, via a network accessible transporter service. It is also possible to create or delete backup repositories.
2, via the key name.
2, via the last two URL parameters (through which installed packages names and versions are reported).
3, via the order[0][dir] field on POST requests to /datatables/data.
4, by posting a new comment.
0, via the req parameter of the /module/reportdata/ip endpoint.
2, via the last URL parameter of the /module/softwareupdate/get_tab_data/ endpoint.
4, via a crafted patch file.
1, by leveraging access to a legitimate key card
2, use this vulnerability to access sensitive data related to the target user&#8217;s Origin account
5, via shell metacharacters in the lanIp POST parameter.
3, via the TPF_XPAR1 parameter.
5, by generating a single Kerberos Pre-Authentication Failed (ID 4771) event on a Domain Controller.
2, via the IPS and WAF logs dashboard.
0, via the name parameter of various sections of the server.
2, via the name parameter of Deployment Packages.
2, via the exportId parameter.
4, via a malformed payload.
2, via an unauthenticated request with a predictable URL.
4, via social engineering.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via crafted Intents.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted URL.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted WebRTC stream.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted filesystem.
4, via a crafted WebRTC packet.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious file.
4, via a malicious file.
4, via a malicious file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via malicious network traffic.
4, via a crafted SCTP packet.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via Unauthenticated code injection over the network.
2, via authenticated code injection over the network.
2, via remote HTTP requests that insert this code into a log file and then traverse to that file.
1, by using revoked certificates. NOTE: there may be counterarguments related to backwards compatibility.
5, by sending a high rate of specific packets to the device
2, by saving it into a text Custom Field
2, via the repair option. This applies to installations that have a TRANSFORM (MST) with the option to disable the installation of the Nomad module. An attacker may craft a .reg file in a specific location that will be able to write to any registry key as an elevated user.
0, by sending specific packets requiring special processing in microcode that the flow cache can't handle
4, via a crafted PDF file. This is fixed in v9.51.
5, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted eps file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
4, via a crafted postscript file. This is fixed in v9.51.
4, via a crafted postscript file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
5, via a crafted eps file. This is fixed in v9.51.
4, via a crafted PDF file. This is fixed in v9.51.
2, via the keyword parameter.
5,create a Denial of Service (DoS) against the daemon or execute arbitrary code in the system with root privilege. This issue affects Juniper Networks Junos OS: 17.3 versions prior to
5, by sending a crafted packet over the network. This denial of service attack exposes Improper Input Validation. After halting
4, via local access. The vulnerability allows a local user to corrupt system files: a local user can create a specially crafted symbolic link to a critical file on the system and overwrite it with privileges of the application.
4, via a crafted server response
1, by impersonating the server.
1, by sending packet data to UDP port 5000.
3, by retransmitting EAPOL Msg4/4.
2, via the service-cmds parameter in cyrus.php. These commands are executed with root privileges via service_cmds_peform.
1, by supplying arbitrary urgent data pointer offsets within TCP packets including beyond the length of the packet.
5, by supplying and invalid fragmentation offset value specified in the IP header. This is only impacts builds with both CONFIG_EXPERIMENTAL and CONFIG_NET_TCP_REASSEMBLY build flags enabled.
4, via a crafted PDF file. This is fixed in v9.51.
5," by injecting a malicious payload into the """"Task Detail"""" comment window of the """"/dotAdmin/#/c/workflow"""" component."
5," by sending a crafted HTTP request to """" /index.php?s=/admin-tpl-del&id=""""."
4," by sending a crafted HTTP request to the """" Admin/DataAction.class.php"""" component."
2," by injecting commands via a crafted HTTP request to the component """"/mc-admin/post-edit.php""""."
0," by injecting arbitrary commands into the """"typeid"""" variable of the """"createfolderAjax"""" function in the """"mode_worcAction.php"""" component."
2," by injecting SQL commands into the """"user_phone"""" parameter of a crafted HTTP request to the """"admin.php"""" component."
0," by injecting arbitrary commands in a HTTP request to the """"ewebeditor\3.1.1\kindeditor.js"""" component."
5," by loading a crafted file into the """"lib/common/shapes.c"""" component."
2," by injecting commands into the """"CKEditorFuncNum"""" parameter in the component """"CkeditorUploadController.java""""."
4, via a crafted input entered into the DB Name field.
2," by injecting commands into a crafted HTTP request to the """"do_del()"""" method of the component """"database.admincp.php""""."
2," by injecting commands into the """"referer"""" field of a POST request to the component """"/member/index/login.html"""" when logging in."
2," by injecting crafted commands the data fields in the component """"/controller/publishHotel.php""""."
4, via login.php.
1," by injecting commands into the """"Website SEO Keywords"""" field on the page """"admin/info.php?shuyu""""."
3," by attaching a file with a """".jpg.php"""" extension to the component """"admin/wenjian.php?wj=../templets/pc""""."
2," by injecting commands into the """"Homepage Introduction"""" field of component """"admin/info.php?shuyu""""."
4, via a change in permissions.
4, use of OLE is a security vulnerability unto itself and it is not. See reference document for more details.
4, by adding a crafted script as a link to a new blog post.
2," via the component """" /admin.php?action=page."""""
2," via the component """" /admin.php?action=images."""""
4, use a random salt or IV for its AES-CBC encryption
2, by injecting commands during block rendering of a mathematical formula.
2," by injecting scripts into the parameter """"$cfg_copyright"""" of component """" /admin/web_config.php""""."
2," by injecting scripts into the parameter """"$cfg_switchshow"""" of component """" /admin/web_config.php""""."
4, via a crafted payload inserted into the Post title or Post content fields.
2," via the component """"Simple-Log/admin/admin.php?act=act_edit_member""""."
2," via the component """"Simple-Log/admin/admin.php?act=act_add_member""""."
2," via the """"redirect"""" parameter in the component """"zb_system/cmd.php."""""
2," via the return value """"zzip_file_read"""" in the function """"unzzip_cat_file""""."
5, via a crafted website name by doing an authenticated POST HTTP request to /rukovoditel_2.4.1/index.php?module=configuration/save&redirect_to=configuration/application.
5, via a crafted website name by doing an authenticated POST HTTP request to rukovoditel_2.4.1/install/index.php.
2," via the """"username"""" parameter in the component """"chkuser.php""""."
2," via the component """"/public/index.php""""."
2," via the component """"/nonecms/vendor""""."
2," via the component """"JuQingCMS_v1.0/admin/index.php?c=administrator&a=add""""."
2," via the """"Title"""" parameter in the component """"/coreframe/app/guestbook/myissue.php""""."
2, by injecting malicious code into the 'Title' field of the component '/admin/news'.
2," via the component """"/admin/profile/save_profile""""."
2, via the 'login' function in the component 'app/api/cms/user.py'.
2, by entering scripts in the the 'Username' parameter of the in component 'app/api/cms/user.py'.
2, via the 'Username' parameter in the component 'quokka/admin/actions.py'.
2, via the component 'quokka/utils/atom.py'.
2, via the 'image' widget in the component 'Change Widgy Page'.
2, via the component 'quokka/core/content/views.py'.
2," via the """"photoid%5B%5D"""" and """"photodesc%5B%5D"""" parameters in the component """"index.php?app=photo."""""
2," via the component """"aitecms/login/diy_list.php""""."
5, via mathjax syntax due to a mathjax configuration error in the mathematical formula blocks. This is a different vulnerability from CVE-2020-18221.
5, by converting a crafted PDF file.
4, via a crafted packet.
4, via a crafted packet.
4, via a crafted tif file.
4, via a crafted tif file.
4, via vectors involving a hard link to a log file.
0, by injecting client configurations via vtl (velocity) files.
2, via the 'flag' parameter in the component '/coreframe/app/order/admin/index.php'.
2, via the component 'index.php?m=admin&c=Tool&a=log&file=D%3A%5CphpStudy%5CWWW%5Cindex.php'.
2, by uploading malicious files via the component 'bl-kereln/ajax/upload-logo.php'.
2," via the """"text color"""" field of the component '/admin/web_config.php'."
2, via the component 'admin/upload_file_do.php'.
4, via /admin/functions.php.
4, via a crafted pff file.
4, via a crafted file.
5, via a crafted input.
2, via the typename parameter because the contents of typename.inc are under an attacker's control.
1, via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence
2, via the component 'src/base/PdfDictionary.cpp:65'.
4, via 'IsNextToken' in the component 'src/base/PdfToenizer.cpp'.
5, via 'crc64i' in the component 'nasmlib/crc64'. This issue is different than CVE-2019-7147.
2, via the 'do_checksum' function in 'checksum.c'. It can be triggered by sending a crafted pcap file to the 'tcpreplay-edit' binary. This issue is different than CVE-2019-8381.
4, via a host header injection.
2, via the component '/admin/custom/blog-plugin/add'.
2, via the component '/admin/submit-articles'.
3, via line 54 of the component 'simiki/blob/master/simiki/generators.py'.
3, via line 64 of the component 'simiki/blob/master/simiki/config.py'.
2, via the 'Description' field of the component 'admin/blog/blogpost/add/'. This issue is different than CVE-2018-16632.
4, via /api/content/posts/comments. The javascript code supplied by the attacker will then execute in the victim user's browser.
2, via the component '/admin/tpl.php?page='.
1, via malicious POST request to the component '/index.php?controller=system&action=admin_edit_act'.
2," via the """"Title"""" field found in the """"Add New Forum"""" page by doing an authenticated POST HTTP request to '/Upload/admin/index.php?module=forum-management&action=add'."
2," via the """"Description"""" field found in the """"Add New Forum"""" page by doing an authenticated POST HTTP request to '/Upload/admin/index.php?module=forum-management&action=add'."
1, via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence
1, via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence
1, via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence
2," via the """"invertImage()"""" function in the component """"tiffcrop""""."
2," via the component """"autumn-cms/user/getAllUser/?page=1&limit=10""""."
2," via the component """"/src/main/java/com/dotmarketing/filters/CMSFilter.java""""."
1, via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence
2," via the """"TIFFVGetField"""" funtion in the component 'libtiff/tif_dir.c'."
2, via the 'in _TIFFmemcpy' funtion in the component 'tif_unix.c'.
2, via the 'TemplatePath' parameter in the component 'jfinal_cms/admin/folder/list'.
2, via the 'getFolder()' function in the component '/modules/filemanager/FileManager.java'.
2, via the 'Nickname' parameter in the component '/jfinal_cms/front/person/profile.html'.
1, via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence
2, via the 'FileManager.delete()' function in the component 'modules/filemanager/FileManagerController.java'.
3, by uploading a malicious HTML template file via the component 'jfinal_cms/admin/filemanager/list'.
2, via the 'FileManager.editFile()' function in the component 'modules/filemanager/FileManagerController.java'.
2, via the 'FileManager.rename()' function in the component 'modules/filemanager/FileManagerController.java'.
0, via the 'Title' parameter of the 'Add New Connections' component when the 'save()' function is called.
2, via the 'Intro' parameter for the component '/index.php?m=ucenter&a=index'.
2, via the 'Site Title' parameter of the component '/data/admin/#/app/config/'.
2, via the component '/index.php?module=member&action=add'.
4, via index.php?s=/user/ApiAdminUser/itemEdit.
4, via index.php?s=/user/ApiAdminUser/itemAdd.
4, via uploading a crafted PHP file.
4, via a crafted payload in the username field.
4, via a crafted payload in the system error message's text field.
5, via a crafted payload in the group comments text field.
4, via a crafted payload in the Name text field.
5, via a crafted payload in the source field of the editor.
4, via a crafted payload in the title.
4, via a crafted payload in a private message.
4, via a crafted payload in the new album tab.
4, via a crafted payload in the Weibo comment section.
4, via a crafted payload in a posted Weibo.
4, via a crafted payload in a posted question.
4, via a crafted payload in a posted article.
4, via a crafted payload in the article comments section.
4, via a crafted payload in the condition parameter.
1," via changing uploaded file suffixes to """".php""""."
4, via a crafted file.
2, by sending specially crafted HTTP requests to the application.
5, by creating a crafted input that will overwrite the SEH handler.
4, via MIAdminStyles.i4 Admin UI.
4, via MIAdminStyles.i4 Admin UI.
4, via a crafted payload.
4, via a crafted payload.
4, via a XSS payload for the first parameter in a GET request.
4, via a crafted script.
4, via a crafted script.
4, via a crafted script.
0," by manipulating the parameter """"user_id"""" in the HTML request."
2, via the orders[] parameter.
2," via the """"ml"""" and """"title"""" parameters."
4, via post-edit.php.
2, via the imgurl parameter.
2, via the attachment upload function.
0, by restarting the device and putting it into maintenance mode. This issue affects: PAN-OS 9.1 versions earlier than 9.1.2.
0, via the id parameter on the /dl/dl_print.php page.
0, via the dlid parameter in the /dl/dl_sendmail.php page cookie.
2, via the dlid parameter in the /dl/dl_sendsms.php page cookie.
2, via the component subzs.php.
1, by sending data through specifically crafted TCP packets. This technique evades signature-based threat detection. This issue impacts: PAN-OS 8.1 versions earlier than 8.1.17; PAN-OS 9.0 versions earlier than 9.0.11; PAN-OS 9.1 versions earlier than 9.1.5; All versions of PAN-OS 7.1 and PAN-OS 8.0.
0, by restarting the device and putting it into maintenance mode. This issue affects: All versions of PAN-OS 7.1
4, via a crafted payload in the content editor.
4, via a crafted payload in the page management module.
5, via shell metacharacters in the port field when attempting an SSH connection.
3, by sending a malicious request to generate new certificates for use in the PAN-OS configuration. This issue affects: All versions of PAN-OS 8.0; PAN-OS 7.1 versions earlier than PAN-OS 7.1.26; PAN-OS 8.1 versions earlier than PAN-OS 8.1.13.
0, by restarting the device and putting it into maintenance mode. This issue impacts: PAN-OS 9.1 versions earlier than PAN-OS 9.1.3. This issue does not impact PAN-OS 8.1
4, via a crafted payload entered into the search box.
0,upload temporary files through the management web interface that are not properly deleted after the request is finished. It is possible for an attacker to
5, by sending a malicious request to the Captive Portal or Multi-Factor Authentication interface. This issue impacts: All versions of PAN-OS 8.0; PAN-OS 8.1 versions earlier than PAN-OS 8.1.15; PAN-OS 9.0 versions earlier than PAN-OS 9.0.9; PAN-OS 9.1 versions earlier than PAN-OS 9.1.3.
4, via session fixation.
0, by restarting the device and putting it into maintenance mode. This issue impacts all versions of PAN-OS 8.0
1, use SSL VPN with client certificate verification are: GlobalProtect Gateway
2, via the form parameter post to /public/console/profile/info-submit/.
1, via avatar upload to index.php.
2, via tha lang attribute of an html tag.
4, via /user/add.
4, via a crafted packet.
4, via a crafted HTML file.
4, via a crafted PHP file.
0, via bypassing the file extension filter and uploading crafted HTML files.
4, via a crafted SVG file.
4, via a crafted payload in the Tags field.
4, via modification of a PHP file.
4, via a crafted payload entered into the Copyright text box under Basic Settings.
4, via a crafted payload entered into the Title Entry text box.
4, via a crafted payload.
2," via the """"CE Remote Display Tool"""" as it does not close the incoming connection on the Windows CE side if the credentials are incorrect."
4, via a crafted POST request to /goform/SetStaticRouteCfg.
4, via a crafted packet in SICK AG solutions Bulkscan LMS111
5, via a crafted payload in the title
4, via a crafted payload in the commentText parameter.
4, via a crafted payload in the Company Name input field.
0,send an email with fixed content to
5,send a fixed email to
4, via a crafted URL.
3," via modification of the """"localPath"""" variable."
2, by making successive queries to the server using the vulnerable library
2, by making successive queries to the server using the vulnerable library
4, via a crafted payload in the Comments section.
5," via a crafted payload in the """"or Expiring Between"""" parameter."
2, via the Segment Name parameter.
2, via the email parameter to the edit page for Customer
4, via HNAP1/control/SetGuestWLanSettings.php.
4, via a crafted PNG file.
4, via a crafted PSD file.
2," via an unsanitized """"query_string"""" variable in app\devices\device_imports.php."
2," via an unsanitized """"f"""" variable in app\vars\vars_textarea.php."
1, via crafted payloads in the text fields for Chinese and English names.
1," by injecting arbitrary web script or HTML via the """"New Name"""" field of the """"Rename a Module"""" tool."
1," by injecting arbitrary web script or HTML via the """"First Name"""" and """"Last Name"""" fields in """"/index.php/contacts/create page"""""
4, via /admin.html?do=user&act=add.
4,send malicious code to
0, via the functionIds parameter to /saverolefunction.
2, via the step parameter.
2, via the name parameter to the signin page.
2, via the name parameter to the signup page.
2, via the RootFolder field to acme_certificate_edit.php page of the ACME package.
4, via obtaining a user's session cookie.
3, via brute force attacks.
2, via brute force attacks.
4, via a crafted PHP file.
1, via crafted payload in the Edit Snippets module.
4, via a crafted payload in the E-Mail field.
4, via adding a character to the end of the uploaded file's name.
2, via the 'wd' parameter.
4, via a crafted html file running with the default configurations.
4, via a crafted payload.
4, via calls to the saveDeepColorAttr service.unk
4, via the switchNextDisplayInterface service.
4, via a crafted PHP file.
4, via a crafted .txt file which is later changed to a PHP file.
4, via a crafted payload in the Name field under the Message Board module
4, via a crafted .jpg file which is later changed to a PHP file.
0, via changing the doctype value to 0.
2, via the sitename parameter.
2, via the sitebrief parameter.
2, via zip plugin module.
4, via a long string in the Setup->Users->Username editbox.
2, via the dir parameter.
4, via a crafted payload.
4, via a crafted URL.
5, via a crafted archive file. NOTE: this only affects users who downloaded the development code from GitHub. Users of the product's official releases are unaffected.
4, via converting a xfig file into ptk format.
4, via converting a xfig file into pstricks format.
4, via converting a crafted PNG file into Sixel format.
4, via converting a xfig file into mp format.
4, via converting a xfig file into pict2e format.
4, via converting a xfig file into ge format.
4, via converting a xfig file into ge format.
4, via converting a xfig file into pstricks format.
4, via converting a xfig file into pict2e format.
2, via the add new file page.
1, via HTTP requests without performing any validity checks to verify the requests. This can be exploited to perform certain actions with administrative privileges if a logged-in user visits a malicious web site.
4, via IOCTL 0x9C402140.
2, via the timeZone parameter to goform/SetSysTimeCfg.
4, via a crafted POST request.
0, via the pagesize parameter to yp/product.php.
4, via a crafted ICMPv6 packet.
4, via a crafted 6LoWPAN packet.
4, via shell metacharacters in the RRDdatabase_path parameter.
5, via a crafted file in the MP4Box command.
4, via a crafted input.
4, via a crafted input.
4, via a crafted payload inserted into the table content text field.
2," via the Miscellaneous """" External Programs by uploading the malicious .exe file to the external program."
0, by injecting arbitrary web script or HTML via the login page. The XSS is executed when an administrator accesses the logs.
1, via modifying the name of the users. The XSS is executed when an administrator access the logs.
2, via the tab3 parameter.
4, via redirect_to parameter in email_passthrough.php.
2, via the plugin name input field in the plugin module.
1, via crafted SMB requests.
1, via crafted FTP requests.
0, via writing malicious code to the install file.
4, via a man in the middle attack.
5, via a crafted payload as a path or folder name.
4, via 'null' path commands.
4, via a crafted GET request.
4, via a crafted GET request.
4, via a crafted file.
5, via a crafted payload in the user agent input field.
4, via a crafted ef2 file.
4, via a change to the path variable to request the local list command.
5," by uploading a crafted file to the component """"jeecgFormDemoController.do?commonUpload""""."
2, use the edit user function to change this new user to administrator privilege.
4, via a crafted GET request to install/lib/ajaxHandlers/ajaxDbInstall.php.
2, via the Maintenance > Logs menu and manipulating the file-path in the URL.
5, via a crafted zip file with dot-slash characters included in the name of the crafted file.
4," via a crafted payload entered into the """"Site footer"""" field."
4," via a crafted payload entered into the """"Manage Theme"""" field."
4, via a crafted payload entered into the Shoutbox message panel.
4," via a crafted payload entered into the """"Registration"""" field."
4, via a crafted payload.
4, via a crafted payload.
4," via a crafted payload in the """"admin"""" parameter under the """"Manage administrators"""" module."
4, via a crafted payload.
1," via crafted a payload entered into the """"Site Name"""" field under the """"Site Settings"""" module."
4," via a crafted payload entered into the """"Edit Values"""" field under the """"Configure Attributes"""" module."
4," via a crafted payload entered into the """"Send test"""" field under the """"Start or continue campaign"""" module."
4," via a crafted payload entered into the """"List Description"""" field under the """"Edit A List"""" module."
4," via a crafted payload entered into the """"Configure categories"""" field under the """"Categorise Lists"""" module."
4," via a crafted payload entered into the """"Add a list"""" field under the """"Import Emails"""" module."
4," via a crafted payload entered into the """"Snippet content"""" field under the """"Edit Snippet"""" module."
0," via the """"navigation_title"""" parameter and the """"title"""" parameter in /private/en/pages/add."
4, via a crafted pcap.
3, via brute force.
4, via a crafted payload.
3, via the movieName parameter.
2, via the name parameter.
2, via the name parameter.
2, via the wzipcode field.
4, via a crafted payload in the Field Definition text field.
2, via the interval field to the CONNECT_REQ message.
4, via a crafted XBM file
4, via a crafted .cr2 file
4," via a crafted JPEG 2000 file. Related to a """"Data from Faulting Address controls Branch Selection starting at JPEG2000!ShowPlugInSaveOptions_W+0x0000000000032850""""."
4," via a crafted JPEG 2000 file. Related to """"Integer Divide By Zero starting at JPEG2000!ShowPlugInSaveOptions_W+0x00000000000082ea"""""
4, via a crafted image file.
4, via SCRIPT element.
2, via an unchecked CALLBACK parameter in the request header.
2, via the tongji parameter.
4, via a crafted jpeg file.
4, via a crafted jpeg file.
4, via a crafted jpeg file.
2," via the """"payment gateway"""" column on transactions tab."
2," via the """"titel"""" column on the """"Eintrage hinzufugen"""" tab."
1,use any absolute path to
4, via (1) AppName and (2)AddressList parameter in JobGroupController.java file.
5, by uploading a crafted PHP web-shell that bypasses the image upload filters. An attack uses /Online%20Course%20Registration/my-profile.php with the POST parameter photo.
0, by changing an authenticated victim's username when they visit a third-party site.
1, by replacing the %SYSTEMDRIVE%\bd\bd.exe file. When the computer next starts
4, via a crafted MNG file.
4, via a crafted pict file. Related to a User Mode Write AV starting at ntdll!RtlpLowFragHeapFree.
4, via a crafted ico file. Related to a Read Access Violation starting at USER32!SmartStretchDIBits+0x33.
4, via a crafted psd file.
4, via a crafted ico file.
4, via a crafted JPG file. Related to Data from Faulting Address is used as one or more arguments in a subsequent Function Call starting at JPGCodec+0x753648.
4, via a crafted tiff file.
4, via a crafted tiff file.
4, via a crafted tiff file.
4, via a crafted tiff file.
4, via a crafted tiff file.
4, via a crafted tga file.
4, via a crafted tga file.
4, via a crafted tga file.
4, via a crafted tga file. Related to Data from Faulting Address controls Code Flow starting at Editor!TMethodImplementationIntercept+0x57a3b.
4, via a crafted tga file.
4, via a crafted tga file. Related to Data from Faulting Address may be used as a return value starting at Editor!TMethodImplementationIntercept+0x528a3.
4, via a crafted WAV file.
4," via a crafted WAV file. NOTE: the vendor states """"I cannot reproduce it"""" and it """"is a demo program."""""
4, via a crafted audio file due to insufficient verification of data authenticity.
4," via a crafted payload entered into the """"announcement_gonggao"""" parameter."
1, via user creations
4, via token reuse.
4, via a crafted Document Type Definition (DTD) in an XML request.
0, via the pagename parameter to wex/html.php.
2, via the path parameter to wex/cssjs.php.
0, via the pagename parameter to wex/html.php.
4, via a crafted deletescreenshot action.
0, via the fileName parameter in a deletescreenshot action.
2, via the request parameter.
2, via the email parameter.
2, via the 'fullname' parameter.
2, via the username parameter.
2, via the 'Brand Name.'
4, via email and password parameters.
2, by sending crafted POST requests to the endpoint /admin/powerline. Fixed version: TL-WPA4220(EU)_V4_201023
4, via a crafted executable file.
4, via EXEC
5, by setting a new administrative password.
4, via meeting invite.
3, by modifying a file that is later executed by a higher-privileged user.
2, via the file upload component. This vulnerability could be abused by an unauthenticated attacker to execute XSS attacks against other Magento users. This vulnerability requires a victim to browse to the uploaded file.
4, via local access.
4, via local access.
4, via local access.
3, via network access.
4, via local access. This affects tpm2-tss before 3.0.1 and before 2.4.3.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via network access.
3, via local access.
4, via local access.
4, via local access.
3, via adjacent access. This affects all Linux kernel versions that support BlueZ.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via physical access.
3, via physical access.
4, via local access.
0, via the _t_redirect parameter in a crafted URL
5,create a hard link to
2," via the vulnerable POST parameter searchName"""""
2," via the vulnerable GET parameter searchName"""""
2," via the GET request """"searchName"""""
0, by consuming all available CPU cycles during handling of a crafted Cache Digest response message. This only occurs when cache_peer is used with the cache digests feature. The problem exists because peerDigestHandleReply() livelocking in peer_digest.cc mishandles EOF.
0, by allowing an attacker to load an untrusted or modified kernel in Aruba 9000 Gateway; Aruba 7000 Series Mobility Controllers; Aruba 7200 Series Mobility Controllers version(s): 2.1.0.1
4, via a clickjacking attack
1, via crafted Concise Binary Object Representation (CBOR) input to the cbor2json decoder. An uncaught error while decoding CBOR Major Type 3 text strings leads to the use of an attacker-controllable uninitialized stack value. This can be used to modify memory
4, via a direct api/rs/monitoring/rs/api/system/dump-diagnostic-info?server=127.0.0.1 request.
2, via the classes parameter.
2, via the id parameter.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
4, via a crafted ELF file.
1, via crafted GET request.
0," via cross site scripting (XSS) through the provided Markdown markup to the """"Table from CSV"""" macro."
4, via a Trojan horse shell script in the %PROGRAMDATA%\checkmk\agent\local directory.
0, by injecting SQL code via a crafted POST request.
4, via a crafted POST request.
4, via a crafted QUIC frame
1,send a crafted request to
2, via an NTFS directory junction
4, via a crafted file.
5, by constructing a POST type request and writing a payload in the request parameters as an instruction to write a file.
2, via the browser.
4, via a crafted http packet.
2, via the sort
3, via an http:IP:PORT/../../path/file_to_disclose Directory Traversal URI. NOTE: The manufacturer indicated that the affected version does not exist. Furthermore
3, use this to achieve remote code execution.
1,use other mobile device or malicious app on smartphone to
4, via a series of /auth/session login attempts. Initially
0,upload and execute arbitrary PHP code because it renames an unsafe example elFinder connector file to
4, via a response composed of an infinite stream that lacks a newline character. This leads to stack exhaustion.
4,compromise Oracle Knowledge. Successful attacks of this vulnerability can result in unauthorized ability to
3, by providing a .desktop file that contains Name= with path components.
2, via an Object Manager symbolic link from the log directory (which has weak permissions).
1,compromise Oracle Business Intelligence Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4, via events\event.publish_article.php
4, via a crafted request sent to to the /lib/crud/configcompare.crud.php script.
3, via the deviceIpAddr and connPort parameters.
4, via unspecified vectors.
0, by reading an error popup message after two hours of idle time.
4, via a crafted payload entered into the 'New Pages' field under the 'Pages Content' module.
4, via a crafted payload entered into the 'New Article' field under the 'Article' plugin.
4," via a crafted payload entered into the """"Content"""" parameter."
5, by sending a malicious file in the chat.
4,upload files to
4, via a crafted payload.
4, via a crafted compressed file.
3, via shell metacharacters in outputform or toclevels parameter to cgi-bin/printbook.
2, via the parameter 'section'.
1, use this functionality to execute arbitrary OS commands on the router.
5,compromise Siebel UI Framework. Successful attacks of this vulnerability can result in unauthorized read access to
0, by sending arbitrary code due to improper input validation
2,compromise PeopleSoft Enterprise HCM Human Resources. Successful attacks of this vulnerability can result in unauthorized read access to
0, by sending arbitrary code due to improper input validation
5,compromise Siebel UI Framework. Successful attacks of this vulnerability can result in unauthorized read access to
2, by sending specially crafted AMP packets. The highest threat from this vulnerability is to data confidentiality.
3, by accessing a file with a large modification date. The highest threat from this vulnerability is to system availability.
0, by impersonating the server it is expecting to connect to.
4,compromise MySQL Client. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Client. Successful attacks of this vulnerability can result in unauthorized ability to
5, by injecting a DLL into a process that normally has credential access
2, via the debug interface (keystrokes over a USB cable)
2, via the force parameter.
2, via uploading PHP files.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4," via a .php file inside a ZIP archive. NOTE: the vendor disputes the significance of this report because """"admins are considered trustworthy""""; however"
3, via parameter ParticipantAttributeNamesDropdown of the Attributes on the central participant database page. When the survey attribute being edited or viewed
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via Groovy scripting. This issue affects: Crafter Software Crafter CMS 3.0 versions prior to 3.0.27; 3.1 versions prior to 3.1.7.
4, via FreeMarker template exposed objects. This issue affects: Crafter Software Crafter CMS 3.0 versions prior to 3.0.27; 3.1 versions prior to 3.1.7.
2, via an uploaded Office document that has a crafted URL in an ODF xlink field.
3, by modifying CefSharp.BrowserSubprocess.exe.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4, via a GET request urlencode parameter.
2," via the """"id"""" parameter."
1, via crafted payload entered into the 'Smiley Code' parameter.
1, via crafted payload entered into the 'Page Title' parameter.
4, via a crafted payload entered into the 'Title' parameter.
1, via crafted payloads entered into the 'Output Filters' and 'Droplets' modules.
4, via a crafted payload entered into the 'Username' parameter.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted .txt file.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle AutoVue. Successful attacks of this vulnerability can result in unauthorized read access to
2," via the """"p4"""" field."
2,compromise Oracle Hospitality Cruise Materials Management. Successful attacks of this vulnerability can result in unauthorized access to
4, via uploading a crafted PHP file.
3, via uploading a crafted PHP file.
0,upload a malicious file within an image extension and through a custom request using the rename function provided by the file manager is able to
4, via a crafted openssl configuration file. This issue is similar to CVE-2019-12572.
3,compromise Enterprise Manager Base Platform. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Enterprise Manager for Fusion Middleware. Successful attacks of this vulnerability can result in unauthorized access to
4, use of uninitialized memory
4, via a direct request
2, via the page parameter.
5, by providing a valid document ID and token. No further authentication is required.
1, via Telnet or SSH.
1, by manipulating the processed input stream. Only users who rely on blocklists are affected. Anyone using XStream's Security Framework allowlist is not affected. The linked advisory provides code workarounds for users who cannot upgrade. The issue is fixed in version 1.4.14.
0,send malicious JavaScript code which could result in hijacking of the user's cookie/session to
0, via parsing Markdown code blocks (or similar) and do not filter the language names the user can provide you may be vulnerable. The pollution should just be harmless data but this can cause problems for applications not expecting these properties to exist and can result in strange behavior or application crashes
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via the application. By using the &#8220;Assets Upload&#8221; function
2, via the export feature
4, via the pandora_console/include/chart_generator.php session_id parameter.
4, via a Trojan horse taskkill.exe in the current working directory.
4,send stanzas to
4, via a crafted HTTP request.
4, via shell metacharacters in the IP JSON value for ping (aka res_config_action=3&res_config_id=18).
2, via the expenses claiming functionality. However
2, via the PHP Raw snippet. NOTE: this issue can be mitigated by removing the Dynamic OOO widget or by restricting availability of the Editor role.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3, by reading a log. The Samsung ID is SVE-2020-18596 (October 2020).
4, via a crafted .mkv file.
2, via the 'Create New Feed' function.
2, via the page content to site/index.php/admin/pages/update.
2, via the 'Create a New Setting' function.
3, via exploitation of the load_balancer_monitor.php function.
2, via the Description parameter.
5, via a crafted external entity entered into the XML content as input.
2, via the filePath parameter.
2, via DDNS Configuration Section.
2,compromise Oracle Hospitality OPERA 5. Successful attacks of this vulnerability can result in unauthorized access to
4, via a crafted server response
2,compromise Oracle Hospitality OPERA 5. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2, via the 'AjaxRun()' function.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted POST request.
2,compromise Oracle FLEXCUBE Universal Banking. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise PeopleSoft Enterprise PeopleTools. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
1, by using the /wp-json REST API
4,compromise Oracle Financial Services Analytical Applications Infrastructure. Successful attacks of this vulnerability can result in unauthorized access to
1, by modifying the sympa.conf configuration file (which is owned by sympa) and parsing it through the setuid sympa_newaliases-wrapper executable.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise PeopleSoft Enterprise CC Common Application Objects. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality Suites Management. Successful attacks of this vulnerability can result in unauthorized access to
4, use a dead actor they have a reference to. Such a check was omitted in WebGL
2,compromise Oracle FLEXCUBE Universal Banking. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle FLEXCUBE Universal Banking. Successful attacks of this vulnerability can result in unauthorized read access to
0, by tricking an authenticated administrator into accessing an attacker-controlled web page. An attacker must already have obtained product administrator/root privileges to exploit this vulnerability.
4,compromise Oracle Banking Payments. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Banking Payments. Successful attacks of this vulnerability can result in unauthorized access to
5,compromise Oracle Banking Payments. Successful attacks of this vulnerability can result in unauthorized read access to
4, via a REST API. Affected releases are TIBCO Software Inc.'s TIBCO PartnerExpress: version 6.2.0.
0, by sending arbitrary code
2,compromise Oracle Banking Corporate Lending. Successful attacks of this vulnerability can result in unauthorized access to
3, by crafting password-reset tokens.
3,compromise Oracle Banking Corporate Lending. Successful attacks of this vulnerability can result in unauthorized access to
0, by iterating over the IXCopy fileID parameter.
4, via appletError.jsp
3,compromise Oracle Banking Corporate Lending. Successful attacks of this vulnerability can result in unauthorized read access to
1, via crafted string in the index.php f1 variable
2, via the debug interface.
1,compromise Oracle FLEXCUBE Investor Servicing. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle FLEXCUBE Investor Servicing. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle FLEXCUBE Investor Servicing. Successful attacks of this vulnerability can result in unauthorized read access to
5,supply a pointer to
2, via multiple expected parameters.
0, via the filename parameter to multiple update endpoints of the administrative web interface.
5,compromise Identity Manager. Successful attacks of this vulnerability can result in unauthorized access to
1, by executing malicious script due to insufficient access control.
1, by changing the thread_id parameter in the request to the endpoint Messenger/messenger_download_csv.php?title=Hey&thread_id={THREAD_ID}.
4, via GET Parameter.
2, via directory traversal
0, by using the FileManager to upload malicious code (e.g.
3, by uploading a PHP payload
4, via uploading a maliciously crafted PHP file.
4, via a serial port (UART) connection or using adb.
4, via a crafted sb3 file.
3,compromise Oracle Access Manager. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted ZIP file.
4, via a crafted file.
4,compromise Oracle General Ledger. Successful attacks of this vulnerability can result in unauthorized access to
0, by intercepting the HTTP Post request when sending an email and injecting a specially crafted XSS payload in the 'subject' field. The payload executes when the recipient logs into their mailbox.
2, via the Skype ID field.
0, by omitting the HTTP Host header. A Restify-based web service would crash with an uncaught exception.
1, via SQLite files containing plain text credentials.
4, via a brute-attack on the settings password.
4, via a brute-force attack on the password.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via shell metacharacters in the ssid0 or ssid1 parameter.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1, via packet data that lacks a valid Layer 3 protocol.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1, by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets
2, via the creation of a junction point to a system directory. This leads to partial privilege escalation.
3, by placing a malicious cryptbase.dll file in %WINDIR%\Temp\.
4, via a crafted certificate.
4, via a crafted certificate.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3, via unspecified vectors.
3, via unspecified vectors.
4, via port (1) 7786/tcp or (2) 7787/tcp.
2, via inbound QuickConnect traffic.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the (1) domain or (2) profile parameter.
2, via the domain parameter.
2, by modifying kernel memory contents
3,send malicious links in password-reset emails to
4,compromise Hyperion Financial Reporting. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1," via multiple pages and parameters. NOTE: this was reported to the vendor in a publicly archived """"Multiple Security Vulnerabilities in WebCit 926"""" thread."
2," via the msg_confirm_move template. NOTE: this was reported to the vendor in a publicly archived """"Multiple Security Vulnerabilities in WebCit 926"""" thread."
1, by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1, via crafted XLS file.
2, via the import of a GF form. This code is interpreted by users in a privileged role (Administrator
0, via poll or quiz answers. This code is interpreted by users in a privileged role (Administrator
4, via a textarea field. This code is interpreted by users in a privileged role (Administrator
4, via a format string. This affects Wire AVS (Audio
4,create arbitrary files on affected installations of SolarWinds Orion Platform 2020.2.1. Although authentication is required to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via admin/index.php?page=manage_car because .php files can be uploaded to admin/assets/uploads/ (under the web root).
4, via a Trojan horse DriverInstall.exe because %PROGRAMFILES(X86)%\Wondershare\dr.fone\Library\DriverInstaller has Full Control for BUILTIN\Users.
2, via the MyPage.do template_resid parameter.
4, by sending a POST request to the /admin/syslog endpoint. Fixed version: TL-WPA4220(EU)_V4_201023
4, uses a privileged pipe that lacks a close-on-exec flag.
3, via an e-mail message with fifty million recipients. NOTE: remote exploitation may be difficult because of resource consumption.
4, via XML-RPC.
3, by using XML-RPC to comment on a post.
5,create a connection to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via the ipc.fos~ password.
2, via the object_path parameter.
1, via crafted HTML statement inserted into chat window.
2, via vulnerable fields 'Package Name' and 'Description'.
4, via admin/borrower/index.php?view=add because .php files can be uploaded to admin/borrower/photos (under the web root).
2, via SQL injection in sales_inventory/login.php.
4, via admin/create-package.php vulnerable page.
4, via /alumni/admin/ajax.php?action=save_settings when uploading a malicious file using the image upload functionality
2, via the mod parameter to /module/index.php.
2, via the username parameter to wizard/initialise.php.
4, via /include/makecvs.php in Event parameter.
4, via SetFileContent.cgi because authentication is on the client side.
4,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized access to
2, via the backup restore feature. To exploit the vulnerability
4, via a buffer overflow. The Samsung ID is SVE-2020-18632 (November 2020).
2, via the Reminder application. The Samsung ID is SVE-2020-18689 (November 2020).
2, via the slave_mac parameter. NOTE: this issue exists because of an incomplete fix for CVE-2020-10882 in which shell quotes are mishandled.
0," via malformed frequency attributes in CollectAndCallOnceCollect in internal/uplink/collect.go. NOTE: the vendor's position is that there are no """"guarantees that allowing untrusted LoRa gateways to the network should still result in a secure network."""""
4, via a side-channel attack on a power/energy monitoring interface
4, via a stack-based buffer overflow. This affects R6400v2 V1.0.4.102_10.0.75
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle iSupplier Portal. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Configurator. Successful attacks of this vulnerability can result in unauthorized read access to
4, via a crafted request.
3, by uploading a theme
3, via SSH
0, via an exposed PNS server. A remote attacker can passively record push notification events which are sent over an insecure web request. The web service does not authenticate requests
4, via Add to cart.
2, via the ioctl command 0x9c402000 to \\.\MyDrivers0_0_1.
4, via a long file name.
2, via an insecure file upload.
4,compromise Oracle Marketing. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle CRM Technical Foundation. Successful attacks of this vulnerability can result in unauthorized read access to
3, via table pagination.
4, via modification of scripts. Low-privileges users are able to modify files that can be executed by sudo.
3, via the test_server command in ajaxhelper.php.
4, via a javascript: URL in a view title.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via the maintenance/troubleshoot.php?download=1 URI.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, by visiting a malicious website.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, via a crafted payload in the First Name or Last Name input fields.
1, via crafted payloads entered into the primary address state or alternate address state input fields.
4, via a crafted payload entered into the name
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vectors.
4, via overwriting the registers.
4, via a crafted payload in the username input field.
4, via a crafted PDF file.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a cookie. (In addition
4, via a cookie
4, via /includes/lib/detail.php?subdomain=SSRF.
4, via /includes/lib/get.php?subdomain=SSRF.
4, via /includes/lib/tree.php?subdomain=SSRF.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, by sending a malicious POST request.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via specifically crafted requests.
0, via specifically orchestrated sequences of commands.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise SCM Purchasing. Successful attacks of this vulnerability can result in unauthorized access to
2, via an IP address that is absent from a local geolocation database
2, via the searchFields parameter.
2, via the form_code parameter.
2, via the schedule_facility parameter when restrict_user_facility=on is in global settings.
2, via the form_code parameter.
4, via a constructed payload created by adding the X-Forwarded-For field to the header.
0, via the order_id parameter in a fetch_order_status action.
4, via a crafted JPG file.
4, via Randomnum=99AC8CEC6E845B28&mode=1 in a POST request to the cgi-bin/set_factory URI.
4, via xxl-job-admin/src/main/java/com/xxl/job/admin/controller/UserController.java.
2, via the name field
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via admin/login.php.
4, via /Employee Management System/addemp.php on admin account.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via specially crafted request.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2," via the """"Title"""" parameter."
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, via a POST to /wp-admin/admin.php?page=drts/directories&q=%2F with _drts_form_build_id parameter containing the XSS payload and _t_ parameter set to an invalid or non-existent CSRF token.
4,compromise Oracle Knowledge. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized ability to
1, by using shell metacharacters and the %0a character.
4, via an XXE vulnerability. Fixed in version 3.29.0.
2, via the orangehrmBuzzPlugin/lib/dao/BuzzDao.php loadMorePostsForm[profileUserId] parameter to the buzz/loadMoreProfile endpoint.
4, via a Cross Site Scripting Vulnerability in admin global setting parameters.
2, via an Insecure Direct Object References (IDOR) vulnerability in the WEB-INF directory. The affected versions are before version 4.8.5.
4, via a Denial of Service (DoS) vulnerability in the file upload request feature of code reviews. The affected versions are before version 4.7.4
4, via a Denial of Service (DoS) vulnerability in the avatar upload feature. The affected versions are before version 7.2.0.
0, via an Information Disclosure vulnerability in the Jira Projects plugin report page. The affected versions are before version 8.5.11
0, via any address parameter (e.g.
2, via the rename
5, by sending a large amount of translation requests to a destination host on any given TCP port regardless of whether a web service is running on the destination port.
0, by tricking an admin into visiting a malicious website (CSRF).
3, by exploiting a path-traversal technique. (This vulnerability can also be exploited by an unauthenticated attacker due to a lack of CSRF protection.)
3, by exploiting a path-traversal technique. (This vulnerability can also be exploited by an unauthenticated attacker due to a lack of CSRF protection.)
5, via a long name for the first parameter in a POST request.
2, use the COPY group action to create a clone
0, by overflowing the sid parameter via a GET /settings&sid= attack.
0, by sending any arbitrary string (except one from an expired cookie) as the cookie value to authenticateAndRun.
3,compromise Enterprise Manager Base Platform. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Data Masking and Subsetting. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Configuration Manager. Successful attacks of this vulnerability can result in unauthorized access to
3, by sending a user a malicious UCF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit would cause the application to quit unexpectedly.
3, by sending a malicious ARF or WRF file to a user through a link or email attachment and persuading the user to open the file on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
3, by sending a malicious ARF or WRF file to a user through a link or email attachment and persuading the user to open the file on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a crafted HTTP request to the web management interface. A successful exploit could allow the attacker to overwrite files on the underlying filesystem of an affected system. Valid administrator credentials are required to access the system.
5, by creating a malicious file and copying the file to a system directory. An exploit could allow the attacker to copy malicious files to arbitrary locations with system level privileges. This could include DLL pre-loading
0, by sending malicious endpoint data to the targeted system. An exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or to access sensitive
3, by sending a malformed CoAP packet to an affected device. A successful exploit could allow the attacker to force the CoAP server to stop
5, by sending a crafted email through the targeted device. A successful exploit could allow the attacker to cause an email attachment that contains malware to be delivered to a user and cause email processing delays.
1, by doing an mDNS query for a particular service against an affected device. A successful exploit could allow the attacker to gain access to sensitive information.
3, by sending malicious ICMP error messages to an affected device that get punted to the IPsec packet processor. A successful exploit could allow the attacker to deplete IPsec memory
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to cause the Webex player application to crash when trying to view the malicious file. This vulnerability affects Cisco Webex Network Recording Player and Webex Player releases earlier than Release 3.0 MR3 Security Patch 2 and 4.0 MR3.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to cause the Webex player application to crash when trying to view the malicious file.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to cause the Webex player application to crash when trying to view the malicious file.
3, by sending a crafted HTTP request to an affected device. A successful exploit could allow the attacker access to sensitive device information
4, via mautic[return] (a different attack method than CVE-2020-35124
4," via an Admin/Configuration URI. NOTE: the significance of this report is disputed because """"admins are considered trustworthy."""""
4, via registerCriteriaFunction in lib/MongoLite/Database.php
4, via get_request in lib/function.php.
0, by abusing the unquoted service path issue. Since version 1.2.2695.1
5, via a specially crafted link to the initFile.jsp file via the msg parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
5, via a specially crafted link to the PolicyAuthority/Common/FolderControl.jsp file via the unqID parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
3, via the initFile.jsp file. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
5, via a specially crafted link to the cConn.jsp file via the ur parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
1, via providing configuration information.
4, via a Raft session flooding attack using Raft OpenSessionRequest messages.
3, via manipulation of the variable terms in RaftContext.
0, via false link event messages sent to a master ONOS node.
4, via abuse of primitive operations.
4, use to share important states.
2, via false member down event messages.
0, by changing the admin password without authentication via a POST request to Advanced_System_Content.asp with the uiViewTools_username=admin&uiViewTools_Password= and uiViewTools_PasswordConfirm= substrings.
0, by sending the corresponding write request command.
0, via the checkedList parameter to the delete command.
2, via the language parameter.
0, by changing the HTTP request method to an arbitrary string that is not in the list of request methods that CakePHP checks. Additionally
2, via the admin panel. Each time any user will go to that blog page
4, via a crafted URL to the theme/plugin installer.
0, via the imgurl parameter of admin.php?c=content&a=add.
2, use by making enough connections to exceed the connection limit.
4, via a dext5CMD=downloadRequest action with traversal in the fileVirtualPath parameter (the attacker must provide the correct fileOrgName value).
1, by injecting code into a process
2, via the username and password fields.
1, via crafted JSON.
4, via a GET call.
3, via an index.php?a=gettotal request in which the ajaxbool value is manipulated to be true.
4, via a direct request for cgi-bin/DownloadCfg/RouterCfm.cfg
2, via the 'description' field
4, via Front/lib/Action/FindexAction.class.php.
4, via logcat because of excessive logging.
4, via a crafted Syslog payload to the Syslog service. This attack requires a specific configuration. Also
0,send a specially crafted packet causing the resulting megaflow in the kernel to
5, by triggering a power-shortage incident that causes a false-positive attack detection. The Samsung ID is SVE-2020-19678 (December 2020).
4, via a long timestamp tag in an SRS address.
4, via shell metacharacters
4, via a POST /wp-admin/admin-ajax.php request with the meta[title] parameter.
4, via a POST /wp-admin/post.php request with the post_title parameter.
3,supply dangerous content to
2, via the ulgm_code_redeem POST Parameter in user-code-redemption.php
1, via crafted use of admin.php?reqGadget=Components&reqAction=InstallGadget&comp=FileBrowser and admin.php?reqGadget=FileBrowser&reqAction=Files to upload a .php file. NOTE: this is unrelated to the JAWS (aka Job Access With Speech) product.
1, via crafted use of UploadTheme to upload a theme ZIP archive containing a .php file that is able to execute OS commands. NOTE: this is unrelated to the JAWS (aka Job Access With Speech) product.
2, via the sort_order parameter against the /ajax/form/widget-settings endpoint.
2, via the site_id parameter. This can lead to remote code execution.
2, via the admin/index.php?mode=tools&page=upload URI
4," use as a """"host"""" value. In other words"
4, via shell metacharacters to the goform/setSysAdm page.
4, via goform/systemCommand?command= in conjunction with the goform/pingstart program.
4, via shell metacharacters in a filename to the upload_settings.cgi page.
4, via a long /goform/langSwitch langSelectionOnly parameter.
5, via a specially crafted link to the /WebCM/Applications/Search/index.jsp file via the added parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via a specially crafted link to the BrowseAssets.do file via the title parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via a specially crafted link to the submitUser.jsp file. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
5, via a specially crafted link to the ReportPreview.do file via the referer parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
5, via a specially crafted link to the Error.jsp file via the err parameter (or indirectly via the cpr
5, via a specially crafted link to the /WebCM/index.jsp file via the msg parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via a specially crafted link to the /WebCM/Applications/Reports/index.jsp file via the by parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via a specially crafted link to the BrowseDirs.do file via the title parameter. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
2, via the input fields of the Users tab. To exploit this
2, via the fv_wp_fvvideoplayer_src JSON field in the data parameter.
0, via the sjb_file parameter to wp-admin/post.php.
2, via the input fields of the Language tab.
4, via a symlink attack against the /tmp/testkeys file (related to t-testdata.h
2, by sending malicious messages to the affected software by using the virtualization channel interface. A successful exploit could allow the attacker to modify the underlying operating system configuration
2, via the options[inline_edits] parameter. NOTE: exploitability depends on PHP objects that might be present with certain other plugins or themes.
4, via a remotely hosted crafted payload in the source parameter via AJAX. The action must be set to post_grid_import_xml_layouts.
4, via a remotely hosted crafted payload in the source parameter via AJAX. The action must be set to team_import_xml_layouts.
4, via AJAX. The action must be set to post_grid_import_xml_layouts.
4, via AJAX. The action must be set to team_import_xml_layouts.
4, via a crafted payload entered into the 'Title' parameter.
4, via a crafted payload entered into the 'Name' parameter.
4, via a crafted payload entered into the 'Name' parameter.
4, via a crafted payload entered into the 'Name' parameter.
2, via the Name
2, via the Customer Name Field.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
4, via a POST request to the long polling transport.
4, via a large packet because a concatenation approach is used.
2, via the state parameter.
2, via the state parameter.
1, via crafted JSON.
4, via a crafted GET call.
4, via a crafted SOFA.
4, via a long SSID value
2, via the email field.
0,send an HTTP GET request to
2, via an Insecure Direct Object References (IDOR) vulnerability. The affected versions are before version 8.5.10
4, via a Cross-Site Scripting (XSS) vulnerability in the Screens Modal view. The affected versions are before version 8.5.11
1, via an Information Disclosure vulnerability in the mobile site view. The affected versions are before version 8.13.2
4, via a Cross-Site Scripting (XSS) vulnerability in the ViewWorkflowSchemes.jspa and ListWorkflows.jspa endpoints. The affected versions are before version 8.5.11
1, via an Information Disclosure vulnerability in the /rest/api/2/customFieldOption/ endpoint. The affected versions are before version 8.15.0.
4, use of UIAutomator2 and ATX-Agent. The attacker must be able to reach TCP port 7912
4, via shell metacharacters in a symbolic link.
4,use adb to
2, via an Information Disclosure vulnerability in the QueryComponentRendererValue!Default.jspa endpoint. The affected versions are before version 8.5.13
3, by performing a CSV export and reading time entries.
2, by triggering destruction of a large SEV VM (which requires unregistering many encrypted regions)
0, by submitting malicious email addresses.
0, via incorrect authentication token data in an early phase of the user authentication resulting in a denial of service.
4," via a crafted payload entered into the """"New"""" parameter."
4," via a crafted payload entered into the """"New"""" parameter."
4," via a crafted payload entered into the """"New"""" parameter."
5," via a crafted payload in the """"Campaign"""" field under the """"Send a campaign"""" module."
5," via a crafted payload in the """"rule1"""" parameter under the """"Bounce Rules"""" module."
4," via a crafted payload entered into the """"Add Shortcut"""" parameter under the """"Manage Shortcuts"""" module."
4," via a crafted payload entered into the """"Add Category"""" parameter under the """"Categories"""" module."
4," via a crafted payload entered into the """"Email address to receive notification of news submission"""" parameter under the """"Options"""" module."
4," via a crafted payload entered into the """"Path for the {page_image} tag:"""" or """"Path for thumbnail field:"""" parameters under the """"Content Editing Settings"""" module."
4," via a crafted payload entered into the """"Search Text"""" field under the """"Admin Search"""" module."
5," via a crafted payload entered into the """"Exclude these IP addresses from the """"Site Down"""" status"""" parameter under the """"Maintenance Mode"""" module."
4," via a crafted payload entered into the """"URL (slug)"""" or """"Extra"""" fields under the """"Add Article"""" feature."
4," via a crafted payload entered into the """"Create a new Stylesheet"""" parameter under the """"Stylesheets"""" module."
4," via a crafted payload entered into the """"Create a new Design"""" parameter under the """"Designs"""" module."
4, via a crafted JPEG file.
4, via `/null//` path commands.
4, via a crafted payload in the devicename information.
4, via a crafted payload in the rubric name value.
1, via crafted payloads entered into the primary address state or alternate address state input fields.
4, via a crafted payload entered as the device name itself.
2, via the hardcoded DNS resolver configuration.
4, via memory allocation.
2, via tha lang attribute of an html tag.
2, via the Generator.php messageCategory field. The attacker can embed arbitrary PHP code into the model file.
3, by creating a hard link within the /var/spool/uptimed directory
4, via a cross site scripting (XSS) vulnerability through the review objectives.
0, via an improper authorization vulnerability.
4, via a information disclosure vulnerability.
1, via an information disclosure vulnerability.
1, via an information disclosure vulnerability.
4, via a cross-site request forgery (CSRF) vulnerability.
4, via a untrusted search path vulnerability.
4, via a cross site scripting (XSS) vulnerability through the committerFilter parameter.
2, via an injection vulnerability in custom user macros. The affected versions are before version 7.4.5
0, by intercepting its transmission within an http session. Fixes are available in HCL Domino and iNotes versions 10.0.1 FP6 and 11.0.1 FP2 and later.
3, via generic processes. IBM X-Force ID: 175639.
0, by tricking the server to generate user registration emails that contain malicious URLs. IBM X-Force ID: 177933.
0, by disclosing private IP addresses in HTTP responses. IBM X-Force ID: 178766.
4,send malformed requests to
0,send a specially crafted HTTP GET request to
5, by allowing id_token claims manipulation without verification. IBM X-Force ID: 181481.
5, by sending a large number of RPC requests to the mmfsd daemon which would cause the service to crash. IBM X-Force ID: 181991.
4, by sending a subset of ioctls on the device with invalid arguments. IBM X-Force ID: 181992.
3, by sending a malformed sflow command. IBM X-Force ID: 182366.
5, by allowing cross-window communication with unrestricted target origin via documentation frames.
5, by sending a specially crafted HTTP/2 request with invalid characters. IBM X-Force ID: 184438.
5, by sending a specially crafted a JSON request with invalid characters. IBM X-Force ID: 184439.
3, by sending a chunked transfer-encoding HTTP/2 request. IBM X-Force ID: 184441.
3,upload arbitrary files which could be execute arbitrary code on the vulnerable server. This vulnerability is due to
5, by sending a specially crafted HTTP request to the APM UI
0, by sending malformed MQ data requests which would consume all available resources. IBM X-Force ID: 188093.
1, by exposing sensitive information in HTTP repsonses. IBM X-Force ID: 192029.
0, by sending invalid HTTP requests. IBM X-Force ID: 192906.
2, via the capturing of screenshots of authentication credentials. IBM X-Force ID: 192913.
0, by sending malformed UDP requests. IBM X-Force ID: 193486.
5, by sending a malicious request to the firewall. This vulnerability affected SonicOS Gen 6 version 6.5.4.7
5, by sending a malicious HTTP request that leads to memory addresses leak. This vulnerability affected SonicOS Gen 5 version 5.9.1.7
3, by navigating to the Diagnostics Ping page and entering shell metacharacters in the Target IP address field. (In some cases
0, via an unrestricted API endpoint. Improper permission verification occurs when calling the file/ajax_download_zip/zip_name endpoint. The result is that a user without permissions can zip and download files even if they do not have permission to view whether the file exists.
4, via a crafted public folder URL. This occurs because of the folder_up.png IMG element not properly sanitizing user-inserted directory paths. The path modification must be done on a publicly shared folder for a remote attacker to insert arbitrary JavaScript or HTML. The vulnerability impacts anyone who clicks the malicious link crafted by the attacker.
0, by hijacking the hardcoded TCP port. The /usr/lib/apt-cacher-ng/acngtool program attempts to connect to apt-cacher-ng via TCP on localhost port 3142
4, via OAI-PMH. OAI-PMH is part of the default workflow and is activated by default
3, via REST calls.
2, by setting the User-Agent header in an HTTP(S) request to maliciously crafted long strings. This has been patched in uap-core 0.7.3.
0, by pushing an app that returns specially crafted HTTP responses that crash the Gorouters.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors. PalletControl 7 to 9.1 are not affected by this vulnerability
4, via a specially crafted URL.
4, via a specially crafted URL.
4, via a specially crafted packet.
4, via a specially crafted packet.
4, via a specially crafted packet.
4, via a specially crafted packet.
4, via a specially crafted packet.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
2, via unspecified vector due to the improper input validation issue.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via V-CUBE Meeting function.
2, via the API.
2, via the application 'E-mail'.
2, via the applications 'Workflow' and 'MultiReport'.
2, via the applications 'E-mail' and 'Messages'.
2, via the applications 'Messages' and 'Bulletin Board'.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, by leading a user to upload a specially crafted .zip file.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted page.
3, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted URL.
4, via a specially crafted URL.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted file.
4, via a specially crafted request.
2, via the vulnerable App. As a result
4, via unspecified vectors.
4, via unspecified vectors.
2, via the vulnerable App. As a result
2, via the vulnerable App. As a result
4, via a malicious App created by the third party. As a result
4, via unspecified vectors.
0,send a specially crafted request to
0,send a specially crafted request to
4, via unspecified vectors. As a result
5, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vector.
4, via unspecified vectors.
4, via a specially crafted URL.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, by sending a specially crafted ARP packet.
4, via a specially crafted HTTP packet
4, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vector.
3, by sending a specially crafted request to a specific URL.
5, by sending a specially crafted request to a specific URL.
0, by tricking legitimate users into clicking a crafted link.
4, via undocumented API. An attacker can use this functionality to execute arbitrary OS commands on the router.
0, by tricking legitimate users into clicking a crafted link.
0, by tricking legitimate users into clicking a crafted link.
4, via a crafted &#8216;action&#8217; or &#8216;pkg_name&#8217; parameter.
0, by tricking legitimate users into clicking a crafted link.
0, by tricking legitimate users into clicking a crafted link.
3, by creating a malicious file and copying the file to a system directory. The attacker needs valid credentials on the Windows system to exploit this vulnerability.
4, via a crafted name or ID field.
2, via the lang parameter.
3,upload any file (including script files) without proper file format validation leading to
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted video stream.
4, via a crafted HTML page.
4, via a crafted video stream.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via IDN homographs via a crafted domain name.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted domain name.
3, via IDN homographs via a crafted domain name.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted registry entry.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted application.
5, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted Chrome Extension.
4, via a crafted HTML page.
1, via crafted clipboard contents.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
1, via crafted clipboard contents.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
5, via a crafted file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via UI actions.
4, via a crafted domain name.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted request.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
5, via a crafted URI.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted SCTP stream.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PWA.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted filesystem.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted WebRTC interaction.
4, via IDN homographs via a crafted domain name.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted binary.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via the cloudloader_mode parameter.
2, via the Description Area.
2, via portal manager or portal users parameters.
2, via the Disclaimer Description of a Replacement Message.
2, via the name parameter.
2, via specially crafted file names while uploading the configuration file in the application.
2, by sending specially crafted requests. This can result in non-admin users manipulating the system configurations via uploading the configurations with incorrect parameters.
0, by replacing the required DLLs with malicious DLLs when the software try to load vci11un6.DLL and cinpl.DLL.
2, via the lang parameter.
2, via the name parameter.
2, via the ContentFrame parameter.
5, via shell metacharacters to an entry on the SSH subcommand menu
1, by placing shell metacharacters after a supported CLI command
4, via shell metacharacters in the spotifyConnect.php userName parameter.
3, via shell metacharacters in the media renderer name.
0, via JSON properties available from the REST API.
2, via an entity declaration in any of the XML documents that are used to specify the run-time settings of jobs and orders.
4, via a modified user_id parameter. This is related to ajax_image_upload and ajax_resize_image.
2, by sending crafted messages to this app selected on a PIN-entered Ledger connected to a host PC.
0, via the loc parameter or con parameter.
4, via a crafted DTD in an XML request. Affected versions of Avaya WebLM include: 7.0 through 7.1.3.6 and 8.0 through 8.1.2.
5, by sending DHCP4 packets without a message type option.
4, by sending DHCP4 packets with a different client-id.
0, via requests that lack certain mandatory parameters. This affects ifaces-diag.asp
4, via a WebSocket request
1, by editing the /config/netconf.cmd script (aka Extended Network Configuration). Note: According to the description
0, by guessing random ID numbers
3, by navigating to the Diagnostics Trace Route page and entering shell metacharacters in the Target IP address field. (In some cases
3, by navigating to the Fetch URL page and entering shell metacharacters in the URL field. (In some cases
3, by navigating to the Poll Routes page and entering shell metacharacters in the Router IP Address field. (In some cases
0, by pointing the link to files which the user which not normally have permission to alter via carefully creating symbolic links from the ENS log file directory.
4, via unauthorised use of the configuration tool from older versions of ENS.
2, via carefully crafted and named executable files.
4, via a McAfee supplied command-line utility.
0, via improper access controls on the sudo command.
0, via ENS not checking user permissions when editing configuration in the ENS client interface. Administrators can lock the ENS client interface through ePO to prevent users being able to edit the configuration.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a carefully crafted input file
2, via execution from a compromised folder.
4, via a carefully crafted user input.
4, via a carefully crafted HTTP request parameter.
1, via insecurely implemented encryption of configuration for export and import.
0, via manipulating symbolic links to redirect a McAfee delete action to an unintended file. This is achieved through running a malicious script or program on the target machine.
0, via manipulating symbolic links to redirect a McAfee delete action to an unintended file. This is achieved through running a malicious script or program on the target machine.
0, via manipulating symbolic links to redirect a McAfee delete action to an unintended file. This is achieved through running a malicious script or program on the target machine.
0, via manipulating symbolic links to redirect a McAfee delete action to an unintended file. This is achieved through running a malicious script or program on the target machine.
1, via external input to construct a path name that should be within a restricted directory.
4, via a carefully crafted HTTP request parameter. The risk is partially mitigated if your ATD instances are deployed as recommended with no direct access from the Internet to them.
4, via a carefully crafted HTTP request parameter. The risk is partially mitigated if your ATD instances are deployed as recommended with no direct access from the Internet to them.
4, via manipulation of some parameters.
2, via the system administrator granting McTray.exe elevated privileges (by default it runs with the current user's privileges).
2, via running this tool.
4, via pre-existing rules not being handled correctly when updating to the February 2020 updates.
1, via execution from a compromised folder.
0, via manipulating symbolic links to redirect a McAfee delete action to an unintended file. This is achieved through running a malicious script or program on the target machine.
0, via manipulating symbolic links to redirect a McAfee delete action to an unintended file. This is achieved through running a malicious script or program on the target machine.
1, via symbolic link manipulation in a location they would otherwise not have access to. This is achieved through running a malicious script or program on the target machine.
5, via execution of carefully crafted commands from the restricted command line interface (CLI).
3, via getting a user to click on a malicious URL.
0, via improper access controls in the user interface.
0, via improper access controls in the REST interface.
0, via improper access controls in the user interface.
0, via improper access control in the user interface.
0, via improper access control in the user interface.
4, via a specially crafted object making a specific function call.
3, via triggering a process dump in specific situations.
0, via carefully constructed HTTP post messages.
2, via the file upload tab in the DLP case management section.
3, via lack of sanity checking.
4, via adding a new label.
4, via adding a new label.
1, via incorrect validation of user credentials.
0, via unprotected log files containing plain text
1, via unprotected log files containing plain text credentials.
2, via specially crafted input in the policy discovery section.
0, via manipulating symbolic links to redirect a McAfee file operations to an unintended file.
3, via manipulation of log files.
1, via execution from a compromised folder.
0, via incorrectly applied permissions on temporary files.
1, via careful placement of a malicious DLL.
3," via parameter values for """"syncPointList"""" not being correctly sanitsed."
2, via multiple parameters where the administrator's entries were not correctly sanitized.
3, via manipulating symbolic links to redirect McAfee file operations to an unintended file.
0, via stopping certain Microsoft services.
3, via incorrectly logging of sensitive information in debug logs.
0, via triggering certain detection events while the computer screen is locked and the McTray.exe is running with elevated privileges. This issue is timing dependent and requires physical access to the machine.
4, via incorrectly applied permissions.
2, via manipulating symbolic links to redirect McAfee file operations to an unintended file.
4, via stopping a core Windows service leaving McAfee core trust component in an inconsistent state resulting in MAR failing open rather than closed
3, via stopping a core Windows service leaving McAfee core trust component in an inconsistent state resulting in MVEDR failing open rather than closed
0, via improper input validation of an HTTP request
0, via carefully constructed XML files loaded by an ePO administrator.
4, via editing of environment variables
2, via carefully crafted and named executable files.
2, via the configuration wizard.
4, via a carefully constructed MSI configured to mimic the genuine installer. This version adds further controls for installation/uninstallation of software.
4, via careful manipulation of a folder by creating a junction link. This exploits a lack of protection through a timing issue and is only exploitable in a small time window.
4, via a carefully crafted HTTP request.
1, via careful manipulation of the Code Integrity checks.
3, by manipulating a directory used by MA for temporary files. The product would continue to function with out-of-date detection files.
2, via the web interface at a higher privilege level.
3, by navigating to the Debug Options page and entering shell metacharacters in the interface JSON field of the ping function.
2," via the """"gcov-args"""" argument."
2, via the provided options.
0, by appending the URL with a fragment identifier and a whitelisted path e.g. `#package.json`
4, via directory traversal.
4, via patch history from GitHub Commits API.
4, via directory traversal.
1, by creating symlinks to match whitelisted paths.
2, by sending the Content-Length header twice. Furthermore
2," via the function """"deleteFunctions"""" within """"index.js""""."
4, by providing a malicious payload with the Sec-WebSocket-Extensions header.
3, by providing a malicious payload with the Sec-WebSocket-Extensions header.
2, by sending the Content-Length header twice. Furthermore
2, by setting the arguments to the activex method. This is due to a lack of integrity verification of the policy files referenced in the update process
1, by setting the arguments to the activex method. This can be leveraged for code execution by rebooting the victim&#8217;s PC.
1, by setting the arguments to the activex method. This can be leveraged for code execution.
1, by setting the arguments to the vulnerable method. this can be leveraged for code execution. File download vulnerability in ____COMPONENT____ of TOBESOFT XPLATFORM allows ____ATTACKER/ATTACK____ to cause ____IMPACT____. This issue affects: TOBESOFT XPLATFORM 9.2.250 versions prior to 9.2.260 on Windows.
1, by setting the arguments to the vulnerable API. This can be leveraged for code execution by rebooting the victim&#8217;s PC
0, by modifying the value of registry path. This can be leveraged for code execution by rebooting the victim&#8217;s PC
1, by setting the arguments to the vulnerable method. This can be leveraged for code execution. When the vulnerable method is called
2, use startup menu directory via directory traversal for automatic execution. The victim user need to reboot
4, via AddUploadFile
1, by setting the arguments to the activex method. A remote attacker could induce a user to access a crafted web page
2, by setting the arguments to the internal method. A remote attacker could induce a user to access a crafted web page
0, by setting the parameter to the command they want to execute. A successful exploit could allow the attacker to execute arbitrary commands on a target system as the user. However
4, via httpDownload function. A successful exploit could allow the attacker to hijack vulnerable system.
4,"create arbitrary file. The ZOOK viewer has the """"Tight file CMD"""" function to"
2, via the wp-admin/admin-ajax.php?action=learnpress_be_teacher URI without any additional permission checks. Therefore
4, via enumeration.
4, use X.509 authentication
0,use a specially crafted request to
3, by creating a gaming server and inviting a victim to this server
3, by creating a gaming server and inviting a victim to this server
3, by creating a gaming server and inviting a victim to this server
3, by creating a gaming server and inviting a victim to this server
1, via JSON web services (JSONWS).
2, via the Q field within JSON data to the cgi-bin/libagent.cgi URI. NOTE: a valid sid cookie for a login to the intellian default account might be needed.
4, via a modified email ID field.
2, via the (1) label[libelle] parameter to the /htdocs/admin/dict.php?id=3 page; the (2) name[constname] parameter to the /htdocs/admin/const.php?mainmenu=home page; the (3) note[note] parameter to the /htdocs/admin/dict.php?id=10 page; the (4) zip[MAIN_INFO_SOCIETE_ZIP] or email[mail] parameter to the /htdocs/admin/company.php page; the (5) url[defaulturl]
0, via commands that attempt to launch a grid without previously providing a Compute Shader (CS).
2, by triggering texture allocation failure
4, via a specially crafted DLL file. This issue affects: Bitdefender Antivirus Plus versions prior to 24.0.26.136. Bitdefender Internet Security versions prior to 24.0.26.136. Bitdefender Total Security versions prior to 24.0.26.136.
0, by forcing the user to install a malicious package.
5, by sending a specially crafted request.
2, via the logkitty npm package before version 0.7.1.
1,create specially crafted requests to
4,send CSRF to
0, via HTTP response code and response timing.
2, via the admin web interface.
2, via the administrator web which can cause DOS.
2, via the administrator web interface.
3,upload custom template to
0, via XML External Entity (XXE) vulnerability.
3,upload SVG files as PNG files to
1,upload malicious SVG files to
4, via a large volume of connections to the PASV mode port.
4, via a GET request to the page for the configuration of the Wi-Fi network.
2, via the hidden /forms/nslookupHandler form
4, via a modified login parameter to an edit URI
1, by manipulating request paths.
2,send requests that appear to
4, via a crafted DTD in an XML request.
5, uses nginx.ingress.kubernetes.io/auth-type: basic and which has a hyphenated namespace or secret name.
0, by intercepting its transmission within an https session.
5, via AutoSupport bundles even when the &#8211;remove-private-data parameter is set to true.
0, by intercepting its transmission within an https session.
4, via AutoSupport bundles even when the &#8211;remove-private-data parameter is set to true.
1,use the product installer to
4, via a separate unrelated attack) to exploit this vulnerability.
2, via the node_id parameter.
2, via the urgency parameter.
5, by uploading a file with an executable extension. This allows an authenticated attacker to upload a malicious file (containing PHP code to execute operating system commands) to a publicly accessible directory of the application.
3, via network access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via network access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
4, via local access.
3, via adjacent access.
4, via local access.
2, via an unsanitized exec call (aka Command Line Injection)
5, by connecting to the unauthenticated setup3.htm endpoint from the local network.
4, via add_to_prospect_list.
3, via shell metacharacters in a cookie
4, via a Slowloris approach by sending a large volume of small packets.
5,create a denial-of-service condition on affected installations of ELOG Electronic Logbook 3.1.4-283534d. Authentication is not required to
0,create arbitrary files on affected installations of Horde Groupware Webmail Edition 5.2.22. Authentication is required to
5,create a denial-of-service condition on affected installations of OPC Foundation UA .NET Standard 1.04.358.30. Authentication is not required to
0, via the page parameter in a page=login request to index.php (aka the server login page).
3,send malicious URLs to
4, uses a pointer queue that relies on UntrustedLocalMemcpy
2, use this pointer to write to arbitrary memory addresses including those within the secure enclave We recommend upgrading past commit 382da2b8b09cbf928668a2445efb778f76bd9c8a
4, via shell metacharacters in the /cgi-bin-igd/sys_log_clean.cgi log_3g_type parameter.
4, via shell metacharacters in the index.php?operation/netflow/nf_live_view ip_dst
4, via a malformed IRC message 324 (channel mode).
4, via shell metacharacters in the boaform/admin/formPing Dest IP Address field.
5, by uploading a previously stored cyphered file by Parallels RAS. The confidentiality
5, via a crafted journal size.
4, via a specific NFC unlock command. NOTE: The vulnerability is not present in the FreeStyle Libre 14-day in the U.S (announced in August 2018) and FreeStyle Libre 2 outside the U.S (announced in October 2018).
3, by creating a gaming server with a crafted map
2, via the Tile widget in the People Tool profile editor.
2, via the filename parameter.
5," by deleting <div id=""""watermark""""> from the HTML source code."
0, by crafting a cryptographically valid certificate that will be accepted by Java SDK's Netty component due to missing hostname verification.
0, by replacing critical files with specifically crafted files.
3, by conducting a Denial of Service attack.
4, use it to execute an HTTP API Method without the need for valid authentication/authorization. Under certain circumstances
2, via uploading malicious Filter Library DLL files in that directory.
2, via the ESS profile or the Radius Profile.
2, via uploading malicious Filter Library DLL files in that directory.
0, via exhausting the pool of temporary file names combined with a symbolic link attack.
2, via the AoWinAgt executable service path.
0, by configuring the SNMP alert settings in the UI. This is fixed in 9.2.15.
2, via the index.php?m=settings&a=addUser URI.
4, via vectors involving an XML comment and /.. path traversal.
4, via a crafted HTTP Header containing an unexpected Referer field.
3, by uploading a script.
4, via a POST to the /admin/api/widgets/ URI. This can be exploited in conjunction with CVE-2019-15954.
3, via manipulation of POST parameters. NOTE: This vulnerability may only affect a testing version of the application.
0, by uploading an SVG that contained a script.
1, by reading the IWEBSERVICE_JSONRPC_COOKIE cookie.
4, via DLL hijacking.
2, via the hostName and domain_name parameters present in the LAN configuration section of the administrative dashboard.
0, by replaying an Unlock request that occurred when the attacker was previously authorized. In other words
2, via the search_key GET Parameter in TinCan_Content_List_Table.php
5, by injecting a crafted HTML element into the editor.
4, via class_rm_user_services.php send_email_user_view.
4, via class_rm_form_settings_controller.php
4, via shell metacharacters in the server_ip field in JSON data in an api/internal.php?object=centreon_configuration_remote request.
1, by reading the /login page and performing base64 decoding.
2, use this access to create a new user account or control the device.
4, via incognito mode.
1, via malformed data to the metacontainers controller.
4, use of a malicious DLL. Zoom addressed this issue
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via network access.
4, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via adjacent access.
4, via adjacent access.
4, via local access.
4, via local access.
3, via local access.
3, via local access.
4, via local access.
4, via adjacent access.
4, via adjacent access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
3, via local access.
3, via physical access.
3, via physical access.
4, via adjacent access.
4, via local access.
3, via adjacent access.
4, via network access.
3, via network access.
3, via network access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via adjacent access.
3, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via adjacent access.
4, via adjacent access.
4, via local access.
3, via adjacent access.
4, via adjacent access.
4, via adjacent access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via network access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
0,send a specific packet causing the packet forwarding engine (PFE) to
5, use of an authenticated users session. This issue affects: Juniper Networks Junos OS 12.3 versions prior to 12.3R12-S17; 17.3 versions prior to 17.3R3-S10; 17.4 versions prior to 17.4R2-S12
5,send a valid BGP FlowSpec message thereby causing an unexpected change in the route advertisements within the BGP FlowSpec domain leading to
0, by sending certain crafted protocol packets from an adjacent device with invalid payloads to the device. These crafted packets
0, by sending certain crafted HTTP packets. Continued receipt and processing of these packets will create a sustained Denial of Service (DoS) condition. When this issue occurs
5, by sending a stream of specific packets. A Juniper Extension Toolkit (JET) application designed with a listening port uses the Message Queue Telemetry Transport (MQTT) protocol to connect to a mosquitto broker that is running on Junos OS to subscribe for events. Continued receipt and processing of this packet will create a sustained Denial of Service (DoS) condition. This issue affects Juniper Networks Junos OS: 16.1R1 and later versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13
0, by exhausting DMA buffers
0, by reviewing the PFE firewall rules
2, by sending crafted packets to or through the device. This issue affects: Juniper Networks Junos OS on SRX Series: 15.1X49 versions prior to 15.1X49-D190; 17.4 versions prior to 17.4R2-S9; 17.4R3 and later versions prior to 18.1R3-S9; 18.2 versions prior to 18.2R3-S1; 18.3 versions prior to 18.3R2-S3
2, via the Junos Device Management Daemon (JDMD) process. This issue affects Juniper Networks Junos OS on NFX Series: 18.1 version 18.1R1 and later versions prior to 18.2R3-S5; 18.3 versions prior to 18.3R2-S4
2, via the Junos Device Management Daemon (JDMD) process. This issue affects Juniper Networks Junos OS on NFX Series 17.2 version 17.2R1 and later versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S5
1,send specially crafted packets to
3, by sending a crafted DHCP packet to the device thereby crashing the jdhcpd DHCP service. This is typically configured for Broadband Subscriber Sessions. Continued receipt and processing of this crafted packet will create a sustained Denial of Service (DoS) condition. This issue affects Juniper Networks Junos OS: 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R2-S1
4, by sending a crafted ARP packet to the device. Continued receipt and processing of the crafted ARP packets will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS on EX2200-C Series
4,send specific sequences of packets to
4,send specific sequences of packets to
1,send specially crafted packets to
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a user a malicious ARF or WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
3, by sending a user a malicious WRF file through a link or email attachment and persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to execute arbitrary code on the affected system with the privileges of the targeted user.
5, by sending a malicious WRF file to a user as a link or email attachment and then persuading the user to open the file with the affected software on the local system. A successful exploit could allow the attacker to crash the affected software and view memory state information.
3,compromise Oracle WebLogic Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, by sending a crafted HTTP request to the remote host.
1,upload an arbitrary file to
5, by sending a specially crafted request. This vulnerability affects SonicOS Gen5
4,compromise Siebel Core - Server BizLogic Script. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Client. Successful attacks of this vulnerability can result in unauthorized ability to
2, via the error handling functionality of web pages.
2, via the regionalSettings.php dialogs.
3, via the virtualization.php dialogs.
2, via the sms.php dialogs.
2, via an authenticated directory traveral.
0,upload a specially crafted file that could lead to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
0, by tricking legitimate users into clicking a crafted link.
0,upload a specially crafted file that could lead to
2,send commands over port 9000. While these commands may not be executed (due to
4,compromise MySQL Client. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1, by replacing files executed by Log360 on startup.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2," via the automated """"check for updates"""" in the admin interface. If an attacker is able to masquerade as the update server"
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise Oracle User Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
0, by calling certain commands with a large number of specific short forms of options. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.
5, by triggering a use-after-free. The highest threat from this vulnerability is to system availability.
1, by sending crafted topic subscription requests and then unsubscribing. The highest threat from this vulnerability is to confidentiality
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,use specially crafted mailbox names containing '..' path components to
1, by exhausting available memory. The highest threat from this vulnerability is to system availability.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted ELF. The highest threat from this vulnerability is to system availability.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise FIN Payables. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, by sending a specially crafted request. IBM X-Force ID: 198813
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, by sending a specially crafted request. IBM X-Force ID: 199184.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
0,send a specially crafted HTTP GET request that could cause the application to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle iStore. Successful attacks of this vulnerability can result in unauthorized read access to
4, via brute-force attack on user names.
1, by sniffing network traffic and obtaining credentials when registering user information in the target or changing a password.
2, by obtaining credentials other than password.
4, by sending a large number of packets in a short time while the module starting up. System reset is required for recovery.
2, by getting GX Works2 to read a tampered program file from a Mitsubishi Electric PLC by sending malicious crafted packets to tamper with the program file.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
5, by sending a specially crafted request.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors. Note that this vulnerability occurs only when using Mozilla Firefox.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a specially crafted URL. As a result
5, by sending a specially crafted URL.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted URL. As a result
5, by sending a specially crafted URL.
5, by processing a specially crafted request.
5, by displaying a specially crafted SSID on the web setup page.
5, via unspecified vectors.
4, via unspecified vector. As a result
3, via unspecified vector. As a result
3, via unspecified vectors.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vector. As a result
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors. If the file is PHP script
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted content.
4, via a specially crafted URL.
4, via a specially crafted URL.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via a Trojan horse DLL in an unspecified directory and to execute arbitrary code with the privilege of the user invoking the installer when a terminal is connected remotely using Remote desktop.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
5, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, by leading a user to expand a malicious ZIP archives.
2, via the vulnerable App.
4, via unspecified vectors.
4, via unspecified vectors.
3, by sending a specially crafted request to a specific CGI program.
3, via unspecified vectors.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors. As a result
3, via unspecified vectors.
4, via unspecified vectors.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vectors.
3, via unspecified vectors. If the file contains PHP scripts
4, via a Trojan horse DLL in an unspecified directory.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
3, by loading a file or code snippet containing an invalid iframe into Zettlr.
2, via the vulnerable App.
4, via unspecified vectors.
5, via unspecified vectors.
2, via the vulnerable App.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vector.
3, by leading a user to a specially crafted page and to perform a specific operation.
3, by leading an administrator or a user to a specially crafted page and to perform a specific operation.
3, by loading a file or code snippet containing an invalid iframe into Inkdrop.
4, via unspecified vectors.
2, via the vulnerable App.
3, by leading an administrator or a user to a specially crafted page and to perform a specific operation.
0, by leading an administrator or a user to a specially crafted page and to perform a specific operation.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via telnet.
2, via the vulnerable App.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a specially crafted page.
2, uses the product via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via a Trojan horse DLL in an unspecified directory.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors. This issue occurs only when using Mozilla Firefox.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, via the vulnerable App.
2, via the vulnerable App
5, by opening a specially crafted SCS project files.
5, by processing a specially crafted XML document.
3, by processing a specially crafted XML document.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a specially crafted web page.
4, via a specially crafted web page.
4, via a specially crafted web page.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted file.
4, via a crafted HTML page.
4, via via a USB device.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted script.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page and a malicious server.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted QR code.
4, via IDN homographs via a crafted domain name.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page. (Chrome security severity: Low)
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
5, via a crafted QR code.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious WAP.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted PDF file.
4, via a crafted PDF file.
4, via a crafted PDF file.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
0, use SAX or JAXB parsing of externally received XML are potentially subject to this kind of attack. In openHAB
4, use Ruby's Kernel.open method. Exploitation is possible only if untrusted input is used as a local filename and passed to any of these calls: Mechanize::CookieJar#load
3,compromise Enterprise Manager for Fusion Middleware. Successful attacks of this vulnerability can result in unauthorized ability to
5, by setting `XOR-PEER-ADDRESS` to `127.0.0.1:{{restund_udp_status_port}}` when opening a TURN channel. We now explicitly disallow relaying to loopback addresses
5, use a username that is not part of the site to bypass the auth checks. For more details and workaround guidance see the referenced GitHub security advisory.
3, use it to acquire a Reference to the nodejs context's Function object. Similar application-specific attacks could be possible by modifying the local prototype of other API objects. Access to NativeModule objects could allow an attacker to load and run native code from anywhere on the filesystem. If combined with
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,create dashboards and save them as JSP through the SSCE (Self Service Composition Environment). An attacker can intercept a request to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise CS Campus Community. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Sales Offline. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Sales Offline. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
0, by using REST HTTP requests with label_selectors on multiple V3 endpoints by generating an enormous SQL query.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via altering the content of its configuration file.
0, via specifically crafted HTTP requests.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a specially-crafted commit to a wiki
0, by getting the victim to visit a malicious page with Safari
4, via clicking on a link
4, via a specially-crafted markdown
3, via using a specially crafted username.
4, via a specially-crafted markdown
1, by inserting an internal address.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via this config file. As such the attacker is able to execute any executable on the system through vscode-bazel. We recommend upgrading to version 0.4.1 or above.
4, via DOM clobbering. The validation logic in dart:html for creating DOM nodes from text did not sanitize properly when it came across template tags.
0,send a specially crafted Modbus packet allowing the attacker to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,use a crafted webpage to
4, via FTP protocol.
2, by performing brute force attacks. Affected Products: EVlink City EVC1S22P4 / EVC1S7P4 (All versions prior to R8 V3.4.0.2 )
2, via specifically crafted pull requests and REST API requests. An attacker would need to be able to fork the targeted repository
2, via the REST API without having been granted the appropriate permissions. To exploit this vulnerability
4,use spoofed cameras to
2, via maliciously crafted meeting room.
0, via Windows Resource Profiles Feature
4, via a maliciously crafted archive upload in the administrator web interface.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a maliciously crafted web request.
4, via a malicious crafted web request.
2, via an unsanitized web parameter.
2, via an unsanitized web parameter.
4, via a maliciously crafted archive uploaded in the administrator web interface.
2, via an unsanitized web parameter in the administrator web console.
4, via a double slash // followed by a domain: http://localhost:3000//google.com/%2e%2e.The issue shows up on all the fastify-static applications that set redirect: true option. By default
4," via a double slash `//` followed by a domain: `http://localhost:3000//a//youtube.com/%2e%2e%2f%2e%2e`.A DOS vulnerability is possible if the URL contains invalid characters `curl --path-as-is """"http://localhost:3000//^/..""""`The issue shows up on all the `fastify-static` applications that set `redirect: true` option. By default"
1, by reading files from the local LAN. An attacker can pivot in the private LAN and exploit local network appsandb. SSRF Mitigation Bypass through DNS RebindingConcrete CMS security team gave this a CVSS score of 3.5 AV:N/AC:H/PR:L/UI:N/S:C/C:L/I:N/A:NConcrete CMS is maintaining Concrete version 8.5.x until 1 May 2022 for security fixes.This CVE is shared with HackerOne Reports https://hackerone.com/reports/1364797 and https://hackerone.com/reports/1360016Reporters: Adrian Tiron from FORTBRIDGE (https://www.fortbridge.co.uk/ ) and Bipul Jaiswal
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise OSS Support Tools. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
1,compromise Oracle Hospitality Inventory Management. Successful attacks of this vulnerability can result in unauthorized access to
4, via local access.
4, via adjacent access.
4, via local access.
4, via local access.
4, via local access.
4," via """"Copy"""" method at user_admin.php."
3, by winning a sudo_edit.c race condition in replacing a user-controlled directory by a symlink to an arbitrary path.
3, by replacing a temporary file with a symlink to an arbitrary file target. This affects SELinux RBAC support in permissive mode. Machines without SELinux are not vulnerable.
4,compromise Database Vault. Successful attacks of this vulnerability can result in unauthorized read access to
4, via FreeMarker static methods.
5,upload a malicious NodeJS file using uploadBackgroud action. An attacker can upload a malicious code or execute any command using a specially crafted packet to
4,compromise Core RDBMS. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Workflow. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Hyperion Infrastructure Technology. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
2,compromise Oracle Commerce Guided Search / Oracle Commerce Experience Manager. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Hyperion Essbase Administration Services. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Access Manager. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Siebel CRM. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, use of certain functions
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, by sending crafted requests to the device. Only devices of the CPP6
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, by using rainbow tables.
0, by using the password
2,compromise Primavera P6 Enterprise Project Portfolio Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3, by manipulating a symbolic link in the IOCTL interface.
2, via manipulating Junction link
2, via executing carefully constructed malware.
3, by replacing a specific temporary file created during the installation of the trial version of MTP.
2, via accessing process memory after the ENS administrator has performed specific actions. To exploit this
2, via the running of a specific command with the correct parameters.
2, by placing carefully crafted files where ENS will be installed. This is only applicable to clean installations of ENS as the Access Control rules will prevent modification prior to up an upgrade.
0, via a specific system call which is not handled correctly. This varies by machine and had partial protection prior to this update.
0, via incorrect improper neutralization of user input in the troubleshooting page.
1, via multiple parameters where the administrator's entries were not correctly sanitized.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, by impersonating a client token which could lead to the bypassing of MTP self-defense.
0, via exploiting an unutilized memory buffer.
0, via carefully constructed Java serialized object sent to the DBSec server.
0, via carefully constructed Java serialized object sent to the DBSec server.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via directly visiting its URL.
2, via specifically crafted HTTP requests.
2, via specifically crafted HTTP requests.
0, by abusing the sudo privileges.
2, via specifically crafted web requests.
2, via specifically crafted request parameters.
2, via specifically crafted HTTP requests.
4, via a specifically crafted firmware image.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4," via a malicious payload in the """"diagnose"""" command."
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Cluster. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Communications Session Border Controller. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
2,compromise PeopleSoft Enterprise CS Campus Community. Successful attacks of this vulnerability can result in unauthorized access to
3,upload any files to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
0, by using an XSS payload to create a rogue administrator account
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
4,compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Essbase Analytic Provider Services. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Hyperion BI+. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
2, via the $post_id on the options.php page.
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
4, via shortcode attributes. Note: the plugin is inconsistent in its handling of shortcode attributes; some do escape
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5,compromise Identity Manager. Successful attacks of this vulnerability can result in unauthorized read access to
3, via the ays_finish_poll AJAX action. While the result is not disclosed in the response
2, via the plugin's block.
0, via OS Command Injection when invoking Ghostscript.
4, via a path traversal attack
4, via a path traversal vector.
4," via 1) """"color"""" or """"css_class"""" argument of sdm_download shortcode"
4,compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized access to
2, via the Carousel Duplication feature
2, via the rtWLSSettings AJAX action because it uses a nonce for authorisation instead of a capability check.
3,compromise Oracle Transportation Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Applications Framework. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a CSRF attack
5, by placing a payload in the notes field
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2, via the Description fields of a Cost Calculator > Price Settings (which gets injected on the edit page as well as any page that embeds the calculator using the shortcode)
0, by specifying the user login as a parameter. This makes the WP instance vulnerable to data extrafiltration
4, via a shortcode argument
2, via the search parameter to content_management_system\admin\new_content.php
2, via the file upload to \CMSsite-master\admin\includes\admin_add_post.php.
2, via the subject field to feedback_process.php.
2, via the file upload to Product_model.php.
2, via the file upload to prodViewUpdate.php.
2, via the file upload to updatepackage.php.
4, via a specific sweep.
4, via a sweep.
5,use a malicious DLL to
2, by sending relatively long AT commands.
4, via brute-force attacks.
5, via shell metacharacters in the ui_language POST parameter to the apply.cgi form endpoint. This occurs in do_upgrade_post in mini_httpd. NOTE: This vulnerability only affects products that are no longer supported by the maintainer
4, via malicious links. This issue affects: SUSE Rancher Rancher versions prior to 2.5.6.
0, via salt without the need to specify valid credentials. This issue affects: SUSE SUSE Linux Enterprise Server 15 SP 3 salt versions prior to 3002.2-3. openSUSE Tumbleweed salt version 3002.2-2.1 and prior versions.
0, via scanning specific QR code.
4, via sending a crafted malicious intent.
4, via log.
5, by hijacking and modifying the intent.
1, via hijacking the PendingIntent.
4, via malicious deeplink.
4, via untrusted applications.
4, via untrusted applications.
3, via untrusted applications.
3, via debugging command.
1, via changing the path.
4, via untrusted applications.
4, via log.
2, via physically configuring device.
5, via untrusted applications.
1, via phising URL link.
4, via log.
3, via exported component.
1, by replacing FOTA update file.
4, via remote socket.
1, via forged aac file.
1, via forged avi file.
1, via forged wmf file.
1, via BT remote socket.
1, via malicious content provider or lead to denial of service.
4, via a path traversal vulnerability.
0," by tampering the boolean value of parameters """"isAdmin"""" and """"isPremium"""" located on device storage."
1, via crafted payloads in all text fields except for Phone Number and Alternate Phone Number.
1, via crafted payloads in the First Name
4, via a crafted .avi file.
4, via a crafted .avi file.
4, via a crafted .avi file.
5, via a crafted ZIP file.
4, via a template injection vulnerability.
1, via an Information Disclosure vulnerability in the /rest/api/1.0/issues/{id}/ActionsAndOperations API endpoint. The affected versions are before version 8.5.11
4, via a Broken Authentication vulnerability in the `makeRequest` gadget resource. The affected versions are before version 8.13.3
4, via a blind Server-Side Request Forgery (SSRF) vulnerability.
4, via a Pre-Authorization Arbitrary File Read vulnerability in the /s/ endpoint. The affected versions are before version 7.4.10
4, via a path traversal vulnerability in the /WEB-INF/web.xml endpoint. The affected versions are before version 8.5.14
2, via sending specifically crafted UDP login notification packets.
2, via specifically crafted login requests.
4, by observing a few invariant properties of the ciphertext.
2, by running the kdbg CLI command with specifically crafted arguments.
2, via specifically crafted requests to SSLVPN
2, via specifically crafted requests.
2, via specifically crafted HTTP requests.
2, via specifically crafted arguments to existing commands.
2, via the search field to search.php.
2, via the student information parameters to edit_stud.php.
2, via the user information to save_user.php.
0, via the id parameter to news.php.
3, via network access.
4, via local access.
3, via local access.
4, via local access.
5,use attacker-controlled values prior to
3, by loading a malicious TA.
0, by calling the file via the web server.
1, via crafted LaTeX input to a cgi/cal?year= URI.
2, via an HTTP session.
4, via syno_finder_site HTTP header.
4, via syno_finder_site HTTP header.
4, via unspecified vectors.
2, via an HTTP session.
2, via an HTTP session.
1, via inbound QuickConnect traffic.
3, via filename and pathname options.
1, via crafted web requests.
4, by sending a crafted HTTP request an affected program. A successful exploit could allow the attacker to remotely execute arbitrary code on a target system.
2, via the parameter(path value) of Ark_NormalizeAndDupPAthNameW function because of an integer overflow.
4, via navercheckout_add function.
1,send the RTSP requests using ffplay command and lead to
0, by using the file download or execution path as the parameter value of the vulnerable function.
1, via crafted JSON/XML input to a cgi/ajax/phrase URI.
1, via crafted input to the verb parameter in a cgi/toolbox/toolbox URI.
2, via the login.xgi user and pass parameters. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
2, via the signIn.do urll parameter.
2, via the help/Online_Help/NetHelp/default.htm turl parameter.
4, via Directory Traversal.
2, via the det HTTP GET parameter. This allows an attacker to access all the data in the database and obtain access to the NeDi application.
2, via the md or ag HTTP GET parameter. This allows an attacker to obtain access to the operating system where NeDi is installed and to all application data.
2, via the txt HTTP POST parameter. This allows an attacker to obtain access to the operating system where NeDi is installed and to all application data.
1, via crafted php file.
4, via a Roster Time to Roster Management.
0, by running the application with a malicious WAV file.
5, via /manager/files URI. An authenticated user to the service may exploit incomplete input validation on the /manager/files API to inject arbitrary code within the API service script.
0," by sending an HTTP request with a very long """"ssid"""" parameter to the """"/userRpm/popupSiteSurveyRpm.html"""" webpage"
4, via view_edit.shtm.
2, via the `ID` input field of ajax.php in the `Pugin library - delete` module.
5, by sending a malicious URL or directing the victim to a malicious site.
4, via a crafted file.
4, via Console.exe.
4," via a crafted apinotifypath value. NOTE: the discoverer states """"security mitigation may not be necessary as there is no evidence yet that these screen intercepts are actually transported away from the local host."""" NOTE: it is unclear whether there are any common use cases in which apinotifypath is controlled by an attacker."
5, via a crafted UTF-8 character sequence.
4, via a crafted html file.
4, via local access.
4, via IoReader::read.
4, via a user-provided Read implementation.
0, via error messaging which may aid in crafting more complex attacks.
2, via the web proxy.
4, via a SQL injection attack.
5, via a crafted UTF-8 combining character sequence.
1, by making five invalid login attempts to a victim's account.
4, via shell metacharacters in a backup comment.
4, via [USER_CFG#0
2, via an HTTP request
2, via the /export command. NOTE: the vendor's position is that this is intended behavior because of how user policies work.
4, use of hard-coded encryption key. An attacker can leverage this vulnerability to execute arbitrary code in the context of root. Was ZDI-CAN-12287.
4, via FTP. The issue results from the lack of proper validation of the certificate presented by the server. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root. Was ZDI-CAN-12362.
1," by injecting arbitrary web script or HTML via the """"Comment"""" field in """"/profile/activity"""" page."
2," via the """"redirect"""" parameter."
1, via username parameter at login page.
2, via the comment parameter.
4, via lastname parameter.
2, via the comment parameter.
2, via the lastname parameter.
4, via email parameter.
4, via firstname parameter.
0, via the class_name parameter to update_class.php.
4, via a timing-based side-channel attack
4, via a crafted compressed file.
4, via a crafted compressed file.
4, via a remote API call if a commonly used configuration is set.
2, via the build-in network monitoring tool and execute arbitrary commands.
1, by executing arbitrary code due to insufficient input validation
0, by injecting arbitrary directory paths due to improper URL validation
1, by using specially crafted URLs.
0," via index.php in the """"srch"""" parameter."
0," via index.php in the """"author"""" parameter."
2," via the """"page"""" parameter."
4," via the """"valueID"""" parameter."
2," via the """"refID"""" parameter."
2," via the """"limit"""" parameter."
3, via URI in /index.php.
2," via the """"query"""" parameter."
0," by injecting arbitrary HTML into the """"sername"""" parameter."
2," by injecting SQL commands into the """"sername"""" parameter."
0, by setting the type parameter to System.
2, via various areas such as data-link-creator.
1, via an unexpected valid HTTP request such as OPTIONS. This occurs because the HTTP request handler enters a miscoded wbs_loop() debugger hook.
1, via crafted web requests.
1, via crafted web requests.
3, via unspecified vectors.
4, via unspecified vectors.
0," by injecting SQL commands into the """"cID"""" parameter when creating a new HTML component."
0," by injecting arbitrary HTML into the """"cID"""" parameter when creating a new HTML component."
2, via the field name.
2, via the field name.
2, via the field name.
4," via a crafted """"action/umountUSBPartition"""" request. This occurs because the """"formSetUSBPartitionUmount"""" function executes the """"doSystemCmd"""" function with untrusted input."
3," via any """"Add"""" sections"
4," via a crafted action/""""qosIndex """"request. This occurs because the """"formQOSRuleDel"""" function directly passes the parameter """"qosIndex"""" to strcpy without limit."
4," via a crafted action/""""IPMacBindIndex """"request. This occurs because the """"formIPMacBindDel"""" function directly passes the parameter """"IPMacBindIndex"""" to strcpy without limit."
5," via a crafted action/""""portMappingIndex """"request. This occurs because the """"formDelPortMapping"""" function directly passes the parameter """"portMappingIndex"""" to strcpy without limit."
4, via a crafted payload in the Category field.
4, use of the Reader.Open API for a ZIP archive in which ../ occurs at the beginning of any filename.
4, via a specially crafted URL.
2, by monitoring the Wi-Fi spectrum during a device pairing process.
2, via the Smart Cast functionality
0, via the id parameter to mesdocs.ajax.php in azurWebEngine/eShop. By default
1, via crafted payloads entered into the Name and Address fields.
4, via a crafted payload entered into the URL field. The vulnerability is triggered by users visiting https://site.com/articles/welcome-to-your-site#comments-head.
4, via a crafted payload entered into the URL field. The vulnerability is triggered by users visiting the 'Articles' page.
2, via specially crafted HQL-compatible time-based SQL queries.
3, by uploading a zip that extracts files in relative paths.
2, via multiple input fields.
4, via a crafted HTML page.
2, via the Additional Information parameters.
2, via the Alias parameter.
2, via the url parameter to group/api/upload.php.
0,use a crafted HTTP API request to
0,create a short URL for a dashboard that could convince the user to
4, via a crafted survey block. This requires at least Editor privileges.
3, by substituting ../ (e.g.
4, via /backup2.cgi.
4, via a username in api/security/userinfo/delete.
0," by injecting SQL commands into the """"cf_name"""" parameter when creating a new filter under the """"Collections"""" tab."
3, by uploading a malicious MP4 file.
2, via the OTP code without a valid password. NOTE: this issue only affected the git master branch for a short time. However
2, via the forgot password function.
4," via archive.php and the """"search_name"""" parameter."
4," via settings.php and the """"category"""" parameter."
4," via alerts.php and the """"from_time"""" parameter."
2, via the 'editid' GET parameter in edit-subjects-detail.php
2, via the 'email' POST parameter in adminprofile.php.
2, by placing arbitrary code on a specified folder and have that code be executed by an Administrator who is running a scan. Please note that an attacker must first obtain the ability to execute low-privileged code on the target system to exploit this vulnerability.
2, via an account with write permissions. This occurs because node IDs are predictable (with incrementing numbers) and the access control on Services/NodeManagement.asmx/DeleteObjNow is incorrect. To exploit this
4, via a DeviceIoControl.
4, via a DeviceIoControl.
3, by constructing a malicious workspace with a crafted apple-swift-format.path configuration value that triggers execution upon opening the workspace.
3, by constructing a malicious workspace with a crafted swiftlint.path configuration value that triggers execution upon opening the workspace.
3, by constructing a malicious workspace with a crafted swiftformat.path configuration value that triggers execution upon opening the workspace.
4, by constructing a malicious workspace with a crafted sourcekit-lsp.serverPath
5, via a crafted workspace configuration.
0, via tab title change requests that are sent repeatedly at high speed
2, by telling the Mintty window to change its title repeatedly at high speed
2, via the (1) compId parameter to fast/sys/user/list
4, via a crafted zip file uploaded to the Themes panel.
4, via POST requests.
3, via CLI commands.
4, via a crafted workspace because of lint configuration settings.
2, via the sort_by parameter to the email search feature. According to the vendor
2, via the job_id parameter to the email search feature. According to the vendor
3, via shell metacharacters to sys_config_valid.xgi
4," via webmaster-tools.php in the """"to_time"""" parameter."
4," via archive.php in the """"type"""" parameter."
4," via archive.php in the """"report_type"""" parameter."
2, via the /users/my_images.php URI.
2, via the /users/admin/permissions.php URI.
2, via the /users/index.php URI.
2, via the /users/admin/user_activity.php URI.
2, via the /users/edit_personal_page.php URI.
2, via the /users/admin/index.php URI.
2, via the /users/admin/users_import.php URI.
2, via the /users/preferences.php URI.
2, via the /users/admin/edit_group.php URI.
2, via the site name.
0, via the classPKField parameter to (1) CommerceChannelRelFinder.countByC_C
4, via realname parameter.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
5, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
0, by inducing the user to upload a crafted file to an affected system.
4," via a crafted image that causes symlink traversal when """"umoci unpack"""" or """"umoci raw unpack"""" is used."
4, use of local JWT validation with the posix fs driver.
4, via a crafted workspace configuration.
2, via the chatbot feature.
1," via crafted traffic from a Man-in-the-Middle (MITM) attack to the component """"FrameworX.exe"""" in the module """"MSVCR100.dll""""."
1," via crafted traffic from a Man-in-the-Middle (MITM) attack to the component """"FrameworX.exe""""in the module """"fxVPStatcTcp.dll""""."
4, via a crafted IOCTL 0x9c406104 call. This IOCTL provides the MmMapIoSpace feature for mapping physical memory.
2, via the X-Forwarded-For header to admin/product_add.php.
4, via a crafted PVR file.
4, via a crafted RLE file.
4, via a crafted RLE file.
4, via a crafted RLE file.
4, via a crafted RLE file.0xa74
4, via a crafted RLE file.
5, via a crafted RLE file.
4, via a crafted WPG file.
4, via admin.php/index/upload because app/common/service/UploadService.php mishandles fileExt.
4," via any """"Add"""" sections"
2, via vulnerable field 'Budget Title'.
2," via the unsanitized user-controlled """"command"""" and """"commandvalues"""" parameters."
3," via lack of proper authorization in the user-controlled """"userID"""" parameter of the HTTP POST request."
4, via a crafted .git directory because of directory traversal.
2, by setting up a specific template which is not properly sanitized. The problem has been patched in version 1.3.18. Users should update and type `!warnsysteminfo` to check that their version is 1.3.18 or above. As a workaround users may unload the WarnSystem cog or disable the `!warnset description` command globally.
0, by manipulating the processed input stream. No user who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types is affected. The vulnerability is patched in version 1.4.17.
2, by preventing mixing `DT_STRING` and `DT_INT64` types solves this issue. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2
0, by inducing the Administrator user to browse a URL controlled by an attacker.
1, by injecting parameters into an HTML query. This information could be used in further attacks against the system. IBM X-Force ID: 199918.
0,upload an improper site identity certificate that may cause it to
4, via a duration string with a large exponent.
5, by opening .md files containing a mutation Cross Site Scripting (XSS) payload.
4, use of uninitialized memory
2, via the filePath parameter.
4, via a crafted payload.
4, via admin/dashboard.
2, via the 'return' parameter in login.php.
1, by crafting malicious form values that are later not sanitized.
4, via a URL to a malicious update in a spoofed response to the UDP query used to check for updates.
5,create a student_leave_application request through module/core/studentleaveapplication/create. The application fails to
0,create a voucher payment request through module/accounting/voucher/create. The application fails to
4, via a malicious HTML attribute such as onerror (in the URL field of the Parameters tab).
0, use 2FA for authentication in enforce client-side instead of server-side and can be bypassed using a local proxy. Thus rendering 2FA useless. Detailed description --- During the login process
4, via a crafted phpmd.command value in a workspace folder.
2, via the -z/--search-zip or --pre flag.
4,send JSON or XML data to
4, via a crafted m3u playlist file.
0, by leveraging the Issues API.
2, by reading the def_wirelesspassword line in the HTML source code.
1, via crafted PGN (Portable Game Notation) data. This is related to a buffer overflow in the use of a .tmp.epd temporary file in the cmd_pgnload and cmd_pgnreplay functions in frontend/cmd.cc.
4, via shell metacharacters in the iandlink_proc_enable parameter.
3, via shell metacharacters in the dm_enable
4, via shell metacharacters in the zonename parameter.
4, via shell metacharacters in the bssaddr
4, via shell metacharacters in the IGMP_PROXY_WAN_CONNECT parameter.
3, via shell metacharacters in the iptv_vlan parameter.
4, via shell metacharacters in the MLD_PROXY_WAN_CONNECT parameter.
5,send specifically-crafted input to
2, by creating symlinks to files for which they lack permissions. After reading the RKEY value from user.conf under the /usr/local/vesta/data/users/admin directory
1, via crafted tcp/20499 packets to the CTRL Ethernet port.
2, via Absolute Path Traversal. The imageFilePath parameter processed by the /AvalancheWeb/image endpoint is not verified to be within the scope of the image folder
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page and a crafted Chrome extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted SCTP packet.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted iframe.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page and user gesture.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page. (Chrome security severity: Medium)
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via specific user gesture.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted click-to-call link.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via physical access to the device.
4, via a crafted HTML page.
1, via physical access to the device.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via directory traversal (no customer-specific data is exposed).
4, via a direct /session/list/allActiveSession request. For example
2, via the search_path function
3, by staging a symlink attack.
2, via the vars[0][name] field.
4, via a crafted file
4, via a crafted file.
4, via a crafted file.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
5, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
1, via crafted metadata.
4, via a crafted tokenid parameter to /goform/form2Reboot.cgi.
0, by sending specific IP packets which are being VXLAN encapsulated leading to a partial Denial of Service (DoS). Continued receipted of these specific traffic will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS on QFX Series: All versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13
4, by sending a spoofed hello PDU leading to a Denial of Service (DoS) condition. Continued receipted of these spoofed PDUs will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS All versions prior to 18.2R3-S8; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R3-S9; 19.1 versions prior to 19.1R3-S7; 19.2 versions prior to 19.2R1-S7
3, by sending a specific username. This impacts authentication
0, by sending genuine BGP flowspec packets which cause an FPC heap memory leak. Once having run out of memory the FPC will crash and restart along with a core dump. Continued receipted of these packets will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS All versions prior to 18.4R3-S9; 19.1 versions prior to 19.1R3-S7; 19.2 versions prior to 19.2R1-S7
4, by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that kernel and netisr process are shown to be using a lot of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE C TIME WCPU COMMAND 16 root -72 - 0K 304K WAIT 1 839:40 88.96% intr{swi1: netisr 0} 0 root 97 - 0K 160K RUN 1 732:43 87.99% kernel{bcm560xgmac0 que} This issue affects Juniper Networks JUNOS OS on EX2300 Series
0, by sending specific DHCPv6 packets to the device and crashing the FXPC service. Continued receipt and processing of this specific packet will create a sustained Denial of Service (DoS) condition. This issue affects only the following platforms in ACX Series: ACX500
1,send certain malformed IPv4 or IPv6 packets to
0,send a specially crafted query to
0,send a specially crafted query to
2, by submitting malicious email addresses.
1, via crafted HTTP request.
2, via the user name. The issue is fixed with the version 4.8.1
4, via C__MONITORING__CONFIG__TITLE
2, by placing arbitrary code on a specified folder and have that code be executed by an Administrator who is running a scan. Please note that an attacker must first obtain the ability to execute low-privileged code on the target system to exploit this vulnerability.
4, via a large header to ReadRequest or ReadResponse. Server
0,compromise SSL/TLS sessions in different ways. An attacker may be able to
0, by generating SSH passwords that allow local access.
4, via LDAPGroup Search.
4, via a crafted SVG
0, by storing an XSS payload (a crafted onloadstart attribute of an IMG element) in a text field. Note: Researchers have claimed that this issue is not within the product itself
2," via the """"Hardware Layer Code Box"""" component on the """"/hardware"""" page of the application."
4, via a crafted input.
0, via exceeding the connection limit.
2, via the /#/CampaignManager/users URI.
2, via the uname parameter.
2, via the groupId parameter.
1, by passing in a basic XSS payload to a vulnerable GET parameter that is reflected in the output without sanitization.
3, use it to access sensitive assets.
4, via ../ in the path parameter to index.php/admin/Template/fileedit
4, via a crafted post request.
4, via a crafted post request. This occurs when input vector controlled by malicious attack get copied to the stack variable.
4, via a crafted post request.
4, via a crafted post request.
0, by sending certain code
2, via the Task Scheduler component.
2, via the name field
1, by sending email messages with sequences of semicolon characters in RFC822 address fields (aka terminators of empty groups). A small email message from the attacker can cause large memory consumption
1, via HTTP requests exceeding the Alerting plugin's intended scope.
2, via multiple parameters where the administrator's entries were not correctly sanitized.
0, via a specific parameter where the administrator's entries were not correctly sanitized.
2, via manipulating junction links to redirect McAfee folder operations to an unintended location.
0, by convincing the logged in administrator to click on a carefully crafted link in the case management part of the DLP ePO extension.
3, via the profileNodeID request parameters. The malicious script is reflected unmodified into the Policy Auditor web-based interface which could lead to the extraction of end user session token or login credentials. These may be used to access additional security-critical applications or conduct arbitrary cross-domain requests.
2, via the UID request parameter. The malicious script is reflected unmodified into the Policy Auditor web-based interface which could lead to the extract of end user session token or login credentials. These may be used to access additional security-critical applications or conduct arbitrary cross-domain requests.
1, via execution from a compromised folder.
0, by running the McAfee Agent deployment feature located in the System Tree. An attacker may exploit the vulnerability to obtain a reverse shell which can lead to privilege escalation to obtain root privileges.
2, via the /experimental/patternfiles endpoint (order parameter in GetMesheryPatterns in models/meshery_pattern_persister.go).
4, via a crafted payload.
2, via the Wifi Name parameter.
2, by observing timing differences in string comparison operations within SysController and MailHandlerController.
0, by injecting an XSS payload into the First Name or Last Name parameter upon registration. When a privileged user attempts to delete the account
2, via the web panel
1," by forging the """"Impersonate-User"""" or """"Impersonate-Group"""" headers. This issue affects: Rancher versions prior to 2.5.9. Rancher versions prior to 2.4.16."
5, via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 1 of 2).
4, via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 2 of 2).
4, via a crafted .xlsx document that is mishandled when read by xlsx.js.
1, by sending multiple session renegotiation requests
5,send a malicious request to
4, via a brute-force attack on a (sometimes hidden) search field
2, via the functionName parameter.
2, via the uuid parameter.
2, via the ConfigName parameter.
2, via the /include/chart_generator.php session_id parameter
2, via the lname parameter.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
0, by telling the ZOC window to change its title repeatedly at high speed
2," via the """"Description"""" field."
4, use of device setup services via continuous login error.
4, via shell metacharacters in the search parameter.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
4, via a crafted file.
4, via a crafted file in the MP4Box command.
4, by analysing the network traffic.
0,use a specially crafted network request to
4, via a crafted WAV file.
3, by placing a custom crafted file in a specific directory to load a malicious library. Please note that an attacker must first obtain the ability to execute low-privileged code on the target system to exploit this vulnerability.
1, via crafted data. For example
1, use path traversal to run an arbitrary executable located on the host system. When the user starts the emulator from SOPAS ET the corresponding executable will be started instead of the emulator
1, by injecting file path parameter. The referred vulnerability has been solved with the updated version of QSAN Storage Manager v3.3.3.
2, via the file path parameter. The referred vulnerability has been solved with the updated version of QSAN Storage Manager v3.3.3.
3, via status parameter. The referred vulnerability has been solved with the updated version of QSAN XEVO v2.1.0.
5,send a special string to
4, via a TCP SYN scan using nmap.
0, via specifically crafted HTTP requests.
0, via specifically crafted HTTP requests.
1, via multiple HTTP requests.
1, by placing them in the keys parameter of a ?location=search URI
0, by having the user visiting a website with the page title set to a malicious string. An attacker could use another application to accomplish the same
3,upload arbitrary files due to
0, by inspecting an HTML radio input element (within the modules edit page) and inserting a command.
3,upload arbitrary files to
3,upload arbitrary files to
4, via a simple HTTP request.
3, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via network access.
4, via local access.
4, via local access.
3, via physical access.
3, via local access.
4, via local access.
4, via local access.
3, via physical access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via adjacent access.
4, via adjacent access.
4, via adjacent access.
4, via local access.
4, via local access.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via physical access.
4, via local access.
4, via local access.
4, via adjacent access.
3,supply dangerous content to
4, via local access.
4, via local access.
3, via physical access.
4, via adjacent access.
4, via local access.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
1, via crafted ParseFragment input.
2, via relative paths in ZIP archives.
4, via a crafted SVG image.
1, by inserting an internal address.
2, via the notes field.
4, via htmldoc/htmldoc/html.cxx:588.
4, via /htmldoc/htmldoc/html.cxx:273.
4, via post_password.
1, via modified file parameter.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
4, via a crafted file.
0, by clicking on reply or quote in the postbit.
4, via a crafted payload injected into the Chat box.
0,create a new session cookie value and inject it to
2, via the message parameter to index.php?action=initLogon or modules/admin/DELETEIMAGES.php.
1, via crafted LaTeX input to a cgi/latex2png?latex= URI.
3, via the fromSerializable function in TypedArray object.
2, via the Hostname Change operation.
2, via any writable directory listed under the system path and ultimately execute code as NT AUTHORITY\SYSTEM.
4, via a crafted URL.
0, by telling the PuTTY window to change its title repeatedly at high speed
1, via crafted keyword arguments to the ReStructuredText transform in a Python script.
2, via an event ical URL
4, via a misconfiguration involving backup.html
4, via customer_name in various forms of store administration. It is saved in the database. The code is executed for any user of store administration when information is fetched from the backend
2, via the ref parameter to a page about an arbitrary product
5, via a crafted URL when the verify_url option is disabled. This may lead to code execution. The problem occurs because the generate and process features mishandle use of the ImageMagick convert utility.
1, via input that is mishandled during hash-table interaction. Because there are many insertions into a single bucket
4, via a crafted HTML page.
4, via a crafted upgrade.xml file. Special characters in filename parameter can be the cause of bypassing code signing check function.
0, by requesting too many rows of data.
2, by opening crafted URL
2, via an HTTP response. The issue trigger is a header that can be expected to exist in HTTP traffic without any malicious intent by the server.
0, via a URL stored in a component. This could enable the attacker to compromise the user's confidentiality and integrity.
4, via a crafted POST request using the user_group_id_field parameter.
2, via the Print Invoice Functionality.
4, via a crafted HTTP request.
1, via vectors related to a file path.
4, via local access.
0, by snooping on the network traffic. The exposed data includes critical values for a pump's internal configuration.
3,upload any files to
3, by passing a raw external string straight through to printf statements. The attacker is required to be on the same network as the device.
4, via a malicious Mach-O file. Affects all versions before libyara 4.0.4
0, by running the application with a crafted file.
0, by running the application with a crafted file.
0, by running the application with a crafted file.
0, by running the application with a crafted file.
0, by running the application with a crafted file.
4, via shell metacharacters in the 'ports' entry of a crafted docker-compose.yml file.
2, via unsanitized shell metacharacters provided to the createCertRequest() and the createCert() functions.
4, via a crafted tag name of the target git repository.
4,send search queries to
2, via the metadata() function.
3, by using index.php?module=system&action=pay to upload a ZIP archive containing a .php file
0," by constructing specific string objects. NOTE: the vendor states that this reported code behavior is """"completely harmless."""""
4," via a crafted payload entered into the """"Name"""" or """"Prefix"""" fields under the """"Create New Rate"""" module."
5, by sending a crafted POST to '/bd_genie_create_account.cgi' with a sufficiently long parameter 'register_country'.
4, via a crafted file uploaded into the Document Management tab. The exploit is triggered when a user visits the upload location of the crafted file.
2," via the """"undo archive operation"""" feature."
4," via a modified contactSeqNumber value. NOTE: the vendor states """"the information that is being queried is authorized for an authenticated user of that application"
1,use the malicious CA that is run by the user to
4, via a multi-value From header field.
5, by crashing XScreenSaver. The attacker must physically disconnect many video outputs.
0, by sending specifically constructed requests without authentication on multiple WAGO PLCs in firmware versions up to FW07.
4, via a substitution cipher.
1, via TCP port 5970 and 5980.
5, by supplying a ua (aka User-Agent) value that only specifies the product and version.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
2, by installing plugins from an attacker-controlled source.
5, by importing a crafted pad.
2, use this vulnerability and deploy a given image to anywhere in the cluster
5, use of named pipes. The issue results from allowing an untrusted process to impersonate the client of a pipe. An attacker can leverage this vulnerability to escalate privileges and execute arbitrary code in the context of SYSTEM. Was ZDI-CAN-14208.
2, by requesting hostname resolutions through the avahi socket or dbus methods for invalid hostnames. The highest threat from this vulnerability is to the service availability.
4, via a crafted function call.
4, via a crafted session cookie.
2, via all parameters to HTML form fields in all components.
4, via a crafted settings.pickle file in a project file
5, by executing a command. This command can be supplied with parameters that can take the form of user string variables
3, via modification of the cookie value and Response Path.
2, via multiple models that contain a 'note' field to store additional information.
0, via email connection configuration probing.
2, via the Ticket Article detail view.
2, via the User Avatar attribute.
4, via sending a crafted HTTP request.
4, via a crafted payload entered into the 'Title' and 'Filename' parameters.
4, via a crafted payload.
4, via a crafted payload.
4, via a crafted .htaccess file.
5," via a crafted payload in the course """"Title"""" and """"Content"""" fields."
1, by using the Image Transfer Folder feature to navigate to cmd.exe. It binds to local ports to listen for incoming connections.
4, via freemarker.template.utility.Execute
2, via the `keywords` parameter.
1, by issuing an unrelated server certificate using the same hostname found in the verify-x509-name option in a client configuration.
3, via the extIdentifier HTTP POST parameter. This allows an attacker to obtain the database user
2, via the /enginemanager/server/user/delete.htm userName parameter. The application does not implement a CSRF token for the GET request. This issue was resolved in Wowza Streaming Engine release 4.8.14.
4, via a low-privileged user account. To exploit this
4, via TCP/IP packets.
1,use the Endpoint Protection relay as a proxy for any remote host. This issue affects: Bitdefender Endpoint Security Tools versions prior to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Trade Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to
4,compromise Oracle Applications Manager. Successful attacks of this vulnerability can result in unauthorized access to
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Cluster. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Client. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Sales Offline. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Cluster. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Secure Global Desktop. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Secure Global Desktop. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Essbase Administration Services. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Essbase Administration Services. Successful attacks of this vulnerability can result in unauthorized read access to
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
5, uses Outside In Technology. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology
4,compromise Oracle HTTP Server. Successful attacks of this vulnerability can result in unauthorized access to
1,compromise Oracle Financial Services Analytical Applications Infrastructure. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Financial Services Analytical Applications Infrastructure. Successful attacks of this vulnerability can result in unauthorized read access to
2, by including invalid characters in the URL.
4, use a controlled cookie.
4, via BLE and brick the device.
1, via crafted choices of the last three bytes of a characteristic value.
4, via a crafted archive when tf.keras.utils.get_file is used with extract=True. NOTE: the vendor's position is that tf.keras.utils.get_file is not intended for untrusted archives.
4, via GraphQL because permission checks use an incorrect data type.
0, via an OpenSSL configuration file if present
2, via an OpenSSL configuration file if present
2, by sending malformed requests.
2, via the delivery of many small messages within a single HTTP/2 frame
1, via modifying the session-id paramater.
2, via specially crafted license blobs.
2, via multiple HTTP requests.
2, via configuration page lookup.
1, via crafted HTTP requests
2, via the named pipe responsible for Forticlient updates.
1, via crafted HTTP requests.
2, via specially crafted commands.
1, by crafting serialized objects.
0, by specifying the file path.
4, via unspecified vectors.
4, via .dll planting/hijacking
1, by using the WebAuthn password-less login flow.
2, via the GUI). NOTE: this issue exists because of an incomplete fix for CVE-2019-17124.
4, via a Fullwidth Apostrophe (aka U+FF07) in the default.aspx User ID field. Arbitrary system commands can be executed through the use of xp_cmdshell.
0, via DB user field during installation.
0, via unfiltered $file parameter to unlink method in include/inc_act/act_ftptakeover.php file.
1, via crafted file upload to include/inc_lib/general.inc.php.
4, via jo_json_check() function in jocms/apps/mask/inc/mask.php.
4, via jo_set_mask() function in jocms/apps/mask/mask.php.
4, via jo_delete_mask function in jocms/apps/mask/mask.php.
4, via jo_json_check function in jocms/apps/mask/inc/getmask.php.
2, via the 'file_url' parameter in the component AdminUpdateController.class.php'.
3, via lack of token verification.
0, via flaws one time token generation on the add administrator page.
2, via the Settings Upload Picture section by uploading pictures with malicious code
4, via /admin/index2.html
3, via insecure deserialization.
0, via add or edit article page.
1, via crafted PCX/TGA/BMP files to allegro_image addon.
1, via crafted command.
2, via the cat parameter to /list.php file.
4, via fileExt parameter to localhost/admin/uploads.php.
1, via crafted .js file to mjs_set_errorf.
2, via the reference field in milestones or description fields in reports.
0, via path in application URL.
2, via the cfg_copyright or cfg_tel field in Site Configuration page.
0, via path in application URL.
4, via a crafted PHP file.
4, via a crafted PHP file.
5, via a crafted payload under the Create category module.
5, via a crafted payload under the Add Event module.
1, via post ID to /users/delete/2.
2, via post ID to /permissions/delete/2---.
2, via the user name field of the login page.
1, via crafted image upload.
4," via a crafted string in the field """"Friendly Name 1""""."
1, via crafted request.
4, via a Trojan horse DLL in an unspecified directory.
2, via the /interface/api edit page.
4,send authenticated post-http requests to
0,send an authenticated post HTTP request to
2, via image clipping function.
2, via the sb_category parameter.
5, by sending a specific query (QTYPE 65535) that causes an out-of-bounds exception.
4, via a symlink attack on /tmp/replay-sorcery or /tmp/replay-sorcery/device.sock.
4, via a crafted XMLRPC call.
1, by tricking an unsuspecting user with administrative privileges to click on a malicious link.
1, via specially crafted packets.
1, via crafted PUT request to Web API.
4, via etc_ro/web/syscmd.asp.
2, via the httptrace interface.
4, via api uri: /sys/user/querySysUser?username=admin.
3, via api uri: api uri:/sys/user/checkOnlyUser?username=admin.
1, via crafted message to the application's listening port.
2, via improper sanitation on the source for COPY and MOVE operations.
4, via /etc/shadow.
2, via improper sanitation on the target for COPY and MOVE operations.
1, via crafted overflow data.
2," via the component """"admin_ajax.php?action=checkrepeat&v_name=""""."
2, via the Friendly Name field in System Information Settings. NOTE: Vedor states the product has reached End of Life and will not be receiving any firmware updates to address this issue.
2, via the Friendly Name field in System Information Settings. NOTE: Vedor states the product has reached End of Life and will not be receiving any firmware updates to address this issue.
2, via the Friendly Name field in System Information Settings. NOTE: Vedor states the product has reached End of Life and will not be receiving any firmware updates to address this issue.
2, via the Friendly Name field in System Information Settings. NOTE: Vedor states the product has reached End of Life and will not be receiving any firmware updates to address this issue.
2, via the Friendly Name field in System Information Settings. NOTE: Vedor states the product has reached End of Life and will not be receiving any firmware updates to address this issue.
2, via the Friendly Name field in System Information Settings. NOTE: Vedor states the product has reached End of Life and will not be receiving any firmware updates to address this issue.
4, via local access.
0, by reading the local .dat configuration files.
0, by reading the configuration files.
4, via CWallet::CreateTransaction() function.
4, via CWallet::CreateTransactionAll() function.
1, via crafted GET request.
4, via h5tools_str_sprint in /hdf5/tools/lib/h5tools_str.c.
2, via the user name field when adding a user.
4, via a crafted file with a Javascript payload in the file name.
4, via omnibar feature.
1, via crafted authenticattion file.
2," via an unsanitized """"path"""" parameter in resources/login.php."
2, via the day
4, via rtas_args.nargs
2, by entering insert tags in the Contao back end. Installations are only affected if they have untrusted back end users who have the rights to modify fields that are shown in the front end. Update to Contao 4.4.56
5, by crafting a specific MassDM message. Issue is patched in commit 92325be650a6c17940cc52611797533ed95dbbe1. All users are advised to update to the current commit. As a workaround users may unload the MassDM cog or globally disable the `[p]massdm` command.
5, by crafting a specific membership event message. Issue is patched in commit d63c49b4cfc30c795336e4fff08cba3795e0fcc0. As a workaround users may unload the Welcome cog.
2, use in traditional network attacks.
4, via a crafted manage_if setting
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted ONC file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via Windows.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted app.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, by sending an oversized packet via the NFMI (Near Field Magnetic Induction) protocol.
4, via a crafted TGA file.
2, via absolute path traversal in the SearchString JSON field in /home/download POST data.
4," via """"Copy"""" method at user_group_admin.php."
4, via a crafted pattern file
0, by performing many NFS 4.2 READ_PLUS operations.
2, by sending NFS traffic when the trace event framework is being used for nfsd.
0, via processes that trigger allocation of new system chunks during times when there is a shortage of free space in the system space_info.
3, by removing a MAX-3421 USB device in certain situations.
2, by sending heavy network traffic for about ten minutes.
3, by making a getsockname call after a certain type of failure of a bind call.
2, via the web login page URL.
2, via weak cipher in Shiro framework.
4, via a crafted mangled symbol.
2, via the `keywords` parameter. This issue is caused by an incomplete fix in CVE-2021-35463.
2, via the _com_liferay_asset_list_web_portlet_AssetListPortlet_title parameter.
4, via a predictable /log URI.
4, via local access.
4, via a crafted schema file. The schema parser uses eval as part of its processing
2, via OS command injection in the en/ajp/plugins/access.ssh/checkInstall.php destServer parameter.
4,upload executable files to
4, via a telescope and an electro-optical sensor
1,create or overwrite critical files used to
1,create or overwrite critical files used to
1,create or overwrite critical files used to
1,create or overwrite critical files used to
4, via command injection.
4, via submitForm.
4, via a symlink.
4, via WAPT Agent.
3,upload any code to
5, by crafting a malicious URL. This can result in account takeover via session token theft.
2, via session token theft.
4, via an NGINX configuration file.
4, via a crafted plugin. This vulnerability is triggered through user interaction with the attacker's profile page.
4, via a crafted IMG file.
4, via a path traversal vulnerability.
4, via a reverse tabnapping vulnerability in the Project Shortcuts feature. The affected versions are before version 8.5.15
1, by injecting an OGNL payload. The affected versions are before version 6.13.23
4, via a Server_Side Template Injection vulnerability in the Email Template feature. The affected versions are before version 4.13.9
4, via a Denial of Service (DoS) vulnerability in the GIF Image Reader component. The affected versions are before version 8.13.14
4, via a Cross-Site Scripting (XSS) vulnerability via the name of a custom field.
2, via an enumeration vulnerability in the /rest/api/1.0/render endpoint. The affected versions are before version 8.19.0.
1, via an Information Disclosure vulnerability in the /rest/api/latest/projectvalidate/key endpoint. The affected versions are before version 8.5.18
1, via an Information Disclosure vulnerability in the /rest/api/2/search endpoint. The affected versions are before version 8.5.13
4, via a Denial of Service (DoS) vulnerability in the /rest/gadget/1.0/createdVsResolved/generate endpoint. The affected versions are before version 8.16.0.
2, via an enumeration vulnerability in the password reset page. The affected versions are before version 8.5.10
4, via a Cross-Site Request Forgery (CSRF) vulnerability
4, via a Broken Access Control vulnerability (BAC) vulnerability. The affected versions are before version 8.5.10
4, via a server-side template injection vulnerability in the Email Template feature. The affected versions of Jira Server or Data Center are before version 8.13.12
1, by manipulating the processed input stream. A user is only affected if using the version out of the box with JDK 1.7u21 or below. However
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream. No user is affected
0, by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected
0, by manipulating the processed input stream. No user is affected
3, by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected
0, by manipulating the processed input stream
0, by manipulating the processed input stream. No user is affected
2, via the integrations API endpoint
1,use the REST API to
4, use Apprise granting them access to the IFTTT plugin (which just comes out of the box) are subject to a denial of service attack on an inefficient regular expression. The vulnerable regular expression is [here](https://github.com/caronc/apprise/blob/0007eade20934ddef0aba38b8f1aad980cfff253/apprise/plugins/NotifyIFTTT.py#L356-L359). The problem has been patched in release version 0.9.5.1. Users who are unable to upgrade are advised to remove `apprise/plugins/NotifyIFTTT.py` to eliminate the service.
4, via a Content-Type Filter bypass to upload malicious files. This occurs because text/html is blocked
2, via malicious SVG files. This occurs because the clean_file_output protection mechanism can be bypassed.
4, via /syscmd.asp. This affects 2212X before 1.9.1
3, by assigning a path to the entity. OWSLib 0.24.1 may also be affected.
2, via the notify1 parameter when the action parameter equals set.
2, via the username parameter to /admin/reg.php.
2, via the filename for edit_users_head_pic.
4, via a module containing malicious PHP code.
2, via the `title` parameter in bind_email function.
0,create a specially crafted image that leads to
0, by modifying an NVRAM variable.
0, by modifying an NVRAM variable.
2, use this flaw to cause a denial of service to applications that use the affected filesystems.
2, use this flaw to cause a denial of service to applications that use the affected filesystems.
2, via an SVG file.
3, via dashboard actions.
3, via modification of the authorisationUrl in some integration configurations.
4, via a LAN interface.
4, via a crafted query containing an unspecified Cookie header. Authentication bypass can be achieved by including an administrative cookie that the device does not validate.
2, via the Address1 parameter. This JavaScript then executes when the patient profile is loaded
3, via unauthenticated calls to exposed interfaces over a .NET named pipe. A remote attack may be possible as well
2, via specially crafted custom rules containing HTML. NSM did not correctly sanitize custom rule content in all scenarios.
4, via custom DTDs.
4, via a crafted WebSocket frame that trigger an out-of-bounds read in plugins/relay/relay-websocket.c in the Relay plugin.
4, via a crafted Chrome Extension.
3, by exploiting a heap overflow in the network server handling the Apple GymKit communication. This can lead to an Apple MFI device not being able to authenticate with the Peleton Bike
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
5, via a crafted HTML page.
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via phar protocol when generating class names dynamically. In some cases an exploitation is possible by an unauthenticated user.
4, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
5, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via /classes/conf/db.properties&config=filemanager.config.js.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via user interaction with a crafted URL.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via crafted WebRTC packets.
4, via filenames.
4, via a MitM attack. While the parental controls themselves are not enabled by default on the routers
0, by using the Open Chat Log feature to launch a privileged Notepad process that can launch other applications.
0, via the ql_expression parameter
2, via the value attribute
4, via a man in the middle. Successful exploitation requires access to the web service resource without authentication.
2, via the cid parameter.
2, via the last_name parameter.
2, via the email parameter.
2, via the first_name parameter.
3," via the $_SERVER[""""PHP_SELF""""] parameter."
2, via the showtagfiles parameter.
2, via the error parameter.
2, via the PHP_SELF parameter.
5,"upload a file (with Admin credentials or with the CSRF vulnerability) with the """"fullpath"""" parameter containing path traversal strings (../ and ..\) in order to"
0, by inducing the Administrator user to browse a URL controlled by an attacker.
2, via the newpassword2 parameter.
2, via the firstname parameter.
2, via the username parameter.
2, via the newpassword1 parameter.
2, via the mail parameter.
2, via the lastname parameter.
4, via a crafted HTML page.
4, by placing a Trojan horse file in the publicly writable %PROGRAMDATA%\ASUS\GamingCenterLib directory.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via their URLs.
0, via options in GUI
4, via a crafted HTML page.
2, via the sudo command.
2, via powershell scripts
1, via crafted HTTP requests
5, by intercepting and re-using valid SAML authentication messages.
4, via a crafted XMPP Last Message Correction (XEP-0308) message in multi-user chat
5, by using IORING_OP_PROVIDE_BUFFERS to trigger a free of a kernel buffer
0, by tricking an application to parse the following URL: `https://aurelia.io/blog/?__proto__[asdf]=asdf`. The problem is patched in version `1.1.7`.
0,create and share deep links in the backend user interface is vulnerable to
4, use :null_session or :reset_session strategies (:null_session is the default in case the no strategy is given
4, via unspecified vectors. The app-functions-sdk exports an &#8220;aes&#8221; transform that user scripts can optionally call to encrypt data in the processing pipeline. No decrypt function is provided. Encryption is not enabled by default
0, by executing the netstat utility
2, via the MmMapIoSpace function call (mapping physical memory into a virtual address space). Attackers could exploit this issue to achieve local privilege escalation to NT AUTHORITY\SYSTEM.
1, by disclosing credentials of administrative accounts in plain-text.
4, via a Cross-Site Scripting (XSS) vulnerability in the /secure/admin/ImporterFinishedPage.jspa error message. The affected versions are before version 8.13.12
2, via an Insecure Direct Object References (IDOR) vulnerability in the Average Number of Times in Status Gadget. The affected versions are before version 8.13.12..
2, via an Insecure Direct Object References (IDOR) vulnerability in the Average Time in Status Gadget. The affected versions are before version 8.13.12
2, via an Insecure Direct Object References (IDOR) vulnerability in the Workload Pie Chart Gadget. The affected versions are before version 8.13.12
4, via a Broken Access Control vulnerability in the `ReplicationSettings!default.jspa` endpoint. The affected versions are before version 8.6.0
4, via a Broken Authentication vulnerability in the /plugins/servlet/audit/resource endpoint. The affected versions of Jira Server and Data Center are before version 8.19.1.
4, via a Cross-Site Scripting (XSS) vulnerability in the Associated Projects feature (/secure/admin/AssociatedProjectsForCustomField.jspa). The affected versions are before version 8.5.19
0, via an Improper Authentication vulnerability in the /secure/ViewCollectors endpoint. The affected versions are before version 8.19.1.
0, via an Improper Authorization vulnerability in the /secure/admin/ConfigureBatching!default.jspa endpoint. The affected versions are before version 8.20.7.
3, by modifying a POST parameter to 120 during the password reset process.
2, via the profile parameter. (In addition
2, via the administrative REST API even when new user registration is disabled.
1, via crafted RFB protocol data. NOTE: It is asserted that this issue requires social engineering a user into connecting to a fake VNC Server. The VNC Viewer application they are using will then hang
4, via shell metacharacters in the ntp_server field.
4, via SSRF.
4, via sending a specially crafted URL to an authenticated victim. The authenticated victim need to visit this URL
4, via sending a specific HTTP packet.
4, via sending a specific URL to the unauthenticated victim.
4, via sending a specific HTTP packet.
2, via the mode parameter.
2, via the ctID parameter.
2, via the cID parameter.
2, via the rel parameter.
2, via the rel parameter.
2, via the challenge parameter.
0, by uploading z ZIP file that contains a symbolic link.
0, by uploading an executable file via lib/FileUtility.php.
1,use the CWD command to
2, via the image upload field. .
0, via the $keyValue parameter in /coreframe/app/pay/admin/index.php
5, via a GET to /index.php?action=seomatic/file/seo-file-link with url parameter containing the base64 encoded URL of a malicious web page / file and fileName parameter containing an arbitrary filename with the intended content-type to be rendered in the user's browser as the extension.
2, via the k parameter. This allows attackers to uncover the full contents of the ResourceSpace database
4, use of that same connection.
2, by checking the www_authenticate_uri parameter (which is visible to all end users) in configuration files. This would give sensitive information which may aid in additional system exploitation. This flaw affects openstack-tripleo-heat-templates versions prior to 11.6.1.
1, by merging their identities. Fixed in Vault and Vault Enterprise 1.7.5 and 1.8.4.
2, via the parameter provider_id
1, by submitting incomplete job specifications with a Consul mesh gateway and host networking mode. Fixed in 1.1.6.
2, via the --chat feature.
0,create a new administrative profile and add a new user to
0, by creating or editing a client name in the clients section
0, by adding or replacing a personal profile picture. The affected endpoint is /includes/upload.php on the HTTP POST data. This allows an attacker to exploit the platform by injecting code or malware and
2, via the provider and variant parameters in pages/ajax/tiles.php. Attackers can delete configuration or source code files
4, via a crafted GFF file.
0, by interfering in the communication path between the client and the intended server.
1, by changing their User-Agent HTTP header and submitting a vote.
2, by triggering rapid changes to the title bar.
2, via batch custom PowerShell.
4, via stealing and injecting the session- independent and static cookie UID.
0, by storing said code as a Missing Data Code value. This can then be leveraged to execute a Cross-Site Request Forgery attack to escalate privileges to administrator.
1," by executing command """"deviceinfo show file &&/bin/bash"""" because of incorrect sanitization of parameter """"path""""."
1, via sending an excessive amount of messages to a node. This is caused by missing memory in the component /ethash/algorithm.go.
4, via a crafted title or message in a notification.
1, via crafted JSON input.
2, uses the size of copy_from_user to copy a userspace buffer into a 40-byte heap buffer.
4," via Cryptshare) to redirect targeted victims to any URL via the '<meta http-equiv=""""refresh""""' substring in the editor parameter."
4, via a low-privileged account.
5," via supplying a crafted object (that contains an own property """"__proto__"""") as an argument to the function. NOTE: the vendor disputes this because the observed behavior only means that a user can create objects that the user didn't know would contain custom prototypes."
4, via a crafted text document.
5, via a crafted text document.
4, via a crafted text document.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
0, via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated
1,send malicious Javascript code resulting in hijacking of the user&#8217;s cookie/session to
1, via crafted HTTP requests
2, via the malicious dylib file.
0, via bypassing the GUI restrictions.
1, via crafted requests.
2, via directory traversal
4, via a crafted HTTP request.
4, via a crafted FramebufferUpdate packet from a VNC server.
5, by sending a crafted packet to the device.
0, by reading the HTML source code. Authentication is not required.
2, via the userid parameter.
2, via specially crafted I/O Request Packet.
1, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
1, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
1, by requesting the Adminer to connect to a remote MySQL database.
4, via a RADIUS login portal.
2, via Server Side Request Forgery (SSRF).
2, via the license parameter.
2, via signup form in the Name and Phone number field.
2, via the signup form
4, via a crafted script file.
2, via specially crafted I/O Request Packet.
2, via specially crafted I/O Request Packet.
2, via the vulnerable input fields.
3, by using Excel's safe mode.
4, via /preferences/tags
5, by setting a specially crafted email address. This vulnerability impacts all instances that have not set an explicit email domain name allowlist. Note that whereas neither administrators nor targeted users are notified of a change
0, by manipulating the processed input stream. XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded. Users are advised to upgrade as soon as possible. Users unable to upgrade may set the NO_REFERENCE mode to prevent recursion. See GHSA-rmr5-cpv2-vgjf for further details on a workaround if an upgrade is not possible.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
1,upload or transfer files of dangerous types to
4, via a DLL Hijacking vulnerability in the Confluence installer. This vulnerability only affects installations of Confluence Server and Data Center on Windows. The affected versions are before version 7.4.10
4, via a Cross-Site Request Forgery (CSRF) vulnerability in the jira-importers-plugin. The affected versions are before version 8.13.15
4, via a Reflected Cross-Site Scripting (XSS) vulnerability in the /rest/collectors/1.0/template/custom endpoint. To exploit this issue
4," via a Cross-Site Scripting (XSS) vulnerability in the """"Object Schema"""" field of /secure/admin/InsightDefaultCustomFieldConfig.jspa. The affected versions are before version 4.21.0."
1, via Template Injection leading to Remote Code Execution (RCE) in the Email Templates feature. The affected versions are before version 8.13.15
4, via a Stored Cross-Site Scripting (SXSS) vulnerability in the /rest/jpo/1.0/hierarchyConfiguration endpoint. The affected versions are before version 8.20.3.
4, via a Broken Access Control vulnerability in the /secure/EditSubscription.jspa endpoint. The affected versions are before version 8.13.21
4, via a Remote Code Execution (RCE) vulnerability in the Email Templates feature. This issue bypasses the fix of https://jira.atlassian.com/browse/JSDSERVER-8665. The affected versions are before version 8.13.15
2," via an Improper Authorization vulnerability in the """"Move objects"""" feature. The affected versions are before version 4.21.0."
4, via a Broken Access Control vulnerability in the Custom Fields feature. The affected versions are before version 4.21.0.
4, via a Broken Access Control vulnerability in the Insight Import Source feature. The affected versions are before version 4.21.0.
2, via an Information Disclosure vulnerability in the Create Object type mapping feature. The affected versions are before version 4.21.0.
5, via a Cross-Site Request Forgery (CSRF) vulnerability in the /secure/admin/RestoreDefaults.jspa endpoint. The affected versions are before version 8.21.0.
4, via a Cross-Site Request Forgery (CSRF) vulnerability in the /secure/admin/ViewInstrumentation.jspa endpoint. The affected versions are before version 8.13.16
2, via information disclosure vulnerability.
4, via a prototype pollution vulnerability.
2, via an Insecure Direct Object References (IDOR) vulnerability in the WEB-INF directory and bypass the fix for CVE-2020-29446 due to a lack of url decoding. The affected versions are before version 4.8.9.
4, via a improper restriction of excess authentication attempts vulnerability.
4, via a Server-Side Request Forgery (SSRF) vulnerability in the CSV importing feature of JSM Insight. When running in an environment like Amazon EC2
2, via the filterText parameter.
2, via the tempFile and fileName parameters in the HTTP POST body.
2, via the file parameter in the HTTP POST body. A successful request returns the absolute
4,send invalid requests. This issue affects Apache Traffic Server 8.0.0 to
5, by supplying a networked or WebDAV file path.
4, via a Trojan horse Procmon64.exe in the user's Temp directory.
4, via photo upload.
1, via unsanitized login parameters.
4, via a crafted sbi request to amf.
4, via a crafted sbi request.
5, via a crafted file.
4, via a crafted XML/Excel document and perform server-side request forgery attacks.
2, via specially crafted update packages.
2, via specially crafted command line arguments.
4,send arbitrary messages to
4, via a crafted payload.
4, via side-channel analysis.
4, via a TFTP read (RRQ) request
4, via a TFTP read (RRQ) request
3, via local access.
4, via local access.
4, via a callback in an SMS command
3, by corrupting a function pointer.
3, by performing a divide by zero.
4, by dereferencing a NULL pointer.
4, by dereferencing a NULL pointer.
5, by dereferencing a NULL pointer.
3, by performing a divide by zero.
4, by corrupting a function pointer.
5, by dereferencing a NULL pointer.
4, via adjacent access.
2, via the s parameter.
1, by tricking users into supplying sensitive information such as credentials
2, by sending crafted traffic from a Machine-in-the-Middle (MITM) position. The root cause is that the client module accepts TLS messages that normally are only sent to TLS servers.
4, via a preferred_mech_type of GSS_C_NO_OID and a nonzero initial_response value to send_accept.
0,create a man in the middle attack. This issue affects Apache Traffic Server 8.0.0 to
4, via a factory reset. This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.
4, via a network packet.
4, via a crafted HNAP1 POST request.
4, via a crafted HNAP1 POST request.
4, via a crafted HNAP1 POST request.
2, via an unauthenticated edit to the lock name.
4, via a crafted script file.
1,upload malicious PHP files to
2, via the uploads route.
2, via the /language/lang s_Language parameter.
5,create a specially crafted file with arbitrary content which could grant local privilege escalation on the affected system. Please note: an attacker must first obtain the ability to
5, via a crafted file in the MP4Box command.
4, via a crafted file in the MP4Box command.
1, by using system IPC interfaces which could lead to exit the sandbox and acquire SYSTEM privileges.
0, by calling unnecessarily powerful internal methods of the main antivirus service which could lead to the (1) arbitrary file delete
2, via the search_term parameter in the modules/Scheduling/Courses.php script.
1, via crafted file metadata (such as XFS extended attributes or tmpfs ACLs)
2, uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory
5,"use """"Content-Encoding: gzip"""" to"
2, via the parameter host_time.
2, via the url parameter.
2, via the eip
2, via the Host parameter.
2, via the parameter FileName.
2, via the flag parameter.
2, via the pin parameter.
2, via the relay6to4 parameters.
2, via the QUERY_STRING parameter.
1,upload or transfer files of dangerous types to
5, via a crafted filename.
4, by sending a file download request with a file path containing a null character.
4, via a crafted file.
4, use of Import Config File.
2, via the ProcessActionRequest WCF method.
4, via a WCF channel.
4, via xfa.host.gotoURL in the XFA API.
4, via app.launchURL in the JavaScript API.
4, via getURL in the JavaScript API.
2, via the usbOrdinaryUserName parameter.
2, via the hostName parameter.
2, via the DnsForwardRule parameter.
2, via the qosGuestUpstream and qosGuestDownstream parameters.
2, via the pic_name parameter.
2, via the vpnUsers parameter.
2, via the qvlanName parameter.
2, via the IPMacBindRuleIP and IPMacBindRuleMac parameters.
2, via the delDhcpIndex parameter.
2, via the staticRouteNet
2, via the portMappingServer
2, via the portMappingServer
4, via a crafted HNAP1 POST request.
2, via the download features.
0, by visiting the Reports page.
0, by consuming excessive CPU and memory resources.
4, via a crafted MESH file.
2, via the url parameter.
2, via the proxy_srv
2, via the time parameter.
2, via the name parameter.
2, via the path and time parameters.
4, via the url_en parameter.
2, via the path parameter.
2, via the cmd parameter.
4, via a crafted POST request.
1, via crafted overflow data.
1, via crafted overflow data.
1, via crafted overflow data.
1, via crafted overflow data.
1, via crafted overflow data.
3, via uploading a PHP shell through /adminzone/index.php?page=admin-commandr.
4, via a crafted FreeMarker payload.
4, via a crafted payload entered into the fullname parameter.
1, via crafted CSV/XLS files. These formulas may result in arbitrary code execution on a victim's computer when opening the exported files with Microsoft Excel.
4, via a crafted YAML file.
4, via a crafted XLF file.
4, via a malicious HTML webpage that is sent to the victim. An admin can run commands using the FileBrowser and hence it leads to RCE.
2, via the strcpy parameter.
5, via a crafted payload inserted into the State parameter under the Address Book module.
2, via the tomography_ping_address
2, via the staticroute_list parameter.
2, via the ApCliKeyStr parameter.
2, via the station_access_enable parameter.
2, via the wl(0).(0)_maclist parameter.
2, via the samba_name parameter.
4, via a crafted payload inserted into the username and password fields.
3, by analyzing RAM memory even several hours after the local user used the product. This occurs because the product doesn't properly free memory.
3, by convincing a user to type specific text in the WebHelp output search field.
4, via local access.
4, via local access.
3, via physical access.
3, via physical access.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via specific user gestures.
1, via specific user gesture.
4, via a crafted HTML page.
1, via specific user gesture.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted URL.
4, via a crafted HTML page.
4, via a crafted HTML page and virtual serial port driver.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious website.
2, via CSRF attacks
3, by creating a confidential guest VM instance in AMD CPU that supports Secure Encrypted Virtualization (SEV).
4, via a specially crafted web page.
3, via unspecified vectors.
2, via an website that uses Quiz And Survey Master.
1,create or overwrite critical files that are used to
5, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via specific user interactions.
4, via a crafted HTML page.
4, via a crafted HTML page. (Chrome security severity: High)
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via profile destruction.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via user interaction.
4, via user interaction.
3, via user interaction.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, by sending authentication requests to an affected system. A successful exploit could allow the attacker to compare the response time that are returned by the affected system to determine which accounts are valid user accounts. Affected systems are only vulnerable if they have LDAP configured.
2, via the dnd_codedropz_upload AJAX action
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via an XSS on the 'select-file' parameter.
2, via control over malloc.
1,send crafted HTTP response packets which lead to
2, via specially crafted email addresses.
2, by making it go out-of-memory via icmp6 packets of type 130 or 131. We recommend upgrading past commit 2d3916f3189172d5c69d33065c3c21119fe539fc.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via user interactions.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted offline installer file.
4, via a crafted HTML page.
4, via a crafted HTML page. (Chrome security severity: Medium)
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via user interaction.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via user interactions.
4, via a crafted HTML page.
3, uses the CRI-O runtime to achieve a container escape and arbitrary code execution as root on the cluster node
1, by creating invalid requests. This affects the lang parameter
4, by using a timing side-channel attack.
0, by convincing the attacker to click on a carefully crafted link. This would lead to limited access to sensitive information and limited ability to alter some information in ePO due to the area of the User Interface the vulnerability is present in.
0, by convincing the attacker to click on a carefully crafted link. This would lead to limited ability to alter some information in ePO due to the area of the User Interface the vulnerability is present in.
0,upload a malicious XML file through the extension import functionality. The impact is limited to
4, via a crafted tiff file. For users that compile libtiff from sources
1, via crafted TIFF image file which could result into application crash
4, via submitting a maliciously crafted POST body.
5, via submitting a maliciously crafted Apple Pages document.
4, via a crafted tiff file. For users that compile libtiff from sources
4, via a crafted tiff file. For users that compile libtiff from sources
4, via a crafted tiff file. For users that compile libtiff from sources
4, via a crafted HTTP request. in GitHub repository microweber/microweber prior to 1.2.12.
4, via a crafted HTTP request. in microweber/microweber in GitHub repository microweber/microweber prior to 1.2.12.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via specific user interactions.
0,send a maliciously crafted URL which could result in redirecting the user to
4, via a crafted tiff file. For users that compile libtiff from sources
4, via a crafted HTML page.
3, via user interaction.
3, via user interaction.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a malicious app.
4, via a crafted HTML page.
1, via physical access to the device.
4, via a crafted HTML page.
4, via a crafted HTML page.
0, via standard feature user interaction.
2, via specific set of user gestures.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via specific user gesture.
1, via specific input into DevTools.
2, via specific input into DevTools.
2, via specific input into DevTools.
2, via specific user interaction and profile destruction.
4, via a crafted HTML page.
3, by simulating ax25 device using 6pack driver from user space.
2, by simulating amateur radio from the user space
4, via a crafted HTML page.
2, by passing the client_id of the target. This could allow a client to gain unauthorized access to additional services.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
5, via a crafted HTML page.
4, via running a Wayland test.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
3, via specific and direct user interaction.
4, via a crafted HTML page.
3, via specific and direct user interaction.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via specific and direct user interaction.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted input file. in GitHub repository hpjansson/chafa prior to 1.10.2. chafa: NULL Pointer Dereference in function gif_internal_decode_frame at libnsgif.c:599 
4, via a crafted input.
1, via specific user interactions.
1, via specific user interactions.
1, via specific user interactions.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via specific user interaction.
4, via a crafted input.
4, via a crafted HTTP request in GitHub repository polonel/trudesk prior to 1.2.2. This can lead to Denial of service.
3, by using a specific file name. This could result in the user gaining elevated permissions and being able to execute arbitrary code as there were insufficient checks on the executable being signed by McAfee.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension or specific user interaction.
4, via a crafted HTML page.
1, via specific user interaction.
4, via a crafted HTML page.
1, via specific user interactions.
2, via specific user interaction.
4, via a crafted HTML page.
4, via a crafted Chrome Extension and specific user interaction.
4, via a crafted Chrome Extension and specific user interaction.
4, via a crafted Chrome Extension and specific user interaction.
1, via specific user interactions.
4, via a crafted clipboard content.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, by injecting HTML in contact details.
0, via deeply nested types or declarations.
3, by simulating a nfc device from user-space.
5,create a string of requests that can cause a use-after-free flaw within the kernel. This issue leads to
4, via a crafted SVG attachment on a post.
4, via a malicious serialized payload.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted tiff file. For users that compile libtiff from sources
4, via a crafted tiff file. For users that compile libtiff from sources
4, via a crafted tiff file. For users that compile libtiff from sources
1,use the DNS used by the Jenkins instance to
1,use the DNS used by the Jenkins instance to
3, by configuring a smart card login to bypass Duo authentication. A successful exploit could allow the attacker to use any personal identity verification (PIV) smart card for authentication
5, via nft_set_desc_concat_parse() 
0, by injecting malicious code into a specific memory location during the boot process of an affected device. A successful exploit could allow the attacker to execute persistent code at boot time and break the chain of trust.
3, by establishing a large number of concurrent TLS connections to an affected device. A successful exploit could allow the attacker to cause the device to drop new TLS email messages that come from the associated email servers. Exploitation of this vulnerability does not cause the affected device to unexpectedly reload. The device will recover autonomously within a few hours of when the attack is halted or mitigated.
5,use a hard-coded master password. This may allow an attacker to
4, via local access.
3, by having a user to open a specially crafted CXP file. This vulnerability is different from CVE-2022-25234.
4, via local access.
4, via local access.
4, via local access.
3, via local access.
4, via local access.
3, via local access.
4, via adjacent access.
3, via local access.
1, by injecting an XSS payload into a specific parameter. The XSS payload will be executed when a legitimate user attempts to review history.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via network access.
4, via local access.
4, via local access.
4, via local access.
5, via a specially crafted page
4, via local access.
4, via local access.
4, via unspecified vectors.
3, via network access.
4, via local access.
4, via local access.
4, via local access.
4, via network access.
4, via adjacent access.
4, via local access.
5, by having a user to open a specially crafted CXP file.
4, via local access.
4, via adjacent access.
4, via local access.
3, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via a specially crafted CSV file that contains HTML a tag.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Installed Base. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Communications Billing and Revenue Management. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise CS SA Integration Pack. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5, by sending a crafted Vhost header to DPDK.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Enterprise Session Border Controller. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Enterprise Manager Base Platform. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise PeopleSoft Enterprise CS Academic Advisement. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise JD Edwards EnterpriseOne Tools. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise Oracle Commerce Guided Search. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Agile PLM. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle E-Business Suite. Successful attacks of this vulnerability can result in unauthorized access to
3,compromise Oracle Cloud Infrastructure. Successful attacks of this vulnerability can result in unauthorized access to
2, use by another portion of the kernel. An attack with local access can operate on the socket
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Health Sciences Data Management Workbench. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Cluster. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise PeopleSoft Enterprise PeopleTools. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle BI Publisher. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Oracle Solaris. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
2,compromise JD Edwards EnterpriseOne Orchestrator. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle iRecruitment. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted HTML page.
1,compromise JD Edwards EnterpriseOne Tools. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Applications Framework. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Workflow. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle iReceivables. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted HTML page.
1,compromise Oracle Communications Billing and Revenue Management. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Communications Billing and Revenue Management. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle WebCenter Sites Support Tools. Successful attacks of this vulnerability can result in unauthorized access to
4, via a crafted HTML page.
1,compromise Oracle Banking Trade Finance. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized read access to
3,compromise Oracle HTTP Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted HTML page.
2,compromise Oracle Communications Billing and Revenue Management. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
1,compromise Oracle Business Intelligence Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
1, via specific UI interactions.
1,compromise Oracle Enterprise Data Quality. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted HTML page.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via UI interaction.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Applications Framework. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4, via a crafted HTML page.
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
5,construct a sql statement. The only users permitted to
4, via IDN homographs via a crafted domain name.
3, by mounting cross-origin attacks against authenticated high-privilege Grafana users (for example
0, by querying for the specific team ID
2, by passing in arguments which would trigger a `CHECK`-fail. There are several conditions that the input arguments must satisfy. Some are not caught during shape inference and others are not caught during kernel implementation. This results in `CHECK` failures later when the output tensors get allocated. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1
4, via local access.
4, via unspecified vectors.
4, via unspecified vectors.
4, via local access.
3, via local access.
4, via image_processing arguments.
1, by exploiting weak directory controls in the logs directory. This can lead to a denial-of-service attack on the DXL Broker.
4, via path tampering in the Magic Link page. This issue affects: HYPR Server versions later than 6.10; version 6.15.1 and prior versions.
3, via parameter tampering in the Device Manager page. This issue affects: HYPR Server versions prior to 6.14.1.
0,create an unauthorized shell pod and kubectl access in the local cluster This issue affects: SUSE Rancher Rancher versions prior to
5, by tricking a user into making a request.
4, via local access.
4, via unspecified vectors.
4, via unspecified vectors.
2, by sending crafted genuine packets to a device. During an attack
4, by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that an irq handled by the fman process is shown to be using a high percentage of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE TIME WCPU COMMAND 31 root -84 -187 0K 16K WAIT 22.2H 56939.26% irq96: fman0 This issue affects Juniper Networks Junos OS: All versions prior to 18.3R3-S6; 18.4 versions prior to 18.4R2-S9
4, via J-Web at this time
0, by issuing the following command: user@device> show ospf3 neighbor ID Interface State xx.xx.xx.xx ae100.0 Init <<<<<<<<<< An indicator of compromise can be seen in log files when traceoptions for OSPFv3 are enabled before the issue occurs. These logfile messages are as follows: OSPF restart signaling: Received hello with LR bit set from nbr ip=xx::xx id=xx.xx.xx.xx. Set oob-resync capabilty 1. OSPF Restart Signaling: Start helper mode for nbr ip xx::xx id xx.xx.xx.xx OSPF restart signaling: abort helper mode for nbr ip=xx::xx id=xx.xx.xx.xx OSPF neighbor xx::xx (realm ipv6-unicast <interface.unit> area xx.xx.xx.xx) state changed from Full to Init due to 1WayRcvd (event reason: neighbor is in one-way mode) (nbr helped: 0) This issue affects: Juniper Networks Junos OS. 15.1 versions prior to 15.1R7-S11; 18.3 versions prior to 18.3R3-S6; 18.4 versions prior to 18.4R2-S9
0, by sending specific packets over VXLAN which cause heap memory to leak and on exhaustion the PFE to reset. The heap memory utilization can be monitored with the command: user@host> show chassis fpc This issue affects: Juniper Networks Junos OS 19.4 versions prior to 19.4R2-S6
0, by sending specific packets over VXLAN which cause the PFE to reset. This issue affects: Juniper Networks Junos OS 19.4 versions prior to 19.4R3-S7; 20.1 versions prior to 20.1R3-S3; 20.2 versions prior to 20.2R3-S3; 20.3 versions prior to 20.3R3-S2; 20.4 versions prior to 20.4R3-S1; 21.1 versions prior to 21.1R3; 21.2 versions prior to 21.2R2; 21.3 versions prior to 21.3R1-S1
0,construct a URL that when visited by another user enables the attacker to
3, by sending a specific BGP update while the system is under heavy load
1, by issuing the following commands: user@device# show log messages | match unplugged %PFE-6: fpc0 sfp-0/1/2 SFP unplugged %PFE-6: fpc0 sfp-0/1/3 SFP unplugged The following log messages will also be seen when this issue happens: fpc0 Error tvp_drv_syspld_read: syspld read failed for address <address> fpc0 Error[-1]:tvp_optics_presence_get - Syspld read failed for port <pic/port> fpc0 optics pres failed(-1) for pic <pic> port <port> fpc0 tvp_drv_syspld_read: i2c access retry count 200 This issue affects Juniper Networks Junos OS on EX2300 Series
1, by bypassing validation checks built into Junos OS. The attacker should not be able to execute the file due to validation checks built into Junos OS. Successful exploitation of this vulnerability could lead to loss of filesystem integrity. This issue affects Juniper Networks Junos OS: all versions prior to 19.1R3-S9; 19.2 versions prior to 19.2R3-S6; 19.3 versions prior to 19.3R3-S7; 19.4 versions prior to 19.4R3-S9; 20.1 versions prior to 20.1R3-S5; 20.2 versions prior to 20.2R3-S5; 20.3 versions prior to 20.3R3-S5; 20.4 versions prior to 20.4R3-S4; 21.1 versions prior to 21.1R3-S2; 21.2 versions prior to 21.2R3-S1; 21.3 versions prior to 21.3R2-S2
0,send a crafted TCP segment to
4, via Samsung DeX mode.
5, by hijacking and modifying the intent.
4, by hijacking and modifying the intent.
4, via a crafted HTML page.
1, via crafted HTTP GET requests.
2, by bypassing extension security in an HTTP request. IBM X-Force ID: 224916.
5, by sending a specially crafted request.
1, by allowing unlimited attempts to login to the storage agent without locking the administrative ID. A remote attacker could exploit this vulnerability using brute force techniques to gain unauthorized administrative access to both the IBM Spectrum Protect storage agent and the IBM Spectrum Protect Server 8.1.0.000 through 8.1.14 with which it communicates. IBM X-Force ID: 226326.
0, by uploading or deleting too many CA certificates in a short period of time. IBM X-Force ID: 2226337.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
4, via network access.
1,create or overwrite critical files that are used to
4, via a modified base64-encoded filename string.
4, via a crafted payload inserted into the Name field.
4, via accessing and editing the user list.
5, via a crafted packet through the SSH service.
4, via path traversal.
4, via a crafted payload.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via direct UI interactions.
1, by passing in crafted command line flags. In order to exploit this vulnerability
0, by changing access token validation logic and rewriting rule logic on PHP scripts.
1, by escaping individual arguments to shell functions coming from user input.
1, by bypassing access controls. The vulnerability was addressed by creating a whitelist for valid parameters.
3, by creating a new 'File/MIME Types' using the '.phar' extension. Then an attacker can upload a malicious file
4, via app/admin/routing/edit-bgp-mapping-search.php
5,upload a DLL file to
1, by modifying the 'svg_file' parameter.
4, via a crafted IKEv1 packet because pluto/ikev1.c wrongly expects that a state object exists. This is fixed in 4.6.
4,use statistical methods to
1, via exposed management access. This vulnerability impacts Fireware OS before 12.7.2_U1
4, via adjacent access.
4, via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring
3, via certain *_OR_NULL pointer types.
4, via a carefully constructed XML file
4, via a specially crafted PCF font file. This crash affects the availability of the software and dependent downstream components.
5,send 5120 pending transactions of a high gas price from one account that all fully spend the full balance of the account to
2, via uploading malicious files.
4, via a crafted JAR package.
4, via open redirection.
4, via a crafted payload inserted into the Search box.
4, via local access.
4, via input to actionStream in Controller.php.
3, via implicit Intent.
1, via crafted HTTP GET requests.
0, via changing its root directory access permission.
1, by editing their `sentry.conf.py` file (usually located at `~/.sentry/`).
4, via a single invitation url for any valid invite link received (it can even be a url for a third flow as long as it's a valid invite) as the token used in the `Invitations` section of the Admin interface does NOT change when a different `enrollment flow` is selected via the interface and it is NOT bound to the selected flow
1,use its remote file download feature to
5, uses superjson during request processing. This has been patched in superjson 1.8.1. Users are advised to update. There are no known workarounds for this issue.
0, by checking access control on the path associated with the page ID instead of the user-provided value. When the path is different than the current value
1, use manipulated IPs for audit logging via manipulating the request headers.
3,supply invalid input to
0, by redirecting an authentication flow to a target user. To exploit the vulnerability
2, via the API. To exploit this vulnerability
3, use this vulerability to encourage users to access crafted web pages
2, use this vulnerability to execute malicious commands such as directory traversal.
3,send garbage data to
0,send an arbitrary buffer leading to
4, via a crafted payload insterted into the name
4, via 'user_firstname' parameter.
4, via a crafted PHP file.
4, via /admin/admin_manage/delete.
3," by creating a """"C:\Program Files\Sherpa Software\Sherpa.exe"""" file."
2, by leveraging PHP deserialization in the email_recipients property. By using a crafted request
4, via a crafted TIFF file in an unauthenticated HTTP POST request. There is a permanent denial of service because image parsing causes a reboot
4, via unspecified vectors.
4, via a crafted HTML page.
3, via implicit Intent.
3, via implicit Intent.
4, via Edge Panel.
4, via PreconditionActivity.
3, via unprotected intent.
1,compromise the rendering process which could lead to
4, via devtools.inspectedWindow
1, via malicious DLL injection.
0, via the setting parameter
5,use a code to
4, via a RequestSendMessageToPlayers request. For example
1, via matchmaking servers
2, by sending specially crafted HTTP requests.
2, via the firewallEn parameter.
2, via the timeZone parameter.
2, via the gateway
2, via the security and security_5g parameters.
2, via the list parameter.
2, via the wanMTU
2, via the dmzIp parameter.
2, via the wpapsk_crypto parameter.
4, via a crafted HTML page.
2, via the remoteIp parameter.
2, via the shareSpeed parameter.
2, via the list parameter.
2, via the devName parameter.
2, via the rebootTime parameter.
2, via the schedStartTime and schedEndTime parameters.
2, via the list parameter.
2, via the deviceList parameter.
2, via the list parameter.
2, via the startIp and endIp parameters.
2, via the devName parameter.
2, via the mac parameter.
2, via the time parameter.
2, via the timeZone parameter.
2, via the DnsHijackRule parameter.
2, via the qvlanIP parameter.
2, via the manualTime parameter.
2, via the dmzHost1 parameter.
3, via the IPGroupStartIP and IPGroupEndIP parameters.
2, via the IPMacBindRule parameter.
2, via the IPsecLocalNet and IPsecRemoteNet parameters.
2, via the pppoeServerIP
2, via the addDhcpRules parameter.
2, via the X-Forwarded-Host Header.
4, via a crafted payload in the name and lastname parameters.
4, via a crafted PHP file.
4, via unspecified vectors.
4, via a crafted file.
4, via a crafted ZIP file.
4, via a crafted request.
4, via local access.
5, via a symbolic link to the root directory of a NAS SMB share.
4, via local access.
4, via local access.
2, via an authenticated session. The vulnerability is present in Fidelis Network and Deception versions prior to 9.4.5. Patches and updates are available to address this vulnerability.
2, via an authenticated session. The vulnerability is present in Fidelis Network and Deception versions prior to 9.4.5. Patches and updates are available to address this vulnerability.
2, via an authenticated session. The vulnerability is present in Fidelis Network and Deception versions prior to 9.4.5. Patches and updates are available to address this vulnerability.
0, by injecting an XSS payload into specific fields. The XSS payload will be executed when a legitimate user attempts to upload
4, via unspecified vectors.
4, via network access.
5, by injecting a malicious script in the User-Agent field.
4, via a crafted payload in the author parameter.
5, via a crafted payload in the content and thumbnail parameters.
4, via a crafted payload in the task parameter.
1, via crafted S0 NonceGet Z-Wave packages
2, via the SSH protocol (port 22).
0, by exploiting the Broken Access Control with further Brute-force attack or SQL Injection.) The uploaded file is stored within the database and copied to the sync web folder if the attacker visits a certain .php?action= page.
1, via crafted HTTP requests. The type of SQL Injection is blind boolean based. (An unauthenticated attacker can discover the endpoint by abusing a Broken Access Control issue with further SQL injection attacks to gather all user's badge numbers and PIN codes.)
1, via crafted HTTP requests. The type of SQL Injection is blind boolean based.
4, via a malicious AX.25 packet over the air. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via malicious AX.25 packets over the air. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
5, use cross-origin communication may have their communications intercepted. Impact is limited by the communication occurring in the same browser. This issue has been patched in sysend.js version 1.10.0. The only currently known workaround is to avoid sending communications that a user does not want to have intercepted via sysend messages.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
3, via UI interaction.
0, via network request can lead to a Remote Code Execution as the Jiffle script is compiled into Java code via Janino
4, via a POST request to `/presale/join`. User-controlled data is passed with no sanitization to SendGrid and injected into an email that is delivered to the founders@originprotocol.com. If the email recipient is using an email program that is susceptible to XSS
0, by adding an image based captcha stored in a server side session. In versions prior to 1.2.1
4,create professional websites and scalable web applications. In versions of Contao prior to
2, use with untrusted input. When the `os.path.join` call encounters an absolute path
1, via malicious bootloader upgrade.
0, via the redirect parameter to admin.php.
2, by capturing the POST response. When chained with CVE-2022-24984
3," by sending """"User-Agent: TNAS"""" to module/api.php?mobile/webNasIPS and then reading the PWD field in the response."
2, via the time parameter.
3, via user interaction with a crafted link.
4, via a crafted payload inserted into the First Name field.
4, via a crafted PHP file.
1, via crafted PHP code inserted into static pages.
5, via a crafted payload in the thumbnail path of a blog post.
4, via a crafted payload in the content field of a blog post.
0, via a crafted HTTP request to /trufusionPortal/upDwModuleProxy.
1," by validating the user's session token when the """"Password forgotten?"""" button is clicked."
4, via a crafted POST request.
4, via a crafted file.
4, via a crafted HTTP request.
4, via injecting a crafted payload into /lib/contentState/pasteCtrl.js.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
2, via the QUERY_STRING parameter.
4, via a crafted POST request.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted payload.
4, via a crafted PNG file.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
2, use on the agent
1, via JDBC using attacker-specified credentials and to determine if a class is available in the Jenkins instance.
1, via JDBC using attacker-specified credentials.
2, via the 'id' parameter.
2, via the 'id' parameter.
3, via the 'sqlparameter' JSON parameter. It is also possible to achieve remote code execution in the default installation (PostgreSQL) by exploiting this issue.
4, via 'http://thin-vnc:8080/cmd?cmd=connect' by obtaining a valid SID without any kind of authentication. It is possible to achieve code execution on the server by sending keyboard or mouse events to the server.
0, via the 'userID' parameter
3, by having a user to open a specially crafted CXP file. This vulnerability is different from CVE-2022-25325.
3, by having a user to open a specially crafted CXP file. This vulnerability is different from CVE-2022-21124.
3,send certain commands to
2,send a certain command to
1,send certain XML messages to
3, by initiating a firmware update with a malicious upgrade image. This vulnerability impacts Fireware OS before 12.7.2_U2
3, by initiating a firmware update with a malicious upgrade image. This vulnerability impacts Fireware OS before 12.7.2_U2
3, by initiating a firmware update with a malicious upgrade image. This vulnerability impacts Fireware OS before 12.7.2_U2
3, by having a user to open a specially crafted CXP file. This vulnerability is different from CVE-2022-25230.
4, via a Trojan horse DLL in an unspecified directory.
5,upload files to
4, via a crafted PHP file.
5, via a crafted HTTP request.
3, via unspecified vectors.
4, via a crafted payload.
4, via a crafted POST request to /modules/zend_modules/public/Installer/register.
4, via a crafted PHP file.
2, via an unusually large amount of created routes
5,create crafted cookies to
2, via the ddnsUser parameter.
2, via the time parameter.
2, via the serverName parameter.
2, via the ddnsEn parameter.
2, via the deviceName parameter.
2, via the ddnsDomain parameter.
2, via the ssid parameter.
2, via the ddnsPwd parameter.
2, via the deviceId parameter.
2, via the ntpServer parameter.
2, via the list parameter.
2, via the urls parameter.
2, via the ProvinceCode parameter.
2, via the list parameter.
2, via the list parameter.
2, via the time parameter.
5, via a GET request to /config/list. To exploit this vulnerability
4, via a path traversal vector. Furthermore
4, via a crafted image file.
1, via crafted payloads injected into the user name
2, via arbitrarily editing the .htaccess file.
4, via a crafted .txt file.
4, via a crafted payload injected into the Add Articles field.
4, via a crafted HTTP request.
0, by using vulnerable parameter &custom[add_seg][].
2,create smuggle or cache poison attacks. This issue affects Apache Traffic Server 8.0.0 to
1, via hijacking the PendingIntent.
1, via hijacking the PendingIntent.
1, via crafted audio metadata.
4,send arbitrary requests to
0, by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions 2. by parsing/loading .proto files
3, via network access.
1, uses vm variable
4, via local access.
4, via local access.
4, via local access.
4, via adjacent access.
4, via local access.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via unspecified vectors.
3, via physical access.
4, via a crafted HTML page.
5,create and write to
4, via a crafted HTML page.
2, via specific UI interactions.
4, via local access.
4, via local access.
2, via specific UI interactions.
4, via local access.
2," by placing it in the To: field. This affects rendering that occurs upon a click in the """"number of recipients"""" field. NOTE: the vendor's position is that """"no real impact is demonstrated."""""
2, via specific UI interactions.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via sending specially crafted mail messages.
4, via a hardcoded password.
4, via a crafted HTML page.
2, via specific UI interactions.
4, via a crafted HTML page.
0, by uploading an executable file
4, via a crafted HTML page.
4, via a crafted Chrome Extension.
2, via specific UI interactions.
4, via a crafted payload injected into the display fields.
4, via a malicious file .
4, via a crafted HTML page.
1, via specific UI interactions.
4, via injection of a crafted payload.
1, via specific UI interactions.
4, via a crafted file.
2, via specific UI interactions.
4, via a crafted PDF file.
4," via a crafted payload injected into the """"special"""" field."
1, via spoofed CAN messages.
4, via a crafted string written to the file application/config/config.php.
1, via crafted HTTP requests.
1, via crafted HTTP requests.
1, via crafted HTTP requests.
4, via a crafted Irz file.
4, via a crafted payload injected into the user name field.
4, via a side-channel analysis.
4, uses poi-scratchpad to parse TNEF files and the application allows untrusted users to supply them
0,use a specially crafted file to
4, via local access.
4, via local access.
5, via adjacent access.
4, via local access.
4, via local access.
4, via a LAN interface.
4, via network access.
4, via adjacent access.
0, by uploading an executable file
5, via a crafted payload injected into the button name text box.
0, by copying the APK to /data/app
2, via the app/service.php URI.
4, via a crafted GET request.
4, via uploading a crafted PHP file.
4, via a crafted payload injected into the User Profile Name text fields.
1, via crafted HTTP headers.
2, via the Attachment Upload function.
4, via a crafted HTML file.
5, via a crafted PHP file uploaded through the Upload Image function.
4, via HTTP.
4, via a gateway call into Teams.
2, via One Touch Join.
3, by creating a symlink in place of where the installer writes its log file. Starting from version 4.6.0
4, via local access.
0,upload an arbitrary file which could lead to
1, by redirecting users to attacker-controlled web sites via the returnUrl parameter
4, use of the software suite.
1, via crafted frame lengths from a device.
3, by inserting a vulnerable php code because the themes can be modified by an administrator.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
4, via a crafted PHP file.
4, via a crafted payload injected into the Post Title text field.
4, via a crafted payload injected into the Comments text field.
4, via a crafted PHP file.
1,use the feedback function to
4, via a crafted PHP file.
4, via a crafted PHP file.
2, via the `std::string memo` parameter.
5, via a crafted SVG file. NOTE: Vendor states that as outlined in Ghost's security documentation
4, via a crafted PHP file.
4, via unspecified vectors.
4, via a specially crafted page.
4, via local access.
4, via network access.
0, by specifying an absolute or relative path when invoking the affected DownloadDwg endpoint. An attack uses the path field to CaddemServiceJS/CaddemService.svc/rest/DownloadDwg.
3, by using UploadDwg to upload a crafted aspx file to the web root
2, via the schema parameter.
2, via the schema parameter.
2, via the rpath parameter.
4, via a crafted SVG file.
4, via a crafted file.
4, via a crafted file.
2, via the curTime parameter.
2, via the curTime parameter.
2, via the curTime parameter.
2, via the curTime parameter.
2, via the curTime parameter.
2, via the config.save_network_enabled parameter.
2, via the nextPage parameter.
2, via the webpage parameter.
2, via the webpage parameter.
2, via the webpage parameter.
4, via a project title.
4, via a crafted URL.
0, via deleting the configuration file.
4, via a crafted payload injected into the Product Title text field.
4, via a crafted PDF file.
4, via a crafted PHP file.
4, via a crafted payload injected into the Post Title text field.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
0, via specially crafted SQL statements.
2, via specially crafted SQL statements.
2, via specially crafted SQL statements.
0, via specially crafted SQL statements.
0, via specially crafted SQL statements.
2, via specially crafted SQL statements.
4, via a crafted file.
1, via crafted UI interactions. (Chrome security severity: High)
2, via user interaction with a crafted URL.
4, via a crafted Phar file.
4, via a crafted payload injected into the album_name parameter.
1, via crafted UI interactions. (Chrome security severity: High)
0, by exploiting this feature leading to account takeover.
2, via the Product Image component.
4, via a crafted payload injected into the username text field.
4, via a crafted payload injected into the Phone text box.
4, via a crafted file uploaded to the web server.
0," via the """"s"""" parameter remotely."
2," via the """"s"""" parameter remotely."
4, via a crafted payload injected into the goodsName parameter.
4, via local access.
4, via unspecified vectors.
4, via local access.
4, via local access.
2, via the SD-WAN CLI
2, via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The firmware versions <=1.10.1 allow to optionally disable device configuration over the network interfaces. Please make sure that you apply general security practices when operating the SIM4000. A fix is planned but not yet scheduled.
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The firmware versions <=1.7.0 allow to optionally disable device configuration over the network interfaces. Please make sure that you apply general security practices when operating the SIM2000ST. A fix is planned but not yet scheduled.
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The recommended solution is to update the firmware to a version >= 1.6.0 as soon as possible (available in SICK Support Portal).
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The recommended solution is to update the firmware to a version >= 2.0.0 as soon as possible (available in SICK Support Portal).
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
3, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors.
4, via unspecified vectors. The following models with Synology DiskStation Manager (DSM) versions before 7.1.1-42962-2 may be affected: DS3622xs+
4, via unspecified vectors. The following models with Synology DiskStation Manager (DSM) versions before 7.1.1-42962-2 may be affected: DS3622xs+
4, via unspecified vectors. The following models with Synology DiskStation Manager (DSM) versions before 7.1.1-42962-2 may be affected: DS3622xs+
4, via unspecified vectors.
4, via local access.
4, via adjacent access.
1, via crafted image file.
4, via a crafted media file.
2, via the signature upload on the booking form.
5, by guessing / brute-forcing easy predictable booking IDs via search POST requests.
3, via physical access.
5,create a specially-crafted file as a symlink that can lead to
1, by editing virtualization command parameters of imported UNL files.
4, via request parameters.
2, via the Session Initiation Protocol.
4, via HTTP.
4, via single-sign-on if a random Universally Unique Identifier is guessed.
2, via the Session Initiation Protocol.
2, via One Touch Join.
2, via One Touch Join.
4, via HTTP.
3, via Epic Telehealth.
4, via H.323.
4, via H.264.
4, via shell metacharacters in the sysNewPasswd and sysConfirmPasswd parameters to password.cgi.
3, via shell metacharacters in the sysNewPasswd and sysConfirmPasswd parameters to admin_account.cgi.
4, via shell metacharacters in the ipv6_fix.cgi ipv6_wan_ipaddr
4, via a 315 MHz RF signal containing a fixed sequence of approximately one hundred symbols. NOTE: the vendor's perspective is that the behavior is as intended.
4, via a crafted SVG file.
4, via a crafted payload injected into the Comment text box.
4, via a crafted .exe file.
4, via a crafted .exe file.
4, via a crafted .exe file.
4, via a crafted .exe file.
4, via a crafted GET request sent to /WebApp/SettingsExclusion/GetExclusionsProfiles.
4, via a crafted GET request sent to /WebApp/SettingsFileMonitor/GetFileMonitorProfiles.
4, via a crafted GET request sent to /WebApp/DeceptionUser/GetAllDeceptionUsers.
4, via unspecified vectors.
4, via /common/upload API
4, via a crafted PHP file.
4, via a crafted value.
4, via a crafted executable.
4, via /cmscp/ext/collect/fetch_url.do?url=.
4, via a crafted PHP file.
4, via a crafted payload injected at /edit-db.php.
4, via a crafted POST request.
3, via injection of arbitrary URLs into the feed parameter.
4, via a crafted plug-in.
4, via local access.
4, via a Trojan horse DLL in an unspecified directory.
4,send invalid headers. This issue affects Apache Traffic Server 8.0.0 to
4, via a deeply nested XML document.
0, by specifying an input folder on the Jenkins controller as a parameter to its build steps.
4, via FTP to an attacker-specified FTP server.
3, by uploading a malicious Lua plugin.
1, via crafted HTTP request
4, via DNS. In such conditions
4, via a long string to TCP port 888
4, via a crafted file. NOTE: Vendor states as detailed in Ghost's security documentation
4, via a crafted PHP file.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
2, via the system_time_timezone parameter.
1, via specific UI interaction.
1, via edit page with XSS payload bypass filter some special chars.
2, via the Title field in admin/pages.php?action=add_new
1, via specific UI interactions.
4, via a crafted HTML page.
2, via the profile.php file. Therefore
4, via a crafted HTML page.
3, via physical access.
5, by sending a special crafted message. This issue affects: Hitachi Energy RTU500 series CMU Firmware 12.0.*; 12.2.*; 12.4.*; 12.6.*; 12.7.*; 13.2.*.
4, via adjacent access.
4, via local access.
3, via physical access.
4, via local access.
4, via unspecified vectors.
0,upload a crafted configuration file to
2, via the policy custom script feature. Due to the use of a default administrator password
4, via local access.
4, via a crafted payload.
4, via a crafted payload.
4, via a crafted payload.
1, via crafted URLs.
4, via a crafted GET request to the endpoint /api/students/me/courses/.
1, via crafted config and url parameters.
4, via a crafted ZIP file.
4, via a crafted payload.
2, via the _oups parameter at /ecrire.
4, via a crafted DLL file.
4, via a crafted DLL file.
0, via parameters with the filter_ prefix.
4, via the `parameter` parameter.
4, via a crafted payload injected into the name of a tag.
4, via a crafted POST request.
4, via a crafted POST request to /ServletAPI/accounts/login.
4, via a crafted POST request.
4, via a crafted POST request.
4, via a local file inclusion at /admin/filemanager/connector/.
1, via crafted code.
0, via overwriting the binary devcpp.exe.
2, via the component /gaia-job-admin/user/add.
4, via a crafted payload injected into the fname or lname parameters.
4, via a crafted POST request.
5, via a crafted buffer sent to the matrix_custom_frame device.
4, via a crafted buffer sent to the matrix_custom_frame device.
4, via a crafted buffer sent to the matrix_custom_frame device.
1, via crafted HTTP GET requests.
1, via crafted HTTP requests.
2, by having them reply to a maliciously crafted message. The vulnerability has been patched in matrix-appservice-irc 0.33.2. Refrain from replying to messages from untrusted participants in IRC-bridged Matrix rooms. There are no known workarounds for this issue.
5, by sending a small highly compressed payload. Maliciously constructed zip files may exhaust system memory and cause a denial of service. Users are advised to upgrade. Users unable to upgrade may consider disabling decompression.
4, via a crafted payload.
3, via directory traversal.
4, via a crafted PHP file.
2, via the FTP server.
4, via a crafted .exe file.
4, via a session replay attack.
4, via a crafted HTTP request.
4, via a crafted PHP file.
4, via a crafted SVG file.
4, via a crafted filename.
4, via a crafted file.
4, via a crafted XML file.
4, via a crafted payload injected into the firstname parameter.
4, via a crafted payload injected into the ParentID parameter.
1, via writing arbitrary files.
2, via the parameter CONTENT_LENGTH.
4, via a serial connection and execute commands as the root user without authentication.
4, via (&ids).
4, via (&id).
5,upload files. File attachment to
4, via local access.
4, via network access.
4, via unspecified vectors.
3, via local access.
4, via local access.
4, via a memory dump.- NOTE: the vendor does not consider this a vulnerability.
4, via a crafted filename. NOTE: some third parties dispute this issue because the product has common use cases in which uploading arbitrary files is the desired behavior. Also
4, via a crafted PDF file.
4, via a crafted PHP file.
4, via a crafted payload injected into the Page parameter.
4, via a crafted TCP payload.
4, via a crafted file.
4, via a crafted cookie.
4, via a crafted Zip file.
4, via a crafted POST request.
4, via a crafted POST request.
4, via a crafted POST request.
5, via a crafted POST request.
4, via a crafted POST request.
4, via a crafted web request.
4, via a crafted X-Forwarded-For request.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted plugin.
4, via a crafted PHP file.
4, via a crafted payload injected into the Name parameter.
4, via port 8118. This can cause a program logic error and lead to a Denial of Service (DoS) via high CPU usage due to a large number of connections.
4, via a crafted URL.
4, via a crafted mobi file.
4, via a crafted XML payload.
0,create a debug log file at an arbitrary pathname contributes to
3, by embedding a malicious URL parameter in the URL of the monitoring screen delivered to the GENESIS64 mobile monitoring application and accessing the monitoring screen.
1, use that information to access protected data. This issue affects: Western Digital My Cloud My Cloud versions prior to 5.25.124 on Linux.
0, by changing an existing image short code on website content.
4, via a crafted message.
4, via a crafted message that triggers excessive memory allocation.
4, via a large number of messages that trigger Uncontrolled Resource Consumption.
1, via crafted fake credentials.
4, via a crafted request that triggers Uncontrolled Resource Consumption.
4, via unspecified vectors.
4, via a crafted HTTP request.
4, via an agent-installer download. NOTE: this is not an Oracle Corporation product.
1,use the Service Registry 'Add' functionality to
4,use XML External Entity (XXE) processing to
2, via the (1) rule name parameter to the Rules page or the (2) subrule name or (3) categories name parameter to the Subrules page. NOTE: the vendor disputes this because version 1.16 has never existed.
4, via a crafted HTML page.
4, via time-based SQL injection..
4, via a JavaScript embedded PDF file.
4, via a GET request to the page for the System Tools of the Wi-Fi network. This affects TL-WR841 V12 TL-WR841N(EU)_V12_160624 and TL-WR841 V11 TL-WR841N(EU)_V11_160325 
3, via reusing a password reset token.
2, via the fileurl parameter.
4, via shell metacharacters in the ipv6_fix.cgi ipv6_wan_ipaddr
4, by changing isFullChunkFilePresent to have an early false return when input doesn't match expectations.Concrete CMS Security team ranked this 5.8 with CVSS v3.1 vector AV:N/AC:H/PR:H/UI:N/S:C/C:N/I:N/A:H. Credit to Siebene for reporting.
0, by convincing a user to click a link designed to pass malicious input to the interface. A successful exploit could allow the attacker to conduct cross-site scripting attacks and gain access to sensitive browser-based information.
1, by performing an out-of-bounds read and copying it into a socket.
4, via local access.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via physical access to the device.
1, via crafted UI interactions.
3, via password field.
4, via a crafted HTML page.
4, via unspecified vectors.
4, via a crafted HTML page.
3, via local access.
4, via a crafted HTML page.
2, by sending crafted messages that exhaust available resources.
4, via a crafted HTML page.
4, via a crafted HTML page.
1, via crafted UI interaction.
5, via a Slowloris variant in which incomplete QUIC or HTTP/3 requests are sent. This occurs because mtu_discoverer.go misparses the MTU Discovery service and consequently overflows the probe timer. NOTE: the vendor's position is that this behavior should not be listed as a vulnerability on the CVE List.
4, via network access.
5, via unspecified vectors.
3, by comparing ticket ages during session resumption.
4, via a path which contains a large number of path separators.
2, via an archive containing a large number of concatenated 0-length compressed files.
4, via a path containing a large number of path separators.
4, via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.
5, by passing a buffer larger than 1 << 32 - 1 bytes.
4, via a message which contains deeply nested structures.
4, via local access.
3, via unspecified vectors.
3, by having a user to access a specially crafted URL.
4, via deeplink.
4, via a malicious QR code scanner.
4, via onActivityResult.
4, via executing script.
3, via implicit Intent.
2, by bypassing login activity.
4, via a crafted HTML page.
5, by using WIFI_AP_STA_DHCPACK_EVENT action.
3, by using WIFI_AP_STA_STATE_CHANGED action.
0, by hijacking the implicit intent.
0, by setting the any extension via the plugin's setting
2, via the Username field when an Admin (or non-Admin users that can see other users logged into the platform) clicks on Logout. NOTE: this exists in later versions than CVE-2019-7348 and requires a different attack method.
4, use of multiple read operations on large headers.
4, via a crafted image file.
4, via local access.
4, use it to leverage further attacks on the system
2, via export or man.tcl.
5,create and write to
5,create and write to
5,create and write to
5,create and write to
2, via the --debug option in conjunction with the ---PIPEMESS option in Sync Jobs.
1, via crafted commands passed to Wrangler. This issue affects: SUSE Rancher wrangler version 0.7.3 and prior versions; wrangler version 0.8.4 and prior versions; wrangler version 1.0.0 and prior versions.
4, via a crafted session_id cookie.
4, via a crafted POST request.
4, via a crafted payload injected into the Your Name text field.
1, via crafted TCP packets.
4, via a crafted POST request.
4, via a crafted POST request.
4, via execution of the exec cmd function.
4, via execution of the exec cmd function.
4, via a crafted POST request.
1, via overwriting files using SUID flagged executables.
4, via a crafted POST request.
4, via non-existent endpoints under path /api2/html/.
4, via a crafted UNL file.
4, via a crafted php file.
3, via injection of arbitrary URLs into the URL parameter.
4, via a web request sent to /fm-data.lua.
4, via a crafted payload injected into the email name field.
4, via a crafted payload injected into the email name field.
4, via a crafted HTTP request.
4, via a crafted SVG file.
4, via a certain c 10 value over Bluetooth.
4, via a certain c 150 value.
4, via a certain c 11 message.
4, via a backdoor password (derived from the serial number) that can be found in Bluetooth broadcast data.
0, via changing the service binary path.
2, via the search function.
4, via ReaderNo. NOTE: this issue exists because of an incomplete fix for CVE-2019-7256.
5, by sending a specially crafted request. IBM X-Force ID: 227980.
3, by creating a specially crafted request. IBM X-Force ID: 228221.
5, by sending a malicious request to exposed management ports. This is fixed in Fireware OS 12.8.1
3, by sending a malicious request to exposed authentication endpoints. This is fixed in Fireware OS 12.8.1
5, by constructing a URL with a single character before a desired path on the filesystem. This occurs because the code skips over the first character when serving files. Arris NVG443
4, via shell metacharacters in the HTTP Host header. NOTE: 3.x is unaffected.
4, via execution of the exec cmd function.
4, via execution of the exec cmd function.
4, via a crafted POST request.
4, via a crafted Groovy rule.
4, via a crafted TCP packet.
2, via two crafted files.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted PDF file. (Chromium security severity: High)
4, via a crafted PDF file. (Chromium security severity: High)
4, via a crafted PDF file. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
5, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted packet.
5, via a crafted file.
4, via a crafted file.
4, via a crafted HTML file.
4, via a crafted SVG file.
4, via a crafted JWE token.
4, via a crafted file.
4, via a crafted SVG file.
2, by injecting entirely false responses or other new headers. The injected false responses may also be treated as the response to subsequent requests
4," via application configuration:```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [""""select"""""
5,create user/net namespaces) to
0, via SSL VPN configuration uploads in Sophos Firewall releases older than version 19.5 GA.
4, via G.719.
4, via unspecified vectors.
0,create files outside the designated target directory using carefully crafted ZIP entry names. This issue affects Apache UIMA Apache UIMA version 3.3.0 and prior versions. Note that PEAR files should never be installed into an UIMA installation from untrusted sources because PEAR archives are executable plugins that will be able to
2," by observing what source ports are used. This occurs because of use of Algorithm 4 (""""Double-Hash Port Selection Algorithm"""") of RFC 6056."
4, via a spoofed 'MessageSender.url' to the browser renderer process.
4, via a crafted POST request to /isms/classes/Users.php.
2, via an uploaded file such as a settings/preferences file.
4, via a crafted payload.
4, via a crafted HTTP request.
4, via a crafted file.
2, by timing the server's response time.
5, via a crafted file. Related to Data from Faulting Address controls subsequent Write Address starting at msvcrt!memcpy+0x0000000000000056.
5, via a symbolic link because the user can write to their own %APPDATA% folder (used for ad.trace and chat) but the product runs as SYSTEM when writing chat-room data there.
3, via unspecified vectors.
3, via unspecified vectors.
0, by injecting fake logs and potentially corrupt log files.
4, via local access.
3, via physical access.
3, via unspecified vectors.
4, via a crafted payload injected into the Username or Full Name fields.
4, via a crafted XCF file
4, via a crafted payload injected into the Name text field.
4, via uploading a crafted PDF file.
4, via a host header injection attack.
4, via a host header injection attack.
4, via a crafted .exe file.
4, via a crafted .exe file.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted excel file.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
3, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted HTML page. (Chromium security severity: High)
4, via unspecified vectors.
4, via unspecified vectors.
2, via the addressedit endpoint.
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted input.
4, via a crafted HTTP request.
2, via specific UI gestures. (Chromium security severity: Medium)
4, via a crafted payload.
4, via a crafted application. (Chromium security severity: Medium)
4, via a crafted payload.
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted payload injected into the keyword text field under the publish blog module.
4, via a directory traversal.
1, via physical access to the device. (Chromium security severity: Medium)
4, via clicking on a malicious link.
4, via a crafted payload injected into the URL field under the login page.
4, via a crafted string.
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
5, by having a user to access a specially crafted URL.
4, via a crafted HTML page. (Chromium security severity: Low)
4, via unspecified vectors.
4, via a crafted HTML page. (Chromium security severity: Low)
4, via a crafted HTML page. (Chromium security severity: Low)
4, via local access.
3, via UI interaction. (Chromium security severity: Low)
0, by using alternative paths or channels for Sensor.
4, via local access.
3, via unspecified vectors.
3, by leading a user to load a monitoring screen file including malicious XAML codes.
3, by leading a user to load a monitoring screen file including malicious XAML codes.
5, by leading a user to load a monitoring screen file including malicious script codes.
2, by sending specially crafted packets to the GENESIS64 server.
0, by sending specially crafted packets to the GENESIS64 server.
3, by leading a user to load a project configuration file including malicious XML codes.
0, by convincing the authenticated ePO administrator to click on a carefully crafted link. This would lead to limited access to sensitive information and limited ability to alter some information in ePO.
4, via log.
4, via log.
4, via log.
4, via log.
2, via unprotected intent broadcasting.
4, via log.
4, via log.
4, via log.
4, via a crafted HTML page. (Chromium security severity: High)
4, via log.
2, by sending braodcast intent.
3, use mobile data.
1, via new tap shortcut.
4, via log.
4, via Settings.Gloabal.
4, via a crafted HTML page. (Chromium security severity: High)
4, via running a logstream for the FortiTray process in the terminal.
4, via adjacent access.
4, via local access.
2, via an XSS payload in a ticket. This occurs because the ticket data is stored in a temporary file
4, via a crafted URI.
4, via view-source:http://IP_ADDRESS/sysinit.shtml?r=52300 and searching for [logincheck(user);].
4, via view-source:http://IP_ADDRESS/set_safety.shtml?r=52300 and searching for [var syspasswd].
4, via a crafted image or video file.
4, via a crafted plugin.
4, via a crafted payload injected into the username field.
4,send HTTP POST requests to
4,send HTTP POST requests to
0,send an HTTP POST request to
0,send an HTTP POST request to
3, via DTLS because a check for return-routability can be skipped.
0, by modifying an NVRAM variable.
0, by modifying an NVRAM variable.
3, via physical access.
1,send specially crafted malicious data to
4, via a crafted HTML page. (Chromium security severity: Low)
4, via a crafted HTML page and malicious file. (Chromium security severity: Low)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via unspecified vectors.
4, via local access.
4, via a crafted Chrome Extension. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted binary file.
4, via a crafted PDF file.
4, via a crafted binary file.
4," via a crafted TIFF file parsed by the """"tiffsplit"""" or """"tiffcrop"""" utilities."
1, via password reset requests and distinct responses returned based on usernames.
4, via a crafted API call.
4, via web files.
4, via a crafted session token.
4, via a crafted file.
4, via a crafted payload injected into the notifyInfo parameter.
1, via crafted plugins.
2, via accessing the messages.txt page.
0, via accessing the page syslog.shtml.
0, via accessing the page tftp.txt.
0, via accessing the page mb_wifibasic.shtml.
3, via accessing Tftpd32.ini.
3, via accessing fctest.shtml.
4, via a crafted POST request.
4, via a crafted POST request.
4, via a crafted POST request.
4, via a crafted payload injected into the Edit Subject text field.
4," via a crafted payload injected into the """"Contac #"""" text field."
4, via a crafted binary.
4, via a crafted file.
4, via brute-force attacks.
4, via a crafted payload injected into the recipe description text field.
4, via a crafted payload injected into the Shopping Lists item names text field.
4, via modification of the user_id parameter.
0, by factoring the RSA modulus N in the certificate of the web administration interface.
4, via a crafted UDP packet.
3,send messages on tabits behalf to
1,send an HTTP request to
1,send an HTTP request to
2, use the clientIP variable in the configuration are not vulnerable. The vulnerability is fixed in these versions: 20.1.16
3,create mount points pointing to
4, via a crafted PHP file.
4, via a SQL query.
4, via a crafted PHP file.
4, via a crafted payload injected into the Packing text box under the Update Medical Details module.
4, via a crafted payload injected into the Node titles.
2, via command injection in a filename for the GPG module.
4, via a crafted payload injected into the Name text field when creating a node.
5, via a crafted request sent to /api/user/upsert/<uuid>.
4, via a crafted payload injected into the Search parameter.
4, via a crafted HTTP request.
4, via a crafted lua script.
4, via a crafted mp4 input.
4, via a crafted payload injected into the Tags field.
4, via a crafted HTTP connection request.
0, via the User parameter or Pwd parameter to Login.asp.
4, via a crafted URL to the victim's service.
4, via local access.
4, via local access.
5, by injecting a special payload via the title parameter in the foreground contribution
1,use the generated JWT to
4, via a crafted file.
2, by injecting iframe tag with initial asset IP address on it's source. This allows the attacker to takeover the whole infrastructure by accessing their internal assets.
2," via the """"start_date"""" Parameter"
2," via the """"publish_on_date"""" Parameter"
2," via the """"publish_on_time"""" Parameter."
2," via the """"end_date"""" Parameter"
3, via parameter username.
3, via parameter productcode.
3, via parameter searchTxt.
3, via parameter user.
3, via parameter searchTxt.
3, via parameter 'searchTxt'.
2, via the parameters such as 'users'
2, via the parameter 'customerCode.'
4, via a crafted payload injected into the dashboard name text field.
0, by connecting the power cord to a 120V circuit (which may lead to self-starting at an inopportune time).
1, via crafted TIFF image file which could result into application crash
5," by sending a specially crafted request. IBM X-""""Force ID: 231361."
3, by using a semicolon in a URL to introduce a matrix parameter. (This is also fixed in 5.3.8.12
4, via unspecified vectors. The following models with Synology DiskStation Manager (DSM) versions before 7.1.1-42962-2 may be affected: DS3622xs+
4, via configuring a specially crafted IP Address.
4, via 2.4 GHz radio transmissions.
5, via a .python-version file in the current working directory. An attacker can craft a Python version string in .python-version to execute shims under their control. (Shims are executables that pass a command along to a specific version of pyenv. The version string is used to construct the path to the command
5, uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.
3, by creating a %PROGRAMFILES(X86)%\ASUS\GameSDK.exe file.
2, via specially crafted JSON payloads. This issue may lead to Remote Code Execution (RCE). A patch is available in commit number 7b3023a99499a7675f10f2c1d9effdf10c35fb6e. There are currently no known workarounds.
3, by supplying a Python script.
2, via location input Deposit Comment.
2, via location input sHeader.
5, via a hidden web page (/usr/www/ja/mnt_cmd.cgi).
4, via a crafted PDF file.
2," via multiple parameters such as """"fullname""""."
2," via the parameters such as """"searchTxt""""."
2," via the parameters such as """"productcode""""."
2," via the parameters such as """"users"""""
2," via the parameters such as """"searchTxt""""."
2," via the parameters such as """"username"""""
3, by modifying config.php.
5, via unspecified vectors.
4, via ActiveUpdate to customers in an updated Spyware pattern. Customers who are up-to-date on detection patterns are not required to take any additional steps to mitigate this issue.
4, via local access.
3, via unspecified vectors.
4, via local access.
4, via local access.
4, via local access.
4, via local access.
4, via unspecified vectors.
4, via local access.
4, via local access.
4, via a Trojan horse DLL in an unspecified directory.
2, via the Clipboard Compare tray app after installation.
4, via a crafted JSP file. Issue fixed in version 7.9.6.1.
0, by manipulating the generated preview application response.
4, via SYSTEM privileges. This affects ASUS System Control Interface 3 before 3.1.5.0
4, use a physical connection (Ethernet cable) without restriction.
4,upload malicious files. A successful exploit could allow an attacker to
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted packet.
4, via a crafted payload injected into the post title text field under the publish blog module.
4, via a crafted HTML page. (Chromium security severity: High)
5,upload and rename a malicious file to
2, via creating crafted session tokens.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted payload injected into the Search field.
4, via a crafted payload injected into the Name text field.
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted GET request.
4, via a crafted html file.
4, via a crafted HTML page. (Chromium security severity: Medium)
2, via overwriting binaries located in the directory.
1, via overwriting binaries located in the directory.
2, via overwriting binaries located in the directory.
1, via overwriting binaries located in the directory.
4, via a crafted Chrome Extension. (Chromium security severity: Medium)
4, via a crafted payload injected into the Markdown text box under /blog/post/edit.
2, via specific UI interaction. (Chromium security severity: Medium)
4, via a crafted PHP file.
4, via a crafted PHP file.
2, via specific UI interactions. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted payload injected into the Description field.
4, via a crafted POST request.
4, via a crafted Chrome Extension. (Chromium security severity: Low)
4, via a crafted HTTP request.
4, via a crafted payload injected into the name parameter.
0, by exploiting the LFD vulnerability.
4, via unspecified vectors.
4, via unspecified vectors.
4, via a crafted request_uri parameter.
4, via a crafted HTTP request. NOTE: this is disputed by the vendor.
4, via local access.
2, via Template Injection leading to Remote Code Execution (RCE) in the Email Templates feature. In this case the security improvement was to protect against using the XStream library to be able to execute arbitrary code in velocity templates. The affected versions are before version 8.13.19
1, via an Information Disclosure vulnerability in the browsegroups.action endpoint. The affected versions are before version 4.22.2.
4, via a Reflected Cross-Site Scripting (RXSS) vulnerability in the TeamManagement.jspa endpoint. The affected versions are before version 8.20.8.
5, via a Server-Side Request Forgery. This can be exploited by a remote
1,use the MasterUserEdit API to
3, via implicit intent.
3, via implicit intent.
4, via undefined permission.
3, via implicit Intent.
3, via implicit Intent.
3, via implicit Intent.
5, via log.
4, via log.
3, use an attacker-specified Git repository and to cause them to check out an attacker-specified commit.
3, use an attacker-specified Git repository and to cause them to check out an attacker-specified commit.
1, via Login Field
0, by appending arbitrary text to text files that are executed by the system
2, via the username parameter.
2, via the _oups parameter.
2, via the arbitrary creation of a privileged user. By combining the XSS vulnerability present in several upload forms and a javascript request to the present API
4, via brute-force attacks. Additionally
4, via brute-force attacks. Additionally
1, via overwriting binaries located in the directory.
4, via a binary hijacking attack on C:\Program.exe.
4, via a crafted packet sent to goform/setWizard.
4, via a crafted HTML page. (Chromium security severity: High)
4, via manipulation of an unsanitized POST parameter
4, via local access.
4, via local access.
3,upload arbitrary files other than image files. If a user with an administrative privilege of EC-CUBE where the vulnerable plugin is installed is led to
4, via apoc.log.stream.
5, by splitting a javascript URL with white space characters.
1, by mining blocks in certain situations
4,send invitations to
4, via a side-channel attack
4, via (1) the input after the error subdirectory to the /vitrea-view/error/ subdirectory
4, via a crafted payload injected into the Excerpt field.
1, by leveraging access to a legitimate Phone Key.
1, via unspecified vectors
4, via unspecified vectors.
4, via a crafted file.
4, via a crafted file.
2, via the web interface. Successful exploitation of this vulnerability could lead to full compromise the underlying host operating system.
5, by uploading a specially crafted file. A successful exploit could allow an attacker to execute arbitrary script code in a victim's browser in the context of the affected interface in Aruba EdgeConnect Enterprise Software version(s): ECOS 9.2.1.0 and below; ECOS 9.1.3.0 and below; ECOS 9.0.7.0 and below; ECOS 8.3.7.1 and below.
4, via local access.
3,upload arbitrary files to
4, via local access.
4, via a large len value
4, via a crafted payload.
4, via manipulation of the getpage parameter in a crafted web request.
4, via a crafted JPEG file.
4, via a crafted payload injected into the Search bar.
4, via a crafted payload injected into the Name field under the Add New Group function.
1, via redirecting incoming requests to the AWS internal metadata endpoint.
4, via uploading a crafted JAR file into the directory /opt/onedev/lib.
4, via a crafted PHP file.
4, via a crafted payload.
4, via a crafted PHP file.
4, via a crafted HTTP request.
2, via the SSH or SFTP protocols without authentication.
4, via a crafted PUT request to the update profile page.
4, via a crafted payload.
0, by making an HTTP request to the affected endpoint.
2, via the URL and User fields observed in the traffic and event logviews.
2, via input fields of various components within FortiSOAR.
2, via the API.
5, by sending a specially crafted request. IBM X-Force ID: 233786.
0, by having the product connect to the product's specific serial connection
5, by having a use of the product to access a specially crafted URL.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted JWE (JSON Web Encryption) token.
4, via a crafted POST request.
4, via a crafted payload.
2, via the lan parameter.
2, via the MACAddr parameter.
2, via the adItemUID parameter.
2, via the mailpwd parameter.
2, via the mailname parameter.
2, via the authIPs parameter.
2, via the hostname parameter.
2, via the adPushUID parameter.
4, via a crafted binary.
0, via modifying the PATH parameter.
4, via a crafted PHP file.
4, via a crafted HTML page. (Chrome security severity: High)
4, via a crafted binary.
4, via a crafted payload injected into the Community Posting field.
1, via crafted syslog input that is mishandled by the tcp or network function. syslog-ng Premium Edition 7.0.30 and syslog-ng Store Box 6.10.0 are also affected.
3,send SCRIPT tags as injected input to
0, by abusing password reset emails.
4, via a crafted payload injected into the sncfg_loid text field.
0,upload malicious file with any extension to
1, via creating contacts with payloads capable of executing system commands. Admin user exporting contacts in CSV file may end up executing the malicious system commands on his system.
0, via sending crafted csv file containing malicious JavaScript to authenticated user. Any authenticated user importing the crafted CSV file may end up running the malicious JavaScripting in the browser.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via injection of arbitrary URLs into the url parameter.
2, by having an administrative user of the product to visit a specially crafted page.
4, via a crafted PDF upload.
4, via a known URL.
3,upload malicious files to
2, via the c parameter.
2, by entering student credentials and then directly visiting a certain webapps/bbcms/execute/ URL.
4, via this endpoint. Note that this does not apply to events retrieved through other endpoints (e.g. `/event`
5, by visiting a specially crafted site. This issue is patched in C1 CMS v6.13. There are no known workarounds.
0, by updating their package or by manually applying the patch commit `e851b079`.
3,"create configurations such as """"Better-Audit-Logging"""" which contain a channel from another server as a target. This would mean you could send log messages to"
4," via a Central Authentication Service (CAS) server. The phpCAS library uses HTTP headers to determine the service URL used to validate tickets. This allows an attacker to control the host header and use a valid ticket granted for any authorized service in the same SSO realm (CAS server) to authenticate to the service protected by phpCAS. Depending on the settings of the CAS server service registry in worst case this may be any other service URL (if the allowed URLs are configured to """"^(https)://.*"""") or may be strictly limited to known and authorized services in the same SSO federation if proper URL service validation is applied. This vulnerability may allow an attacker to gain access to a victim's account on a vulnerable CASified service without victim's knowledge"
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise Oracle Transportation Management. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Transportation Management. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Oracle Access Manager. Successful attacks of this vulnerability can result in unauthorized access to
4,compromise Java VM. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise Java VM. Successful attacks of this vulnerability can result in unauthorized ability to
2, via the currentItem property of the list widget
4, via a crafted HTTP request.
4, via a forum post.
4, via a direct message (DM).
4, via log.
3, via implicit intent.
4, via implicit broadcast.
3, via implicit intent.
3, via implicit broadcast.
3, via implicit broadcast.
4, via SHOW_PERSISTENT_BANNER broadcast.
3, via implicit broadcast.
4, via REMOVE_PERSISTENT_BANNER broadcast.
4, via PUSH_MESSAGE_RECEIVED broadcast.
3, via implicit broadcasts.
2, via implicit intent broadcast.
2, via keep open feature.
4, via log.
4, via emergency call.
4, via log.
3, via implicit intent.
5,create a file named Everest.exe in the %PROGRAMDATA%\Panini folder. This leads to
5, by making a groupexport_download=true request to a plugins/servlet/groupexportforjira/admin/ URI.
4, via a crafted PHP file uploaded through the picture upload point.
4, via a crafted PHP file uploaded through the picture upload point.
4, via a crafted payload injected into the Service>Templates service_alias parameter.
2, via the username field of the admin log in page.
2, via the title field of the create article page.
2, via the callback parameter to /cms/notify.
1, via crafted URL to the Audit Log.
1, via export from editor.
4, via a crafted payload injected into the shortName parameter.
4, via a crafted payload injected into the fullName parameter.
4, via a crafted payload injected into the shortName parameter.
2, via the 'notifyInfo' parameter.
2, via the /uploadFileList component.
0, by bypassing permission checks via the /adminGetUserList component.
2, via the component /upFile.
4, via injecting a crafted payload.
2, via the id parameter to the /tpts/manage_user.php page.
4, via a brute force attack at the login page.
4, via a crafted PHP file.
4, via a crafted payload injected into the page parameter.
4, via a crafted PHP file. This vulnerability is exploitable when the directive allow_url_include is set to On.
4, via a crafted string.
4, via a crafted string.
4, via a crafted string.
4, via a crafted string.
4, via a crafted string.
4, via a crafted string.
4, via a crafted string.
5,create a writable folder in an arbitrary location and escalate privileges on affected installations. Please note: an attacker must first obtain the ability to
0, by falsifying request parameters on affected installations.
0, by interfering in the communication path between the client and the intended server.
3, via multiple large requests to one of the Playbooks API endpoints.
4, via local access.
0, by modifying an NVRAM variable.
2," by removing the ability to run jobs due to improper input validation. IBM X-Force ID: 235725."""""
4, via a crafted HTML page. (Chrome security severity: Low)
2, by sending specially crafted packets. A system reset is required for recovery.
5, via Sudo. This passcode is only four digits
5, via a modified email address in a wa.exe URL. The impact is unauthorized modification of a victim's LISTSERV account.
2, via the Open Print Folder menu.
4, via a crafted PNG file.
4, via injection of arbitrary URLs into the source parameter.
4, via upload of crafted XML file.
4, via a crafted Zip file.
0, via multiple large autoresponder messages.
5, via a crafted GET request sent to /one/siteinfo.php.
1, via multiple requests to one of the API endpoints which could fetch a large amount of data.
2, via profile picture upload functionality in users.php
4, via a crafted payload injected into the Content text field of the Add New Message module.
4, via a crafted backup file.
4, via injection of a crafted payload.
3, by sending a crafted end-entity (and intermediate CA) certificate that contains a CRL/OCSP URL that points to a server (under the attacker's control) that doesn't properly respond but (for example) just does nothing after the initial TCP handshake
2, via the HTTP Host header
4, via FreeMarker SSTI.
2, via Groovy Sandbox Bypass.
0, by invoking the function TEE_MACComputeFinal with an excessive size value of messageLen.
0, by invoking the function TEE_CipherUpdate with an excessive size value of srcLen.
0, by invoking the function TEE_MACCompareFinal with a NULL pointer for the parameter operation.
0, by invoking the function TEE_MACUpdate with an excessive size value of chunkSize.
0, by invoking the function TEE_AllocateOperation with a disturbed heap layout
0, by invoking the function TEE_Realloc with an excessive number for the parameter len.
2, via the report module.
4," via a crafted payloads injected into the """"htmlNodes"""" parameter."
2, via the portMappingServer
4, via a crafted payload injected into the Host header.
3, via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.
0, via attacker controlled input to wheel cli.
1, via crafted Set-Cookie header from malicious web server.
4, via a specially crafted UDP packet. Please update the Reference section to these links > http://thiscomputer.com/ > https://www.bostoncyber.org/ > https://medium.com/@meekworth/exploiting-the-lw9621-drone-camera-module-773f00081368
4, via a crafted MachO file.
4, via a crafted MachO file.
3, by processing a long file name.
1, via crafted data due to insufficient restrictions on the database data type.
5, by providing a crafted file name to an API endpoint.
5, by providing a crafted file name to an API endpoint.
3,upload arbitrary scripts due to
4, via local access.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted payload injected into the categoriesName parameter in createCategories.php.
0, by calling any function in leadshop.php via the GET method.
4, via a crafted PHP file.
4, via a crafted payload injected into the Website name text field under Main Settings.
3, via unspecified vectors.
4, via a crafted PHP file.
0, via injecting crafted shellcode into the NVRAM variable.
4, via uploading a crafted PNG file.
4, via a crafted payload injected into the Title text field.
1, via crafted public key comments.
5, via browsing to the URL http://device_ip/index1.html.
4, via a crafted payload injected into the POBatch and WaitDuration parameters.
4, via a crafted payload injected into the Add Subject page.
4, via a crafted payload injected into the Title field.
1, via theme parameters to read files across directories.
4, via a crafted request.
4, via a crafted request.
4, via a crafted request.
5, via a crafted request.
5, via a crafted request.
4, via a crafted request.
3,send crafted requests to
4, via a crafted PHP file.
3, by connecting to the UART pins
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, by using a previously transmitted encrypted authentication message and valid authentication token. Attackers are able to login to the web application as an admin user.
4, via a crafted HTTP request.
3, by having a user to open a specially crafted project file.
1, use these flaws to crash the QEMU process on the host.
4, via a crafted HTML page. (Chromium security severity: High)
0,create a specially crafted message to
4, via a crafted HTML page. (Chromium security severity: High)
2, by placing them in a JPEG filename and then using the regeneration -rgt50 option.
3, via UI interactions. (Chromium security severity: High)
4, via a crafted Chrome Extension and UI interaction. (Chromium security severity: High)
4, via Network
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted Chrome Extension. (Chromium security severity: High)
4, via a Trojan horse DLL in an unspecified directory.
2, via the vulnerable App. As a result
4, via a crafted Chrome Extension. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
0," by setting the system property """"hsqldb.method_class_names"""" to classes which are allowed to be called. For example"
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
0, via specially crafted JSON payloads. Specially crafted JSON payloads may lead to RCE (remote code execution) on the attacked system running Optica. The vulnerability was patched in v. 0.10.2
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted Chrome Extension. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
3, via profile destruction. (Chromium security severity: Medium)
3, via UI interaction. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
3, by importing a crafted XAR package. The problem has been patched in XWiki 14.6RC1
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a malicious file. (Chromium security severity: Medium)
4, via a crafted payload injected into the Company Name and Description text fields.
1, via crafted overflow data.
1, via crafted overflow data.
2, via location Forum Subject input.
2, via location input reply-form.
4, via a crafted payload injected into the object field's `Label` text field.
2, via the deployment of a malicious plugin/module.
4, via a crafted PHP file.
1, via unsanitized cookie values.This issue affects NAS-M25: through 1.0.1.7.
4, via a crafted payload injected into a file name.
3, via use of a malicious application. This is possible because the application exposes an activity and does not properly validate the data it receives.
0, by specifying direct URL paths. IBM X-Force ID: 238210.
2, via logging into the database using a privileged account without a password.
4, via a malicious .exe file and gain full access to the system.
4, via a crafted HTML page. (Chromium security severity: High)
4, via local access.
4, via JavaScript. This issue affects Apache XML Graphics prior to 1.16. Users are recommended to upgrade to version 1.16.
4, via a Subversion repository with crafted info data
4, via a deep link.
1, by spoofing JWT Tokens.
4, via a crafted payload injected into the Edit Account Full Name field.
4, via a crafted payload injected into the Train Code
4, via a crafted input.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PDF file.
4, via a crafted PHP file.
4, via a crafted payload injected into the txtemail parameter.
4, via a crafted payload injected into the cmddept parameter.
4, via a crafted payload injected into the cmddept parameter.
4, via a crafted payload injected into the customer parameter.
4, via a crafted PHP file.
4, via a crafted payload injected into the v_name parameter.
4, via a crafted PHP file.
2, via the UART port.
4, via a crafted packet.
4, via a crafted payload injected into the Username text field.
4, via a crafted payload injected into the Username parameter.
4, via a crafted payload injected into the Field default value text field.
4, via a crafted payload injected into the tooltip text field.
4, via a crafted API.
4, via injection of crafted URLs into the url parameter.
4, via a crafted payload injected into the cmddept parameter.
4, via a crafted payload injected into the error modal container.
4, via a crafted payload.
4, via a crafted PHP file.
4," via a crafted payload injected into the Name parameter after clicking """"Add""""."
4," via a crafted payload injected into the Value parameter after clicking """"Create""""."
4," via a crafted payload injected into the Name parameter after clicking """"Add New Entity""""."
4," via a crafted payload injected into the Title parameter after clicking """"Add""""."
4," via a crafted payload injected into the Name parameter after clicking """"Add New Group""""."
4," via a crafted payload injected into the Title parameter after clicking """"Add info block""""."
4, via a crafted MachO file.
4, via a crafted payload injected into the Name parameter.
4, via a crafted PHP file. This vulnerability is related to an incomplete fix for CVE-2022-40886.
4, via a crafted PFCP packet.
4, via a crafted PFCP packet.
4, via a crafted UE attachment.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
4, via a crafted video file.
0, via incorrectly applied permissions in the removal protection functionality.
4, via a crafted payload inserted into the name of an uploaded file.
4, via a crafted web request.
4, via a crafted PHP file.
4, via a crafted PHP file.
4, via a crafted PHP file.
1, via crafted user cookies.
4, via a crafted payload.
4, via a crafted payload injected into the license input.
4, via a crafted payload injected into the Site title field of the Configuration Panel.
4, via a crafted payload injected into the KPI Title text field.
4, via a crafted string.
2, via the checkLoginUser
4, via Network
3, by having a user to open a specially crafted image file.
3, via Network
4, via Network
4, via Network
1, via user input or stored data
0, by persuading the user to upload a file with specially crafted name
0, via direct user input or stored search filter settings.
4, via unspecified vectors.
3, via unspecified vectors.
2, by supplying specially crafted git credentials. This issue affects: SUSE Rancher wrangler version 0.7.3 and prior versions; wrangler version 0.8.4 and prior versions; wrangler version 1.0.0 and prior versions.
2, via security misconfiguration and subsequent ability to call privileged endpoints in Crowd's REST API under the {{usermanagement}} path. This vulnerability can only be exploited by IPs specified under the crowd application allowlist in the Remote Addresses configuration
4, via unspecified vectors.
4, via unspecified vectors.
0, by reading the source code of /bitrix/admin/ldap_server_edit.php.
4, via a malicious POST request to /apply.cgi.
2, via directory traversal over TCP port 8888.
2, use the file:// protocol.
2, use the file:// protocol.
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The recommended solution is to update the firmware to a version >= 1.2.0 as soon as possible (available in SICK Support Portal).
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The recommended solution is to update the firmware to a version >= 2.2.0 as soon as possible (available in SICK Support Portal).
2, via web browser
0, by leveraging response timings for authentication attempts.
1, by leveraging response messages for authentication attempts.
4, use a crafted XML config file pointing to a malicious file or set a local path to the executable using Cloudflare Zero Trust Dashboard (for Zero Trust enrolled clients).
4, via a crafted html file.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted PHP file.
2, via specific UI interactions. (Chromium security severity: High)
4, via a crafted payload injected into the Public Security Record Number text field.
4, via a crafted HTML page. (Chromium security severity: Medium)
5, by sending a specially crafted request.
3, via Perl Storable (pst) files
1, by tricking users into accessing a malicious link.
1, via Bluetooth spoofing when a user is activating remote control by pressing a button. This is fixed in xxx72510
4, via a crafted payload.
4, via a Cross-Site Scripting (XSS) vulnerability.
5, via a crafted Lotus Ami Pro file. This is different from the vulnerability described in CVE-2022-44754. This vulnerability applies to software previously licensed by IBM.
4, via a crafted Lotus Ami Pro file. This is different from the vulnerability described in CVE-2022-44755. This vulnerability applies to software previously licensed by IBM.
4, via a crafted WordPerfect file. This vulnerability applies to software previously licensed by IBM.
4, via a crafted WordPerfect file. This vulnerability applies to software previously licensed by IBM.
5, via a crafted Lotus Ami Pro file. This is different from the vulnerability described in CVE-2022-44750. This vulnerability applies to software previously licensed by IBM.
4, via a crafted Lotus Ami Pro file. This is different from the vulnerability described in CVE-2022-44751. This vulnerability applies to software previously licensed by IBM.
4, via a crafted payload injected into the Name parameter under the AD Management module.
4, via shell metacharacters in the login parameter.
4, via a crafted payload injected into the show_number parameter.
4, via extracting a crafted 7z file.
2, via arbitrarily editing VoIP SIB profiles.
4, via a brute force attack.
4, via a crafted DLL.
4, via a crafted payload injected into the Title field.
4, via a crafted payload injected into the Title field.
4," via a crafted payload injected into the Note field after clicking """"Add""""."
4," via a crafted payload injected into the Name field after clicking """"Add""""."
4, via a crafted payload injected into the Short Name field.
4, via a crafted payload injected into the Name field.
4, via a crafted payload injected into the Name field.
4," via a crafted payload injected into the Copyright Text field after clicking """"Add""""."
4," via a crafted payload injected into the Name field after clicking """"Add""""."
4," via a crafted payload injected into the Last Name field after clicking """"Add""""."
4, via a crafted payload injected into the Messages field.
4, via a crafted payload injected into the Name field.
4, via a crafted payload injected into the Name field.
4, via a crafted payload injected into the Name field.
4, via a crafted payload injected into the Search field.
4, via a crafted payload injected into the Name field.
4, via a crafted payload injected into the Subject field.
1, via crafted payload injected into the Name field under the Create New module.
4, via a crafted PHP file.
4, via a crafted payload injected into the Source field.
4, via a crafted payload injected into the Section Header field.
4, via a crafted payload injected into the Results Header field.
4, via a crafted payload injected into the Results Footer field.
4, via a crafted payload injected into the Footer field.
4, via a crafted payload injected into the Post Loop field.
4, via a crafted GET request.
4, via a crafted POST request sent to /cgi-bin/logs.ha.
4, via a crafted payload injected into the Chat text field.
4, via a crafted payload injected into the No Results field.
4, via a crafted payload injected into the Display Name field.
4, via a crafted payload injected into the Website Footer field.
4, via a crafted PHP file.
4, via a crafted payload injected into the Name Section field.
2, via an HTTP web request. Patched Versions are 3.5.3
4, via a locking mechanism and a check for names that already exist.
4, via a crafted payload injected into the username parameter at /php-sms/classes/Login.php.
4, via a crafted payload injected into the Name parameter under the Add New System User module.
4, via a crafted payload injected into the Level parameter under the Add New System User module.
4, via a crafted payload injected into the txtnew_password parameter.
4, via a crafted payload injected into the txtfullname parameter.
4, via a crafted payload injected into the txtfullname parameter.
4, via a crafted payload injected into the book_title parameter.
4, via a crafted PHP file.
4, via a crafted payload.
4, via supplying a crafted URL.
5, via a crafted nova message.
4, via a crafted packet.
4, via a crafted SVG file.
3, via prefetch side-channels based on TLB timing for Intel systems.
4,send instructions to
4,send instructions to
4, via a CSRF attack and delete the lydl_posts & lydl_poststimestamp DB tables
2, via the tristao parameter.
3, via file names.
2, via the meta tag.
3, via improper santization.
4, via a crafted payload injected into the publisher parameter.
4, via a crafted value to the m parameter. NOTE: third parties have disputed this because there is no analysis showing that the backtick command executes outside the context of the user account that entered the command line.
1, via crafted JSON data.
1, via crafted JSON or XML data.
1, via crafted JSON or XML data.
4, via a crafted string.
5, via a crafted payload injected into the Employee ID parameter.
4, via a crafted payload injected into the Search function.
2, via the home page description on the basic information page.
4, via a crafted URL parameter.
4, via uploading a crafted audit file.
3, by creating a symbolic link and abusing the service to delete a file. Please note: an attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.
2, via newly created VDOMs after the super_admin account is deleted.
3, by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively
2, by changing the value of the ON cookie. A brute-force attack can calculate a value that provides permanent access.
4, via shell metacharacters in the name of a source-code file
4, via a crafted payload.
4, via a crafted payload injected into the eMail parameter.
4, via a crafted payload injected into the Comments text field.
0, via the txtfullname parameter or txtphone parameter to register.php without logging in.
3, via uploading a crafted firmware image during the firmware update process.
3, by uploading a crafted image. Akeneo PIM Community Edition after the versions aforementioned provides patched Apache HTTP server configuration file
0, by requiring the var to be set to true
3, by having a user to open a specially crafted file
3, by having a user to access a specially crafted URL.
3, by having a user to open a specially crafted image file.
1, by creating bot accounts that follow attacker-controlled accounts on certain other servers associated with a wildcard DNS A record
3, via uploading a crafted firmware image during the firmware update process.
4, via uploading a crafted firmware image during the firmware update process.
4, via uploading a crafted firmware image during the firmware update process.
4, via uploading a crafted firmware image.
3, via uploading a crafted firmware image.
4, via a crafted payload injected into the description parameter.
4, via a crafted input.
4," via a crafted payload injected into the URL path folder """"3""""."
1, via crafted Hessian serialized data.
4, via a crafted payload injected into the name parameter.
4, via uploading a crafted markdown file.
4, via a crafted PHP file.
4, via a crafted payload injected into the firstname parameter.
4, via a crafted payload injected into the name parameter.
3, by having a user to load a repository containing a specially crafted filename to the product. This vulnerability is different from CVE-2022-47318.
4, via a crafted multicast UDP packet (IP address range of 224.0.0.0 through 239.255.255.255).
4, by exploiting a path traversal vulnerability.
2, via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.
2, via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.
2, via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.
2, via the conuser[] parameter in takeconfirm.php; the delcheater parameter in cheaterbox.php; or the usernw parameter in nowarn.php.
0, via the secret parameter in /login.php; q parameter in /user-ban-log.php; query parameter in /log.php; text parameter in /moresmiles.php; q parameter in myhr.php; or id parameter in /viewrequests.php.
2, via the title parameter used in /subtitles.php.
3, via uploading a crafted firmware image.
3, via uploading a crafted firmware image.
4, via uploading a crafted firmware image.
4, via a crafted payload injected into sent messages.
4, via a crafted web request.
2, via the GetConfig method to the /CPE endpoint.
0, via running the tcpdump command after placing a crafted file in the /tmp directory and sending crafted packets through port 80.
4, via a crafted payload injected into the Subject parameter.
4, via a crafted IEEE 802.15.4 frame.
4, via a crafted payload injected into the name parameter.
5, by having a user to open a specially crafted project file.
3, by having a user to load a repository containing a specially crafted filename to the product. This vulnerability is different from CVE-2022-46648.
0, by invocating the password recovery mechanism method. This leads to an increase in their privileges on the system and thereby affecting the confidentiality integrity and availability of the system. An attacker can expect repeatable success by exploiting the vulnerability. The recommended solution is to update the firmware to a version >= 1.13.4 as soon as possible (available in SICK Support Portal).
4, via a long message in a TCP request that leads to std::length_error.
4, via a crafted UDP message that leads to a failure of the libsofia-sip-ua/tport/tport.c self assertion.
4, via a crafted UDP message that causes a url_canonize2 heap-based buffer over-read because of an off-by-one error.
2, via electromagnetic fault injections.
2, via certain HTTP endpoints
2, use firmware version v4.2.7 up to v5.1.1 (included).
2, via the web shell.
3, by having a user to open a specially crafted project file.
5, via a crafted HTML file that mentions an ipfs:// or ipns:// URL. This vulnerability is caused by an incomplete fix for CVE-2022-47933.
0, via a crafted HTML file that references the IPFS scheme. This vulnerability is caused by an uncaught exception in the function ipfs::OnBeforeURLRequest_IPFSRedirectWork() in ipfs_redirect_network_delegate_helper.cc.
5, via a crafted HTML file that mentions an ipfs:// or ipns:// URL. This is caused by an incomplete fix for CVE-2022-47932 and CVE-2022-47934.
5, via a crafted PHP file. This vulnerability is exploited via manipulation of the upext variable at /include/Model/Upload.php.
4, via a crafted payload injected into the User-Agent.
4, via a crafted PHP file.
4, via a crafted payload injected into the Description or Welcome-message text fields.
4, via a crafted payload injected into the Description or Title text fields.
4, via a crafted payload.
4, via a crafted message sent to the server.
4, via a crafted cookie.
4, via a brute-force attack.
4, via a crafted .nxs file.
4, via uploading a crafted PHP file to the virtual host directory of the system.
4, via a crafted payload.
4, via a crafted payload.
4, via a crafted POST request. Attackers are also able to leverage this vulnerability to login as root via hardcoded credentials.
0, via the id parameter to /medicines/profile.php.
3, by uploading a crafted firmware update because the signature check is inadequate.
4, via a low-privileged user account that abuses the Notifications function. The Notifications function allows for arbitrary binary execution and can be modified by any user. The resulting binary execution will occur in the context of any user running NetWorx. If an attacker modifies the Notifications function to execute a malicious binary
1, via HTTP configuration page. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via a malicious mkp file.
4, via unspecified vectors.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page and specific interactions. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
3, via database corruption and a crafted HTML page. (Chromium security severity: Medium)
3, via database corruption and a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Low)
4, via a crafted HTML page. (Chromium security severity: Low)
4, via a crafted HTML page. (Chromium security severity: Low)
4, via a crafted HTML page. (Chromium security severity: Low)
2, uses an unsanitized attacker-controlled parameter to construct an internal path.
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: Medium)
4, via a Chrome web app. (Chromium security severity: Medium)
5, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page. (Chromium security severity: High)
4, via a crafted HTML page and browser shutdown. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
1, via UI interaction . (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Medium)
3, via UI interactions. (Chromium security severity: Medium)
4, via a crafted HTML page. (Chromium security severity: Low)
4, via a crafted HTML page. (Chromium security severity: Low)
4, via binding WifiService.
5, by launching a web page.
4, via log.
3, via implicit broadcast.
3, via implicit intent.
4, via gesture setting.
5,compromise Oracle iSupplier Portal. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise Oracle Hospitality Reporting and Analytics. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to
1,compromise Oracle Database Data Redaction. Successful attacks of this vulnerability can result in unauthorized read access to
2,compromise PeopleSoft Enterprise CS Academic Advisement. Successful attacks of this vulnerability can result in unauthorized read access to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
4,compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to
3,compromise Oracle Data Provider for .NET. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Oracle Data Provider for .NET. Note: Applies also to
3, by having a user to access a specially crafted URL.
1, via undocumented Telnet or SSH services.
4, via a man-in-the-middle attack.
3, by sending a BGP route with invalid next-hop resulting in a Denial of Service (DoS). Continued receipt and processing of this packet will create a sustained Denial of Service (DoS) condition. This issue only affects systems without import policy configured. This issue affects: Juniper Networks Junos OS 21.1 versions prior to 21.1R3-S4; 21.2 versions prior to 21.2R3-S3; 21.3 versions prior to 21.3R3-S2; 21.4 versions prior to 21.4R2-S2
1,send crafted TCP packets destined to
2,send certain specific genuine packets to
3, by sending a request to the affected routes with a malicious URL. An attacker could also use this vulnerability to send requests to internal or any other servers or resources on the network
0, by engaging in client activity
3, use one of the workarounds immediately.
4, via a large file that triggers an integer overflow in mem.rs. NOTE: this is unrelated to the https://crates.io/crates/bzip2-rs product.
4, via DLL planting in the service executable's folder. This occurs because the installation goes under C:\opt (rather than C:\Program Files) by default. NOTE: the vendor disputes the significance of this report
2, via the input bgcol in file Weeks.php.
4, via a crafted payload injected into the writer parameter.
2, via the SkipString function.
2, via the destroy function.
2, via the json_value_parse function.
4, via uploading a crafted JPG file.
1, via username field from the login form.
4, via a crafted .ssh file.
4, via a crafted file.
3, by bypassing 2-Step Verification when they try to add an account to any third-party webmail service (or add an account to Outlook or Gmail
2, via an unauthenticated API request. The attacker must be on the same network as the device.
2, via the $HOME/.printers file. This injection allows those users to manipulate the control flow and disclose memory contents on Solaris 10 systems. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
4, via a malformed FTP request. A handler thread can use an overwritten context->FileName.
4, via a Host request header.
0, via directory traversal from a crafted ZIP or TGZ archive (for a prepackaged terminology cache
4, via a modified userId value to reservation_save.php. NOTE: 2.5.5 is a version from 2014; the latest version of Booked Scheduler is not affected. However
2, use the master branch.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
4, via a crafted MQTT packet.
2, via the XmlUtil.readObjectFromXml parameter.
2, via the aviator template engine.
4, via a crafted payload injected into the ed and tbi parameters.
2," via the """"practice logo"""" upload feature. The client-side checks can be bypassed. This may allow attackers to steal Protected Health Information because the product is for health charting."
3,use the gdb to
4, via importing a crafted CSV file.
4, via a crafted payload injected into the txtCompanyName parameter.
3," via manipulation of the """"s"""" parameter in /DesignTools/ManageSkin.aspx"
4, via a crafted HTTP request that triggers deserialization. This occurs because verify_serialized checks that a value is serialized by calling unserialize and then checking for errors. The fixed versions are 5.6.7 PL1
4, via consecutive marks during the process of looking back for base glyphs when attaching marks.
****
1, via crafted packets.
1, via crafted packets.
3, via shell metacharacters in the distloc parameter.
1, via crafted packets.
4, via shell metacharacters in the distloc parameter.
1, via crafted packets.
4, via shell metacharacters in the distloc parameter.
1, via crafted packets.
4, via shell metacharacters in the distloc parameter.
1, via crafted packets.
4, via shell metacharacters in the distloc parameter.
1, via crafted packets.
4, via shell metacharacters in the distloc parameter.
1, via crafted packets.
4, via shell metacharacters in the distloc parameter.
